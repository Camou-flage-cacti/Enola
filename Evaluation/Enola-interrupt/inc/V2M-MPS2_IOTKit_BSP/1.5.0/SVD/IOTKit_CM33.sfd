/*
 * ARM Limited (ARM) is supplying this software for use with Cortex-M
 * processor based microcontroller, but can be equally used for other
 * suitable processor architectures. This file can be freely distributed.
 * Modifications to this file shall be clearly marked.
 * 
 * THIS SOFTWARE IS PROVIDED "AS IS". NO WARRANTIES, WHETHER EXPRESS, IMPLIED
 * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
 * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
 * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
 *
 * @file     IOTKit_CM33.sfd
 * @brief    CMSIS-SVD SFD File
 * @version  1.0
 * @date     02. June 2022
 * @note     Generated by SVDConv V3.3.38 on Thursday, 02.06.2022 23:36:20
 *           from File 'IOTKit_CM33.svd',
 *           last modified on Monday, 15.05.2017 18:19:44
 */




// ---------------------------  Register Item Address: TIMER0_CTRL  -------------------------------
// SVD Line: 117

unsigned int TIMER0_CTRL __AT (0x40000000);



// -----------------------------  Field Item: TIMER0_CTRL_ENABLE  ---------------------------------
// SVD Line: 122

//  <item> SFDITEM_FIELD__TIMER0_CTRL_ENABLE
//    <name> ENABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40000000) \nEnable\n0 : Disable = Timer is disabled\n1 : Enable = Timer is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CTRL ) </loc>
//      <o.0..0> ENABLE
//        <0=> 0: Disable = Timer is disabled
//        <1=> 1: Enable = Timer is enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CTRL_EXTIN  ---------------------------------
// SVD Line: 136

//  <item> SFDITEM_FIELD__TIMER0_CTRL_EXTIN
//    <name> EXTIN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40000000) \nExternal Input as Enable\n0 : Disable = External Input as Enable is disabled\n1 : Enable = External Input as Enable is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CTRL ) </loc>
//      <o.1..1> EXTIN
//        <0=> 0: Disable = External Input as Enable is disabled
//        <1=> 1: Enable = External Input as Enable is enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: TIMER0_CTRL_EXTCLK  ---------------------------------
// SVD Line: 150

//  <item> SFDITEM_FIELD__TIMER0_CTRL_EXTCLK
//    <name> EXTCLK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40000000) \nExternal Clock Enable\n0 : Disable = External Clock s disabled\n1 : Enable = External Clock is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CTRL ) </loc>
//      <o.2..2> EXTCLK
//        <0=> 0: Disable = External Clock s disabled
//        <1=> 1: Enable = External Clock is enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CTRL_INTEN  ---------------------------------
// SVD Line: 164

//  <item> SFDITEM_FIELD__TIMER0_CTRL_INTEN
//    <name> INTEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40000000) \nInterrupt Enable\n0 : Disable = Interrupt is disabled\n1 : Enable = Interrupt is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CTRL ) </loc>
//      <o.3..3> INTEN
//        <0=> 0: Disable = Interrupt is disabled
//        <1=> 1: Enable = Interrupt is enabled
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_CTRL  ----------------------------------
// SVD Line: 117

//  <rtree> SFDITEM_REG__TIMER0_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000000) Control Register </i>
//    <loc> ( (unsigned int)((TIMER0_CTRL >> 0) & 0xFFFFFFFF), ((TIMER0_CTRL = (TIMER0_CTRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CTRL_ENABLE </item>
//    <item> SFDITEM_FIELD__TIMER0_CTRL_EXTIN </item>
//    <item> SFDITEM_FIELD__TIMER0_CTRL_EXTCLK </item>
//    <item> SFDITEM_FIELD__TIMER0_CTRL_INTEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER0_VALUE  ------------------------------
// SVD Line: 180

unsigned int TIMER0_VALUE __AT (0x40000004);



// -------------------------------  Register Item: TIMER0_VALUE  ----------------------------------
// SVD Line: 180

//  <item> SFDITEM_REG__TIMER0_VALUE
//    <name> VALUE </name>
//    <i> [Bits 31..0] RW (@ 0x40000004) Current Timer Counter Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_VALUE >> 0) & 0xFFFFFFFF), ((TIMER0_VALUE = (TIMER0_VALUE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: TIMER0_RELOAD  ------------------------------
// SVD Line: 185

unsigned int TIMER0_RELOAD __AT (0x40000008);



// ------------------------------  Register Item: TIMER0_RELOAD  ----------------------------------
// SVD Line: 185

//  <item> SFDITEM_REG__TIMER0_RELOAD
//    <name> RELOAD </name>
//    <i> [Bits 31..0] RW (@ 0x40000008) Counter Reload Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_RELOAD >> 0) & 0xFFFFFFFF), ((TIMER0_RELOAD = (TIMER0_RELOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: TIMER0_INTSTATUS  ----------------------------
// SVD Line: 190

unsigned int TIMER0_INTSTATUS __AT (0x4000000C);



// -----------------------------  Register Item: TIMER0_INTSTATUS  --------------------------------
// SVD Line: 190

//  <item> SFDITEM_REG__TIMER0_INTSTATUS
//    <name> INTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x4000000C) Timer Interrupt status register </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_INTSTATUS >> 0) & 0xFFFFFFFF), ((TIMER0_INTSTATUS = (TIMER0_INTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: TIMER0_INTCLEAR  -----------------------------
// SVD Line: 195

unsigned int TIMER0_INTCLEAR __AT (0x4000000C);



// -----------------------------  Register Item: TIMER0_INTCLEAR  ---------------------------------
// SVD Line: 195

//  <item> SFDITEM_REG__TIMER0_INTCLEAR
//    <name> INTCLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x4000000C) Timer Interrupt clear register </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_INTCLEAR >> 0) & 0xFFFFFFFF), ((TIMER0_INTCLEAR = (TIMER0_INTCLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: TIMER0  ------------------------------------
// SVD Line: 99

//  <view> TIMER0
//    <name> TIMER0 </name>
//    <item> SFDITEM_REG__TIMER0_CTRL </item>
//    <item> SFDITEM_REG__TIMER0_VALUE </item>
//    <item> SFDITEM_REG__TIMER0_RELOAD </item>
//    <item> SFDITEM_REG__TIMER0_INTSTATUS </item>
//    <item> SFDITEM_REG__TIMER0_INTCLEAR </item>
//  </view>
//  


// ---------------------------  Register Item Address: TIMER1_CTRL  -------------------------------
// SVD Line: 117

unsigned int TIMER1_CTRL __AT (0x40001000);



// -----------------------------  Field Item: TIMER1_CTRL_ENABLE  ---------------------------------
// SVD Line: 122

//  <item> SFDITEM_FIELD__TIMER1_CTRL_ENABLE
//    <name> ENABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40001000) \nEnable\n0 : Disable = Timer is disabled\n1 : Enable = Timer is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CTRL ) </loc>
//      <o.0..0> ENABLE
//        <0=> 0: Disable = Timer is disabled
//        <1=> 1: Enable = Timer is enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CTRL_EXTIN  ---------------------------------
// SVD Line: 136

//  <item> SFDITEM_FIELD__TIMER1_CTRL_EXTIN
//    <name> EXTIN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40001000) \nExternal Input as Enable\n0 : Disable = External Input as Enable is disabled\n1 : Enable = External Input as Enable is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CTRL ) </loc>
//      <o.1..1> EXTIN
//        <0=> 0: Disable = External Input as Enable is disabled
//        <1=> 1: Enable = External Input as Enable is enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: TIMER1_CTRL_EXTCLK  ---------------------------------
// SVD Line: 150

//  <item> SFDITEM_FIELD__TIMER1_CTRL_EXTCLK
//    <name> EXTCLK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40001000) \nExternal Clock Enable\n0 : Disable = External Clock s disabled\n1 : Enable = External Clock is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CTRL ) </loc>
//      <o.2..2> EXTCLK
//        <0=> 0: Disable = External Clock s disabled
//        <1=> 1: Enable = External Clock is enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CTRL_INTEN  ---------------------------------
// SVD Line: 164

//  <item> SFDITEM_FIELD__TIMER1_CTRL_INTEN
//    <name> INTEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40001000) \nInterrupt Enable\n0 : Disable = Interrupt is disabled\n1 : Enable = Interrupt is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CTRL ) </loc>
//      <o.3..3> INTEN
//        <0=> 0: Disable = Interrupt is disabled
//        <1=> 1: Enable = Interrupt is enabled
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_CTRL  ----------------------------------
// SVD Line: 117

//  <rtree> SFDITEM_REG__TIMER1_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001000) Control Register </i>
//    <loc> ( (unsigned int)((TIMER1_CTRL >> 0) & 0xFFFFFFFF), ((TIMER1_CTRL = (TIMER1_CTRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CTRL_ENABLE </item>
//    <item> SFDITEM_FIELD__TIMER1_CTRL_EXTIN </item>
//    <item> SFDITEM_FIELD__TIMER1_CTRL_EXTCLK </item>
//    <item> SFDITEM_FIELD__TIMER1_CTRL_INTEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER1_VALUE  ------------------------------
// SVD Line: 180

unsigned int TIMER1_VALUE __AT (0x40001004);



// -------------------------------  Register Item: TIMER1_VALUE  ----------------------------------
// SVD Line: 180

//  <item> SFDITEM_REG__TIMER1_VALUE
//    <name> VALUE </name>
//    <i> [Bits 31..0] RW (@ 0x40001004) Current Timer Counter Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_VALUE >> 0) & 0xFFFFFFFF), ((TIMER1_VALUE = (TIMER1_VALUE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: TIMER1_RELOAD  ------------------------------
// SVD Line: 185

unsigned int TIMER1_RELOAD __AT (0x40001008);



// ------------------------------  Register Item: TIMER1_RELOAD  ----------------------------------
// SVD Line: 185

//  <item> SFDITEM_REG__TIMER1_RELOAD
//    <name> RELOAD </name>
//    <i> [Bits 31..0] RW (@ 0x40001008) Counter Reload Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_RELOAD >> 0) & 0xFFFFFFFF), ((TIMER1_RELOAD = (TIMER1_RELOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: TIMER1_INTSTATUS  ----------------------------
// SVD Line: 190

unsigned int TIMER1_INTSTATUS __AT (0x4000100C);



// -----------------------------  Register Item: TIMER1_INTSTATUS  --------------------------------
// SVD Line: 190

//  <item> SFDITEM_REG__TIMER1_INTSTATUS
//    <name> INTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x4000100C) Timer Interrupt status register </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_INTSTATUS >> 0) & 0xFFFFFFFF), ((TIMER1_INTSTATUS = (TIMER1_INTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: TIMER1_INTCLEAR  -----------------------------
// SVD Line: 195

unsigned int TIMER1_INTCLEAR __AT (0x4000100C);



// -----------------------------  Register Item: TIMER1_INTCLEAR  ---------------------------------
// SVD Line: 195

//  <item> SFDITEM_REG__TIMER1_INTCLEAR
//    <name> INTCLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x4000100C) Timer Interrupt clear register </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_INTCLEAR >> 0) & 0xFFFFFFFF), ((TIMER1_INTCLEAR = (TIMER1_INTCLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: TIMER1  ------------------------------------
// SVD Line: 206

//  <view> TIMER1
//    <name> TIMER1 </name>
//    <item> SFDITEM_REG__TIMER1_CTRL </item>
//    <item> SFDITEM_REG__TIMER1_VALUE </item>
//    <item> SFDITEM_REG__TIMER1_RELOAD </item>
//    <item> SFDITEM_REG__TIMER1_INTSTATUS </item>
//    <item> SFDITEM_REG__TIMER1_INTCLEAR </item>
//  </view>
//  


// -----------------------  Register Item Address: DUALTIMER_TIMER1LOAD  --------------------------
// SVD Line: 236

unsigned int DUALTIMER_TIMER1LOAD __AT (0x40002000);



// ---------------------------  Register Item: DUALTIMER_TIMER1LOAD  ------------------------------
// SVD Line: 236

//  <item> SFDITEM_REG__DUALTIMER_TIMER1LOAD
//    <name> TIMER1LOAD </name>
//    <i> [Bits 31..0] RW (@ 0x40002000) Timer 1 Load Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DUALTIMER_TIMER1LOAD >> 0) & 0xFFFFFFFF), ((DUALTIMER_TIMER1LOAD = (DUALTIMER_TIMER1LOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DUALTIMER_TIMER1VALUE  --------------------------
// SVD Line: 241

unsigned int DUALTIMER_TIMER1VALUE __AT (0x40002004);



// --------------------------  Register Item: DUALTIMER_TIMER1VALUE  ------------------------------
// SVD Line: 241

//  <item> SFDITEM_REG__DUALTIMER_TIMER1VALUE
//    <name> TIMER1VALUE </name>
//    <i> [Bits 31..0] RO (@ 0x40002004) Timer 1 Value Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DUALTIMER_TIMER1VALUE >> 0) & 0xFFFFFFFF), ((DUALTIMER_TIMER1VALUE = (DUALTIMER_TIMER1VALUE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: DUALTIMER_TIMER1CONTROL  -------------------------
// SVD Line: 246

unsigned int DUALTIMER_TIMER1CONTROL __AT (0x40002008);



// --------------------  Field Item: DUALTIMER_TIMER1CONTROL_OneShotCount  ------------------------
// SVD Line: 251

//  <item> SFDITEM_FIELD__DUALTIMER_TIMER1CONTROL_OneShotCount
//    <name> OneShotCount </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002008) \nSelects one-shot or wrapping counter mode.\n0 : Wrapping = Wrapping counter mode\n1 : OneShot = One-shot counter mode </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_TIMER1CONTROL ) </loc>
//      <o.0..0> OneShotCount
//        <0=> 0: Wrapping = Wrapping counter mode
//        <1=> 1: OneShot = One-shot counter mode
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DUALTIMER_TIMER1CONTROL_TimerSize  -------------------------
// SVD Line: 265

//  <item> SFDITEM_FIELD__DUALTIMER_TIMER1CONTROL_TimerSize
//    <name> TimerSize </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002008) \nSelects 16-bit or 32- bit counter operation.\n0 : 16-bit = 16-bit counter mode\n1 : 32-bit = 32-bit counter mode </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_TIMER1CONTROL ) </loc>
//      <o.1..1> TimerSize
//        <0=> 0: 16-bit = 16-bit counter mode
//        <1=> 1: 32-bit = 32-bit counter mode
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DUALTIMER_TIMER1CONTROL_TimerPre  --------------------------
// SVD Line: 279

//  <item> SFDITEM_FIELD__DUALTIMER_TIMER1CONTROL_TimerPre
//    <name> TimerPre </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40002008) \nTimer prescale bits\n0 : divided by 1 = clock is divided by 1\n1 : divided by 16 = clock is divided by 16\n2 : divided by 256 = clock is divided by 256\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_TIMER1CONTROL ) </loc>
//      <o.3..2> TimerPre
//        <0=> 0: divided by 1 = clock is divided by 1
//        <1=> 1: divided by 16 = clock is divided by 16
//        <2=> 2: divided by 256 = clock is divided by 256
//        <3=> 3: 
//    </combo>
//  </item>
//  


// -------------------  Field Item: DUALTIMER_TIMER1CONTROL_InterruptEnable  ----------------------
// SVD Line: 297

//  <item> SFDITEM_FIELD__DUALTIMER_TIMER1CONTROL_InterruptEnable
//    <name> InterruptEnable </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40002008) \nInterrupt Enable bit\n0 : Disable = Interrupt is disabled.\n1 : Enable = Interrupt is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_TIMER1CONTROL ) </loc>
//      <o.5..5> InterruptEnable
//        <0=> 0: Disable = Interrupt is disabled.
//        <1=> 1: Enable = Interrupt is enabled.
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DUALTIMER_TIMER1CONTROL_TimerMode  -------------------------
// SVD Line: 311

//  <item> SFDITEM_FIELD__DUALTIMER_TIMER1CONTROL_TimerMode
//    <name> TimerMode </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40002008) \nTimer Mode bit\n0 : Free-Running = Free-Running timer mode.\n1 : Periodic = Periodic timer mode. </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_TIMER1CONTROL ) </loc>
//      <o.6..6> TimerMode
//        <0=> 0: Free-Running = Free-Running timer mode.
//        <1=> 1: Periodic = Periodic timer mode.
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DUALTIMER_TIMER1CONTROL_TimerEnable  ------------------------
// SVD Line: 325

//  <item> SFDITEM_FIELD__DUALTIMER_TIMER1CONTROL_TimerEnable
//    <name> TimerEnable </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40002008) \nTimer Enable Enable bit.\n0 : Disable = Timer is disabled.\n1 : Enable = Timer is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_TIMER1CONTROL ) </loc>
//      <o.7..7> TimerEnable
//        <0=> 0: Disable = Timer is disabled.
//        <1=> 1: Enable = Timer is enabled.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: DUALTIMER_TIMER1CONTROL  ----------------------------
// SVD Line: 246

//  <rtree> SFDITEM_REG__DUALTIMER_TIMER1CONTROL
//    <name> TIMER1CONTROL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002008) Timer 1 Control Register </i>
//    <loc> ( (unsigned int)((DUALTIMER_TIMER1CONTROL >> 0) & 0xFFFFFFFF), ((DUALTIMER_TIMER1CONTROL = (DUALTIMER_TIMER1CONTROL & ~(0xEFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xEF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DUALTIMER_TIMER1CONTROL_OneShotCount </item>
//    <item> SFDITEM_FIELD__DUALTIMER_TIMER1CONTROL_TimerSize </item>
//    <item> SFDITEM_FIELD__DUALTIMER_TIMER1CONTROL_TimerPre </item>
//    <item> SFDITEM_FIELD__DUALTIMER_TIMER1CONTROL_InterruptEnable </item>
//    <item> SFDITEM_FIELD__DUALTIMER_TIMER1CONTROL_TimerMode </item>
//    <item> SFDITEM_FIELD__DUALTIMER_TIMER1CONTROL_TimerEnable </item>
//  </rtree>
//  


// ----------------------  Register Item Address: DUALTIMER_TIMER1INTCLR  -------------------------
// SVD Line: 341

unsigned int DUALTIMER_TIMER1INTCLR __AT (0x4000200C);



// -------------------------  Field Item: DUALTIMER_TIMER1INTCLR_INT  -----------------------------
// SVD Line: 347

//  <item> SFDITEM_FIELD__DUALTIMER_TIMER1INTCLR_INT
//    <name> INT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4000200C) interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) DUALTIMER_TIMER1INTCLR ) </loc>
//      <o.0..0> INT
//    </check>
//  </item>
//  


// -------------------------  Register RTree: DUALTIMER_TIMER1INTCLR  -----------------------------
// SVD Line: 341

//  <rtree> SFDITEM_REG__DUALTIMER_TIMER1INTCLR
//    <name> TIMER1INTCLR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000200C) Timer 1 Interrupt Clear Register </i>
//    <loc> ( (unsigned int)((DUALTIMER_TIMER1INTCLR >> 0) & 0xFFFFFFFF), ((DUALTIMER_TIMER1INTCLR = (DUALTIMER_TIMER1INTCLR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DUALTIMER_TIMER1INTCLR_INT </item>
//  </rtree>
//  


// -----------------------  Register Item Address: DUALTIMER_TIMER1RIS  ---------------------------
// SVD Line: 353

unsigned int DUALTIMER_TIMER1RIS __AT (0x40002010);



// ---------------------------  Field Item: DUALTIMER_TIMER1RIS_RIS  ------------------------------
// SVD Line: 358

//  <item> SFDITEM_FIELD__DUALTIMER_TIMER1RIS_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40002010) Raw Timer interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) DUALTIMER_TIMER1RIS ) </loc>
//      <o.0..0> RIS
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: DUALTIMER_TIMER1RIS  ------------------------------
// SVD Line: 353

//  <rtree> SFDITEM_REG__DUALTIMER_TIMER1RIS
//    <name> TIMER1RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002010) Timer 1 Raw Interrupt Status Register </i>
//    <loc> ( (unsigned int)((DUALTIMER_TIMER1RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DUALTIMER_TIMER1RIS_RIS </item>
//  </rtree>
//  


// -----------------------  Register Item Address: DUALTIMER_TIMER1MIS  ---------------------------
// SVD Line: 364

unsigned int DUALTIMER_TIMER1MIS __AT (0x40002014);



// ---------------------------  Field Item: DUALTIMER_TIMER1MIS_MIS  ------------------------------
// SVD Line: 369

//  <item> SFDITEM_FIELD__DUALTIMER_TIMER1MIS_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40002014) Masked Timer interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) DUALTIMER_TIMER1MIS ) </loc>
//      <o.0..0> MIS
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: DUALTIMER_TIMER1MIS  ------------------------------
// SVD Line: 364

//  <rtree> SFDITEM_REG__DUALTIMER_TIMER1MIS
//    <name> TIMER1MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002014) Timer 1 Mask Interrupt Status Register </i>
//    <loc> ( (unsigned int)((DUALTIMER_TIMER1MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DUALTIMER_TIMER1MIS_MIS </item>
//  </rtree>
//  


// ----------------------  Register Item Address: DUALTIMER_TIMER1BGLOAD  -------------------------
// SVD Line: 375

unsigned int DUALTIMER_TIMER1BGLOAD __AT (0x40002018);



// --------------------------  Register Item: DUALTIMER_TIMER1BGLOAD  -----------------------------
// SVD Line: 375

//  <item> SFDITEM_REG__DUALTIMER_TIMER1BGLOAD
//    <name> TIMER1BGLOAD </name>
//    <i> [Bits 31..0] RW (@ 0x40002018) Timer 1 Background Load Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DUALTIMER_TIMER1BGLOAD >> 0) & 0xFFFFFFFF), ((DUALTIMER_TIMER1BGLOAD = (DUALTIMER_TIMER1BGLOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DUALTIMER_TIMER2LOAD  --------------------------
// SVD Line: 380

unsigned int DUALTIMER_TIMER2LOAD __AT (0x40002020);



// ---------------------------  Register Item: DUALTIMER_TIMER2LOAD  ------------------------------
// SVD Line: 380

//  <item> SFDITEM_REG__DUALTIMER_TIMER2LOAD
//    <name> TIMER2LOAD </name>
//    <i> [Bits 31..0] RW (@ 0x40002020) Timer 2 Load Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DUALTIMER_TIMER2LOAD >> 0) & 0xFFFFFFFF), ((DUALTIMER_TIMER2LOAD = (DUALTIMER_TIMER2LOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DUALTIMER_TIMER2VALUE  --------------------------
// SVD Line: 385

unsigned int DUALTIMER_TIMER2VALUE __AT (0x40002024);



// --------------------------  Register Item: DUALTIMER_TIMER2VALUE  ------------------------------
// SVD Line: 385

//  <item> SFDITEM_REG__DUALTIMER_TIMER2VALUE
//    <name> TIMER2VALUE </name>
//    <i> [Bits 31..0] RO (@ 0x40002024) Timer 2 Value Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DUALTIMER_TIMER2VALUE >> 0) & 0xFFFFFFFF), ((DUALTIMER_TIMER2VALUE = (DUALTIMER_TIMER2VALUE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: DUALTIMER_TIMER2CONTROL  -------------------------
// SVD Line: 390

unsigned int DUALTIMER_TIMER2CONTROL __AT (0x40002028);



// --------------------  Field Item: DUALTIMER_TIMER2CONTROL_OneShotCount  ------------------------
// SVD Line: 395

//  <item> SFDITEM_FIELD__DUALTIMER_TIMER2CONTROL_OneShotCount
//    <name> OneShotCount </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002028) \nSelects one-shot or wrapping counter mode.\n0 : Wrapping = Wrapping counter mode\n1 : OneShot = One-shot counter mode </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_TIMER2CONTROL ) </loc>
//      <o.0..0> OneShotCount
//        <0=> 0: Wrapping = Wrapping counter mode
//        <1=> 1: OneShot = One-shot counter mode
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DUALTIMER_TIMER2CONTROL_TimerSize  -------------------------
// SVD Line: 409

//  <item> SFDITEM_FIELD__DUALTIMER_TIMER2CONTROL_TimerSize
//    <name> TimerSize </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002028) \nSelects 16-bit or 32- bit counter operation.\n0 : 16-bit = 16-bit counter mode\n1 : 32-bit = 32-bit counter mode </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_TIMER2CONTROL ) </loc>
//      <o.1..1> TimerSize
//        <0=> 0: 16-bit = 16-bit counter mode
//        <1=> 1: 32-bit = 32-bit counter mode
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DUALTIMER_TIMER2CONTROL_TimerPre  --------------------------
// SVD Line: 423

//  <item> SFDITEM_FIELD__DUALTIMER_TIMER2CONTROL_TimerPre
//    <name> TimerPre </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40002028) \nTimer prescale bits.\n0 : divided by 1 = clock is divided by 1\n1 : divided by 16 = clock is divided by 16\n2 : divided by 256 = clock is divided by 256\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_TIMER2CONTROL ) </loc>
//      <o.3..2> TimerPre
//        <0=> 0: divided by 1 = clock is divided by 1
//        <1=> 1: divided by 16 = clock is divided by 16
//        <2=> 2: divided by 256 = clock is divided by 256
//        <3=> 3: 
//    </combo>
//  </item>
//  


// -------------------  Field Item: DUALTIMER_TIMER2CONTROL_InterruptEnable  ----------------------
// SVD Line: 441

//  <item> SFDITEM_FIELD__DUALTIMER_TIMER2CONTROL_InterruptEnable
//    <name> InterruptEnable </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40002028) \nInterrupt Enable bit.\n0 : Disable = Interrupt is disabled.\n1 : Enable = Interrupt is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_TIMER2CONTROL ) </loc>
//      <o.5..5> InterruptEnable
//        <0=> 0: Disable = Interrupt is disabled.
//        <1=> 1: Enable = Interrupt is enabled.
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DUALTIMER_TIMER2CONTROL_TimerMode  -------------------------
// SVD Line: 455

//  <item> SFDITEM_FIELD__DUALTIMER_TIMER2CONTROL_TimerMode
//    <name> TimerMode </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40002028) \nTimer Mode bit.\n0 : Free-Running = Free-Running timer mode.\n1 : Periodic = Periodic timer mode. </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_TIMER2CONTROL ) </loc>
//      <o.6..6> TimerMode
//        <0=> 0: Free-Running = Free-Running timer mode.
//        <1=> 1: Periodic = Periodic timer mode.
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DUALTIMER_TIMER2CONTROL_TimerEnable  ------------------------
// SVD Line: 469

//  <item> SFDITEM_FIELD__DUALTIMER_TIMER2CONTROL_TimerEnable
//    <name> TimerEnable </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40002028) \nTimer Enable Enable bit.\n0 : Disable = Timer is disabled.\n1 : Enable = Timer is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_TIMER2CONTROL ) </loc>
//      <o.7..7> TimerEnable
//        <0=> 0: Disable = Timer is disabled.
//        <1=> 1: Enable = Timer is enabled.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: DUALTIMER_TIMER2CONTROL  ----------------------------
// SVD Line: 390

//  <rtree> SFDITEM_REG__DUALTIMER_TIMER2CONTROL
//    <name> TIMER2CONTROL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002028) Timer 2 Control Register </i>
//    <loc> ( (unsigned int)((DUALTIMER_TIMER2CONTROL >> 0) & 0xFFFFFFFF), ((DUALTIMER_TIMER2CONTROL = (DUALTIMER_TIMER2CONTROL & ~(0xEFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xEF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DUALTIMER_TIMER2CONTROL_OneShotCount </item>
//    <item> SFDITEM_FIELD__DUALTIMER_TIMER2CONTROL_TimerSize </item>
//    <item> SFDITEM_FIELD__DUALTIMER_TIMER2CONTROL_TimerPre </item>
//    <item> SFDITEM_FIELD__DUALTIMER_TIMER2CONTROL_InterruptEnable </item>
//    <item> SFDITEM_FIELD__DUALTIMER_TIMER2CONTROL_TimerMode </item>
//    <item> SFDITEM_FIELD__DUALTIMER_TIMER2CONTROL_TimerEnable </item>
//  </rtree>
//  


// ----------------------  Register Item Address: DUALTIMER_TIMER2INTCLR  -------------------------
// SVD Line: 486

unsigned int DUALTIMER_TIMER2INTCLR __AT (0x4000202C);



// -------------------------  Field Item: DUALTIMER_TIMER2INTCLR_INT  -----------------------------
// SVD Line: 492

//  <item> SFDITEM_FIELD__DUALTIMER_TIMER2INTCLR_INT
//    <name> INT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4000202C) interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) DUALTIMER_TIMER2INTCLR ) </loc>
//      <o.0..0> INT
//    </check>
//  </item>
//  


// -------------------------  Register RTree: DUALTIMER_TIMER2INTCLR  -----------------------------
// SVD Line: 486

//  <rtree> SFDITEM_REG__DUALTIMER_TIMER2INTCLR
//    <name> TIMER2INTCLR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000202C) Timer 2 Interrupt Clear Register </i>
//    <loc> ( (unsigned int)((DUALTIMER_TIMER2INTCLR >> 0) & 0xFFFFFFFF), ((DUALTIMER_TIMER2INTCLR = (DUALTIMER_TIMER2INTCLR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DUALTIMER_TIMER2INTCLR_INT </item>
//  </rtree>
//  


// -----------------------  Register Item Address: DUALTIMER_TIMER2RIS  ---------------------------
// SVD Line: 499

unsigned int DUALTIMER_TIMER2RIS __AT (0x40002030);



// ---------------------------  Field Item: DUALTIMER_TIMER2RIS_RIS  ------------------------------
// SVD Line: 504

//  <item> SFDITEM_FIELD__DUALTIMER_TIMER2RIS_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40002030) Raw Timer interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) DUALTIMER_TIMER2RIS ) </loc>
//      <o.0..0> RIS
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: DUALTIMER_TIMER2RIS  ------------------------------
// SVD Line: 499

//  <rtree> SFDITEM_REG__DUALTIMER_TIMER2RIS
//    <name> TIMER2RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002030) Timer 2 Raw Interrupt Status Register </i>
//    <loc> ( (unsigned int)((DUALTIMER_TIMER2RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DUALTIMER_TIMER2RIS_RIS </item>
//  </rtree>
//  


// -----------------------  Register Item Address: DUALTIMER_TIMER2MIS  ---------------------------
// SVD Line: 511

unsigned int DUALTIMER_TIMER2MIS __AT (0x40002034);



// ---------------------------  Field Item: DUALTIMER_TIMER2MIS_MIS  ------------------------------
// SVD Line: 516

//  <item> SFDITEM_FIELD__DUALTIMER_TIMER2MIS_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40002034) Masked Timer interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) DUALTIMER_TIMER2MIS ) </loc>
//      <o.0..0> MIS
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: DUALTIMER_TIMER2MIS  ------------------------------
// SVD Line: 511

//  <rtree> SFDITEM_REG__DUALTIMER_TIMER2MIS
//    <name> TIMER2MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002034) Timer 2 Mask Interrupt Status Register </i>
//    <loc> ( (unsigned int)((DUALTIMER_TIMER2MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DUALTIMER_TIMER2MIS_MIS </item>
//  </rtree>
//  


// ----------------------  Register Item Address: DUALTIMER_TIMER2BGLOAD  -------------------------
// SVD Line: 522

unsigned int DUALTIMER_TIMER2BGLOAD __AT (0x40002038);



// --------------------------  Register Item: DUALTIMER_TIMER2BGLOAD  -----------------------------
// SVD Line: 522

//  <item> SFDITEM_REG__DUALTIMER_TIMER2BGLOAD
//    <name> TIMER2BGLOAD </name>
//    <i> [Bits 31..0] RW (@ 0x40002038) Timer 2 Background Load Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DUALTIMER_TIMER2BGLOAD >> 0) & 0xFFFFFFFF), ((DUALTIMER_TIMER2BGLOAD = (DUALTIMER_TIMER2BGLOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: DUALTIMER  -----------------------------------
// SVD Line: 218

//  <view> DUALTIMER
//    <name> DUALTIMER </name>
//    <item> SFDITEM_REG__DUALTIMER_TIMER1LOAD </item>
//    <item> SFDITEM_REG__DUALTIMER_TIMER1VALUE </item>
//    <item> SFDITEM_REG__DUALTIMER_TIMER1CONTROL </item>
//    <item> SFDITEM_REG__DUALTIMER_TIMER1INTCLR </item>
//    <item> SFDITEM_REG__DUALTIMER_TIMER1RIS </item>
//    <item> SFDITEM_REG__DUALTIMER_TIMER1MIS </item>
//    <item> SFDITEM_REG__DUALTIMER_TIMER1BGLOAD </item>
//    <item> SFDITEM_REG__DUALTIMER_TIMER2LOAD </item>
//    <item> SFDITEM_REG__DUALTIMER_TIMER2VALUE </item>
//    <item> SFDITEM_REG__DUALTIMER_TIMER2CONTROL </item>
//    <item> SFDITEM_REG__DUALTIMER_TIMER2INTCLR </item>
//    <item> SFDITEM_REG__DUALTIMER_TIMER2RIS </item>
//    <item> SFDITEM_REG__DUALTIMER_TIMER2MIS </item>
//    <item> SFDITEM_REG__DUALTIMER_TIMER2BGLOAD </item>
//  </view>
//  


// ----------------------------  Register Item Address: UART0_DATA  -------------------------------
// SVD Line: 561

unsigned int UART0_DATA __AT (0x40200000);



// --------------------------------  Register Item: UART0_DATA  -----------------------------------
// SVD Line: 561

//  <item> SFDITEM_REG__UART0_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x40200000) Recieve and Transmit Data Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART0_DATA >> 0) & 0xFFFFFFFF), ((UART0_DATA = (UART0_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: UART0_STATE  -------------------------------
// SVD Line: 566

unsigned int UART0_STATE __AT (0x40200004);



// ------------------------------  Field Item: UART0_STATE_RXOV  ----------------------------------
// SVD Line: 571

//  <item> SFDITEM_FIELD__UART0_STATE_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40200004) RX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_STATE ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART0_STATE_TXOV  ----------------------------------
// SVD Line: 576

//  <item> SFDITEM_FIELD__UART0_STATE_TXOV
//    <name> TXOV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40200004) TX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_STATE ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART0_STATE_RXBF  ----------------------------------
// SVD Line: 581

//  <item> SFDITEM_FIELD__UART0_STATE_RXBF
//    <name> RXBF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40200004) RX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_STATE ) </loc>
//      <o.1..1> RXBF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART0_STATE_TXBF  ----------------------------------
// SVD Line: 586

//  <item> SFDITEM_FIELD__UART0_STATE_TXBF
//    <name> TXBF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40200004) TX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_STATE ) </loc>
//      <o.0..0> TXBF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART0_STATE  ----------------------------------
// SVD Line: 566

//  <rtree> SFDITEM_REG__UART0_STATE
//    <name> STATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40200004) UART Status Register </i>
//    <loc> ( (unsigned int)((UART0_STATE >> 0) & 0xFFFFFFFF), ((UART0_STATE = (UART0_STATE & ~(0xCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART0_STATE_RXOV </item>
//    <item> SFDITEM_FIELD__UART0_STATE_TXOV </item>
//    <item> SFDITEM_FIELD__UART0_STATE_RXBF </item>
//    <item> SFDITEM_FIELD__UART0_STATE_TXBF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART0_CTRL  -------------------------------
// SVD Line: 593

unsigned int UART0_CTRL __AT (0x40200008);



// -------------------------------  Field Item: UART0_CTRL_HSTX  ----------------------------------
// SVD Line: 598

//  <item> SFDITEM_FIELD__UART0_CTRL_HSTX
//    <name> HSTX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40200008) \nHigh Speed Test Mode for TX only\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_CTRL ) </loc>
//      <o.6..6> HSTX
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: UART0_CTRL_RVOVINT  ---------------------------------
// SVD Line: 612

//  <item> SFDITEM_FIELD__UART0_CTRL_RVOVINT
//    <name> RVOVINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40200008) \nRX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_CTRL ) </loc>
//      <o.5..5> RVOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: UART0_CTRL_TXOVINT  ---------------------------------
// SVD Line: 626

//  <item> SFDITEM_FIELD__UART0_CTRL_TXOVINT
//    <name> TXOVINT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40200008) \nTX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_CTRL ) </loc>
//      <o.4..4> TXOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: UART0_CTRL_RXINT  ----------------------------------
// SVD Line: 640

//  <item> SFDITEM_FIELD__UART0_CTRL_RXINT
//    <name> RXINT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40200008) \nRX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_CTRL ) </loc>
//      <o.3..3> RXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: UART0_CTRL_TXINT  ----------------------------------
// SVD Line: 654

//  <item> SFDITEM_FIELD__UART0_CTRL_TXINT
//    <name> TXINT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40200008) \nTX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_CTRL ) </loc>
//      <o.2..2> TXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: UART0_CTRL_RXEN  ----------------------------------
// SVD Line: 668

//  <item> SFDITEM_FIELD__UART0_CTRL_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40200008) \nRX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_CTRL ) </loc>
//      <o.1..1> RXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: UART0_CTRL_TXEN  ----------------------------------
// SVD Line: 682

//  <item> SFDITEM_FIELD__UART0_CTRL_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40200008) \nTX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_CTRL ) </loc>
//      <o.0..0> TXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: UART0_CTRL  -----------------------------------
// SVD Line: 593

//  <rtree> SFDITEM_REG__UART0_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40200008) UART Control Register </i>
//    <loc> ( (unsigned int)((UART0_CTRL >> 0) & 0xFFFFFFFF), ((UART0_CTRL = (UART0_CTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART0_CTRL_HSTX </item>
//    <item> SFDITEM_FIELD__UART0_CTRL_RVOVINT </item>
//    <item> SFDITEM_FIELD__UART0_CTRL_TXOVINT </item>
//    <item> SFDITEM_FIELD__UART0_CTRL_RXINT </item>
//    <item> SFDITEM_FIELD__UART0_CTRL_TXINT </item>
//    <item> SFDITEM_FIELD__UART0_CTRL_RXEN </item>
//    <item> SFDITEM_FIELD__UART0_CTRL_TXEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART0_INTSTATUS  -----------------------------
// SVD Line: 698

unsigned int UART0_INTSTATUS __AT (0x4020000C);



// ----------------------------  Field Item: UART0_INTSTATUS_RXOV  --------------------------------
// SVD Line: 703

//  <item> SFDITEM_FIELD__UART0_INTSTATUS_RXOV
//    <name> RXOV </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4020000C) RX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_INTSTATUS ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART0_INTSTATUS_TXOV  --------------------------------
// SVD Line: 707

//  <item> SFDITEM_FIELD__UART0_INTSTATUS_TXOV
//    <name> TXOV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4020000C) TX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_INTSTATUS ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART0_INTSTATUS_RXINT  -------------------------------
// SVD Line: 711

//  <item> SFDITEM_FIELD__UART0_INTSTATUS_RXINT
//    <name> RXINT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4020000C) RX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_INTSTATUS ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART0_INTSTATUS_TXINT  -------------------------------
// SVD Line: 715

//  <item> SFDITEM_FIELD__UART0_INTSTATUS_TXINT
//    <name> TXINT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4020000C) TX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_INTSTATUS ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART0_INTSTATUS  --------------------------------
// SVD Line: 698

//  <rtree> SFDITEM_REG__UART0_INTSTATUS
//    <name> INTSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4020000C) UART Interrupt Status Register </i>
//    <loc> ( (unsigned int)((UART0_INTSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART0_INTSTATUS_RXOV </item>
//    <item> SFDITEM_FIELD__UART0_INTSTATUS_TXOV </item>
//    <item> SFDITEM_FIELD__UART0_INTSTATUS_RXINT </item>
//    <item> SFDITEM_FIELD__UART0_INTSTATUS_TXINT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART0_INTCLEAR  -----------------------------
// SVD Line: 721

unsigned int UART0_INTCLEAR __AT (0x4020000C);



// -----------------------------  Field Item: UART0_INTCLEAR_RXOV  --------------------------------
// SVD Line: 727

//  <item> SFDITEM_FIELD__UART0_INTCLEAR_RXOV
//    <name> RXOV </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4020000C) RX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_INTCLEAR ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UART0_INTCLEAR_TXOV  --------------------------------
// SVD Line: 732

//  <item> SFDITEM_FIELD__UART0_INTCLEAR_TXOV
//    <name> TXOV </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4020000C) TX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_INTCLEAR ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART0_INTCLEAR_RXINT  --------------------------------
// SVD Line: 737

//  <item> SFDITEM_FIELD__UART0_INTCLEAR_RXINT
//    <name> RXINT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4020000C) RX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_INTCLEAR ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART0_INTCLEAR_TXINT  --------------------------------
// SVD Line: 742

//  <item> SFDITEM_FIELD__UART0_INTCLEAR_TXINT
//    <name> TXINT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4020000C) TX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_INTCLEAR ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART0_INTCLEAR  ---------------------------------
// SVD Line: 721

//  <rtree> SFDITEM_REG__UART0_INTCLEAR
//    <name> INTCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4020000C) UART Interrupt CLEAR Register </i>
//    <loc> ( (unsigned int)((UART0_INTCLEAR >> 0) & 0xFFFFFFFF), ((UART0_INTCLEAR = (UART0_INTCLEAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART0_INTCLEAR_RXOV </item>
//    <item> SFDITEM_FIELD__UART0_INTCLEAR_TXOV </item>
//    <item> SFDITEM_FIELD__UART0_INTCLEAR_RXINT </item>
//    <item> SFDITEM_FIELD__UART0_INTCLEAR_TXINT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART0_BAUDDIV  ------------------------------
// SVD Line: 749

unsigned int UART0_BAUDDIV __AT (0x40200010);



// ------------------------------  Register Item: UART0_BAUDDIV  ----------------------------------
// SVD Line: 749

//  <item> SFDITEM_REG__UART0_BAUDDIV
//    <name> BAUDDIV </name>
//    <i> [Bits 31..0] RW (@ 0x40200010) Baudrate Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART0_BAUDDIV >> 0) & 0xFFFFFFFF), ((UART0_BAUDDIV = (UART0_BAUDDIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: UART0  -------------------------------------
// SVD Line: 531

//  <view> UART0
//    <name> UART0 </name>
//    <item> SFDITEM_REG__UART0_DATA </item>
//    <item> SFDITEM_REG__UART0_STATE </item>
//    <item> SFDITEM_REG__UART0_CTRL </item>
//    <item> SFDITEM_REG__UART0_INTSTATUS </item>
//    <item> SFDITEM_REG__UART0_INTCLEAR </item>
//    <item> SFDITEM_REG__UART0_BAUDDIV </item>
//  </view>
//  


// ----------------------------  Register Item Address: UART1_DATA  -------------------------------
// SVD Line: 561

unsigned int UART1_DATA __AT (0x40201000);



// --------------------------------  Register Item: UART1_DATA  -----------------------------------
// SVD Line: 561

//  <item> SFDITEM_REG__UART1_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x40201000) Recieve and Transmit Data Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART1_DATA >> 0) & 0xFFFFFFFF), ((UART1_DATA = (UART1_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: UART1_STATE  -------------------------------
// SVD Line: 566

unsigned int UART1_STATE __AT (0x40201004);



// ------------------------------  Field Item: UART1_STATE_RXOV  ----------------------------------
// SVD Line: 571

//  <item> SFDITEM_FIELD__UART1_STATE_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40201004) RX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_STATE ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART1_STATE_TXOV  ----------------------------------
// SVD Line: 576

//  <item> SFDITEM_FIELD__UART1_STATE_TXOV
//    <name> TXOV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40201004) TX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_STATE ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART1_STATE_RXBF  ----------------------------------
// SVD Line: 581

//  <item> SFDITEM_FIELD__UART1_STATE_RXBF
//    <name> RXBF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40201004) RX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_STATE ) </loc>
//      <o.1..1> RXBF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART1_STATE_TXBF  ----------------------------------
// SVD Line: 586

//  <item> SFDITEM_FIELD__UART1_STATE_TXBF
//    <name> TXBF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40201004) TX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_STATE ) </loc>
//      <o.0..0> TXBF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART1_STATE  ----------------------------------
// SVD Line: 566

//  <rtree> SFDITEM_REG__UART1_STATE
//    <name> STATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40201004) UART Status Register </i>
//    <loc> ( (unsigned int)((UART1_STATE >> 0) & 0xFFFFFFFF), ((UART1_STATE = (UART1_STATE & ~(0xCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART1_STATE_RXOV </item>
//    <item> SFDITEM_FIELD__UART1_STATE_TXOV </item>
//    <item> SFDITEM_FIELD__UART1_STATE_RXBF </item>
//    <item> SFDITEM_FIELD__UART1_STATE_TXBF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART1_CTRL  -------------------------------
// SVD Line: 593

unsigned int UART1_CTRL __AT (0x40201008);



// -------------------------------  Field Item: UART1_CTRL_HSTX  ----------------------------------
// SVD Line: 598

//  <item> SFDITEM_FIELD__UART1_CTRL_HSTX
//    <name> HSTX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40201008) \nHigh Speed Test Mode for TX only\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_CTRL ) </loc>
//      <o.6..6> HSTX
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: UART1_CTRL_RVOVINT  ---------------------------------
// SVD Line: 612

//  <item> SFDITEM_FIELD__UART1_CTRL_RVOVINT
//    <name> RVOVINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40201008) \nRX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_CTRL ) </loc>
//      <o.5..5> RVOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: UART1_CTRL_TXOVINT  ---------------------------------
// SVD Line: 626

//  <item> SFDITEM_FIELD__UART1_CTRL_TXOVINT
//    <name> TXOVINT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40201008) \nTX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_CTRL ) </loc>
//      <o.4..4> TXOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: UART1_CTRL_RXINT  ----------------------------------
// SVD Line: 640

//  <item> SFDITEM_FIELD__UART1_CTRL_RXINT
//    <name> RXINT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40201008) \nRX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_CTRL ) </loc>
//      <o.3..3> RXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: UART1_CTRL_TXINT  ----------------------------------
// SVD Line: 654

//  <item> SFDITEM_FIELD__UART1_CTRL_TXINT
//    <name> TXINT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40201008) \nTX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_CTRL ) </loc>
//      <o.2..2> TXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: UART1_CTRL_RXEN  ----------------------------------
// SVD Line: 668

//  <item> SFDITEM_FIELD__UART1_CTRL_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40201008) \nRX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_CTRL ) </loc>
//      <o.1..1> RXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: UART1_CTRL_TXEN  ----------------------------------
// SVD Line: 682

//  <item> SFDITEM_FIELD__UART1_CTRL_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40201008) \nTX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_CTRL ) </loc>
//      <o.0..0> TXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: UART1_CTRL  -----------------------------------
// SVD Line: 593

//  <rtree> SFDITEM_REG__UART1_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40201008) UART Control Register </i>
//    <loc> ( (unsigned int)((UART1_CTRL >> 0) & 0xFFFFFFFF), ((UART1_CTRL = (UART1_CTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART1_CTRL_HSTX </item>
//    <item> SFDITEM_FIELD__UART1_CTRL_RVOVINT </item>
//    <item> SFDITEM_FIELD__UART1_CTRL_TXOVINT </item>
//    <item> SFDITEM_FIELD__UART1_CTRL_RXINT </item>
//    <item> SFDITEM_FIELD__UART1_CTRL_TXINT </item>
//    <item> SFDITEM_FIELD__UART1_CTRL_RXEN </item>
//    <item> SFDITEM_FIELD__UART1_CTRL_TXEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART1_INTSTATUS  -----------------------------
// SVD Line: 698

unsigned int UART1_INTSTATUS __AT (0x4020100C);



// ----------------------------  Field Item: UART1_INTSTATUS_RXOV  --------------------------------
// SVD Line: 703

//  <item> SFDITEM_FIELD__UART1_INTSTATUS_RXOV
//    <name> RXOV </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4020100C) RX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_INTSTATUS ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART1_INTSTATUS_TXOV  --------------------------------
// SVD Line: 707

//  <item> SFDITEM_FIELD__UART1_INTSTATUS_TXOV
//    <name> TXOV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4020100C) TX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_INTSTATUS ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART1_INTSTATUS_RXINT  -------------------------------
// SVD Line: 711

//  <item> SFDITEM_FIELD__UART1_INTSTATUS_RXINT
//    <name> RXINT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4020100C) RX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_INTSTATUS ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART1_INTSTATUS_TXINT  -------------------------------
// SVD Line: 715

//  <item> SFDITEM_FIELD__UART1_INTSTATUS_TXINT
//    <name> TXINT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4020100C) TX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_INTSTATUS ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART1_INTSTATUS  --------------------------------
// SVD Line: 698

//  <rtree> SFDITEM_REG__UART1_INTSTATUS
//    <name> INTSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4020100C) UART Interrupt Status Register </i>
//    <loc> ( (unsigned int)((UART1_INTSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART1_INTSTATUS_RXOV </item>
//    <item> SFDITEM_FIELD__UART1_INTSTATUS_TXOV </item>
//    <item> SFDITEM_FIELD__UART1_INTSTATUS_RXINT </item>
//    <item> SFDITEM_FIELD__UART1_INTSTATUS_TXINT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART1_INTCLEAR  -----------------------------
// SVD Line: 721

unsigned int UART1_INTCLEAR __AT (0x4020100C);



// -----------------------------  Field Item: UART1_INTCLEAR_RXOV  --------------------------------
// SVD Line: 727

//  <item> SFDITEM_FIELD__UART1_INTCLEAR_RXOV
//    <name> RXOV </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4020100C) RX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_INTCLEAR ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UART1_INTCLEAR_TXOV  --------------------------------
// SVD Line: 732

//  <item> SFDITEM_FIELD__UART1_INTCLEAR_TXOV
//    <name> TXOV </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4020100C) TX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_INTCLEAR ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART1_INTCLEAR_RXINT  --------------------------------
// SVD Line: 737

//  <item> SFDITEM_FIELD__UART1_INTCLEAR_RXINT
//    <name> RXINT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4020100C) RX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_INTCLEAR ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART1_INTCLEAR_TXINT  --------------------------------
// SVD Line: 742

//  <item> SFDITEM_FIELD__UART1_INTCLEAR_TXINT
//    <name> TXINT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4020100C) TX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_INTCLEAR ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART1_INTCLEAR  ---------------------------------
// SVD Line: 721

//  <rtree> SFDITEM_REG__UART1_INTCLEAR
//    <name> INTCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4020100C) UART Interrupt CLEAR Register </i>
//    <loc> ( (unsigned int)((UART1_INTCLEAR >> 0) & 0xFFFFFFFF), ((UART1_INTCLEAR = (UART1_INTCLEAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART1_INTCLEAR_RXOV </item>
//    <item> SFDITEM_FIELD__UART1_INTCLEAR_TXOV </item>
//    <item> SFDITEM_FIELD__UART1_INTCLEAR_RXINT </item>
//    <item> SFDITEM_FIELD__UART1_INTCLEAR_TXINT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART1_BAUDDIV  ------------------------------
// SVD Line: 749

unsigned int UART1_BAUDDIV __AT (0x40201010);



// ------------------------------  Register Item: UART1_BAUDDIV  ----------------------------------
// SVD Line: 749

//  <item> SFDITEM_REG__UART1_BAUDDIV
//    <name> BAUDDIV </name>
//    <i> [Bits 31..0] RW (@ 0x40201010) Baudrate Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART1_BAUDDIV >> 0) & 0xFFFFFFFF), ((UART1_BAUDDIV = (UART1_BAUDDIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: UART1  -------------------------------------
// SVD Line: 759

//  <view> UART1
//    <name> UART1 </name>
//    <item> SFDITEM_REG__UART1_DATA </item>
//    <item> SFDITEM_REG__UART1_STATE </item>
//    <item> SFDITEM_REG__UART1_CTRL </item>
//    <item> SFDITEM_REG__UART1_INTSTATUS </item>
//    <item> SFDITEM_REG__UART1_INTCLEAR </item>
//    <item> SFDITEM_REG__UART1_BAUDDIV </item>
//  </view>
//  


// ----------------------------  Register Item Address: UART2_DATA  -------------------------------
// SVD Line: 561

unsigned int UART2_DATA __AT (0x02656F10);



// --------------------------------  Register Item: UART2_DATA  -----------------------------------
// SVD Line: 561

//  <item> SFDITEM_REG__UART2_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x02656F10) Recieve and Transmit Data Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART2_DATA >> 0) & 0xFFFFFFFF), ((UART2_DATA = (UART2_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: UART2_STATE  -------------------------------
// SVD Line: 566

unsigned int UART2_STATE __AT (0x02656F14);



// ------------------------------  Field Item: UART2_STATE_RXOV  ----------------------------------
// SVD Line: 571

//  <item> SFDITEM_FIELD__UART2_STATE_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x02656F14) RX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_STATE ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART2_STATE_TXOV  ----------------------------------
// SVD Line: 576

//  <item> SFDITEM_FIELD__UART2_STATE_TXOV
//    <name> TXOV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x02656F14) TX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_STATE ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART2_STATE_RXBF  ----------------------------------
// SVD Line: 581

//  <item> SFDITEM_FIELD__UART2_STATE_RXBF
//    <name> RXBF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x02656F14) RX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_STATE ) </loc>
//      <o.1..1> RXBF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART2_STATE_TXBF  ----------------------------------
// SVD Line: 586

//  <item> SFDITEM_FIELD__UART2_STATE_TXBF
//    <name> TXBF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x02656F14) TX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_STATE ) </loc>
//      <o.0..0> TXBF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART2_STATE  ----------------------------------
// SVD Line: 566

//  <rtree> SFDITEM_REG__UART2_STATE
//    <name> STATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x02656F14) UART Status Register </i>
//    <loc> ( (unsigned int)((UART2_STATE >> 0) & 0xFFFFFFFF), ((UART2_STATE = (UART2_STATE & ~(0xCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_STATE_RXOV </item>
//    <item> SFDITEM_FIELD__UART2_STATE_TXOV </item>
//    <item> SFDITEM_FIELD__UART2_STATE_RXBF </item>
//    <item> SFDITEM_FIELD__UART2_STATE_TXBF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART2_CTRL  -------------------------------
// SVD Line: 593

unsigned int UART2_CTRL __AT (0x02656F18);



// -------------------------------  Field Item: UART2_CTRL_HSTX  ----------------------------------
// SVD Line: 598

//  <item> SFDITEM_FIELD__UART2_CTRL_HSTX
//    <name> HSTX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x02656F18) \nHigh Speed Test Mode for TX only\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_CTRL ) </loc>
//      <o.6..6> HSTX
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: UART2_CTRL_RVOVINT  ---------------------------------
// SVD Line: 612

//  <item> SFDITEM_FIELD__UART2_CTRL_RVOVINT
//    <name> RVOVINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x02656F18) \nRX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_CTRL ) </loc>
//      <o.5..5> RVOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: UART2_CTRL_TXOVINT  ---------------------------------
// SVD Line: 626

//  <item> SFDITEM_FIELD__UART2_CTRL_TXOVINT
//    <name> TXOVINT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x02656F18) \nTX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_CTRL ) </loc>
//      <o.4..4> TXOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: UART2_CTRL_RXINT  ----------------------------------
// SVD Line: 640

//  <item> SFDITEM_FIELD__UART2_CTRL_RXINT
//    <name> RXINT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x02656F18) \nRX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_CTRL ) </loc>
//      <o.3..3> RXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: UART2_CTRL_TXINT  ----------------------------------
// SVD Line: 654

//  <item> SFDITEM_FIELD__UART2_CTRL_TXINT
//    <name> TXINT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x02656F18) \nTX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_CTRL ) </loc>
//      <o.2..2> TXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: UART2_CTRL_RXEN  ----------------------------------
// SVD Line: 668

//  <item> SFDITEM_FIELD__UART2_CTRL_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x02656F18) \nRX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_CTRL ) </loc>
//      <o.1..1> RXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: UART2_CTRL_TXEN  ----------------------------------
// SVD Line: 682

//  <item> SFDITEM_FIELD__UART2_CTRL_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x02656F18) \nTX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_CTRL ) </loc>
//      <o.0..0> TXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: UART2_CTRL  -----------------------------------
// SVD Line: 593

//  <rtree> SFDITEM_REG__UART2_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x02656F18) UART Control Register </i>
//    <loc> ( (unsigned int)((UART2_CTRL >> 0) & 0xFFFFFFFF), ((UART2_CTRL = (UART2_CTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_CTRL_HSTX </item>
//    <item> SFDITEM_FIELD__UART2_CTRL_RVOVINT </item>
//    <item> SFDITEM_FIELD__UART2_CTRL_TXOVINT </item>
//    <item> SFDITEM_FIELD__UART2_CTRL_RXINT </item>
//    <item> SFDITEM_FIELD__UART2_CTRL_TXINT </item>
//    <item> SFDITEM_FIELD__UART2_CTRL_RXEN </item>
//    <item> SFDITEM_FIELD__UART2_CTRL_TXEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART2_INTSTATUS  -----------------------------
// SVD Line: 698

unsigned int UART2_INTSTATUS __AT (0x02656F1C);



// ----------------------------  Field Item: UART2_INTSTATUS_RXOV  --------------------------------
// SVD Line: 703

//  <item> SFDITEM_FIELD__UART2_INTSTATUS_RXOV
//    <name> RXOV </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x02656F1C) RX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_INTSTATUS ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART2_INTSTATUS_TXOV  --------------------------------
// SVD Line: 707

//  <item> SFDITEM_FIELD__UART2_INTSTATUS_TXOV
//    <name> TXOV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x02656F1C) TX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_INTSTATUS ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART2_INTSTATUS_RXINT  -------------------------------
// SVD Line: 711

//  <item> SFDITEM_FIELD__UART2_INTSTATUS_RXINT
//    <name> RXINT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x02656F1C) RX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_INTSTATUS ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART2_INTSTATUS_TXINT  -------------------------------
// SVD Line: 715

//  <item> SFDITEM_FIELD__UART2_INTSTATUS_TXINT
//    <name> TXINT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x02656F1C) TX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_INTSTATUS ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART2_INTSTATUS  --------------------------------
// SVD Line: 698

//  <rtree> SFDITEM_REG__UART2_INTSTATUS
//    <name> INTSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x02656F1C) UART Interrupt Status Register </i>
//    <loc> ( (unsigned int)((UART2_INTSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART2_INTSTATUS_RXOV </item>
//    <item> SFDITEM_FIELD__UART2_INTSTATUS_TXOV </item>
//    <item> SFDITEM_FIELD__UART2_INTSTATUS_RXINT </item>
//    <item> SFDITEM_FIELD__UART2_INTSTATUS_TXINT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART2_INTCLEAR  -----------------------------
// SVD Line: 721

unsigned int UART2_INTCLEAR __AT (0x02656F1C);



// -----------------------------  Field Item: UART2_INTCLEAR_RXOV  --------------------------------
// SVD Line: 727

//  <item> SFDITEM_FIELD__UART2_INTCLEAR_RXOV
//    <name> RXOV </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x02656F1C) RX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_INTCLEAR ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UART2_INTCLEAR_TXOV  --------------------------------
// SVD Line: 732

//  <item> SFDITEM_FIELD__UART2_INTCLEAR_TXOV
//    <name> TXOV </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x02656F1C) TX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_INTCLEAR ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART2_INTCLEAR_RXINT  --------------------------------
// SVD Line: 737

//  <item> SFDITEM_FIELD__UART2_INTCLEAR_RXINT
//    <name> RXINT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x02656F1C) RX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_INTCLEAR ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART2_INTCLEAR_TXINT  --------------------------------
// SVD Line: 742

//  <item> SFDITEM_FIELD__UART2_INTCLEAR_TXINT
//    <name> TXINT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x02656F1C) TX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_INTCLEAR ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART2_INTCLEAR  ---------------------------------
// SVD Line: 721

//  <rtree> SFDITEM_REG__UART2_INTCLEAR
//    <name> INTCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x02656F1C) UART Interrupt CLEAR Register </i>
//    <loc> ( (unsigned int)((UART2_INTCLEAR >> 0) & 0xFFFFFFFF), ((UART2_INTCLEAR = (UART2_INTCLEAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_INTCLEAR_RXOV </item>
//    <item> SFDITEM_FIELD__UART2_INTCLEAR_TXOV </item>
//    <item> SFDITEM_FIELD__UART2_INTCLEAR_RXINT </item>
//    <item> SFDITEM_FIELD__UART2_INTCLEAR_TXINT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART2_BAUDDIV  ------------------------------
// SVD Line: 749

unsigned int UART2_BAUDDIV __AT (0x02656F20);



// ------------------------------  Register Item: UART2_BAUDDIV  ----------------------------------
// SVD Line: 749

//  <item> SFDITEM_REG__UART2_BAUDDIV
//    <name> BAUDDIV </name>
//    <i> [Bits 31..0] RW (@ 0x02656F20) Baudrate Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART2_BAUDDIV >> 0) & 0xFFFFFFFF), ((UART2_BAUDDIV = (UART2_BAUDDIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: UART2  -------------------------------------
// SVD Line: 778

//  <view> UART2
//    <name> UART2 </name>
//    <item> SFDITEM_REG__UART2_DATA </item>
//    <item> SFDITEM_REG__UART2_STATE </item>
//    <item> SFDITEM_REG__UART2_CTRL </item>
//    <item> SFDITEM_REG__UART2_INTSTATUS </item>
//    <item> SFDITEM_REG__UART2_INTCLEAR </item>
//    <item> SFDITEM_REG__UART2_BAUDDIV </item>
//  </view>
//  


// ----------------------------  Register Item Address: UART3_DATA  -------------------------------
// SVD Line: 561

unsigned int UART3_DATA __AT (0x40203000);



// --------------------------------  Register Item: UART3_DATA  -----------------------------------
// SVD Line: 561

//  <item> SFDITEM_REG__UART3_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x40203000) Recieve and Transmit Data Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART3_DATA >> 0) & 0xFFFFFFFF), ((UART3_DATA = (UART3_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: UART3_STATE  -------------------------------
// SVD Line: 566

unsigned int UART3_STATE __AT (0x40203004);



// ------------------------------  Field Item: UART3_STATE_RXOV  ----------------------------------
// SVD Line: 571

//  <item> SFDITEM_FIELD__UART3_STATE_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40203004) RX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_STATE ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART3_STATE_TXOV  ----------------------------------
// SVD Line: 576

//  <item> SFDITEM_FIELD__UART3_STATE_TXOV
//    <name> TXOV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40203004) TX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_STATE ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART3_STATE_RXBF  ----------------------------------
// SVD Line: 581

//  <item> SFDITEM_FIELD__UART3_STATE_RXBF
//    <name> RXBF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40203004) RX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_STATE ) </loc>
//      <o.1..1> RXBF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART3_STATE_TXBF  ----------------------------------
// SVD Line: 586

//  <item> SFDITEM_FIELD__UART3_STATE_TXBF
//    <name> TXBF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40203004) TX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_STATE ) </loc>
//      <o.0..0> TXBF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART3_STATE  ----------------------------------
// SVD Line: 566

//  <rtree> SFDITEM_REG__UART3_STATE
//    <name> STATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40203004) UART Status Register </i>
//    <loc> ( (unsigned int)((UART3_STATE >> 0) & 0xFFFFFFFF), ((UART3_STATE = (UART3_STATE & ~(0xCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_STATE_RXOV </item>
//    <item> SFDITEM_FIELD__UART3_STATE_TXOV </item>
//    <item> SFDITEM_FIELD__UART3_STATE_RXBF </item>
//    <item> SFDITEM_FIELD__UART3_STATE_TXBF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART3_CTRL  -------------------------------
// SVD Line: 593

unsigned int UART3_CTRL __AT (0x40203008);



// -------------------------------  Field Item: UART3_CTRL_HSTX  ----------------------------------
// SVD Line: 598

//  <item> SFDITEM_FIELD__UART3_CTRL_HSTX
//    <name> HSTX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40203008) \nHigh Speed Test Mode for TX only\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_CTRL ) </loc>
//      <o.6..6> HSTX
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: UART3_CTRL_RVOVINT  ---------------------------------
// SVD Line: 612

//  <item> SFDITEM_FIELD__UART3_CTRL_RVOVINT
//    <name> RVOVINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40203008) \nRX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_CTRL ) </loc>
//      <o.5..5> RVOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: UART3_CTRL_TXOVINT  ---------------------------------
// SVD Line: 626

//  <item> SFDITEM_FIELD__UART3_CTRL_TXOVINT
//    <name> TXOVINT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40203008) \nTX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_CTRL ) </loc>
//      <o.4..4> TXOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: UART3_CTRL_RXINT  ----------------------------------
// SVD Line: 640

//  <item> SFDITEM_FIELD__UART3_CTRL_RXINT
//    <name> RXINT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40203008) \nRX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_CTRL ) </loc>
//      <o.3..3> RXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: UART3_CTRL_TXINT  ----------------------------------
// SVD Line: 654

//  <item> SFDITEM_FIELD__UART3_CTRL_TXINT
//    <name> TXINT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40203008) \nTX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_CTRL ) </loc>
//      <o.2..2> TXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: UART3_CTRL_RXEN  ----------------------------------
// SVD Line: 668

//  <item> SFDITEM_FIELD__UART3_CTRL_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40203008) \nRX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_CTRL ) </loc>
//      <o.1..1> RXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: UART3_CTRL_TXEN  ----------------------------------
// SVD Line: 682

//  <item> SFDITEM_FIELD__UART3_CTRL_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40203008) \nTX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_CTRL ) </loc>
//      <o.0..0> TXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: UART3_CTRL  -----------------------------------
// SVD Line: 593

//  <rtree> SFDITEM_REG__UART3_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40203008) UART Control Register </i>
//    <loc> ( (unsigned int)((UART3_CTRL >> 0) & 0xFFFFFFFF), ((UART3_CTRL = (UART3_CTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_CTRL_HSTX </item>
//    <item> SFDITEM_FIELD__UART3_CTRL_RVOVINT </item>
//    <item> SFDITEM_FIELD__UART3_CTRL_TXOVINT </item>
//    <item> SFDITEM_FIELD__UART3_CTRL_RXINT </item>
//    <item> SFDITEM_FIELD__UART3_CTRL_TXINT </item>
//    <item> SFDITEM_FIELD__UART3_CTRL_RXEN </item>
//    <item> SFDITEM_FIELD__UART3_CTRL_TXEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART3_INTSTATUS  -----------------------------
// SVD Line: 698

unsigned int UART3_INTSTATUS __AT (0x4020300C);



// ----------------------------  Field Item: UART3_INTSTATUS_RXOV  --------------------------------
// SVD Line: 703

//  <item> SFDITEM_FIELD__UART3_INTSTATUS_RXOV
//    <name> RXOV </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4020300C) RX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_INTSTATUS ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART3_INTSTATUS_TXOV  --------------------------------
// SVD Line: 707

//  <item> SFDITEM_FIELD__UART3_INTSTATUS_TXOV
//    <name> TXOV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4020300C) TX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_INTSTATUS ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART3_INTSTATUS_RXINT  -------------------------------
// SVD Line: 711

//  <item> SFDITEM_FIELD__UART3_INTSTATUS_RXINT
//    <name> RXINT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4020300C) RX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_INTSTATUS ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART3_INTSTATUS_TXINT  -------------------------------
// SVD Line: 715

//  <item> SFDITEM_FIELD__UART3_INTSTATUS_TXINT
//    <name> TXINT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4020300C) TX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_INTSTATUS ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART3_INTSTATUS  --------------------------------
// SVD Line: 698

//  <rtree> SFDITEM_REG__UART3_INTSTATUS
//    <name> INTSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4020300C) UART Interrupt Status Register </i>
//    <loc> ( (unsigned int)((UART3_INTSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART3_INTSTATUS_RXOV </item>
//    <item> SFDITEM_FIELD__UART3_INTSTATUS_TXOV </item>
//    <item> SFDITEM_FIELD__UART3_INTSTATUS_RXINT </item>
//    <item> SFDITEM_FIELD__UART3_INTSTATUS_TXINT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART3_INTCLEAR  -----------------------------
// SVD Line: 721

unsigned int UART3_INTCLEAR __AT (0x4020300C);



// -----------------------------  Field Item: UART3_INTCLEAR_RXOV  --------------------------------
// SVD Line: 727

//  <item> SFDITEM_FIELD__UART3_INTCLEAR_RXOV
//    <name> RXOV </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4020300C) RX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_INTCLEAR ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UART3_INTCLEAR_TXOV  --------------------------------
// SVD Line: 732

//  <item> SFDITEM_FIELD__UART3_INTCLEAR_TXOV
//    <name> TXOV </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4020300C) TX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_INTCLEAR ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART3_INTCLEAR_RXINT  --------------------------------
// SVD Line: 737

//  <item> SFDITEM_FIELD__UART3_INTCLEAR_RXINT
//    <name> RXINT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4020300C) RX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_INTCLEAR ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART3_INTCLEAR_TXINT  --------------------------------
// SVD Line: 742

//  <item> SFDITEM_FIELD__UART3_INTCLEAR_TXINT
//    <name> TXINT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4020300C) TX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_INTCLEAR ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART3_INTCLEAR  ---------------------------------
// SVD Line: 721

//  <rtree> SFDITEM_REG__UART3_INTCLEAR
//    <name> INTCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4020300C) UART Interrupt CLEAR Register </i>
//    <loc> ( (unsigned int)((UART3_INTCLEAR >> 0) & 0xFFFFFFFF), ((UART3_INTCLEAR = (UART3_INTCLEAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_INTCLEAR_RXOV </item>
//    <item> SFDITEM_FIELD__UART3_INTCLEAR_TXOV </item>
//    <item> SFDITEM_FIELD__UART3_INTCLEAR_RXINT </item>
//    <item> SFDITEM_FIELD__UART3_INTCLEAR_TXINT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART3_BAUDDIV  ------------------------------
// SVD Line: 749

unsigned int UART3_BAUDDIV __AT (0x40203010);



// ------------------------------  Register Item: UART3_BAUDDIV  ----------------------------------
// SVD Line: 749

//  <item> SFDITEM_REG__UART3_BAUDDIV
//    <name> BAUDDIV </name>
//    <i> [Bits 31..0] RW (@ 0x40203010) Baudrate Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART3_BAUDDIV >> 0) & 0xFFFFFFFF), ((UART3_BAUDDIV = (UART3_BAUDDIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: UART3  -------------------------------------
// SVD Line: 797

//  <view> UART3
//    <name> UART3 </name>
//    <item> SFDITEM_REG__UART3_DATA </item>
//    <item> SFDITEM_REG__UART3_STATE </item>
//    <item> SFDITEM_REG__UART3_CTRL </item>
//    <item> SFDITEM_REG__UART3_INTSTATUS </item>
//    <item> SFDITEM_REG__UART3_INTCLEAR </item>
//    <item> SFDITEM_REG__UART3_BAUDDIV </item>
//  </view>
//  


// ----------------------------  Register Item Address: UART4_DATA  -------------------------------
// SVD Line: 561

unsigned int UART4_DATA __AT (0x40204000);



// --------------------------------  Register Item: UART4_DATA  -----------------------------------
// SVD Line: 561

//  <item> SFDITEM_REG__UART4_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x40204000) Recieve and Transmit Data Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART4_DATA >> 0) & 0xFFFFFFFF), ((UART4_DATA = (UART4_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: UART4_STATE  -------------------------------
// SVD Line: 566

unsigned int UART4_STATE __AT (0x40204004);



// ------------------------------  Field Item: UART4_STATE_RXOV  ----------------------------------
// SVD Line: 571

//  <item> SFDITEM_FIELD__UART4_STATE_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40204004) RX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_STATE ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART4_STATE_TXOV  ----------------------------------
// SVD Line: 576

//  <item> SFDITEM_FIELD__UART4_STATE_TXOV
//    <name> TXOV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40204004) TX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_STATE ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART4_STATE_RXBF  ----------------------------------
// SVD Line: 581

//  <item> SFDITEM_FIELD__UART4_STATE_RXBF
//    <name> RXBF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40204004) RX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_STATE ) </loc>
//      <o.1..1> RXBF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART4_STATE_TXBF  ----------------------------------
// SVD Line: 586

//  <item> SFDITEM_FIELD__UART4_STATE_TXBF
//    <name> TXBF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40204004) TX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_STATE ) </loc>
//      <o.0..0> TXBF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART4_STATE  ----------------------------------
// SVD Line: 566

//  <rtree> SFDITEM_REG__UART4_STATE
//    <name> STATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40204004) UART Status Register </i>
//    <loc> ( (unsigned int)((UART4_STATE >> 0) & 0xFFFFFFFF), ((UART4_STATE = (UART4_STATE & ~(0xCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_STATE_RXOV </item>
//    <item> SFDITEM_FIELD__UART4_STATE_TXOV </item>
//    <item> SFDITEM_FIELD__UART4_STATE_RXBF </item>
//    <item> SFDITEM_FIELD__UART4_STATE_TXBF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART4_CTRL  -------------------------------
// SVD Line: 593

unsigned int UART4_CTRL __AT (0x40204008);



// -------------------------------  Field Item: UART4_CTRL_HSTX  ----------------------------------
// SVD Line: 598

//  <item> SFDITEM_FIELD__UART4_CTRL_HSTX
//    <name> HSTX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40204008) \nHigh Speed Test Mode for TX only\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_CTRL ) </loc>
//      <o.6..6> HSTX
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: UART4_CTRL_RVOVINT  ---------------------------------
// SVD Line: 612

//  <item> SFDITEM_FIELD__UART4_CTRL_RVOVINT
//    <name> RVOVINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40204008) \nRX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_CTRL ) </loc>
//      <o.5..5> RVOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: UART4_CTRL_TXOVINT  ---------------------------------
// SVD Line: 626

//  <item> SFDITEM_FIELD__UART4_CTRL_TXOVINT
//    <name> TXOVINT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40204008) \nTX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_CTRL ) </loc>
//      <o.4..4> TXOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: UART4_CTRL_RXINT  ----------------------------------
// SVD Line: 640

//  <item> SFDITEM_FIELD__UART4_CTRL_RXINT
//    <name> RXINT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40204008) \nRX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_CTRL ) </loc>
//      <o.3..3> RXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: UART4_CTRL_TXINT  ----------------------------------
// SVD Line: 654

//  <item> SFDITEM_FIELD__UART4_CTRL_TXINT
//    <name> TXINT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40204008) \nTX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_CTRL ) </loc>
//      <o.2..2> TXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: UART4_CTRL_RXEN  ----------------------------------
// SVD Line: 668

//  <item> SFDITEM_FIELD__UART4_CTRL_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40204008) \nRX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_CTRL ) </loc>
//      <o.1..1> RXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: UART4_CTRL_TXEN  ----------------------------------
// SVD Line: 682

//  <item> SFDITEM_FIELD__UART4_CTRL_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40204008) \nTX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_CTRL ) </loc>
//      <o.0..0> TXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: UART4_CTRL  -----------------------------------
// SVD Line: 593

//  <rtree> SFDITEM_REG__UART4_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40204008) UART Control Register </i>
//    <loc> ( (unsigned int)((UART4_CTRL >> 0) & 0xFFFFFFFF), ((UART4_CTRL = (UART4_CTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_CTRL_HSTX </item>
//    <item> SFDITEM_FIELD__UART4_CTRL_RVOVINT </item>
//    <item> SFDITEM_FIELD__UART4_CTRL_TXOVINT </item>
//    <item> SFDITEM_FIELD__UART4_CTRL_RXINT </item>
//    <item> SFDITEM_FIELD__UART4_CTRL_TXINT </item>
//    <item> SFDITEM_FIELD__UART4_CTRL_RXEN </item>
//    <item> SFDITEM_FIELD__UART4_CTRL_TXEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART4_INTSTATUS  -----------------------------
// SVD Line: 698

unsigned int UART4_INTSTATUS __AT (0x4020400C);



// ----------------------------  Field Item: UART4_INTSTATUS_RXOV  --------------------------------
// SVD Line: 703

//  <item> SFDITEM_FIELD__UART4_INTSTATUS_RXOV
//    <name> RXOV </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4020400C) RX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_INTSTATUS ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART4_INTSTATUS_TXOV  --------------------------------
// SVD Line: 707

//  <item> SFDITEM_FIELD__UART4_INTSTATUS_TXOV
//    <name> TXOV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4020400C) TX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_INTSTATUS ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART4_INTSTATUS_RXINT  -------------------------------
// SVD Line: 711

//  <item> SFDITEM_FIELD__UART4_INTSTATUS_RXINT
//    <name> RXINT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4020400C) RX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_INTSTATUS ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART4_INTSTATUS_TXINT  -------------------------------
// SVD Line: 715

//  <item> SFDITEM_FIELD__UART4_INTSTATUS_TXINT
//    <name> TXINT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4020400C) TX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_INTSTATUS ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART4_INTSTATUS  --------------------------------
// SVD Line: 698

//  <rtree> SFDITEM_REG__UART4_INTSTATUS
//    <name> INTSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4020400C) UART Interrupt Status Register </i>
//    <loc> ( (unsigned int)((UART4_INTSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART4_INTSTATUS_RXOV </item>
//    <item> SFDITEM_FIELD__UART4_INTSTATUS_TXOV </item>
//    <item> SFDITEM_FIELD__UART4_INTSTATUS_RXINT </item>
//    <item> SFDITEM_FIELD__UART4_INTSTATUS_TXINT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART4_INTCLEAR  -----------------------------
// SVD Line: 721

unsigned int UART4_INTCLEAR __AT (0x4020400C);



// -----------------------------  Field Item: UART4_INTCLEAR_RXOV  --------------------------------
// SVD Line: 727

//  <item> SFDITEM_FIELD__UART4_INTCLEAR_RXOV
//    <name> RXOV </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4020400C) RX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_INTCLEAR ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UART4_INTCLEAR_TXOV  --------------------------------
// SVD Line: 732

//  <item> SFDITEM_FIELD__UART4_INTCLEAR_TXOV
//    <name> TXOV </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4020400C) TX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_INTCLEAR ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART4_INTCLEAR_RXINT  --------------------------------
// SVD Line: 737

//  <item> SFDITEM_FIELD__UART4_INTCLEAR_RXINT
//    <name> RXINT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4020400C) RX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_INTCLEAR ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART4_INTCLEAR_TXINT  --------------------------------
// SVD Line: 742

//  <item> SFDITEM_FIELD__UART4_INTCLEAR_TXINT
//    <name> TXINT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4020400C) TX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_INTCLEAR ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART4_INTCLEAR  ---------------------------------
// SVD Line: 721

//  <rtree> SFDITEM_REG__UART4_INTCLEAR
//    <name> INTCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4020400C) UART Interrupt CLEAR Register </i>
//    <loc> ( (unsigned int)((UART4_INTCLEAR >> 0) & 0xFFFFFFFF), ((UART4_INTCLEAR = (UART4_INTCLEAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_INTCLEAR_RXOV </item>
//    <item> SFDITEM_FIELD__UART4_INTCLEAR_TXOV </item>
//    <item> SFDITEM_FIELD__UART4_INTCLEAR_RXINT </item>
//    <item> SFDITEM_FIELD__UART4_INTCLEAR_TXINT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART4_BAUDDIV  ------------------------------
// SVD Line: 749

unsigned int UART4_BAUDDIV __AT (0x40204010);



// ------------------------------  Register Item: UART4_BAUDDIV  ----------------------------------
// SVD Line: 749

//  <item> SFDITEM_REG__UART4_BAUDDIV
//    <name> BAUDDIV </name>
//    <i> [Bits 31..0] RW (@ 0x40204010) Baudrate Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART4_BAUDDIV >> 0) & 0xFFFFFFFF), ((UART4_BAUDDIV = (UART4_BAUDDIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: UART4  -------------------------------------
// SVD Line: 816

//  <view> UART4
//    <name> UART4 </name>
//    <item> SFDITEM_REG__UART4_DATA </item>
//    <item> SFDITEM_REG__UART4_STATE </item>
//    <item> SFDITEM_REG__UART4_CTRL </item>
//    <item> SFDITEM_REG__UART4_INTSTATUS </item>
//    <item> SFDITEM_REG__UART4_INTCLEAR </item>
//    <item> SFDITEM_REG__UART4_BAUDDIV </item>
//  </view>
//  


// ----------------------------  Register Item Address: GPIO0_DATA  -------------------------------
// SVD Line: 917

unsigned int GPIO0_DATA __AT (0x40100000);



// --------------------------------  Register Item: GPIO0_DATA  -----------------------------------
// SVD Line: 917

//  <item> SFDITEM_REG__GPIO0_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x40100000) Data Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_DATA >> 0) & 0xFFFFFFFF), ((GPIO0_DATA = (GPIO0_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO0_DATAOUT  ------------------------------
// SVD Line: 922

unsigned int GPIO0_DATAOUT __AT (0x40100004);



// ------------------------------  Register Item: GPIO0_DATAOUT  ----------------------------------
// SVD Line: 922

//  <item> SFDITEM_REG__GPIO0_DATAOUT
//    <name> DATAOUT </name>
//    <i> [Bits 31..0] RW (@ 0x40100004) Data Output Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_DATAOUT >> 0) & 0xFFFFFFFF), ((GPIO0_DATAOUT = (GPIO0_DATAOUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO0_OUTENSET  -----------------------------
// SVD Line: 927

unsigned int GPIO0_OUTENSET __AT (0x40100010);



// ------------------------------  Register Item: GPIO0_OUTENSET  ---------------------------------
// SVD Line: 927

//  <item> SFDITEM_REG__GPIO0_OUTENSET
//    <name> OUTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x40100010) Ouptut enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_OUTENSET >> 0) & 0xFFFFFFFF), ((GPIO0_OUTENSET = (GPIO0_OUTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO0_OUTENCLR  -----------------------------
// SVD Line: 932

unsigned int GPIO0_OUTENCLR __AT (0x40100014);



// ------------------------------  Register Item: GPIO0_OUTENCLR  ---------------------------------
// SVD Line: 932

//  <item> SFDITEM_REG__GPIO0_OUTENCLR
//    <name> OUTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x40100014) Ouptut enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_OUTENCLR >> 0) & 0xFFFFFFFF), ((GPIO0_OUTENCLR = (GPIO0_OUTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO0_ALTFUNCSET  ----------------------------
// SVD Line: 937

unsigned int GPIO0_ALTFUNCSET __AT (0x40100018);



// -----------------------------  Register Item: GPIO0_ALTFUNCSET  --------------------------------
// SVD Line: 937

//  <item> SFDITEM_REG__GPIO0_ALTFUNCSET
//    <name> ALTFUNCSET </name>
//    <i> [Bits 31..0] RW (@ 0x40100018) Alternate function set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_ALTFUNCSET >> 0) & 0xFFFFFFFF), ((GPIO0_ALTFUNCSET = (GPIO0_ALTFUNCSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO0_ALTFUNCCLR  ----------------------------
// SVD Line: 942

unsigned int GPIO0_ALTFUNCCLR __AT (0x4010001C);



// -----------------------------  Register Item: GPIO0_ALTFUNCCLR  --------------------------------
// SVD Line: 942

//  <item> SFDITEM_REG__GPIO0_ALTFUNCCLR
//    <name> ALTFUNCCLR </name>
//    <i> [Bits 31..0] RW (@ 0x4010001C) Alternate function clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_ALTFUNCCLR >> 0) & 0xFFFFFFFF), ((GPIO0_ALTFUNCCLR = (GPIO0_ALTFUNCCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO0_INTENSET  -----------------------------
// SVD Line: 947

unsigned int GPIO0_INTENSET __AT (0x40100020);



// ------------------------------  Register Item: GPIO0_INTENSET  ---------------------------------
// SVD Line: 947

//  <item> SFDITEM_REG__GPIO0_INTENSET
//    <name> INTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x40100020) Interrupt enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_INTENSET >> 0) & 0xFFFFFFFF), ((GPIO0_INTENSET = (GPIO0_INTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO0_INTENCLR  -----------------------------
// SVD Line: 952

unsigned int GPIO0_INTENCLR __AT (0x40100024);



// ------------------------------  Register Item: GPIO0_INTENCLR  ---------------------------------
// SVD Line: 952

//  <item> SFDITEM_REG__GPIO0_INTENCLR
//    <name> INTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x40100024) Interrupt enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_INTENCLR >> 0) & 0xFFFFFFFF), ((GPIO0_INTENCLR = (GPIO0_INTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO0_INTTYPESET  ----------------------------
// SVD Line: 957

unsigned int GPIO0_INTTYPESET __AT (0x40100028);



// -----------------------------  Register Item: GPIO0_INTTYPESET  --------------------------------
// SVD Line: 957

//  <item> SFDITEM_REG__GPIO0_INTTYPESET
//    <name> INTTYPESET </name>
//    <i> [Bits 31..0] RW (@ 0x40100028) Interrupt type set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_INTTYPESET >> 0) & 0xFFFFFFFF), ((GPIO0_INTTYPESET = (GPIO0_INTTYPESET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO0_INTTYPECLR  ----------------------------
// SVD Line: 962

unsigned int GPIO0_INTTYPECLR __AT (0x4010002C);



// -----------------------------  Register Item: GPIO0_INTTYPECLR  --------------------------------
// SVD Line: 962

//  <item> SFDITEM_REG__GPIO0_INTTYPECLR
//    <name> INTTYPECLR </name>
//    <i> [Bits 31..0] RW (@ 0x4010002C) Interrupt type clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_INTTYPECLR >> 0) & 0xFFFFFFFF), ((GPIO0_INTTYPECLR = (GPIO0_INTTYPECLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO0_INTPOLSET  -----------------------------
// SVD Line: 967

unsigned int GPIO0_INTPOLSET __AT (0x40100030);



// -----------------------------  Register Item: GPIO0_INTPOLSET  ---------------------------------
// SVD Line: 967

//  <item> SFDITEM_REG__GPIO0_INTPOLSET
//    <name> INTPOLSET </name>
//    <i> [Bits 31..0] RW (@ 0x40100030) Polarity-level, edge interrupt configuration set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_INTPOLSET >> 0) & 0xFFFFFFFF), ((GPIO0_INTPOLSET = (GPIO0_INTPOLSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO0_INTPOLCLR  -----------------------------
// SVD Line: 972

unsigned int GPIO0_INTPOLCLR __AT (0x40100034);



// -----------------------------  Register Item: GPIO0_INTPOLCLR  ---------------------------------
// SVD Line: 972

//  <item> SFDITEM_REG__GPIO0_INTPOLCLR
//    <name> INTPOLCLR </name>
//    <i> [Bits 31..0] RW (@ 0x40100034) Polarity-level, edge interrupt configuration clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_INTPOLCLR >> 0) & 0xFFFFFFFF), ((GPIO0_INTPOLCLR = (GPIO0_INTPOLCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO0_INTSTATUS  -----------------------------
// SVD Line: 977

unsigned int GPIO0_INTSTATUS __AT (0x40100038);



// -----------------------------  Register Item: GPIO0_INTSTATUS  ---------------------------------
// SVD Line: 977

//  <item> SFDITEM_REG__GPIO0_INTSTATUS
//    <name> INTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x40100038) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_INTSTATUS >> 0) & 0xFFFFFFFF), ((GPIO0_INTSTATUS = (GPIO0_INTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO0_INTCLEAR  -----------------------------
// SVD Line: 982

unsigned int GPIO0_INTCLEAR __AT (0x40100038);



// ------------------------------  Register Item: GPIO0_INTCLEAR  ---------------------------------
// SVD Line: 982

//  <item> SFDITEM_REG__GPIO0_INTCLEAR
//    <name> INTCLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x40100038) Interrupt CLEAR Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_INTCLEAR >> 0) & 0xFFFFFFFF), ((GPIO0_INTCLEAR = (GPIO0_INTCLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: GPIO0  -------------------------------------
// SVD Line: 835

//  <view> GPIO0
//    <name> GPIO0 </name>
//    <item> SFDITEM_REG__GPIO0_DATA </item>
//    <item> SFDITEM_REG__GPIO0_DATAOUT </item>
//    <item> SFDITEM_REG__GPIO0_OUTENSET </item>
//    <item> SFDITEM_REG__GPIO0_OUTENCLR </item>
//    <item> SFDITEM_REG__GPIO0_ALTFUNCSET </item>
//    <item> SFDITEM_REG__GPIO0_ALTFUNCCLR </item>
//    <item> SFDITEM_REG__GPIO0_INTENSET </item>
//    <item> SFDITEM_REG__GPIO0_INTENCLR </item>
//    <item> SFDITEM_REG__GPIO0_INTTYPESET </item>
//    <item> SFDITEM_REG__GPIO0_INTTYPECLR </item>
//    <item> SFDITEM_REG__GPIO0_INTPOLSET </item>
//    <item> SFDITEM_REG__GPIO0_INTPOLCLR </item>
//    <item> SFDITEM_REG__GPIO0_INTSTATUS </item>
//    <item> SFDITEM_REG__GPIO0_INTCLEAR </item>
//  </view>
//  


// ----------------------------  Register Item Address: GPIO1_DATA  -------------------------------
// SVD Line: 917

unsigned int GPIO1_DATA __AT (0x40101000);



// --------------------------------  Register Item: GPIO1_DATA  -----------------------------------
// SVD Line: 917

//  <item> SFDITEM_REG__GPIO1_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x40101000) Data Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_DATA >> 0) & 0xFFFFFFFF), ((GPIO1_DATA = (GPIO1_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO1_DATAOUT  ------------------------------
// SVD Line: 922

unsigned int GPIO1_DATAOUT __AT (0x40101004);



// ------------------------------  Register Item: GPIO1_DATAOUT  ----------------------------------
// SVD Line: 922

//  <item> SFDITEM_REG__GPIO1_DATAOUT
//    <name> DATAOUT </name>
//    <i> [Bits 31..0] RW (@ 0x40101004) Data Output Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_DATAOUT >> 0) & 0xFFFFFFFF), ((GPIO1_DATAOUT = (GPIO1_DATAOUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO1_OUTENSET  -----------------------------
// SVD Line: 927

unsigned int GPIO1_OUTENSET __AT (0x40101010);



// ------------------------------  Register Item: GPIO1_OUTENSET  ---------------------------------
// SVD Line: 927

//  <item> SFDITEM_REG__GPIO1_OUTENSET
//    <name> OUTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x40101010) Ouptut enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_OUTENSET >> 0) & 0xFFFFFFFF), ((GPIO1_OUTENSET = (GPIO1_OUTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO1_OUTENCLR  -----------------------------
// SVD Line: 932

unsigned int GPIO1_OUTENCLR __AT (0x40101014);



// ------------------------------  Register Item: GPIO1_OUTENCLR  ---------------------------------
// SVD Line: 932

//  <item> SFDITEM_REG__GPIO1_OUTENCLR
//    <name> OUTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x40101014) Ouptut enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_OUTENCLR >> 0) & 0xFFFFFFFF), ((GPIO1_OUTENCLR = (GPIO1_OUTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO1_ALTFUNCSET  ----------------------------
// SVD Line: 937

unsigned int GPIO1_ALTFUNCSET __AT (0x40101018);



// -----------------------------  Register Item: GPIO1_ALTFUNCSET  --------------------------------
// SVD Line: 937

//  <item> SFDITEM_REG__GPIO1_ALTFUNCSET
//    <name> ALTFUNCSET </name>
//    <i> [Bits 31..0] RW (@ 0x40101018) Alternate function set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_ALTFUNCSET >> 0) & 0xFFFFFFFF), ((GPIO1_ALTFUNCSET = (GPIO1_ALTFUNCSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO1_ALTFUNCCLR  ----------------------------
// SVD Line: 942

unsigned int GPIO1_ALTFUNCCLR __AT (0x4010101C);



// -----------------------------  Register Item: GPIO1_ALTFUNCCLR  --------------------------------
// SVD Line: 942

//  <item> SFDITEM_REG__GPIO1_ALTFUNCCLR
//    <name> ALTFUNCCLR </name>
//    <i> [Bits 31..0] RW (@ 0x4010101C) Alternate function clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_ALTFUNCCLR >> 0) & 0xFFFFFFFF), ((GPIO1_ALTFUNCCLR = (GPIO1_ALTFUNCCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO1_INTENSET  -----------------------------
// SVD Line: 947

unsigned int GPIO1_INTENSET __AT (0x40101020);



// ------------------------------  Register Item: GPIO1_INTENSET  ---------------------------------
// SVD Line: 947

//  <item> SFDITEM_REG__GPIO1_INTENSET
//    <name> INTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x40101020) Interrupt enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_INTENSET >> 0) & 0xFFFFFFFF), ((GPIO1_INTENSET = (GPIO1_INTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO1_INTENCLR  -----------------------------
// SVD Line: 952

unsigned int GPIO1_INTENCLR __AT (0x40101024);



// ------------------------------  Register Item: GPIO1_INTENCLR  ---------------------------------
// SVD Line: 952

//  <item> SFDITEM_REG__GPIO1_INTENCLR
//    <name> INTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x40101024) Interrupt enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_INTENCLR >> 0) & 0xFFFFFFFF), ((GPIO1_INTENCLR = (GPIO1_INTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO1_INTTYPESET  ----------------------------
// SVD Line: 957

unsigned int GPIO1_INTTYPESET __AT (0x40101028);



// -----------------------------  Register Item: GPIO1_INTTYPESET  --------------------------------
// SVD Line: 957

//  <item> SFDITEM_REG__GPIO1_INTTYPESET
//    <name> INTTYPESET </name>
//    <i> [Bits 31..0] RW (@ 0x40101028) Interrupt type set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_INTTYPESET >> 0) & 0xFFFFFFFF), ((GPIO1_INTTYPESET = (GPIO1_INTTYPESET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO1_INTTYPECLR  ----------------------------
// SVD Line: 962

unsigned int GPIO1_INTTYPECLR __AT (0x4010102C);



// -----------------------------  Register Item: GPIO1_INTTYPECLR  --------------------------------
// SVD Line: 962

//  <item> SFDITEM_REG__GPIO1_INTTYPECLR
//    <name> INTTYPECLR </name>
//    <i> [Bits 31..0] RW (@ 0x4010102C) Interrupt type clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_INTTYPECLR >> 0) & 0xFFFFFFFF), ((GPIO1_INTTYPECLR = (GPIO1_INTTYPECLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO1_INTPOLSET  -----------------------------
// SVD Line: 967

unsigned int GPIO1_INTPOLSET __AT (0x40101030);



// -----------------------------  Register Item: GPIO1_INTPOLSET  ---------------------------------
// SVD Line: 967

//  <item> SFDITEM_REG__GPIO1_INTPOLSET
//    <name> INTPOLSET </name>
//    <i> [Bits 31..0] RW (@ 0x40101030) Polarity-level, edge interrupt configuration set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_INTPOLSET >> 0) & 0xFFFFFFFF), ((GPIO1_INTPOLSET = (GPIO1_INTPOLSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO1_INTPOLCLR  -----------------------------
// SVD Line: 972

unsigned int GPIO1_INTPOLCLR __AT (0x40101034);



// -----------------------------  Register Item: GPIO1_INTPOLCLR  ---------------------------------
// SVD Line: 972

//  <item> SFDITEM_REG__GPIO1_INTPOLCLR
//    <name> INTPOLCLR </name>
//    <i> [Bits 31..0] RW (@ 0x40101034) Polarity-level, edge interrupt configuration clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_INTPOLCLR >> 0) & 0xFFFFFFFF), ((GPIO1_INTPOLCLR = (GPIO1_INTPOLCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO1_INTSTATUS  -----------------------------
// SVD Line: 977

unsigned int GPIO1_INTSTATUS __AT (0x40101038);



// -----------------------------  Register Item: GPIO1_INTSTATUS  ---------------------------------
// SVD Line: 977

//  <item> SFDITEM_REG__GPIO1_INTSTATUS
//    <name> INTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x40101038) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_INTSTATUS >> 0) & 0xFFFFFFFF), ((GPIO1_INTSTATUS = (GPIO1_INTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO1_INTCLEAR  -----------------------------
// SVD Line: 982

unsigned int GPIO1_INTCLEAR __AT (0x40101038);



// ------------------------------  Register Item: GPIO1_INTCLEAR  ---------------------------------
// SVD Line: 982

//  <item> SFDITEM_REG__GPIO1_INTCLEAR
//    <name> INTCLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x40101038) Interrupt CLEAR Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_INTCLEAR >> 0) & 0xFFFFFFFF), ((GPIO1_INTCLEAR = (GPIO1_INTCLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: GPIO1  -------------------------------------
// SVD Line: 993

//  <view> GPIO1
//    <name> GPIO1 </name>
//    <item> SFDITEM_REG__GPIO1_DATA </item>
//    <item> SFDITEM_REG__GPIO1_DATAOUT </item>
//    <item> SFDITEM_REG__GPIO1_OUTENSET </item>
//    <item> SFDITEM_REG__GPIO1_OUTENCLR </item>
//    <item> SFDITEM_REG__GPIO1_ALTFUNCSET </item>
//    <item> SFDITEM_REG__GPIO1_ALTFUNCCLR </item>
//    <item> SFDITEM_REG__GPIO1_INTENSET </item>
//    <item> SFDITEM_REG__GPIO1_INTENCLR </item>
//    <item> SFDITEM_REG__GPIO1_INTTYPESET </item>
//    <item> SFDITEM_REG__GPIO1_INTTYPECLR </item>
//    <item> SFDITEM_REG__GPIO1_INTPOLSET </item>
//    <item> SFDITEM_REG__GPIO1_INTPOLCLR </item>
//    <item> SFDITEM_REG__GPIO1_INTSTATUS </item>
//    <item> SFDITEM_REG__GPIO1_INTCLEAR </item>
//  </view>
//  


// ----------------------------  Register Item Address: GPIO2_DATA  -------------------------------
// SVD Line: 917

unsigned int GPIO2_DATA __AT (0x40102000);



// --------------------------------  Register Item: GPIO2_DATA  -----------------------------------
// SVD Line: 917

//  <item> SFDITEM_REG__GPIO2_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x40102000) Data Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_DATA >> 0) & 0xFFFFFFFF), ((GPIO2_DATA = (GPIO2_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO2_DATAOUT  ------------------------------
// SVD Line: 922

unsigned int GPIO2_DATAOUT __AT (0x40102004);



// ------------------------------  Register Item: GPIO2_DATAOUT  ----------------------------------
// SVD Line: 922

//  <item> SFDITEM_REG__GPIO2_DATAOUT
//    <name> DATAOUT </name>
//    <i> [Bits 31..0] RW (@ 0x40102004) Data Output Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_DATAOUT >> 0) & 0xFFFFFFFF), ((GPIO2_DATAOUT = (GPIO2_DATAOUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO2_OUTENSET  -----------------------------
// SVD Line: 927

unsigned int GPIO2_OUTENSET __AT (0x40102010);



// ------------------------------  Register Item: GPIO2_OUTENSET  ---------------------------------
// SVD Line: 927

//  <item> SFDITEM_REG__GPIO2_OUTENSET
//    <name> OUTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x40102010) Ouptut enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_OUTENSET >> 0) & 0xFFFFFFFF), ((GPIO2_OUTENSET = (GPIO2_OUTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO2_OUTENCLR  -----------------------------
// SVD Line: 932

unsigned int GPIO2_OUTENCLR __AT (0x40102014);



// ------------------------------  Register Item: GPIO2_OUTENCLR  ---------------------------------
// SVD Line: 932

//  <item> SFDITEM_REG__GPIO2_OUTENCLR
//    <name> OUTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x40102014) Ouptut enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_OUTENCLR >> 0) & 0xFFFFFFFF), ((GPIO2_OUTENCLR = (GPIO2_OUTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO2_ALTFUNCSET  ----------------------------
// SVD Line: 937

unsigned int GPIO2_ALTFUNCSET __AT (0x40102018);



// -----------------------------  Register Item: GPIO2_ALTFUNCSET  --------------------------------
// SVD Line: 937

//  <item> SFDITEM_REG__GPIO2_ALTFUNCSET
//    <name> ALTFUNCSET </name>
//    <i> [Bits 31..0] RW (@ 0x40102018) Alternate function set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_ALTFUNCSET >> 0) & 0xFFFFFFFF), ((GPIO2_ALTFUNCSET = (GPIO2_ALTFUNCSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO2_ALTFUNCCLR  ----------------------------
// SVD Line: 942

unsigned int GPIO2_ALTFUNCCLR __AT (0x4010201C);



// -----------------------------  Register Item: GPIO2_ALTFUNCCLR  --------------------------------
// SVD Line: 942

//  <item> SFDITEM_REG__GPIO2_ALTFUNCCLR
//    <name> ALTFUNCCLR </name>
//    <i> [Bits 31..0] RW (@ 0x4010201C) Alternate function clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_ALTFUNCCLR >> 0) & 0xFFFFFFFF), ((GPIO2_ALTFUNCCLR = (GPIO2_ALTFUNCCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO2_INTENSET  -----------------------------
// SVD Line: 947

unsigned int GPIO2_INTENSET __AT (0x40102020);



// ------------------------------  Register Item: GPIO2_INTENSET  ---------------------------------
// SVD Line: 947

//  <item> SFDITEM_REG__GPIO2_INTENSET
//    <name> INTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x40102020) Interrupt enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_INTENSET >> 0) & 0xFFFFFFFF), ((GPIO2_INTENSET = (GPIO2_INTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO2_INTENCLR  -----------------------------
// SVD Line: 952

unsigned int GPIO2_INTENCLR __AT (0x40102024);



// ------------------------------  Register Item: GPIO2_INTENCLR  ---------------------------------
// SVD Line: 952

//  <item> SFDITEM_REG__GPIO2_INTENCLR
//    <name> INTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x40102024) Interrupt enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_INTENCLR >> 0) & 0xFFFFFFFF), ((GPIO2_INTENCLR = (GPIO2_INTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO2_INTTYPESET  ----------------------------
// SVD Line: 957

unsigned int GPIO2_INTTYPESET __AT (0x40102028);



// -----------------------------  Register Item: GPIO2_INTTYPESET  --------------------------------
// SVD Line: 957

//  <item> SFDITEM_REG__GPIO2_INTTYPESET
//    <name> INTTYPESET </name>
//    <i> [Bits 31..0] RW (@ 0x40102028) Interrupt type set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_INTTYPESET >> 0) & 0xFFFFFFFF), ((GPIO2_INTTYPESET = (GPIO2_INTTYPESET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO2_INTTYPECLR  ----------------------------
// SVD Line: 962

unsigned int GPIO2_INTTYPECLR __AT (0x4010202C);



// -----------------------------  Register Item: GPIO2_INTTYPECLR  --------------------------------
// SVD Line: 962

//  <item> SFDITEM_REG__GPIO2_INTTYPECLR
//    <name> INTTYPECLR </name>
//    <i> [Bits 31..0] RW (@ 0x4010202C) Interrupt type clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_INTTYPECLR >> 0) & 0xFFFFFFFF), ((GPIO2_INTTYPECLR = (GPIO2_INTTYPECLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO2_INTPOLSET  -----------------------------
// SVD Line: 967

unsigned int GPIO2_INTPOLSET __AT (0x40102030);



// -----------------------------  Register Item: GPIO2_INTPOLSET  ---------------------------------
// SVD Line: 967

//  <item> SFDITEM_REG__GPIO2_INTPOLSET
//    <name> INTPOLSET </name>
//    <i> [Bits 31..0] RW (@ 0x40102030) Polarity-level, edge interrupt configuration set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_INTPOLSET >> 0) & 0xFFFFFFFF), ((GPIO2_INTPOLSET = (GPIO2_INTPOLSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO2_INTPOLCLR  -----------------------------
// SVD Line: 972

unsigned int GPIO2_INTPOLCLR __AT (0x40102034);



// -----------------------------  Register Item: GPIO2_INTPOLCLR  ---------------------------------
// SVD Line: 972

//  <item> SFDITEM_REG__GPIO2_INTPOLCLR
//    <name> INTPOLCLR </name>
//    <i> [Bits 31..0] RW (@ 0x40102034) Polarity-level, edge interrupt configuration clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_INTPOLCLR >> 0) & 0xFFFFFFFF), ((GPIO2_INTPOLCLR = (GPIO2_INTPOLCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO2_INTSTATUS  -----------------------------
// SVD Line: 977

unsigned int GPIO2_INTSTATUS __AT (0x40102038);



// -----------------------------  Register Item: GPIO2_INTSTATUS  ---------------------------------
// SVD Line: 977

//  <item> SFDITEM_REG__GPIO2_INTSTATUS
//    <name> INTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x40102038) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_INTSTATUS >> 0) & 0xFFFFFFFF), ((GPIO2_INTSTATUS = (GPIO2_INTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO2_INTCLEAR  -----------------------------
// SVD Line: 982

unsigned int GPIO2_INTCLEAR __AT (0x40102038);



// ------------------------------  Register Item: GPIO2_INTCLEAR  ---------------------------------
// SVD Line: 982

//  <item> SFDITEM_REG__GPIO2_INTCLEAR
//    <name> INTCLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x40102038) Interrupt CLEAR Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_INTCLEAR >> 0) & 0xFFFFFFFF), ((GPIO2_INTCLEAR = (GPIO2_INTCLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: GPIO2  -------------------------------------
// SVD Line: 1068

//  <view> GPIO2
//    <name> GPIO2 </name>
//    <item> SFDITEM_REG__GPIO2_DATA </item>
//    <item> SFDITEM_REG__GPIO2_DATAOUT </item>
//    <item> SFDITEM_REG__GPIO2_OUTENSET </item>
//    <item> SFDITEM_REG__GPIO2_OUTENCLR </item>
//    <item> SFDITEM_REG__GPIO2_ALTFUNCSET </item>
//    <item> SFDITEM_REG__GPIO2_ALTFUNCCLR </item>
//    <item> SFDITEM_REG__GPIO2_INTENSET </item>
//    <item> SFDITEM_REG__GPIO2_INTENCLR </item>
//    <item> SFDITEM_REG__GPIO2_INTTYPESET </item>
//    <item> SFDITEM_REG__GPIO2_INTTYPECLR </item>
//    <item> SFDITEM_REG__GPIO2_INTPOLSET </item>
//    <item> SFDITEM_REG__GPIO2_INTPOLCLR </item>
//    <item> SFDITEM_REG__GPIO2_INTSTATUS </item>
//    <item> SFDITEM_REG__GPIO2_INTCLEAR </item>
//  </view>
//  


// ----------------------------  Register Item Address: GPIO3_DATA  -------------------------------
// SVD Line: 917

unsigned int GPIO3_DATA __AT (0x40103000);



// --------------------------------  Register Item: GPIO3_DATA  -----------------------------------
// SVD Line: 917

//  <item> SFDITEM_REG__GPIO3_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x40103000) Data Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_DATA >> 0) & 0xFFFFFFFF), ((GPIO3_DATA = (GPIO3_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO3_DATAOUT  ------------------------------
// SVD Line: 922

unsigned int GPIO3_DATAOUT __AT (0x40103004);



// ------------------------------  Register Item: GPIO3_DATAOUT  ----------------------------------
// SVD Line: 922

//  <item> SFDITEM_REG__GPIO3_DATAOUT
//    <name> DATAOUT </name>
//    <i> [Bits 31..0] RW (@ 0x40103004) Data Output Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_DATAOUT >> 0) & 0xFFFFFFFF), ((GPIO3_DATAOUT = (GPIO3_DATAOUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO3_OUTENSET  -----------------------------
// SVD Line: 927

unsigned int GPIO3_OUTENSET __AT (0x40103010);



// ------------------------------  Register Item: GPIO3_OUTENSET  ---------------------------------
// SVD Line: 927

//  <item> SFDITEM_REG__GPIO3_OUTENSET
//    <name> OUTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x40103010) Ouptut enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_OUTENSET >> 0) & 0xFFFFFFFF), ((GPIO3_OUTENSET = (GPIO3_OUTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO3_OUTENCLR  -----------------------------
// SVD Line: 932

unsigned int GPIO3_OUTENCLR __AT (0x40103014);



// ------------------------------  Register Item: GPIO3_OUTENCLR  ---------------------------------
// SVD Line: 932

//  <item> SFDITEM_REG__GPIO3_OUTENCLR
//    <name> OUTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x40103014) Ouptut enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_OUTENCLR >> 0) & 0xFFFFFFFF), ((GPIO3_OUTENCLR = (GPIO3_OUTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO3_ALTFUNCSET  ----------------------------
// SVD Line: 937

unsigned int GPIO3_ALTFUNCSET __AT (0x40103018);



// -----------------------------  Register Item: GPIO3_ALTFUNCSET  --------------------------------
// SVD Line: 937

//  <item> SFDITEM_REG__GPIO3_ALTFUNCSET
//    <name> ALTFUNCSET </name>
//    <i> [Bits 31..0] RW (@ 0x40103018) Alternate function set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_ALTFUNCSET >> 0) & 0xFFFFFFFF), ((GPIO3_ALTFUNCSET = (GPIO3_ALTFUNCSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO3_ALTFUNCCLR  ----------------------------
// SVD Line: 942

unsigned int GPIO3_ALTFUNCCLR __AT (0x4010301C);



// -----------------------------  Register Item: GPIO3_ALTFUNCCLR  --------------------------------
// SVD Line: 942

//  <item> SFDITEM_REG__GPIO3_ALTFUNCCLR
//    <name> ALTFUNCCLR </name>
//    <i> [Bits 31..0] RW (@ 0x4010301C) Alternate function clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_ALTFUNCCLR >> 0) & 0xFFFFFFFF), ((GPIO3_ALTFUNCCLR = (GPIO3_ALTFUNCCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO3_INTENSET  -----------------------------
// SVD Line: 947

unsigned int GPIO3_INTENSET __AT (0x40103020);



// ------------------------------  Register Item: GPIO3_INTENSET  ---------------------------------
// SVD Line: 947

//  <item> SFDITEM_REG__GPIO3_INTENSET
//    <name> INTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x40103020) Interrupt enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_INTENSET >> 0) & 0xFFFFFFFF), ((GPIO3_INTENSET = (GPIO3_INTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO3_INTENCLR  -----------------------------
// SVD Line: 952

unsigned int GPIO3_INTENCLR __AT (0x40103024);



// ------------------------------  Register Item: GPIO3_INTENCLR  ---------------------------------
// SVD Line: 952

//  <item> SFDITEM_REG__GPIO3_INTENCLR
//    <name> INTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x40103024) Interrupt enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_INTENCLR >> 0) & 0xFFFFFFFF), ((GPIO3_INTENCLR = (GPIO3_INTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO3_INTTYPESET  ----------------------------
// SVD Line: 957

unsigned int GPIO3_INTTYPESET __AT (0x40103028);



// -----------------------------  Register Item: GPIO3_INTTYPESET  --------------------------------
// SVD Line: 957

//  <item> SFDITEM_REG__GPIO3_INTTYPESET
//    <name> INTTYPESET </name>
//    <i> [Bits 31..0] RW (@ 0x40103028) Interrupt type set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_INTTYPESET >> 0) & 0xFFFFFFFF), ((GPIO3_INTTYPESET = (GPIO3_INTTYPESET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO3_INTTYPECLR  ----------------------------
// SVD Line: 962

unsigned int GPIO3_INTTYPECLR __AT (0x4010302C);



// -----------------------------  Register Item: GPIO3_INTTYPECLR  --------------------------------
// SVD Line: 962

//  <item> SFDITEM_REG__GPIO3_INTTYPECLR
//    <name> INTTYPECLR </name>
//    <i> [Bits 31..0] RW (@ 0x4010302C) Interrupt type clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_INTTYPECLR >> 0) & 0xFFFFFFFF), ((GPIO3_INTTYPECLR = (GPIO3_INTTYPECLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO3_INTPOLSET  -----------------------------
// SVD Line: 967

unsigned int GPIO3_INTPOLSET __AT (0x40103030);



// -----------------------------  Register Item: GPIO3_INTPOLSET  ---------------------------------
// SVD Line: 967

//  <item> SFDITEM_REG__GPIO3_INTPOLSET
//    <name> INTPOLSET </name>
//    <i> [Bits 31..0] RW (@ 0x40103030) Polarity-level, edge interrupt configuration set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_INTPOLSET >> 0) & 0xFFFFFFFF), ((GPIO3_INTPOLSET = (GPIO3_INTPOLSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO3_INTPOLCLR  -----------------------------
// SVD Line: 972

unsigned int GPIO3_INTPOLCLR __AT (0x40103034);



// -----------------------------  Register Item: GPIO3_INTPOLCLR  ---------------------------------
// SVD Line: 972

//  <item> SFDITEM_REG__GPIO3_INTPOLCLR
//    <name> INTPOLCLR </name>
//    <i> [Bits 31..0] RW (@ 0x40103034) Polarity-level, edge interrupt configuration clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_INTPOLCLR >> 0) & 0xFFFFFFFF), ((GPIO3_INTPOLCLR = (GPIO3_INTPOLCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO3_INTSTATUS  -----------------------------
// SVD Line: 977

unsigned int GPIO3_INTSTATUS __AT (0x40103038);



// -----------------------------  Register Item: GPIO3_INTSTATUS  ---------------------------------
// SVD Line: 977

//  <item> SFDITEM_REG__GPIO3_INTSTATUS
//    <name> INTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x40103038) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_INTSTATUS >> 0) & 0xFFFFFFFF), ((GPIO3_INTSTATUS = (GPIO3_INTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO3_INTCLEAR  -----------------------------
// SVD Line: 982

unsigned int GPIO3_INTCLEAR __AT (0x40103038);



// ------------------------------  Register Item: GPIO3_INTCLEAR  ---------------------------------
// SVD Line: 982

//  <item> SFDITEM_REG__GPIO3_INTCLEAR
//    <name> INTCLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x40103038) Interrupt CLEAR Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_INTCLEAR >> 0) & 0xFFFFFFFF), ((GPIO3_INTCLEAR = (GPIO3_INTCLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: GPIO3  -------------------------------------
// SVD Line: 1143

//  <view> GPIO3
//    <name> GPIO3 </name>
//    <item> SFDITEM_REG__GPIO3_DATA </item>
//    <item> SFDITEM_REG__GPIO3_DATAOUT </item>
//    <item> SFDITEM_REG__GPIO3_OUTENSET </item>
//    <item> SFDITEM_REG__GPIO3_OUTENCLR </item>
//    <item> SFDITEM_REG__GPIO3_ALTFUNCSET </item>
//    <item> SFDITEM_REG__GPIO3_ALTFUNCCLR </item>
//    <item> SFDITEM_REG__GPIO3_INTENSET </item>
//    <item> SFDITEM_REG__GPIO3_INTENCLR </item>
//    <item> SFDITEM_REG__GPIO3_INTTYPESET </item>
//    <item> SFDITEM_REG__GPIO3_INTTYPECLR </item>
//    <item> SFDITEM_REG__GPIO3_INTPOLSET </item>
//    <item> SFDITEM_REG__GPIO3_INTPOLCLR </item>
//    <item> SFDITEM_REG__GPIO3_INTSTATUS </item>
//    <item> SFDITEM_REG__GPIO3_INTCLEAR </item>
//  </view>
//  


// --------------------------  Register Item Address: DMA0_IntStatus  -----------------------------
// SVD Line: 1197

unsigned int DMA0_IntStatus __AT (0x40110000);



// ------------------------------  Register Item: DMA0_IntStatus  ---------------------------------
// SVD Line: 1197

//  <item> SFDITEM_REG__DMA0_IntStatus
//    <name> IntStatus </name>
//    <i> [Bits 31..0] RW (@ 0x40110000) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_IntStatus >> 0) & 0xFFFFFFFF), ((DMA0_IntStatus = (DMA0_IntStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA0_IntTCStatus  ----------------------------
// SVD Line: 1202

unsigned int DMA0_IntTCStatus __AT (0x40110004);



// -----------------------------  Register Item: DMA0_IntTCStatus  --------------------------------
// SVD Line: 1202

//  <item> SFDITEM_REG__DMA0_IntTCStatus
//    <name> IntTCStatus </name>
//    <i> [Bits 31..0] RO (@ 0x40110004) Interrupt Terminal Count Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_IntTCStatus >> 0) & 0xFFFFFFFF), ((DMA0_IntTCStatus = (DMA0_IntTCStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA0_IntTCClear  -----------------------------
// SVD Line: 1207

unsigned int DMA0_IntTCClear __AT (0x40110008);



// -----------------------------  Register Item: DMA0_IntTCClear  ---------------------------------
// SVD Line: 1207

//  <item> SFDITEM_REG__DMA0_IntTCClear
//    <name> IntTCClear </name>
//    <i> [Bits 31..0] WO (@ 0x40110008) Interrupt Terminal Count Clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_IntTCClear >> 0) & 0xFFFFFFFF), ((DMA0_IntTCClear = (DMA0_IntTCClear & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA0_IntErrorStatus  ---------------------------
// SVD Line: 1212

unsigned int DMA0_IntErrorStatus __AT (0x4011000C);



// ---------------------------  Register Item: DMA0_IntErrorStatus  -------------------------------
// SVD Line: 1212

//  <item> SFDITEM_REG__DMA0_IntErrorStatus
//    <name> IntErrorStatus </name>
//    <i> [Bits 31..0] RO (@ 0x4011000C) Interrupt Error Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_IntErrorStatus >> 0) & 0xFFFFFFFF), ((DMA0_IntErrorStatus = (DMA0_IntErrorStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA0_IntErrClr  -----------------------------
// SVD Line: 1217

unsigned int DMA0_IntErrClr __AT (0x40110010);



// ------------------------------  Register Item: DMA0_IntErrClr  ---------------------------------
// SVD Line: 1217

//  <item> SFDITEM_REG__DMA0_IntErrClr
//    <name> IntErrClr </name>
//    <i> [Bits 31..0] WO (@ 0x40110010) Interrupt Error Clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_IntErrClr >> 0) & 0xFFFFFFFF), ((DMA0_IntErrClr = (DMA0_IntErrClr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA0_RawIntTCStatus  ---------------------------
// SVD Line: 1222

unsigned int DMA0_RawIntTCStatus __AT (0x40110014);



// ---------------------------  Register Item: DMA0_RawIntTCStatus  -------------------------------
// SVD Line: 1222

//  <item> SFDITEM_REG__DMA0_RawIntTCStatus
//    <name> RawIntTCStatus </name>
//    <i> [Bits 31..0] RO (@ 0x40110014) Raw Interrupt Terminal Count Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_RawIntTCStatus >> 0) & 0xFFFFFFFF), ((DMA0_RawIntTCStatus = (DMA0_RawIntTCStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA0_RawIntErrorStatus  -------------------------
// SVD Line: 1227

unsigned int DMA0_RawIntErrorStatus __AT (0x40110018);



// --------------------------  Register Item: DMA0_RawIntErrorStatus  -----------------------------
// SVD Line: 1227

//  <item> SFDITEM_REG__DMA0_RawIntErrorStatus
//    <name> RawIntErrorStatus </name>
//    <i> [Bits 31..0] RO (@ 0x40110018) Raw Error Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_RawIntErrorStatus >> 0) & 0xFFFFFFFF), ((DMA0_RawIntErrorStatus = (DMA0_RawIntErrorStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA0_EnbldChns  -----------------------------
// SVD Line: 1232

unsigned int DMA0_EnbldChns __AT (0x4011001C);



// ------------------------------  Register Item: DMA0_EnbldChns  ---------------------------------
// SVD Line: 1232

//  <item> SFDITEM_REG__DMA0_EnbldChns
//    <name> EnbldChns </name>
//    <i> [Bits 31..0] RO (@ 0x4011001C) Enabled Channel Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_EnbldChns >> 0) & 0xFFFFFFFF), ((DMA0_EnbldChns = (DMA0_EnbldChns & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA0_SoftBReq  ------------------------------
// SVD Line: 1237

unsigned int DMA0_SoftBReq __AT (0x40110020);



// ------------------------------  Register Item: DMA0_SoftBReq  ----------------------------------
// SVD Line: 1237

//  <item> SFDITEM_REG__DMA0_SoftBReq
//    <name> SoftBReq </name>
//    <i> [Bits 31..0] RW (@ 0x40110020) Software Burst Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SoftBReq >> 0) & 0xFFFFFFFF), ((DMA0_SoftBReq = (DMA0_SoftBReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA0_SoftSReq  ------------------------------
// SVD Line: 1242

unsigned int DMA0_SoftSReq __AT (0x40110024);



// ------------------------------  Register Item: DMA0_SoftSReq  ----------------------------------
// SVD Line: 1242

//  <item> SFDITEM_REG__DMA0_SoftSReq
//    <name> SoftSReq </name>
//    <i> [Bits 31..0] RW (@ 0x40110024) Software Single Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SoftSReq >> 0) & 0xFFFFFFFF), ((DMA0_SoftSReq = (DMA0_SoftSReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA0_SoftLBReq  -----------------------------
// SVD Line: 1247

unsigned int DMA0_SoftLBReq __AT (0x40110028);



// ------------------------------  Register Item: DMA0_SoftLBReq  ---------------------------------
// SVD Line: 1247

//  <item> SFDITEM_REG__DMA0_SoftLBReq
//    <name> SoftLBReq </name>
//    <i> [Bits 31..0] RW (@ 0x40110028) Software Last Burst Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SoftLBReq >> 0) & 0xFFFFFFFF), ((DMA0_SoftLBReq = (DMA0_SoftLBReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA0_SoftLSReq  -----------------------------
// SVD Line: 1252

unsigned int DMA0_SoftLSReq __AT (0x4011002C);



// ------------------------------  Register Item: DMA0_SoftLSReq  ---------------------------------
// SVD Line: 1252

//  <item> SFDITEM_REG__DMA0_SoftLSReq
//    <name> SoftLSReq </name>
//    <i> [Bits 31..0] RW (@ 0x4011002C) Software Last Single Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SoftLSReq >> 0) & 0xFFFFFFFF), ((DMA0_SoftLSReq = (DMA0_SoftLSReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA0_Configuration  ---------------------------
// SVD Line: 1257

unsigned int DMA0_Configuration __AT (0x40110030);



// ----------------------------  Register Item: DMA0_Configuration  -------------------------------
// SVD Line: 1257

//  <item> SFDITEM_REG__DMA0_Configuration
//    <name> Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x40110030) Configuration Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_Configuration >> 0) & 0xFFFFFFFF), ((DMA0_Configuration = (DMA0_Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA0_Sync  --------------------------------
// SVD Line: 1262

unsigned int DMA0_Sync __AT (0x40110034);



// --------------------------------  Register Item: DMA0_Sync  ------------------------------------
// SVD Line: 1262

//  <item> SFDITEM_REG__DMA0_Sync
//    <name> Sync </name>
//    <i> [Bits 31..0] RW (@ 0x40110034) Synchronization Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_Sync >> 0) & 0xFFFFFFFF), ((DMA0_Sync = (DMA0_Sync & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA0_C0SrcAddr  -----------------------------
// SVD Line: 1267

unsigned int DMA0_C0SrcAddr __AT (0x40110100);



// ------------------------------  Register Item: DMA0_C0SrcAddr  ---------------------------------
// SVD Line: 1267

//  <item> SFDITEM_REG__DMA0_C0SrcAddr
//    <name> C0SrcAddr </name>
//    <i> [Bits 31..0] RW (@ 0x40110100) Channel Source Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_C0SrcAddr >> 0) & 0xFFFFFFFF), ((DMA0_C0SrcAddr = (DMA0_C0SrcAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA0_C0DestAddr  -----------------------------
// SVD Line: 1272

unsigned int DMA0_C0DestAddr __AT (0x40110104);



// -----------------------------  Register Item: DMA0_C0DestAddr  ---------------------------------
// SVD Line: 1272

//  <item> SFDITEM_REG__DMA0_C0DestAddr
//    <name> C0DestAddr </name>
//    <i> [Bits 31..0] RW (@ 0x40110104) Channel Destination Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_C0DestAddr >> 0) & 0xFFFFFFFF), ((DMA0_C0DestAddr = (DMA0_C0DestAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA0_C0LLI  -------------------------------
// SVD Line: 1277

unsigned int DMA0_C0LLI __AT (0x40110108);



// --------------------------------  Register Item: DMA0_C0LLI  -----------------------------------
// SVD Line: 1277

//  <item> SFDITEM_REG__DMA0_C0LLI
//    <name> C0LLI </name>
//    <i> [Bits 31..0] RW (@ 0x40110108) Channel Linked List Item Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_C0LLI >> 0) & 0xFFFFFFFF), ((DMA0_C0LLI = (DMA0_C0LLI & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA0_C0Control  -----------------------------
// SVD Line: 1282

unsigned int DMA0_C0Control __AT (0x4011010C);



// ------------------------------  Register Item: DMA0_C0Control  ---------------------------------
// SVD Line: 1282

//  <item> SFDITEM_REG__DMA0_C0Control
//    <name> C0Control </name>
//    <i> [Bits 31..0] RW (@ 0x4011010C) Channel Control Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_C0Control >> 0) & 0xFFFFFFFF), ((DMA0_C0Control = (DMA0_C0Control & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA0_C0Configuration  --------------------------
// SVD Line: 1287

unsigned int DMA0_C0Configuration __AT (0x40110110);



// ---------------------------  Register Item: DMA0_C0Configuration  ------------------------------
// SVD Line: 1287

//  <item> SFDITEM_REG__DMA0_C0Configuration
//    <name> C0Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x40110110) Channel Configuration Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_C0Configuration >> 0) & 0xFFFFFFFF), ((DMA0_C0Configuration = (DMA0_C0Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA0_C1SrcAddr  -----------------------------
// SVD Line: 1292

unsigned int DMA0_C1SrcAddr __AT (0x40110120);



// ------------------------------  Register Item: DMA0_C1SrcAddr  ---------------------------------
// SVD Line: 1292

//  <item> SFDITEM_REG__DMA0_C1SrcAddr
//    <name> C1SrcAddr </name>
//    <i> [Bits 31..0] RW (@ 0x40110120) Channel Source Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_C1SrcAddr >> 0) & 0xFFFFFFFF), ((DMA0_C1SrcAddr = (DMA0_C1SrcAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA0_C1DestAddr  -----------------------------
// SVD Line: 1297

unsigned int DMA0_C1DestAddr __AT (0x40110124);



// -----------------------------  Register Item: DMA0_C1DestAddr  ---------------------------------
// SVD Line: 1297

//  <item> SFDITEM_REG__DMA0_C1DestAddr
//    <name> C1DestAddr </name>
//    <i> [Bits 31..0] RW (@ 0x40110124) Channel Destination Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_C1DestAddr >> 0) & 0xFFFFFFFF), ((DMA0_C1DestAddr = (DMA0_C1DestAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA0_C1LLI  -------------------------------
// SVD Line: 1302

unsigned int DMA0_C1LLI __AT (0x40110128);



// --------------------------------  Register Item: DMA0_C1LLI  -----------------------------------
// SVD Line: 1302

//  <item> SFDITEM_REG__DMA0_C1LLI
//    <name> C1LLI </name>
//    <i> [Bits 31..0] RW (@ 0x40110128) Channel Linked List Item Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_C1LLI >> 0) & 0xFFFFFFFF), ((DMA0_C1LLI = (DMA0_C1LLI & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA0_C1Control  -----------------------------
// SVD Line: 1307

unsigned int DMA0_C1Control __AT (0x4011012C);



// ------------------------------  Register Item: DMA0_C1Control  ---------------------------------
// SVD Line: 1307

//  <item> SFDITEM_REG__DMA0_C1Control
//    <name> C1Control </name>
//    <i> [Bits 31..0] RW (@ 0x4011012C) Channel Control Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_C1Control >> 0) & 0xFFFFFFFF), ((DMA0_C1Control = (DMA0_C1Control & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA0_C1Configuration  --------------------------
// SVD Line: 1312

unsigned int DMA0_C1Configuration __AT (0x40110130);



// ---------------------------  Register Item: DMA0_C1Configuration  ------------------------------
// SVD Line: 1312

//  <item> SFDITEM_REG__DMA0_C1Configuration
//    <name> C1Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x40110130) Channel Configuration Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_C1Configuration >> 0) & 0xFFFFFFFF), ((DMA0_C1Configuration = (DMA0_C1Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA0_ITCR  --------------------------------
// SVD Line: 1317

unsigned int DMA0_ITCR __AT (0x40110500);



// --------------------------------  Register Item: DMA0_ITCR  ------------------------------------
// SVD Line: 1317

//  <item> SFDITEM_REG__DMA0_ITCR
//    <name> ITCR </name>
//    <i> [Bits 31..0] RW (@ 0x40110500) Test Control Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_ITCR >> 0) & 0xFFFFFFFF), ((DMA0_ITCR = (DMA0_ITCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA0_ITOP1  -------------------------------
// SVD Line: 1322

unsigned int DMA0_ITOP1 __AT (0x40110504);



// --------------------------------  Register Item: DMA0_ITOP1  -----------------------------------
// SVD Line: 1322

//  <item> SFDITEM_REG__DMA0_ITOP1
//    <name> ITOP1 </name>
//    <i> [Bits 31..0] RW (@ 0x40110504) Integration Test Output Register 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_ITOP1 >> 0) & 0xFFFFFFFF), ((DMA0_ITOP1 = (DMA0_ITOP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA0_ITOP2  -------------------------------
// SVD Line: 1327

unsigned int DMA0_ITOP2 __AT (0x40110508);



// --------------------------------  Register Item: DMA0_ITOP2  -----------------------------------
// SVD Line: 1327

//  <item> SFDITEM_REG__DMA0_ITOP2
//    <name> ITOP2 </name>
//    <i> [Bits 31..0] RW (@ 0x40110508) Integration Test Output Register 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_ITOP2 >> 0) & 0xFFFFFFFF), ((DMA0_ITOP2 = (DMA0_ITOP2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA0_ITOP3  -------------------------------
// SVD Line: 1332

unsigned int DMA0_ITOP3 __AT (0x4011050C);



// --------------------------------  Register Item: DMA0_ITOP3  -----------------------------------
// SVD Line: 1332

//  <item> SFDITEM_REG__DMA0_ITOP3
//    <name> ITOP3 </name>
//    <i> [Bits 31..0] RW (@ 0x4011050C) Integration Test Output Register 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_ITOP3 >> 0) & 0xFFFFFFFF), ((DMA0_ITOP3 = (DMA0_ITOP3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: DMA0  -------------------------------------
// SVD Line: 1171

//  <view> DMA0
//    <name> DMA0 </name>
//    <item> SFDITEM_REG__DMA0_IntStatus </item>
//    <item> SFDITEM_REG__DMA0_IntTCStatus </item>
//    <item> SFDITEM_REG__DMA0_IntTCClear </item>
//    <item> SFDITEM_REG__DMA0_IntErrorStatus </item>
//    <item> SFDITEM_REG__DMA0_IntErrClr </item>
//    <item> SFDITEM_REG__DMA0_RawIntTCStatus </item>
//    <item> SFDITEM_REG__DMA0_RawIntErrorStatus </item>
//    <item> SFDITEM_REG__DMA0_EnbldChns </item>
//    <item> SFDITEM_REG__DMA0_SoftBReq </item>
//    <item> SFDITEM_REG__DMA0_SoftSReq </item>
//    <item> SFDITEM_REG__DMA0_SoftLBReq </item>
//    <item> SFDITEM_REG__DMA0_SoftLSReq </item>
//    <item> SFDITEM_REG__DMA0_Configuration </item>
//    <item> SFDITEM_REG__DMA0_Sync </item>
//    <item> SFDITEM_REG__DMA0_C0SrcAddr </item>
//    <item> SFDITEM_REG__DMA0_C0DestAddr </item>
//    <item> SFDITEM_REG__DMA0_C0LLI </item>
//    <item> SFDITEM_REG__DMA0_C0Control </item>
//    <item> SFDITEM_REG__DMA0_C0Configuration </item>
//    <item> SFDITEM_REG__DMA0_C1SrcAddr </item>
//    <item> SFDITEM_REG__DMA0_C1DestAddr </item>
//    <item> SFDITEM_REG__DMA0_C1LLI </item>
//    <item> SFDITEM_REG__DMA0_C1Control </item>
//    <item> SFDITEM_REG__DMA0_C1Configuration </item>
//    <item> SFDITEM_REG__DMA0_ITCR </item>
//    <item> SFDITEM_REG__DMA0_ITOP1 </item>
//    <item> SFDITEM_REG__DMA0_ITOP2 </item>
//    <item> SFDITEM_REG__DMA0_ITOP3 </item>
//  </view>
//  


// --------------------------  Register Item Address: DMA1_IntStatus  -----------------------------
// SVD Line: 1197

unsigned int DMA1_IntStatus __AT (0x40111000);



// ------------------------------  Register Item: DMA1_IntStatus  ---------------------------------
// SVD Line: 1197

//  <item> SFDITEM_REG__DMA1_IntStatus
//    <name> IntStatus </name>
//    <i> [Bits 31..0] RW (@ 0x40111000) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_IntStatus >> 0) & 0xFFFFFFFF), ((DMA1_IntStatus = (DMA1_IntStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA1_IntTCStatus  ----------------------------
// SVD Line: 1202

unsigned int DMA1_IntTCStatus __AT (0x40111004);



// -----------------------------  Register Item: DMA1_IntTCStatus  --------------------------------
// SVD Line: 1202

//  <item> SFDITEM_REG__DMA1_IntTCStatus
//    <name> IntTCStatus </name>
//    <i> [Bits 31..0] RO (@ 0x40111004) Interrupt Terminal Count Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_IntTCStatus >> 0) & 0xFFFFFFFF), ((DMA1_IntTCStatus = (DMA1_IntTCStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA1_IntTCClear  -----------------------------
// SVD Line: 1207

unsigned int DMA1_IntTCClear __AT (0x40111008);



// -----------------------------  Register Item: DMA1_IntTCClear  ---------------------------------
// SVD Line: 1207

//  <item> SFDITEM_REG__DMA1_IntTCClear
//    <name> IntTCClear </name>
//    <i> [Bits 31..0] WO (@ 0x40111008) Interrupt Terminal Count Clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_IntTCClear >> 0) & 0xFFFFFFFF), ((DMA1_IntTCClear = (DMA1_IntTCClear & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA1_IntErrorStatus  ---------------------------
// SVD Line: 1212

unsigned int DMA1_IntErrorStatus __AT (0x4011100C);



// ---------------------------  Register Item: DMA1_IntErrorStatus  -------------------------------
// SVD Line: 1212

//  <item> SFDITEM_REG__DMA1_IntErrorStatus
//    <name> IntErrorStatus </name>
//    <i> [Bits 31..0] RO (@ 0x4011100C) Interrupt Error Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_IntErrorStatus >> 0) & 0xFFFFFFFF), ((DMA1_IntErrorStatus = (DMA1_IntErrorStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA1_IntErrClr  -----------------------------
// SVD Line: 1217

unsigned int DMA1_IntErrClr __AT (0x40111010);



// ------------------------------  Register Item: DMA1_IntErrClr  ---------------------------------
// SVD Line: 1217

//  <item> SFDITEM_REG__DMA1_IntErrClr
//    <name> IntErrClr </name>
//    <i> [Bits 31..0] WO (@ 0x40111010) Interrupt Error Clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_IntErrClr >> 0) & 0xFFFFFFFF), ((DMA1_IntErrClr = (DMA1_IntErrClr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA1_RawIntTCStatus  ---------------------------
// SVD Line: 1222

unsigned int DMA1_RawIntTCStatus __AT (0x40111014);



// ---------------------------  Register Item: DMA1_RawIntTCStatus  -------------------------------
// SVD Line: 1222

//  <item> SFDITEM_REG__DMA1_RawIntTCStatus
//    <name> RawIntTCStatus </name>
//    <i> [Bits 31..0] RO (@ 0x40111014) Raw Interrupt Terminal Count Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_RawIntTCStatus >> 0) & 0xFFFFFFFF), ((DMA1_RawIntTCStatus = (DMA1_RawIntTCStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA1_RawIntErrorStatus  -------------------------
// SVD Line: 1227

unsigned int DMA1_RawIntErrorStatus __AT (0x40111018);



// --------------------------  Register Item: DMA1_RawIntErrorStatus  -----------------------------
// SVD Line: 1227

//  <item> SFDITEM_REG__DMA1_RawIntErrorStatus
//    <name> RawIntErrorStatus </name>
//    <i> [Bits 31..0] RO (@ 0x40111018) Raw Error Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_RawIntErrorStatus >> 0) & 0xFFFFFFFF), ((DMA1_RawIntErrorStatus = (DMA1_RawIntErrorStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA1_EnbldChns  -----------------------------
// SVD Line: 1232

unsigned int DMA1_EnbldChns __AT (0x4011101C);



// ------------------------------  Register Item: DMA1_EnbldChns  ---------------------------------
// SVD Line: 1232

//  <item> SFDITEM_REG__DMA1_EnbldChns
//    <name> EnbldChns </name>
//    <i> [Bits 31..0] RO (@ 0x4011101C) Enabled Channel Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_EnbldChns >> 0) & 0xFFFFFFFF), ((DMA1_EnbldChns = (DMA1_EnbldChns & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA1_SoftBReq  ------------------------------
// SVD Line: 1237

unsigned int DMA1_SoftBReq __AT (0x40111020);



// ------------------------------  Register Item: DMA1_SoftBReq  ----------------------------------
// SVD Line: 1237

//  <item> SFDITEM_REG__DMA1_SoftBReq
//    <name> SoftBReq </name>
//    <i> [Bits 31..0] RW (@ 0x40111020) Software Burst Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SoftBReq >> 0) & 0xFFFFFFFF), ((DMA1_SoftBReq = (DMA1_SoftBReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA1_SoftSReq  ------------------------------
// SVD Line: 1242

unsigned int DMA1_SoftSReq __AT (0x40111024);



// ------------------------------  Register Item: DMA1_SoftSReq  ----------------------------------
// SVD Line: 1242

//  <item> SFDITEM_REG__DMA1_SoftSReq
//    <name> SoftSReq </name>
//    <i> [Bits 31..0] RW (@ 0x40111024) Software Single Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SoftSReq >> 0) & 0xFFFFFFFF), ((DMA1_SoftSReq = (DMA1_SoftSReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA1_SoftLBReq  -----------------------------
// SVD Line: 1247

unsigned int DMA1_SoftLBReq __AT (0x40111028);



// ------------------------------  Register Item: DMA1_SoftLBReq  ---------------------------------
// SVD Line: 1247

//  <item> SFDITEM_REG__DMA1_SoftLBReq
//    <name> SoftLBReq </name>
//    <i> [Bits 31..0] RW (@ 0x40111028) Software Last Burst Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SoftLBReq >> 0) & 0xFFFFFFFF), ((DMA1_SoftLBReq = (DMA1_SoftLBReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA1_SoftLSReq  -----------------------------
// SVD Line: 1252

unsigned int DMA1_SoftLSReq __AT (0x4011102C);



// ------------------------------  Register Item: DMA1_SoftLSReq  ---------------------------------
// SVD Line: 1252

//  <item> SFDITEM_REG__DMA1_SoftLSReq
//    <name> SoftLSReq </name>
//    <i> [Bits 31..0] RW (@ 0x4011102C) Software Last Single Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SoftLSReq >> 0) & 0xFFFFFFFF), ((DMA1_SoftLSReq = (DMA1_SoftLSReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA1_Configuration  ---------------------------
// SVD Line: 1257

unsigned int DMA1_Configuration __AT (0x40111030);



// ----------------------------  Register Item: DMA1_Configuration  -------------------------------
// SVD Line: 1257

//  <item> SFDITEM_REG__DMA1_Configuration
//    <name> Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x40111030) Configuration Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_Configuration >> 0) & 0xFFFFFFFF), ((DMA1_Configuration = (DMA1_Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA1_Sync  --------------------------------
// SVD Line: 1262

unsigned int DMA1_Sync __AT (0x40111034);



// --------------------------------  Register Item: DMA1_Sync  ------------------------------------
// SVD Line: 1262

//  <item> SFDITEM_REG__DMA1_Sync
//    <name> Sync </name>
//    <i> [Bits 31..0] RW (@ 0x40111034) Synchronization Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_Sync >> 0) & 0xFFFFFFFF), ((DMA1_Sync = (DMA1_Sync & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA1_C0SrcAddr  -----------------------------
// SVD Line: 1267

unsigned int DMA1_C0SrcAddr __AT (0x40111100);



// ------------------------------  Register Item: DMA1_C0SrcAddr  ---------------------------------
// SVD Line: 1267

//  <item> SFDITEM_REG__DMA1_C0SrcAddr
//    <name> C0SrcAddr </name>
//    <i> [Bits 31..0] RW (@ 0x40111100) Channel Source Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_C0SrcAddr >> 0) & 0xFFFFFFFF), ((DMA1_C0SrcAddr = (DMA1_C0SrcAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA1_C0DestAddr  -----------------------------
// SVD Line: 1272

unsigned int DMA1_C0DestAddr __AT (0x40111104);



// -----------------------------  Register Item: DMA1_C0DestAddr  ---------------------------------
// SVD Line: 1272

//  <item> SFDITEM_REG__DMA1_C0DestAddr
//    <name> C0DestAddr </name>
//    <i> [Bits 31..0] RW (@ 0x40111104) Channel Destination Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_C0DestAddr >> 0) & 0xFFFFFFFF), ((DMA1_C0DestAddr = (DMA1_C0DestAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA1_C0LLI  -------------------------------
// SVD Line: 1277

unsigned int DMA1_C0LLI __AT (0x40111108);



// --------------------------------  Register Item: DMA1_C0LLI  -----------------------------------
// SVD Line: 1277

//  <item> SFDITEM_REG__DMA1_C0LLI
//    <name> C0LLI </name>
//    <i> [Bits 31..0] RW (@ 0x40111108) Channel Linked List Item Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_C0LLI >> 0) & 0xFFFFFFFF), ((DMA1_C0LLI = (DMA1_C0LLI & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA1_C0Control  -----------------------------
// SVD Line: 1282

unsigned int DMA1_C0Control __AT (0x4011110C);



// ------------------------------  Register Item: DMA1_C0Control  ---------------------------------
// SVD Line: 1282

//  <item> SFDITEM_REG__DMA1_C0Control
//    <name> C0Control </name>
//    <i> [Bits 31..0] RW (@ 0x4011110C) Channel Control Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_C0Control >> 0) & 0xFFFFFFFF), ((DMA1_C0Control = (DMA1_C0Control & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA1_C0Configuration  --------------------------
// SVD Line: 1287

unsigned int DMA1_C0Configuration __AT (0x40111110);



// ---------------------------  Register Item: DMA1_C0Configuration  ------------------------------
// SVD Line: 1287

//  <item> SFDITEM_REG__DMA1_C0Configuration
//    <name> C0Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x40111110) Channel Configuration Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_C0Configuration >> 0) & 0xFFFFFFFF), ((DMA1_C0Configuration = (DMA1_C0Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA1_C1SrcAddr  -----------------------------
// SVD Line: 1292

unsigned int DMA1_C1SrcAddr __AT (0x40111120);



// ------------------------------  Register Item: DMA1_C1SrcAddr  ---------------------------------
// SVD Line: 1292

//  <item> SFDITEM_REG__DMA1_C1SrcAddr
//    <name> C1SrcAddr </name>
//    <i> [Bits 31..0] RW (@ 0x40111120) Channel Source Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_C1SrcAddr >> 0) & 0xFFFFFFFF), ((DMA1_C1SrcAddr = (DMA1_C1SrcAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA1_C1DestAddr  -----------------------------
// SVD Line: 1297

unsigned int DMA1_C1DestAddr __AT (0x40111124);



// -----------------------------  Register Item: DMA1_C1DestAddr  ---------------------------------
// SVD Line: 1297

//  <item> SFDITEM_REG__DMA1_C1DestAddr
//    <name> C1DestAddr </name>
//    <i> [Bits 31..0] RW (@ 0x40111124) Channel Destination Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_C1DestAddr >> 0) & 0xFFFFFFFF), ((DMA1_C1DestAddr = (DMA1_C1DestAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA1_C1LLI  -------------------------------
// SVD Line: 1302

unsigned int DMA1_C1LLI __AT (0x40111128);



// --------------------------------  Register Item: DMA1_C1LLI  -----------------------------------
// SVD Line: 1302

//  <item> SFDITEM_REG__DMA1_C1LLI
//    <name> C1LLI </name>
//    <i> [Bits 31..0] RW (@ 0x40111128) Channel Linked List Item Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_C1LLI >> 0) & 0xFFFFFFFF), ((DMA1_C1LLI = (DMA1_C1LLI & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA1_C1Control  -----------------------------
// SVD Line: 1307

unsigned int DMA1_C1Control __AT (0x4011112C);



// ------------------------------  Register Item: DMA1_C1Control  ---------------------------------
// SVD Line: 1307

//  <item> SFDITEM_REG__DMA1_C1Control
//    <name> C1Control </name>
//    <i> [Bits 31..0] RW (@ 0x4011112C) Channel Control Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_C1Control >> 0) & 0xFFFFFFFF), ((DMA1_C1Control = (DMA1_C1Control & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA1_C1Configuration  --------------------------
// SVD Line: 1312

unsigned int DMA1_C1Configuration __AT (0x40111130);



// ---------------------------  Register Item: DMA1_C1Configuration  ------------------------------
// SVD Line: 1312

//  <item> SFDITEM_REG__DMA1_C1Configuration
//    <name> C1Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x40111130) Channel Configuration Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_C1Configuration >> 0) & 0xFFFFFFFF), ((DMA1_C1Configuration = (DMA1_C1Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA1_ITCR  --------------------------------
// SVD Line: 1317

unsigned int DMA1_ITCR __AT (0x40111500);



// --------------------------------  Register Item: DMA1_ITCR  ------------------------------------
// SVD Line: 1317

//  <item> SFDITEM_REG__DMA1_ITCR
//    <name> ITCR </name>
//    <i> [Bits 31..0] RW (@ 0x40111500) Test Control Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_ITCR >> 0) & 0xFFFFFFFF), ((DMA1_ITCR = (DMA1_ITCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA1_ITOP1  -------------------------------
// SVD Line: 1322

unsigned int DMA1_ITOP1 __AT (0x40111504);



// --------------------------------  Register Item: DMA1_ITOP1  -----------------------------------
// SVD Line: 1322

//  <item> SFDITEM_REG__DMA1_ITOP1
//    <name> ITOP1 </name>
//    <i> [Bits 31..0] RW (@ 0x40111504) Integration Test Output Register 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_ITOP1 >> 0) & 0xFFFFFFFF), ((DMA1_ITOP1 = (DMA1_ITOP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA1_ITOP2  -------------------------------
// SVD Line: 1327

unsigned int DMA1_ITOP2 __AT (0x40111508);



// --------------------------------  Register Item: DMA1_ITOP2  -----------------------------------
// SVD Line: 1327

//  <item> SFDITEM_REG__DMA1_ITOP2
//    <name> ITOP2 </name>
//    <i> [Bits 31..0] RW (@ 0x40111508) Integration Test Output Register 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_ITOP2 >> 0) & 0xFFFFFFFF), ((DMA1_ITOP2 = (DMA1_ITOP2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA1_ITOP3  -------------------------------
// SVD Line: 1332

unsigned int DMA1_ITOP3 __AT (0x4011150C);



// --------------------------------  Register Item: DMA1_ITOP3  -----------------------------------
// SVD Line: 1332

//  <item> SFDITEM_REG__DMA1_ITOP3
//    <name> ITOP3 </name>
//    <i> [Bits 31..0] RW (@ 0x4011150C) Integration Test Output Register 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_ITOP3 >> 0) & 0xFFFFFFFF), ((DMA1_ITOP3 = (DMA1_ITOP3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: DMA1  -------------------------------------
// SVD Line: 1342

//  <view> DMA1
//    <name> DMA1 </name>
//    <item> SFDITEM_REG__DMA1_IntStatus </item>
//    <item> SFDITEM_REG__DMA1_IntTCStatus </item>
//    <item> SFDITEM_REG__DMA1_IntTCClear </item>
//    <item> SFDITEM_REG__DMA1_IntErrorStatus </item>
//    <item> SFDITEM_REG__DMA1_IntErrClr </item>
//    <item> SFDITEM_REG__DMA1_RawIntTCStatus </item>
//    <item> SFDITEM_REG__DMA1_RawIntErrorStatus </item>
//    <item> SFDITEM_REG__DMA1_EnbldChns </item>
//    <item> SFDITEM_REG__DMA1_SoftBReq </item>
//    <item> SFDITEM_REG__DMA1_SoftSReq </item>
//    <item> SFDITEM_REG__DMA1_SoftLBReq </item>
//    <item> SFDITEM_REG__DMA1_SoftLSReq </item>
//    <item> SFDITEM_REG__DMA1_Configuration </item>
//    <item> SFDITEM_REG__DMA1_Sync </item>
//    <item> SFDITEM_REG__DMA1_C0SrcAddr </item>
//    <item> SFDITEM_REG__DMA1_C0DestAddr </item>
//    <item> SFDITEM_REG__DMA1_C0LLI </item>
//    <item> SFDITEM_REG__DMA1_C0Control </item>
//    <item> SFDITEM_REG__DMA1_C0Configuration </item>
//    <item> SFDITEM_REG__DMA1_C1SrcAddr </item>
//    <item> SFDITEM_REG__DMA1_C1DestAddr </item>
//    <item> SFDITEM_REG__DMA1_C1LLI </item>
//    <item> SFDITEM_REG__DMA1_C1Control </item>
//    <item> SFDITEM_REG__DMA1_C1Configuration </item>
//    <item> SFDITEM_REG__DMA1_ITCR </item>
//    <item> SFDITEM_REG__DMA1_ITOP1 </item>
//    <item> SFDITEM_REG__DMA1_ITOP2 </item>
//    <item> SFDITEM_REG__DMA1_ITOP3 </item>
//  </view>
//  


// --------------------------  Register Item Address: DMA2_IntStatus  -----------------------------
// SVD Line: 1197

unsigned int DMA2_IntStatus __AT (0x40112000);



// ------------------------------  Register Item: DMA2_IntStatus  ---------------------------------
// SVD Line: 1197

//  <item> SFDITEM_REG__DMA2_IntStatus
//    <name> IntStatus </name>
//    <i> [Bits 31..0] RW (@ 0x40112000) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_IntStatus >> 0) & 0xFFFFFFFF), ((DMA2_IntStatus = (DMA2_IntStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA2_IntTCStatus  ----------------------------
// SVD Line: 1202

unsigned int DMA2_IntTCStatus __AT (0x40112004);



// -----------------------------  Register Item: DMA2_IntTCStatus  --------------------------------
// SVD Line: 1202

//  <item> SFDITEM_REG__DMA2_IntTCStatus
//    <name> IntTCStatus </name>
//    <i> [Bits 31..0] RO (@ 0x40112004) Interrupt Terminal Count Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_IntTCStatus >> 0) & 0xFFFFFFFF), ((DMA2_IntTCStatus = (DMA2_IntTCStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA2_IntTCClear  -----------------------------
// SVD Line: 1207

unsigned int DMA2_IntTCClear __AT (0x40112008);



// -----------------------------  Register Item: DMA2_IntTCClear  ---------------------------------
// SVD Line: 1207

//  <item> SFDITEM_REG__DMA2_IntTCClear
//    <name> IntTCClear </name>
//    <i> [Bits 31..0] WO (@ 0x40112008) Interrupt Terminal Count Clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_IntTCClear >> 0) & 0xFFFFFFFF), ((DMA2_IntTCClear = (DMA2_IntTCClear & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA2_IntErrorStatus  ---------------------------
// SVD Line: 1212

unsigned int DMA2_IntErrorStatus __AT (0x4011200C);



// ---------------------------  Register Item: DMA2_IntErrorStatus  -------------------------------
// SVD Line: 1212

//  <item> SFDITEM_REG__DMA2_IntErrorStatus
//    <name> IntErrorStatus </name>
//    <i> [Bits 31..0] RO (@ 0x4011200C) Interrupt Error Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_IntErrorStatus >> 0) & 0xFFFFFFFF), ((DMA2_IntErrorStatus = (DMA2_IntErrorStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA2_IntErrClr  -----------------------------
// SVD Line: 1217

unsigned int DMA2_IntErrClr __AT (0x40112010);



// ------------------------------  Register Item: DMA2_IntErrClr  ---------------------------------
// SVD Line: 1217

//  <item> SFDITEM_REG__DMA2_IntErrClr
//    <name> IntErrClr </name>
//    <i> [Bits 31..0] WO (@ 0x40112010) Interrupt Error Clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_IntErrClr >> 0) & 0xFFFFFFFF), ((DMA2_IntErrClr = (DMA2_IntErrClr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA2_RawIntTCStatus  ---------------------------
// SVD Line: 1222

unsigned int DMA2_RawIntTCStatus __AT (0x40112014);



// ---------------------------  Register Item: DMA2_RawIntTCStatus  -------------------------------
// SVD Line: 1222

//  <item> SFDITEM_REG__DMA2_RawIntTCStatus
//    <name> RawIntTCStatus </name>
//    <i> [Bits 31..0] RO (@ 0x40112014) Raw Interrupt Terminal Count Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_RawIntTCStatus >> 0) & 0xFFFFFFFF), ((DMA2_RawIntTCStatus = (DMA2_RawIntTCStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA2_RawIntErrorStatus  -------------------------
// SVD Line: 1227

unsigned int DMA2_RawIntErrorStatus __AT (0x40112018);



// --------------------------  Register Item: DMA2_RawIntErrorStatus  -----------------------------
// SVD Line: 1227

//  <item> SFDITEM_REG__DMA2_RawIntErrorStatus
//    <name> RawIntErrorStatus </name>
//    <i> [Bits 31..0] RO (@ 0x40112018) Raw Error Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_RawIntErrorStatus >> 0) & 0xFFFFFFFF), ((DMA2_RawIntErrorStatus = (DMA2_RawIntErrorStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA2_EnbldChns  -----------------------------
// SVD Line: 1232

unsigned int DMA2_EnbldChns __AT (0x4011201C);



// ------------------------------  Register Item: DMA2_EnbldChns  ---------------------------------
// SVD Line: 1232

//  <item> SFDITEM_REG__DMA2_EnbldChns
//    <name> EnbldChns </name>
//    <i> [Bits 31..0] RO (@ 0x4011201C) Enabled Channel Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_EnbldChns >> 0) & 0xFFFFFFFF), ((DMA2_EnbldChns = (DMA2_EnbldChns & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA2_SoftBReq  ------------------------------
// SVD Line: 1237

unsigned int DMA2_SoftBReq __AT (0x40112020);



// ------------------------------  Register Item: DMA2_SoftBReq  ----------------------------------
// SVD Line: 1237

//  <item> SFDITEM_REG__DMA2_SoftBReq
//    <name> SoftBReq </name>
//    <i> [Bits 31..0] RW (@ 0x40112020) Software Burst Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SoftBReq >> 0) & 0xFFFFFFFF), ((DMA2_SoftBReq = (DMA2_SoftBReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA2_SoftSReq  ------------------------------
// SVD Line: 1242

unsigned int DMA2_SoftSReq __AT (0x40112024);



// ------------------------------  Register Item: DMA2_SoftSReq  ----------------------------------
// SVD Line: 1242

//  <item> SFDITEM_REG__DMA2_SoftSReq
//    <name> SoftSReq </name>
//    <i> [Bits 31..0] RW (@ 0x40112024) Software Single Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SoftSReq >> 0) & 0xFFFFFFFF), ((DMA2_SoftSReq = (DMA2_SoftSReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA2_SoftLBReq  -----------------------------
// SVD Line: 1247

unsigned int DMA2_SoftLBReq __AT (0x40112028);



// ------------------------------  Register Item: DMA2_SoftLBReq  ---------------------------------
// SVD Line: 1247

//  <item> SFDITEM_REG__DMA2_SoftLBReq
//    <name> SoftLBReq </name>
//    <i> [Bits 31..0] RW (@ 0x40112028) Software Last Burst Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SoftLBReq >> 0) & 0xFFFFFFFF), ((DMA2_SoftLBReq = (DMA2_SoftLBReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA2_SoftLSReq  -----------------------------
// SVD Line: 1252

unsigned int DMA2_SoftLSReq __AT (0x4011202C);



// ------------------------------  Register Item: DMA2_SoftLSReq  ---------------------------------
// SVD Line: 1252

//  <item> SFDITEM_REG__DMA2_SoftLSReq
//    <name> SoftLSReq </name>
//    <i> [Bits 31..0] RW (@ 0x4011202C) Software Last Single Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SoftLSReq >> 0) & 0xFFFFFFFF), ((DMA2_SoftLSReq = (DMA2_SoftLSReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA2_Configuration  ---------------------------
// SVD Line: 1257

unsigned int DMA2_Configuration __AT (0x40112030);



// ----------------------------  Register Item: DMA2_Configuration  -------------------------------
// SVD Line: 1257

//  <item> SFDITEM_REG__DMA2_Configuration
//    <name> Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x40112030) Configuration Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_Configuration >> 0) & 0xFFFFFFFF), ((DMA2_Configuration = (DMA2_Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA2_Sync  --------------------------------
// SVD Line: 1262

unsigned int DMA2_Sync __AT (0x40112034);



// --------------------------------  Register Item: DMA2_Sync  ------------------------------------
// SVD Line: 1262

//  <item> SFDITEM_REG__DMA2_Sync
//    <name> Sync </name>
//    <i> [Bits 31..0] RW (@ 0x40112034) Synchronization Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_Sync >> 0) & 0xFFFFFFFF), ((DMA2_Sync = (DMA2_Sync & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA2_C0SrcAddr  -----------------------------
// SVD Line: 1267

unsigned int DMA2_C0SrcAddr __AT (0x40112100);



// ------------------------------  Register Item: DMA2_C0SrcAddr  ---------------------------------
// SVD Line: 1267

//  <item> SFDITEM_REG__DMA2_C0SrcAddr
//    <name> C0SrcAddr </name>
//    <i> [Bits 31..0] RW (@ 0x40112100) Channel Source Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_C0SrcAddr >> 0) & 0xFFFFFFFF), ((DMA2_C0SrcAddr = (DMA2_C0SrcAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA2_C0DestAddr  -----------------------------
// SVD Line: 1272

unsigned int DMA2_C0DestAddr __AT (0x40112104);



// -----------------------------  Register Item: DMA2_C0DestAddr  ---------------------------------
// SVD Line: 1272

//  <item> SFDITEM_REG__DMA2_C0DestAddr
//    <name> C0DestAddr </name>
//    <i> [Bits 31..0] RW (@ 0x40112104) Channel Destination Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_C0DestAddr >> 0) & 0xFFFFFFFF), ((DMA2_C0DestAddr = (DMA2_C0DestAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA2_C0LLI  -------------------------------
// SVD Line: 1277

unsigned int DMA2_C0LLI __AT (0x40112108);



// --------------------------------  Register Item: DMA2_C0LLI  -----------------------------------
// SVD Line: 1277

//  <item> SFDITEM_REG__DMA2_C0LLI
//    <name> C0LLI </name>
//    <i> [Bits 31..0] RW (@ 0x40112108) Channel Linked List Item Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_C0LLI >> 0) & 0xFFFFFFFF), ((DMA2_C0LLI = (DMA2_C0LLI & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA2_C0Control  -----------------------------
// SVD Line: 1282

unsigned int DMA2_C0Control __AT (0x4011210C);



// ------------------------------  Register Item: DMA2_C0Control  ---------------------------------
// SVD Line: 1282

//  <item> SFDITEM_REG__DMA2_C0Control
//    <name> C0Control </name>
//    <i> [Bits 31..0] RW (@ 0x4011210C) Channel Control Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_C0Control >> 0) & 0xFFFFFFFF), ((DMA2_C0Control = (DMA2_C0Control & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA2_C0Configuration  --------------------------
// SVD Line: 1287

unsigned int DMA2_C0Configuration __AT (0x40112110);



// ---------------------------  Register Item: DMA2_C0Configuration  ------------------------------
// SVD Line: 1287

//  <item> SFDITEM_REG__DMA2_C0Configuration
//    <name> C0Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x40112110) Channel Configuration Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_C0Configuration >> 0) & 0xFFFFFFFF), ((DMA2_C0Configuration = (DMA2_C0Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA2_C1SrcAddr  -----------------------------
// SVD Line: 1292

unsigned int DMA2_C1SrcAddr __AT (0x40112120);



// ------------------------------  Register Item: DMA2_C1SrcAddr  ---------------------------------
// SVD Line: 1292

//  <item> SFDITEM_REG__DMA2_C1SrcAddr
//    <name> C1SrcAddr </name>
//    <i> [Bits 31..0] RW (@ 0x40112120) Channel Source Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_C1SrcAddr >> 0) & 0xFFFFFFFF), ((DMA2_C1SrcAddr = (DMA2_C1SrcAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA2_C1DestAddr  -----------------------------
// SVD Line: 1297

unsigned int DMA2_C1DestAddr __AT (0x40112124);



// -----------------------------  Register Item: DMA2_C1DestAddr  ---------------------------------
// SVD Line: 1297

//  <item> SFDITEM_REG__DMA2_C1DestAddr
//    <name> C1DestAddr </name>
//    <i> [Bits 31..0] RW (@ 0x40112124) Channel Destination Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_C1DestAddr >> 0) & 0xFFFFFFFF), ((DMA2_C1DestAddr = (DMA2_C1DestAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA2_C1LLI  -------------------------------
// SVD Line: 1302

unsigned int DMA2_C1LLI __AT (0x40112128);



// --------------------------------  Register Item: DMA2_C1LLI  -----------------------------------
// SVD Line: 1302

//  <item> SFDITEM_REG__DMA2_C1LLI
//    <name> C1LLI </name>
//    <i> [Bits 31..0] RW (@ 0x40112128) Channel Linked List Item Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_C1LLI >> 0) & 0xFFFFFFFF), ((DMA2_C1LLI = (DMA2_C1LLI & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA2_C1Control  -----------------------------
// SVD Line: 1307

unsigned int DMA2_C1Control __AT (0x4011212C);



// ------------------------------  Register Item: DMA2_C1Control  ---------------------------------
// SVD Line: 1307

//  <item> SFDITEM_REG__DMA2_C1Control
//    <name> C1Control </name>
//    <i> [Bits 31..0] RW (@ 0x4011212C) Channel Control Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_C1Control >> 0) & 0xFFFFFFFF), ((DMA2_C1Control = (DMA2_C1Control & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA2_C1Configuration  --------------------------
// SVD Line: 1312

unsigned int DMA2_C1Configuration __AT (0x40112130);



// ---------------------------  Register Item: DMA2_C1Configuration  ------------------------------
// SVD Line: 1312

//  <item> SFDITEM_REG__DMA2_C1Configuration
//    <name> C1Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x40112130) Channel Configuration Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_C1Configuration >> 0) & 0xFFFFFFFF), ((DMA2_C1Configuration = (DMA2_C1Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA2_ITCR  --------------------------------
// SVD Line: 1317

unsigned int DMA2_ITCR __AT (0x40112500);



// --------------------------------  Register Item: DMA2_ITCR  ------------------------------------
// SVD Line: 1317

//  <item> SFDITEM_REG__DMA2_ITCR
//    <name> ITCR </name>
//    <i> [Bits 31..0] RW (@ 0x40112500) Test Control Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_ITCR >> 0) & 0xFFFFFFFF), ((DMA2_ITCR = (DMA2_ITCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA2_ITOP1  -------------------------------
// SVD Line: 1322

unsigned int DMA2_ITOP1 __AT (0x40112504);



// --------------------------------  Register Item: DMA2_ITOP1  -----------------------------------
// SVD Line: 1322

//  <item> SFDITEM_REG__DMA2_ITOP1
//    <name> ITOP1 </name>
//    <i> [Bits 31..0] RW (@ 0x40112504) Integration Test Output Register 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_ITOP1 >> 0) & 0xFFFFFFFF), ((DMA2_ITOP1 = (DMA2_ITOP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA2_ITOP2  -------------------------------
// SVD Line: 1327

unsigned int DMA2_ITOP2 __AT (0x40112508);



// --------------------------------  Register Item: DMA2_ITOP2  -----------------------------------
// SVD Line: 1327

//  <item> SFDITEM_REG__DMA2_ITOP2
//    <name> ITOP2 </name>
//    <i> [Bits 31..0] RW (@ 0x40112508) Integration Test Output Register 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_ITOP2 >> 0) & 0xFFFFFFFF), ((DMA2_ITOP2 = (DMA2_ITOP2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA2_ITOP3  -------------------------------
// SVD Line: 1332

unsigned int DMA2_ITOP3 __AT (0x4011250C);



// --------------------------------  Register Item: DMA2_ITOP3  -----------------------------------
// SVD Line: 1332

//  <item> SFDITEM_REG__DMA2_ITOP3
//    <name> ITOP3 </name>
//    <i> [Bits 31..0] RW (@ 0x4011250C) Integration Test Output Register 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_ITOP3 >> 0) & 0xFFFFFFFF), ((DMA2_ITOP3 = (DMA2_ITOP3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: DMA2  -------------------------------------
// SVD Line: 1363

//  <view> DMA2
//    <name> DMA2 </name>
//    <item> SFDITEM_REG__DMA2_IntStatus </item>
//    <item> SFDITEM_REG__DMA2_IntTCStatus </item>
//    <item> SFDITEM_REG__DMA2_IntTCClear </item>
//    <item> SFDITEM_REG__DMA2_IntErrorStatus </item>
//    <item> SFDITEM_REG__DMA2_IntErrClr </item>
//    <item> SFDITEM_REG__DMA2_RawIntTCStatus </item>
//    <item> SFDITEM_REG__DMA2_RawIntErrorStatus </item>
//    <item> SFDITEM_REG__DMA2_EnbldChns </item>
//    <item> SFDITEM_REG__DMA2_SoftBReq </item>
//    <item> SFDITEM_REG__DMA2_SoftSReq </item>
//    <item> SFDITEM_REG__DMA2_SoftLBReq </item>
//    <item> SFDITEM_REG__DMA2_SoftLSReq </item>
//    <item> SFDITEM_REG__DMA2_Configuration </item>
//    <item> SFDITEM_REG__DMA2_Sync </item>
//    <item> SFDITEM_REG__DMA2_C0SrcAddr </item>
//    <item> SFDITEM_REG__DMA2_C0DestAddr </item>
//    <item> SFDITEM_REG__DMA2_C0LLI </item>
//    <item> SFDITEM_REG__DMA2_C0Control </item>
//    <item> SFDITEM_REG__DMA2_C0Configuration </item>
//    <item> SFDITEM_REG__DMA2_C1SrcAddr </item>
//    <item> SFDITEM_REG__DMA2_C1DestAddr </item>
//    <item> SFDITEM_REG__DMA2_C1LLI </item>
//    <item> SFDITEM_REG__DMA2_C1Control </item>
//    <item> SFDITEM_REG__DMA2_C1Configuration </item>
//    <item> SFDITEM_REG__DMA2_ITCR </item>
//    <item> SFDITEM_REG__DMA2_ITOP1 </item>
//    <item> SFDITEM_REG__DMA2_ITOP2 </item>
//    <item> SFDITEM_REG__DMA2_ITOP3 </item>
//  </view>
//  


// --------------------------  Register Item Address: DMA3_IntStatus  -----------------------------
// SVD Line: 1197

unsigned int DMA3_IntStatus __AT (0x40113000);



// ------------------------------  Register Item: DMA3_IntStatus  ---------------------------------
// SVD Line: 1197

//  <item> SFDITEM_REG__DMA3_IntStatus
//    <name> IntStatus </name>
//    <i> [Bits 31..0] RW (@ 0x40113000) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_IntStatus >> 0) & 0xFFFFFFFF), ((DMA3_IntStatus = (DMA3_IntStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA3_IntTCStatus  ----------------------------
// SVD Line: 1202

unsigned int DMA3_IntTCStatus __AT (0x40113004);



// -----------------------------  Register Item: DMA3_IntTCStatus  --------------------------------
// SVD Line: 1202

//  <item> SFDITEM_REG__DMA3_IntTCStatus
//    <name> IntTCStatus </name>
//    <i> [Bits 31..0] RO (@ 0x40113004) Interrupt Terminal Count Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_IntTCStatus >> 0) & 0xFFFFFFFF), ((DMA3_IntTCStatus = (DMA3_IntTCStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA3_IntTCClear  -----------------------------
// SVD Line: 1207

unsigned int DMA3_IntTCClear __AT (0x40113008);



// -----------------------------  Register Item: DMA3_IntTCClear  ---------------------------------
// SVD Line: 1207

//  <item> SFDITEM_REG__DMA3_IntTCClear
//    <name> IntTCClear </name>
//    <i> [Bits 31..0] WO (@ 0x40113008) Interrupt Terminal Count Clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_IntTCClear >> 0) & 0xFFFFFFFF), ((DMA3_IntTCClear = (DMA3_IntTCClear & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA3_IntErrorStatus  ---------------------------
// SVD Line: 1212

unsigned int DMA3_IntErrorStatus __AT (0x4011300C);



// ---------------------------  Register Item: DMA3_IntErrorStatus  -------------------------------
// SVD Line: 1212

//  <item> SFDITEM_REG__DMA3_IntErrorStatus
//    <name> IntErrorStatus </name>
//    <i> [Bits 31..0] RO (@ 0x4011300C) Interrupt Error Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_IntErrorStatus >> 0) & 0xFFFFFFFF), ((DMA3_IntErrorStatus = (DMA3_IntErrorStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA3_IntErrClr  -----------------------------
// SVD Line: 1217

unsigned int DMA3_IntErrClr __AT (0x40113010);



// ------------------------------  Register Item: DMA3_IntErrClr  ---------------------------------
// SVD Line: 1217

//  <item> SFDITEM_REG__DMA3_IntErrClr
//    <name> IntErrClr </name>
//    <i> [Bits 31..0] WO (@ 0x40113010) Interrupt Error Clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_IntErrClr >> 0) & 0xFFFFFFFF), ((DMA3_IntErrClr = (DMA3_IntErrClr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA3_RawIntTCStatus  ---------------------------
// SVD Line: 1222

unsigned int DMA3_RawIntTCStatus __AT (0x40113014);



// ---------------------------  Register Item: DMA3_RawIntTCStatus  -------------------------------
// SVD Line: 1222

//  <item> SFDITEM_REG__DMA3_RawIntTCStatus
//    <name> RawIntTCStatus </name>
//    <i> [Bits 31..0] RO (@ 0x40113014) Raw Interrupt Terminal Count Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_RawIntTCStatus >> 0) & 0xFFFFFFFF), ((DMA3_RawIntTCStatus = (DMA3_RawIntTCStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA3_RawIntErrorStatus  -------------------------
// SVD Line: 1227

unsigned int DMA3_RawIntErrorStatus __AT (0x40113018);



// --------------------------  Register Item: DMA3_RawIntErrorStatus  -----------------------------
// SVD Line: 1227

//  <item> SFDITEM_REG__DMA3_RawIntErrorStatus
//    <name> RawIntErrorStatus </name>
//    <i> [Bits 31..0] RO (@ 0x40113018) Raw Error Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_RawIntErrorStatus >> 0) & 0xFFFFFFFF), ((DMA3_RawIntErrorStatus = (DMA3_RawIntErrorStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA3_EnbldChns  -----------------------------
// SVD Line: 1232

unsigned int DMA3_EnbldChns __AT (0x4011301C);



// ------------------------------  Register Item: DMA3_EnbldChns  ---------------------------------
// SVD Line: 1232

//  <item> SFDITEM_REG__DMA3_EnbldChns
//    <name> EnbldChns </name>
//    <i> [Bits 31..0] RO (@ 0x4011301C) Enabled Channel Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_EnbldChns >> 0) & 0xFFFFFFFF), ((DMA3_EnbldChns = (DMA3_EnbldChns & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA3_SoftBReq  ------------------------------
// SVD Line: 1237

unsigned int DMA3_SoftBReq __AT (0x40113020);



// ------------------------------  Register Item: DMA3_SoftBReq  ----------------------------------
// SVD Line: 1237

//  <item> SFDITEM_REG__DMA3_SoftBReq
//    <name> SoftBReq </name>
//    <i> [Bits 31..0] RW (@ 0x40113020) Software Burst Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SoftBReq >> 0) & 0xFFFFFFFF), ((DMA3_SoftBReq = (DMA3_SoftBReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA3_SoftSReq  ------------------------------
// SVD Line: 1242

unsigned int DMA3_SoftSReq __AT (0x40113024);



// ------------------------------  Register Item: DMA3_SoftSReq  ----------------------------------
// SVD Line: 1242

//  <item> SFDITEM_REG__DMA3_SoftSReq
//    <name> SoftSReq </name>
//    <i> [Bits 31..0] RW (@ 0x40113024) Software Single Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SoftSReq >> 0) & 0xFFFFFFFF), ((DMA3_SoftSReq = (DMA3_SoftSReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA3_SoftLBReq  -----------------------------
// SVD Line: 1247

unsigned int DMA3_SoftLBReq __AT (0x40113028);



// ------------------------------  Register Item: DMA3_SoftLBReq  ---------------------------------
// SVD Line: 1247

//  <item> SFDITEM_REG__DMA3_SoftLBReq
//    <name> SoftLBReq </name>
//    <i> [Bits 31..0] RW (@ 0x40113028) Software Last Burst Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SoftLBReq >> 0) & 0xFFFFFFFF), ((DMA3_SoftLBReq = (DMA3_SoftLBReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA3_SoftLSReq  -----------------------------
// SVD Line: 1252

unsigned int DMA3_SoftLSReq __AT (0x4011302C);



// ------------------------------  Register Item: DMA3_SoftLSReq  ---------------------------------
// SVD Line: 1252

//  <item> SFDITEM_REG__DMA3_SoftLSReq
//    <name> SoftLSReq </name>
//    <i> [Bits 31..0] RW (@ 0x4011302C) Software Last Single Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SoftLSReq >> 0) & 0xFFFFFFFF), ((DMA3_SoftLSReq = (DMA3_SoftLSReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA3_Configuration  ---------------------------
// SVD Line: 1257

unsigned int DMA3_Configuration __AT (0x40113030);



// ----------------------------  Register Item: DMA3_Configuration  -------------------------------
// SVD Line: 1257

//  <item> SFDITEM_REG__DMA3_Configuration
//    <name> Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x40113030) Configuration Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_Configuration >> 0) & 0xFFFFFFFF), ((DMA3_Configuration = (DMA3_Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA3_Sync  --------------------------------
// SVD Line: 1262

unsigned int DMA3_Sync __AT (0x40113034);



// --------------------------------  Register Item: DMA3_Sync  ------------------------------------
// SVD Line: 1262

//  <item> SFDITEM_REG__DMA3_Sync
//    <name> Sync </name>
//    <i> [Bits 31..0] RW (@ 0x40113034) Synchronization Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_Sync >> 0) & 0xFFFFFFFF), ((DMA3_Sync = (DMA3_Sync & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA3_C0SrcAddr  -----------------------------
// SVD Line: 1267

unsigned int DMA3_C0SrcAddr __AT (0x40113100);



// ------------------------------  Register Item: DMA3_C0SrcAddr  ---------------------------------
// SVD Line: 1267

//  <item> SFDITEM_REG__DMA3_C0SrcAddr
//    <name> C0SrcAddr </name>
//    <i> [Bits 31..0] RW (@ 0x40113100) Channel Source Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_C0SrcAddr >> 0) & 0xFFFFFFFF), ((DMA3_C0SrcAddr = (DMA3_C0SrcAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA3_C0DestAddr  -----------------------------
// SVD Line: 1272

unsigned int DMA3_C0DestAddr __AT (0x40113104);



// -----------------------------  Register Item: DMA3_C0DestAddr  ---------------------------------
// SVD Line: 1272

//  <item> SFDITEM_REG__DMA3_C0DestAddr
//    <name> C0DestAddr </name>
//    <i> [Bits 31..0] RW (@ 0x40113104) Channel Destination Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_C0DestAddr >> 0) & 0xFFFFFFFF), ((DMA3_C0DestAddr = (DMA3_C0DestAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA3_C0LLI  -------------------------------
// SVD Line: 1277

unsigned int DMA3_C0LLI __AT (0x40113108);



// --------------------------------  Register Item: DMA3_C0LLI  -----------------------------------
// SVD Line: 1277

//  <item> SFDITEM_REG__DMA3_C0LLI
//    <name> C0LLI </name>
//    <i> [Bits 31..0] RW (@ 0x40113108) Channel Linked List Item Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_C0LLI >> 0) & 0xFFFFFFFF), ((DMA3_C0LLI = (DMA3_C0LLI & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA3_C0Control  -----------------------------
// SVD Line: 1282

unsigned int DMA3_C0Control __AT (0x4011310C);



// ------------------------------  Register Item: DMA3_C0Control  ---------------------------------
// SVD Line: 1282

//  <item> SFDITEM_REG__DMA3_C0Control
//    <name> C0Control </name>
//    <i> [Bits 31..0] RW (@ 0x4011310C) Channel Control Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_C0Control >> 0) & 0xFFFFFFFF), ((DMA3_C0Control = (DMA3_C0Control & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA3_C0Configuration  --------------------------
// SVD Line: 1287

unsigned int DMA3_C0Configuration __AT (0x40113110);



// ---------------------------  Register Item: DMA3_C0Configuration  ------------------------------
// SVD Line: 1287

//  <item> SFDITEM_REG__DMA3_C0Configuration
//    <name> C0Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x40113110) Channel Configuration Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_C0Configuration >> 0) & 0xFFFFFFFF), ((DMA3_C0Configuration = (DMA3_C0Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA3_C1SrcAddr  -----------------------------
// SVD Line: 1292

unsigned int DMA3_C1SrcAddr __AT (0x40113120);



// ------------------------------  Register Item: DMA3_C1SrcAddr  ---------------------------------
// SVD Line: 1292

//  <item> SFDITEM_REG__DMA3_C1SrcAddr
//    <name> C1SrcAddr </name>
//    <i> [Bits 31..0] RW (@ 0x40113120) Channel Source Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_C1SrcAddr >> 0) & 0xFFFFFFFF), ((DMA3_C1SrcAddr = (DMA3_C1SrcAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA3_C1DestAddr  -----------------------------
// SVD Line: 1297

unsigned int DMA3_C1DestAddr __AT (0x40113124);



// -----------------------------  Register Item: DMA3_C1DestAddr  ---------------------------------
// SVD Line: 1297

//  <item> SFDITEM_REG__DMA3_C1DestAddr
//    <name> C1DestAddr </name>
//    <i> [Bits 31..0] RW (@ 0x40113124) Channel Destination Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_C1DestAddr >> 0) & 0xFFFFFFFF), ((DMA3_C1DestAddr = (DMA3_C1DestAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA3_C1LLI  -------------------------------
// SVD Line: 1302

unsigned int DMA3_C1LLI __AT (0x40113128);



// --------------------------------  Register Item: DMA3_C1LLI  -----------------------------------
// SVD Line: 1302

//  <item> SFDITEM_REG__DMA3_C1LLI
//    <name> C1LLI </name>
//    <i> [Bits 31..0] RW (@ 0x40113128) Channel Linked List Item Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_C1LLI >> 0) & 0xFFFFFFFF), ((DMA3_C1LLI = (DMA3_C1LLI & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: DMA3_C1Control  -----------------------------
// SVD Line: 1307

unsigned int DMA3_C1Control __AT (0x4011312C);



// ------------------------------  Register Item: DMA3_C1Control  ---------------------------------
// SVD Line: 1307

//  <item> SFDITEM_REG__DMA3_C1Control
//    <name> C1Control </name>
//    <i> [Bits 31..0] RW (@ 0x4011312C) Channel Control Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_C1Control >> 0) & 0xFFFFFFFF), ((DMA3_C1Control = (DMA3_C1Control & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA3_C1Configuration  --------------------------
// SVD Line: 1312

unsigned int DMA3_C1Configuration __AT (0x40113130);



// ---------------------------  Register Item: DMA3_C1Configuration  ------------------------------
// SVD Line: 1312

//  <item> SFDITEM_REG__DMA3_C1Configuration
//    <name> C1Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x40113130) Channel Configuration Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_C1Configuration >> 0) & 0xFFFFFFFF), ((DMA3_C1Configuration = (DMA3_C1Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA3_ITCR  --------------------------------
// SVD Line: 1317

unsigned int DMA3_ITCR __AT (0x40113500);



// --------------------------------  Register Item: DMA3_ITCR  ------------------------------------
// SVD Line: 1317

//  <item> SFDITEM_REG__DMA3_ITCR
//    <name> ITCR </name>
//    <i> [Bits 31..0] RW (@ 0x40113500) Test Control Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_ITCR >> 0) & 0xFFFFFFFF), ((DMA3_ITCR = (DMA3_ITCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA3_ITOP1  -------------------------------
// SVD Line: 1322

unsigned int DMA3_ITOP1 __AT (0x40113504);



// --------------------------------  Register Item: DMA3_ITOP1  -----------------------------------
// SVD Line: 1322

//  <item> SFDITEM_REG__DMA3_ITOP1
//    <name> ITOP1 </name>
//    <i> [Bits 31..0] RW (@ 0x40113504) Integration Test Output Register 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_ITOP1 >> 0) & 0xFFFFFFFF), ((DMA3_ITOP1 = (DMA3_ITOP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA3_ITOP2  -------------------------------
// SVD Line: 1327

unsigned int DMA3_ITOP2 __AT (0x40113508);



// --------------------------------  Register Item: DMA3_ITOP2  -----------------------------------
// SVD Line: 1327

//  <item> SFDITEM_REG__DMA3_ITOP2
//    <name> ITOP2 </name>
//    <i> [Bits 31..0] RW (@ 0x40113508) Integration Test Output Register 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_ITOP2 >> 0) & 0xFFFFFFFF), ((DMA3_ITOP2 = (DMA3_ITOP2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA3_ITOP3  -------------------------------
// SVD Line: 1332

unsigned int DMA3_ITOP3 __AT (0x4011350C);



// --------------------------------  Register Item: DMA3_ITOP3  -----------------------------------
// SVD Line: 1332

//  <item> SFDITEM_REG__DMA3_ITOP3
//    <name> ITOP3 </name>
//    <i> [Bits 31..0] RW (@ 0x4011350C) Integration Test Output Register 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_ITOP3 >> 0) & 0xFFFFFFFF), ((DMA3_ITOP3 = (DMA3_ITOP3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: DMA3  -------------------------------------
// SVD Line: 1384

//  <view> DMA3
//    <name> DMA3 </name>
//    <item> SFDITEM_REG__DMA3_IntStatus </item>
//    <item> SFDITEM_REG__DMA3_IntTCStatus </item>
//    <item> SFDITEM_REG__DMA3_IntTCClear </item>
//    <item> SFDITEM_REG__DMA3_IntErrorStatus </item>
//    <item> SFDITEM_REG__DMA3_IntErrClr </item>
//    <item> SFDITEM_REG__DMA3_RawIntTCStatus </item>
//    <item> SFDITEM_REG__DMA3_RawIntErrorStatus </item>
//    <item> SFDITEM_REG__DMA3_EnbldChns </item>
//    <item> SFDITEM_REG__DMA3_SoftBReq </item>
//    <item> SFDITEM_REG__DMA3_SoftSReq </item>
//    <item> SFDITEM_REG__DMA3_SoftLBReq </item>
//    <item> SFDITEM_REG__DMA3_SoftLSReq </item>
//    <item> SFDITEM_REG__DMA3_Configuration </item>
//    <item> SFDITEM_REG__DMA3_Sync </item>
//    <item> SFDITEM_REG__DMA3_C0SrcAddr </item>
//    <item> SFDITEM_REG__DMA3_C0DestAddr </item>
//    <item> SFDITEM_REG__DMA3_C0LLI </item>
//    <item> SFDITEM_REG__DMA3_C0Control </item>
//    <item> SFDITEM_REG__DMA3_C0Configuration </item>
//    <item> SFDITEM_REG__DMA3_C1SrcAddr </item>
//    <item> SFDITEM_REG__DMA3_C1DestAddr </item>
//    <item> SFDITEM_REG__DMA3_C1LLI </item>
//    <item> SFDITEM_REG__DMA3_C1Control </item>
//    <item> SFDITEM_REG__DMA3_C1Configuration </item>
//    <item> SFDITEM_REG__DMA3_ITCR </item>
//    <item> SFDITEM_REG__DMA3_ITOP1 </item>
//    <item> SFDITEM_REG__DMA3_ITOP2 </item>
//    <item> SFDITEM_REG__DMA3_ITOP3 </item>
//  </view>
//  


// -----------------------------  Register Item Address: SSP0_CR0  --------------------------------
// SVD Line: 1424

unsigned int SSP0_CR0 __AT (0x40205000);



// --------------------------------  Field Item: SSP0_CR0_SCR  ------------------------------------
// SVD Line: 1429

//  <item> SFDITEM_FIELD__SSP0_CR0_SCR
//    <name> SCR </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40205000) Serial clock rate </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP0_CR0 >> 8) & 0xFF), ((SSP0_CR0 = (SSP0_CR0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SSP0_CR0_SPH  ------------------------------------
// SVD Line: 1433

//  <item> SFDITEM_FIELD__SSP0_CR0_SPH
//    <name> SPH </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40205000) SSPCLKOUT phase </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_CR0 ) </loc>
//      <o.7..7> SPH
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP0_CR0_SPO  ------------------------------------
// SVD Line: 1437

//  <item> SFDITEM_FIELD__SSP0_CR0_SPO
//    <name> SPO </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40205000) SSPCLKOUT polarity </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_CR0 ) </loc>
//      <o.6..6> SPO
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP0_CR0_FRF  ------------------------------------
// SVD Line: 1441

//  <item> SFDITEM_FIELD__SSP0_CR0_FRF
//    <name> FRF </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40205000) Frame format </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP0_CR0 >> 4) & 0x3), ((SSP0_CR0 = (SSP0_CR0 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SSP0_CR0_DSS  ------------------------------------
// SVD Line: 1445

//  <item> SFDITEM_FIELD__SSP0_CR0_DSS
//    <name> DSS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40205000) Data Size Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP0_CR0 >> 0) & 0xF), ((SSP0_CR0 = (SSP0_CR0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_CR0  ------------------------------------
// SVD Line: 1424

//  <rtree> SFDITEM_REG__SSP0_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40205000) Control register 0 </i>
//    <loc> ( (unsigned int)((SSP0_CR0 >> 0) & 0xFFFFFFFF), ((SSP0_CR0 = (SSP0_CR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_CR0_SCR </item>
//    <item> SFDITEM_FIELD__SSP0_CR0_SPH </item>
//    <item> SFDITEM_FIELD__SSP0_CR0_SPO </item>
//    <item> SFDITEM_FIELD__SSP0_CR0_FRF </item>
//    <item> SFDITEM_FIELD__SSP0_CR0_DSS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP0_CR1  --------------------------------
// SVD Line: 1451

unsigned int SSP0_CR1 __AT (0x40205004);



// --------------------------------  Field Item: SSP0_CR1_SOD  ------------------------------------
// SVD Line: 1456

//  <item> SFDITEM_FIELD__SSP0_CR1_SOD
//    <name> SOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40205004) Slave-mode output disable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_CR1 ) </loc>
//      <o.3..3> SOD
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP0_CR1_MS  ------------------------------------
// SVD Line: 1460

//  <item> SFDITEM_FIELD__SSP0_CR1_MS
//    <name> MS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40205004) Master or slave mode select </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_CR1 ) </loc>
//      <o.2..2> MS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP0_CR1_SSE  ------------------------------------
// SVD Line: 1464

//  <item> SFDITEM_FIELD__SSP0_CR1_SSE
//    <name> SSE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40205004) Synchronous serial port enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_CR1 ) </loc>
//      <o.1..1> SSE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP0_CR1_LBM  ------------------------------------
// SVD Line: 1468

//  <item> SFDITEM_FIELD__SSP0_CR1_LBM
//    <name> LBM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40205004) Loop back mode </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_CR1 ) </loc>
//      <o.0..0> LBM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_CR1  ------------------------------------
// SVD Line: 1451

//  <rtree> SFDITEM_REG__SSP0_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40205004) Control register 1 </i>
//    <loc> ( (unsigned int)((SSP0_CR1 >> 0) & 0xFFFFFFFF), ((SSP0_CR1 = (SSP0_CR1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_CR1_SOD </item>
//    <item> SFDITEM_FIELD__SSP0_CR1_MS </item>
//    <item> SFDITEM_FIELD__SSP0_CR1_SSE </item>
//    <item> SFDITEM_FIELD__SSP0_CR1_LBM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP0_DR  ---------------------------------
// SVD Line: 1474

unsigned int SSP0_DR __AT (0x40205008);



// --------------------------------  Field Item: SSP0_DR_Data  ------------------------------------
// SVD Line: 1479

//  <item> SFDITEM_FIELD__SSP0_DR_Data
//    <name> Data </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40205008) Transmit/Receive FIFO </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP0_DR >> 0) & 0xFFFF), ((SSP0_DR = (SSP0_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: SSP0_DR  ------------------------------------
// SVD Line: 1474

//  <rtree> SFDITEM_REG__SSP0_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40205008) Data register </i>
//    <loc> ( (unsigned int)((SSP0_DR >> 0) & 0xFFFFFFFF), ((SSP0_DR = (SSP0_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_DR_Data </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP0_SR  ---------------------------------
// SVD Line: 1485

unsigned int SSP0_SR __AT (0x4020500C);



// ---------------------------------  Field Item: SSP0_SR_BSY  ------------------------------------
// SVD Line: 1490

//  <item> SFDITEM_FIELD__SSP0_SR_BSY
//    <name> BSY </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4020500C) PrimeCell SSP busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_SR ) </loc>
//      <o.4..4> BSY
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP0_SR_RFF  ------------------------------------
// SVD Line: 1494

//  <item> SFDITEM_FIELD__SSP0_SR_RFF
//    <name> RFF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4020500C) Receive FIFO full </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_SR ) </loc>
//      <o.3..3> RFF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP0_SR_RNE  ------------------------------------
// SVD Line: 1498

//  <item> SFDITEM_FIELD__SSP0_SR_RNE
//    <name> RNE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4020500C) Receive FIFO not empty </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_SR ) </loc>
//      <o.2..2> RNE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP0_SR_TNF  ------------------------------------
// SVD Line: 1502

//  <item> SFDITEM_FIELD__SSP0_SR_TNF
//    <name> TNF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4020500C) Transmit FIFO not full </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_SR ) </loc>
//      <o.1..1> TNF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP0_SR_TFE  ------------------------------------
// SVD Line: 1506

//  <item> SFDITEM_FIELD__SSP0_SR_TFE
//    <name> TFE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4020500C) Transmit FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_SR ) </loc>
//      <o.0..0> TFE
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: SSP0_SR  ------------------------------------
// SVD Line: 1485

//  <rtree> SFDITEM_REG__SSP0_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4020500C) Status register </i>
//    <loc> ( (unsigned int)((SSP0_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP0_SR_BSY </item>
//    <item> SFDITEM_FIELD__SSP0_SR_RFF </item>
//    <item> SFDITEM_FIELD__SSP0_SR_RNE </item>
//    <item> SFDITEM_FIELD__SSP0_SR_TNF </item>
//    <item> SFDITEM_FIELD__SSP0_SR_TFE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP0_CPSR  --------------------------------
// SVD Line: 1512

unsigned int SSP0_CPSR __AT (0x40205010);



// ------------------------------  Field Item: SSP0_CPSR_CPSDVSR  ---------------------------------
// SVD Line: 1517

//  <item> SFDITEM_FIELD__SSP0_CPSR_CPSDVSR
//    <name> CPSDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40205010) Clock prescale divisor </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP0_CPSR >> 0) & 0xFF), ((SSP0_CPSR = (SSP0_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_CPSR  -----------------------------------
// SVD Line: 1512

//  <rtree> SFDITEM_REG__SSP0_CPSR
//    <name> CPSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40205010) Clock prescale register </i>
//    <loc> ( (unsigned int)((SSP0_CPSR >> 0) & 0xFFFFFFFF), ((SSP0_CPSR = (SSP0_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_CPSR_CPSDVSR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP0_IMSC  --------------------------------
// SVD Line: 1523

unsigned int SSP0_IMSC __AT (0x40205014);



// -------------------------------  Field Item: SSP0_IMSC_TXIM  -----------------------------------
// SVD Line: 1528

//  <item> SFDITEM_FIELD__SSP0_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40205014) Transmit FIFO interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_IMSC ) </loc>
//      <o.3..3> TXIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_IMSC_RXIM  -----------------------------------
// SVD Line: 1532

//  <item> SFDITEM_FIELD__SSP0_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40205014) Receive FIFO interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_IMSC ) </loc>
//      <o.2..2> RXIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_IMSC_RTIM  -----------------------------------
// SVD Line: 1536

//  <item> SFDITEM_FIELD__SSP0_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40205014) Receive timeout interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_IMSC ) </loc>
//      <o.1..1> RTIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_IMSC_RORIM  ----------------------------------
// SVD Line: 1540

//  <item> SFDITEM_FIELD__SSP0_IMSC_RORIM
//    <name> RORIM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40205014) Receive overrun interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_IMSC ) </loc>
//      <o.0..0> RORIM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_IMSC  -----------------------------------
// SVD Line: 1523

//  <rtree> SFDITEM_REG__SSP0_IMSC
//    <name> IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40205014) Interrupt mask set or clear register </i>
//    <loc> ( (unsigned int)((SSP0_IMSC >> 0) & 0xFFFFFFFF), ((SSP0_IMSC = (SSP0_IMSC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_IMSC_TXIM </item>
//    <item> SFDITEM_FIELD__SSP0_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__SSP0_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__SSP0_IMSC_RORIM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP0_RIS  --------------------------------
// SVD Line: 1546

unsigned int SSP0_RIS __AT (0x40205018);



// -------------------------------  Field Item: SSP0_RIS_TXRIS  -----------------------------------
// SVD Line: 1551

//  <item> SFDITEM_FIELD__SSP0_RIS_TXRIS
//    <name> TXRIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40205018) transmit FIFOraw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_RIS ) </loc>
//      <o.3..3> TXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_RIS_RXRIS  -----------------------------------
// SVD Line: 1555

//  <item> SFDITEM_FIELD__SSP0_RIS_RXRIS
//    <name> RXRIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40205018) receive FIFO raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_RIS ) </loc>
//      <o.2..2> RXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_RIS_RTRIS  -----------------------------------
// SVD Line: 1559

//  <item> SFDITEM_FIELD__SSP0_RIS_RTRIS
//    <name> RTRIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40205018) receive timeout raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_RIS ) </loc>
//      <o.1..1> RTRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_RIS_RORRIS  ----------------------------------
// SVD Line: 1563

//  <item> SFDITEM_FIELD__SSP0_RIS_RORRIS
//    <name> RORRIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40205018) receive over run raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_RIS ) </loc>
//      <o.0..0> RORRIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_RIS  ------------------------------------
// SVD Line: 1546

//  <rtree> SFDITEM_REG__SSP0_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40205018) Raw interrupt status register </i>
//    <loc> ( (unsigned int)((SSP0_RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP0_RIS_TXRIS </item>
//    <item> SFDITEM_FIELD__SSP0_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__SSP0_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__SSP0_RIS_RORRIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP0_MIS  --------------------------------
// SVD Line: 1569

unsigned int SSP0_MIS __AT (0x4020501C);



// -------------------------------  Field Item: SSP0_MIS_TXMIS  -----------------------------------
// SVD Line: 1574

//  <item> SFDITEM_FIELD__SSP0_MIS_TXMIS
//    <name> TXMIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4020501C) transmit FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_MIS ) </loc>
//      <o.3..3> TXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_MIS_RXMIS  -----------------------------------
// SVD Line: 1578

//  <item> SFDITEM_FIELD__SSP0_MIS_RXMIS
//    <name> RXMIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4020501C) receive FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_MIS ) </loc>
//      <o.2..2> RXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_MIS_RTMIS  -----------------------------------
// SVD Line: 1582

//  <item> SFDITEM_FIELD__SSP0_MIS_RTMIS
//    <name> RTMIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4020501C) receive timeout masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_MIS ) </loc>
//      <o.1..1> RTMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_MIS_RORMIS  ----------------------------------
// SVD Line: 1586

//  <item> SFDITEM_FIELD__SSP0_MIS_RORMIS
//    <name> RORMIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4020501C) receive over run masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_MIS ) </loc>
//      <o.0..0> RORMIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_MIS  ------------------------------------
// SVD Line: 1569

//  <rtree> SFDITEM_REG__SSP0_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4020501C) Masked interrupt status register </i>
//    <loc> ( (unsigned int)((SSP0_MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP0_MIS_TXMIS </item>
//    <item> SFDITEM_FIELD__SSP0_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__SSP0_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__SSP0_MIS_RORMIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP0_ICR  --------------------------------
// SVD Line: 1592

unsigned int SSP0_ICR __AT (0x40205020);



// --------------------------------  Field Item: SSP0_ICR_RTIC  -----------------------------------
// SVD Line: 1597

//  <item> SFDITEM_FIELD__SSP0_ICR_RTIC
//    <name> RTIC </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40205020) Clears the SSPRTINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ICR ) </loc>
//      <o.1..1> RTIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_ICR_RORIC  -----------------------------------
// SVD Line: 1601

//  <item> SFDITEM_FIELD__SSP0_ICR_RORIC
//    <name> RORIC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40205020) Clears the SSPRORINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ICR ) </loc>
//      <o.0..0> RORIC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_ICR  ------------------------------------
// SVD Line: 1592

//  <rtree> SFDITEM_REG__SSP0_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40205020) Interrupt clear register </i>
//    <loc> ( (unsigned int)((SSP0_ICR >> 0) & 0xFFFFFFFF), ((SSP0_ICR = (SSP0_ICR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_ICR_RTIC </item>
//    <item> SFDITEM_FIELD__SSP0_ICR_RORIC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP0_DMACR  -------------------------------
// SVD Line: 1607

unsigned int SSP0_DMACR __AT (0x40205024);



// ------------------------------  Field Item: SSP0_DMACR_TXDMAE  ---------------------------------
// SVD Line: 1612

//  <item> SFDITEM_FIELD__SSP0_DMACR_TXDMAE
//    <name> TXDMAE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40205024) Transmit DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_DMACR ) </loc>
//      <o.1..1> TXDMAE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP0_DMACR_RXDMAE  ---------------------------------
// SVD Line: 1616

//  <item> SFDITEM_FIELD__SSP0_DMACR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40205024) Receive DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_DMACR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SSP0_DMACR  -----------------------------------
// SVD Line: 1607

//  <rtree> SFDITEM_REG__SSP0_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40205024) DMA control register </i>
//    <loc> ( (unsigned int)((SSP0_DMACR >> 0) & 0xFFFFFFFF), ((SSP0_DMACR = (SSP0_DMACR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_DMACR_TXDMAE </item>
//    <item> SFDITEM_FIELD__SSP0_DMACR_RXDMAE </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SSP0  -------------------------------------
// SVD Line: 1406

//  <view> SSP0
//    <name> SSP0 </name>
//    <item> SFDITEM_REG__SSP0_CR0 </item>
//    <item> SFDITEM_REG__SSP0_CR1 </item>
//    <item> SFDITEM_REG__SSP0_DR </item>
//    <item> SFDITEM_REG__SSP0_SR </item>
//    <item> SFDITEM_REG__SSP0_CPSR </item>
//    <item> SFDITEM_REG__SSP0_IMSC </item>
//    <item> SFDITEM_REG__SSP0_RIS </item>
//    <item> SFDITEM_REG__SSP0_MIS </item>
//    <item> SFDITEM_REG__SSP0_ICR </item>
//    <item> SFDITEM_REG__SSP0_DMACR </item>
//  </view>
//  


// -----------------------------  Register Item Address: SSP1_CR0  --------------------------------
// SVD Line: 1424

unsigned int SSP1_CR0 __AT (0x40206000);



// --------------------------------  Field Item: SSP1_CR0_SCR  ------------------------------------
// SVD Line: 1429

//  <item> SFDITEM_FIELD__SSP1_CR0_SCR
//    <name> SCR </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40206000) Serial clock rate </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP1_CR0 >> 8) & 0xFF), ((SSP1_CR0 = (SSP1_CR0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SSP1_CR0_SPH  ------------------------------------
// SVD Line: 1433

//  <item> SFDITEM_FIELD__SSP1_CR0_SPH
//    <name> SPH </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40206000) SSPCLKOUT phase </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_CR0 ) </loc>
//      <o.7..7> SPH
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP1_CR0_SPO  ------------------------------------
// SVD Line: 1437

//  <item> SFDITEM_FIELD__SSP1_CR0_SPO
//    <name> SPO </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40206000) SSPCLKOUT polarity </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_CR0 ) </loc>
//      <o.6..6> SPO
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP1_CR0_FRF  ------------------------------------
// SVD Line: 1441

//  <item> SFDITEM_FIELD__SSP1_CR0_FRF
//    <name> FRF </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40206000) Frame format </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP1_CR0 >> 4) & 0x3), ((SSP1_CR0 = (SSP1_CR0 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SSP1_CR0_DSS  ------------------------------------
// SVD Line: 1445

//  <item> SFDITEM_FIELD__SSP1_CR0_DSS
//    <name> DSS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40206000) Data Size Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP1_CR0 >> 0) & 0xF), ((SSP1_CR0 = (SSP1_CR0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_CR0  ------------------------------------
// SVD Line: 1424

//  <rtree> SFDITEM_REG__SSP1_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40206000) Control register 0 </i>
//    <loc> ( (unsigned int)((SSP1_CR0 >> 0) & 0xFFFFFFFF), ((SSP1_CR0 = (SSP1_CR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_CR0_SCR </item>
//    <item> SFDITEM_FIELD__SSP1_CR0_SPH </item>
//    <item> SFDITEM_FIELD__SSP1_CR0_SPO </item>
//    <item> SFDITEM_FIELD__SSP1_CR0_FRF </item>
//    <item> SFDITEM_FIELD__SSP1_CR0_DSS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP1_CR1  --------------------------------
// SVD Line: 1451

unsigned int SSP1_CR1 __AT (0x40206004);



// --------------------------------  Field Item: SSP1_CR1_SOD  ------------------------------------
// SVD Line: 1456

//  <item> SFDITEM_FIELD__SSP1_CR1_SOD
//    <name> SOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40206004) Slave-mode output disable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_CR1 ) </loc>
//      <o.3..3> SOD
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP1_CR1_MS  ------------------------------------
// SVD Line: 1460

//  <item> SFDITEM_FIELD__SSP1_CR1_MS
//    <name> MS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40206004) Master or slave mode select </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_CR1 ) </loc>
//      <o.2..2> MS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP1_CR1_SSE  ------------------------------------
// SVD Line: 1464

//  <item> SFDITEM_FIELD__SSP1_CR1_SSE
//    <name> SSE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40206004) Synchronous serial port enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_CR1 ) </loc>
//      <o.1..1> SSE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP1_CR1_LBM  ------------------------------------
// SVD Line: 1468

//  <item> SFDITEM_FIELD__SSP1_CR1_LBM
//    <name> LBM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40206004) Loop back mode </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_CR1 ) </loc>
//      <o.0..0> LBM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_CR1  ------------------------------------
// SVD Line: 1451

//  <rtree> SFDITEM_REG__SSP1_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40206004) Control register 1 </i>
//    <loc> ( (unsigned int)((SSP1_CR1 >> 0) & 0xFFFFFFFF), ((SSP1_CR1 = (SSP1_CR1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_CR1_SOD </item>
//    <item> SFDITEM_FIELD__SSP1_CR1_MS </item>
//    <item> SFDITEM_FIELD__SSP1_CR1_SSE </item>
//    <item> SFDITEM_FIELD__SSP1_CR1_LBM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP1_DR  ---------------------------------
// SVD Line: 1474

unsigned int SSP1_DR __AT (0x40206008);



// --------------------------------  Field Item: SSP1_DR_Data  ------------------------------------
// SVD Line: 1479

//  <item> SFDITEM_FIELD__SSP1_DR_Data
//    <name> Data </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40206008) Transmit/Receive FIFO </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP1_DR >> 0) & 0xFFFF), ((SSP1_DR = (SSP1_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: SSP1_DR  ------------------------------------
// SVD Line: 1474

//  <rtree> SFDITEM_REG__SSP1_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40206008) Data register </i>
//    <loc> ( (unsigned int)((SSP1_DR >> 0) & 0xFFFFFFFF), ((SSP1_DR = (SSP1_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_DR_Data </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP1_SR  ---------------------------------
// SVD Line: 1485

unsigned int SSP1_SR __AT (0x4020600C);



// ---------------------------------  Field Item: SSP1_SR_BSY  ------------------------------------
// SVD Line: 1490

//  <item> SFDITEM_FIELD__SSP1_SR_BSY
//    <name> BSY </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4020600C) PrimeCell SSP busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_SR ) </loc>
//      <o.4..4> BSY
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP1_SR_RFF  ------------------------------------
// SVD Line: 1494

//  <item> SFDITEM_FIELD__SSP1_SR_RFF
//    <name> RFF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4020600C) Receive FIFO full </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_SR ) </loc>
//      <o.3..3> RFF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP1_SR_RNE  ------------------------------------
// SVD Line: 1498

//  <item> SFDITEM_FIELD__SSP1_SR_RNE
//    <name> RNE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4020600C) Receive FIFO not empty </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_SR ) </loc>
//      <o.2..2> RNE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP1_SR_TNF  ------------------------------------
// SVD Line: 1502

//  <item> SFDITEM_FIELD__SSP1_SR_TNF
//    <name> TNF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4020600C) Transmit FIFO not full </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_SR ) </loc>
//      <o.1..1> TNF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP1_SR_TFE  ------------------------------------
// SVD Line: 1506

//  <item> SFDITEM_FIELD__SSP1_SR_TFE
//    <name> TFE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4020600C) Transmit FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_SR ) </loc>
//      <o.0..0> TFE
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: SSP1_SR  ------------------------------------
// SVD Line: 1485

//  <rtree> SFDITEM_REG__SSP1_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4020600C) Status register </i>
//    <loc> ( (unsigned int)((SSP1_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP1_SR_BSY </item>
//    <item> SFDITEM_FIELD__SSP1_SR_RFF </item>
//    <item> SFDITEM_FIELD__SSP1_SR_RNE </item>
//    <item> SFDITEM_FIELD__SSP1_SR_TNF </item>
//    <item> SFDITEM_FIELD__SSP1_SR_TFE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP1_CPSR  --------------------------------
// SVD Line: 1512

unsigned int SSP1_CPSR __AT (0x40206010);



// ------------------------------  Field Item: SSP1_CPSR_CPSDVSR  ---------------------------------
// SVD Line: 1517

//  <item> SFDITEM_FIELD__SSP1_CPSR_CPSDVSR
//    <name> CPSDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40206010) Clock prescale divisor </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP1_CPSR >> 0) & 0xFF), ((SSP1_CPSR = (SSP1_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_CPSR  -----------------------------------
// SVD Line: 1512

//  <rtree> SFDITEM_REG__SSP1_CPSR
//    <name> CPSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40206010) Clock prescale register </i>
//    <loc> ( (unsigned int)((SSP1_CPSR >> 0) & 0xFFFFFFFF), ((SSP1_CPSR = (SSP1_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_CPSR_CPSDVSR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP1_IMSC  --------------------------------
// SVD Line: 1523

unsigned int SSP1_IMSC __AT (0x40206014);



// -------------------------------  Field Item: SSP1_IMSC_TXIM  -----------------------------------
// SVD Line: 1528

//  <item> SFDITEM_FIELD__SSP1_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40206014) Transmit FIFO interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_IMSC ) </loc>
//      <o.3..3> TXIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_IMSC_RXIM  -----------------------------------
// SVD Line: 1532

//  <item> SFDITEM_FIELD__SSP1_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40206014) Receive FIFO interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_IMSC ) </loc>
//      <o.2..2> RXIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_IMSC_RTIM  -----------------------------------
// SVD Line: 1536

//  <item> SFDITEM_FIELD__SSP1_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40206014) Receive timeout interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_IMSC ) </loc>
//      <o.1..1> RTIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_IMSC_RORIM  ----------------------------------
// SVD Line: 1540

//  <item> SFDITEM_FIELD__SSP1_IMSC_RORIM
//    <name> RORIM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40206014) Receive overrun interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_IMSC ) </loc>
//      <o.0..0> RORIM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_IMSC  -----------------------------------
// SVD Line: 1523

//  <rtree> SFDITEM_REG__SSP1_IMSC
//    <name> IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40206014) Interrupt mask set or clear register </i>
//    <loc> ( (unsigned int)((SSP1_IMSC >> 0) & 0xFFFFFFFF), ((SSP1_IMSC = (SSP1_IMSC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_IMSC_TXIM </item>
//    <item> SFDITEM_FIELD__SSP1_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__SSP1_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__SSP1_IMSC_RORIM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP1_RIS  --------------------------------
// SVD Line: 1546

unsigned int SSP1_RIS __AT (0x40206018);



// -------------------------------  Field Item: SSP1_RIS_TXRIS  -----------------------------------
// SVD Line: 1551

//  <item> SFDITEM_FIELD__SSP1_RIS_TXRIS
//    <name> TXRIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40206018) transmit FIFOraw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_RIS ) </loc>
//      <o.3..3> TXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_RIS_RXRIS  -----------------------------------
// SVD Line: 1555

//  <item> SFDITEM_FIELD__SSP1_RIS_RXRIS
//    <name> RXRIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40206018) receive FIFO raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_RIS ) </loc>
//      <o.2..2> RXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_RIS_RTRIS  -----------------------------------
// SVD Line: 1559

//  <item> SFDITEM_FIELD__SSP1_RIS_RTRIS
//    <name> RTRIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40206018) receive timeout raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_RIS ) </loc>
//      <o.1..1> RTRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_RIS_RORRIS  ----------------------------------
// SVD Line: 1563

//  <item> SFDITEM_FIELD__SSP1_RIS_RORRIS
//    <name> RORRIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40206018) receive over run raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_RIS ) </loc>
//      <o.0..0> RORRIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_RIS  ------------------------------------
// SVD Line: 1546

//  <rtree> SFDITEM_REG__SSP1_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40206018) Raw interrupt status register </i>
//    <loc> ( (unsigned int)((SSP1_RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP1_RIS_TXRIS </item>
//    <item> SFDITEM_FIELD__SSP1_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__SSP1_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__SSP1_RIS_RORRIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP1_MIS  --------------------------------
// SVD Line: 1569

unsigned int SSP1_MIS __AT (0x4020601C);



// -------------------------------  Field Item: SSP1_MIS_TXMIS  -----------------------------------
// SVD Line: 1574

//  <item> SFDITEM_FIELD__SSP1_MIS_TXMIS
//    <name> TXMIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4020601C) transmit FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_MIS ) </loc>
//      <o.3..3> TXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_MIS_RXMIS  -----------------------------------
// SVD Line: 1578

//  <item> SFDITEM_FIELD__SSP1_MIS_RXMIS
//    <name> RXMIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4020601C) receive FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_MIS ) </loc>
//      <o.2..2> RXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_MIS_RTMIS  -----------------------------------
// SVD Line: 1582

//  <item> SFDITEM_FIELD__SSP1_MIS_RTMIS
//    <name> RTMIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4020601C) receive timeout masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_MIS ) </loc>
//      <o.1..1> RTMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_MIS_RORMIS  ----------------------------------
// SVD Line: 1586

//  <item> SFDITEM_FIELD__SSP1_MIS_RORMIS
//    <name> RORMIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4020601C) receive over run masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_MIS ) </loc>
//      <o.0..0> RORMIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_MIS  ------------------------------------
// SVD Line: 1569

//  <rtree> SFDITEM_REG__SSP1_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4020601C) Masked interrupt status register </i>
//    <loc> ( (unsigned int)((SSP1_MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP1_MIS_TXMIS </item>
//    <item> SFDITEM_FIELD__SSP1_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__SSP1_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__SSP1_MIS_RORMIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP1_ICR  --------------------------------
// SVD Line: 1592

unsigned int SSP1_ICR __AT (0x40206020);



// --------------------------------  Field Item: SSP1_ICR_RTIC  -----------------------------------
// SVD Line: 1597

//  <item> SFDITEM_FIELD__SSP1_ICR_RTIC
//    <name> RTIC </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40206020) Clears the SSPRTINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ICR ) </loc>
//      <o.1..1> RTIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_ICR_RORIC  -----------------------------------
// SVD Line: 1601

//  <item> SFDITEM_FIELD__SSP1_ICR_RORIC
//    <name> RORIC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40206020) Clears the SSPRORINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ICR ) </loc>
//      <o.0..0> RORIC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_ICR  ------------------------------------
// SVD Line: 1592

//  <rtree> SFDITEM_REG__SSP1_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40206020) Interrupt clear register </i>
//    <loc> ( (unsigned int)((SSP1_ICR >> 0) & 0xFFFFFFFF), ((SSP1_ICR = (SSP1_ICR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_ICR_RTIC </item>
//    <item> SFDITEM_FIELD__SSP1_ICR_RORIC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP1_DMACR  -------------------------------
// SVD Line: 1607

unsigned int SSP1_DMACR __AT (0x40206024);



// ------------------------------  Field Item: SSP1_DMACR_TXDMAE  ---------------------------------
// SVD Line: 1612

//  <item> SFDITEM_FIELD__SSP1_DMACR_TXDMAE
//    <name> TXDMAE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40206024) Transmit DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_DMACR ) </loc>
//      <o.1..1> TXDMAE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP1_DMACR_RXDMAE  ---------------------------------
// SVD Line: 1616

//  <item> SFDITEM_FIELD__SSP1_DMACR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40206024) Receive DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_DMACR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SSP1_DMACR  -----------------------------------
// SVD Line: 1607

//  <rtree> SFDITEM_REG__SSP1_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40206024) DMA control register </i>
//    <loc> ( (unsigned int)((SSP1_DMACR >> 0) & 0xFFFFFFFF), ((SSP1_DMACR = (SSP1_DMACR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_DMACR_TXDMAE </item>
//    <item> SFDITEM_FIELD__SSP1_DMACR_RXDMAE </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SSP1  -------------------------------------
// SVD Line: 1626

//  <view> SSP1
//    <name> SSP1 </name>
//    <item> SFDITEM_REG__SSP1_CR0 </item>
//    <item> SFDITEM_REG__SSP1_CR1 </item>
//    <item> SFDITEM_REG__SSP1_DR </item>
//    <item> SFDITEM_REG__SSP1_SR </item>
//    <item> SFDITEM_REG__SSP1_CPSR </item>
//    <item> SFDITEM_REG__SSP1_IMSC </item>
//    <item> SFDITEM_REG__SSP1_RIS </item>
//    <item> SFDITEM_REG__SSP1_MIS </item>
//    <item> SFDITEM_REG__SSP1_ICR </item>
//    <item> SFDITEM_REG__SSP1_DMACR </item>
//  </view>
//  


// -----------------------------  Register Item Address: SSP2_CR0  --------------------------------
// SVD Line: 1424

unsigned int SSP2_CR0 __AT (0x40209000);



// --------------------------------  Field Item: SSP2_CR0_SCR  ------------------------------------
// SVD Line: 1429

//  <item> SFDITEM_FIELD__SSP2_CR0_SCR
//    <name> SCR </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40209000) Serial clock rate </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP2_CR0 >> 8) & 0xFF), ((SSP2_CR0 = (SSP2_CR0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SSP2_CR0_SPH  ------------------------------------
// SVD Line: 1433

//  <item> SFDITEM_FIELD__SSP2_CR0_SPH
//    <name> SPH </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40209000) SSPCLKOUT phase </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_CR0 ) </loc>
//      <o.7..7> SPH
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP2_CR0_SPO  ------------------------------------
// SVD Line: 1437

//  <item> SFDITEM_FIELD__SSP2_CR0_SPO
//    <name> SPO </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40209000) SSPCLKOUT polarity </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_CR0 ) </loc>
//      <o.6..6> SPO
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP2_CR0_FRF  ------------------------------------
// SVD Line: 1441

//  <item> SFDITEM_FIELD__SSP2_CR0_FRF
//    <name> FRF </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40209000) Frame format </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP2_CR0 >> 4) & 0x3), ((SSP2_CR0 = (SSP2_CR0 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SSP2_CR0_DSS  ------------------------------------
// SVD Line: 1445

//  <item> SFDITEM_FIELD__SSP2_CR0_DSS
//    <name> DSS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40209000) Data Size Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP2_CR0 >> 0) & 0xF), ((SSP2_CR0 = (SSP2_CR0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_CR0  ------------------------------------
// SVD Line: 1424

//  <rtree> SFDITEM_REG__SSP2_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40209000) Control register 0 </i>
//    <loc> ( (unsigned int)((SSP2_CR0 >> 0) & 0xFFFFFFFF), ((SSP2_CR0 = (SSP2_CR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_CR0_SCR </item>
//    <item> SFDITEM_FIELD__SSP2_CR0_SPH </item>
//    <item> SFDITEM_FIELD__SSP2_CR0_SPO </item>
//    <item> SFDITEM_FIELD__SSP2_CR0_FRF </item>
//    <item> SFDITEM_FIELD__SSP2_CR0_DSS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP2_CR1  --------------------------------
// SVD Line: 1451

unsigned int SSP2_CR1 __AT (0x40209004);



// --------------------------------  Field Item: SSP2_CR1_SOD  ------------------------------------
// SVD Line: 1456

//  <item> SFDITEM_FIELD__SSP2_CR1_SOD
//    <name> SOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40209004) Slave-mode output disable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_CR1 ) </loc>
//      <o.3..3> SOD
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP2_CR1_MS  ------------------------------------
// SVD Line: 1460

//  <item> SFDITEM_FIELD__SSP2_CR1_MS
//    <name> MS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40209004) Master or slave mode select </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_CR1 ) </loc>
//      <o.2..2> MS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP2_CR1_SSE  ------------------------------------
// SVD Line: 1464

//  <item> SFDITEM_FIELD__SSP2_CR1_SSE
//    <name> SSE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40209004) Synchronous serial port enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_CR1 ) </loc>
//      <o.1..1> SSE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP2_CR1_LBM  ------------------------------------
// SVD Line: 1468

//  <item> SFDITEM_FIELD__SSP2_CR1_LBM
//    <name> LBM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40209004) Loop back mode </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_CR1 ) </loc>
//      <o.0..0> LBM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_CR1  ------------------------------------
// SVD Line: 1451

//  <rtree> SFDITEM_REG__SSP2_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40209004) Control register 1 </i>
//    <loc> ( (unsigned int)((SSP2_CR1 >> 0) & 0xFFFFFFFF), ((SSP2_CR1 = (SSP2_CR1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_CR1_SOD </item>
//    <item> SFDITEM_FIELD__SSP2_CR1_MS </item>
//    <item> SFDITEM_FIELD__SSP2_CR1_SSE </item>
//    <item> SFDITEM_FIELD__SSP2_CR1_LBM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP2_DR  ---------------------------------
// SVD Line: 1474

unsigned int SSP2_DR __AT (0x40209008);



// --------------------------------  Field Item: SSP2_DR_Data  ------------------------------------
// SVD Line: 1479

//  <item> SFDITEM_FIELD__SSP2_DR_Data
//    <name> Data </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40209008) Transmit/Receive FIFO </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP2_DR >> 0) & 0xFFFF), ((SSP2_DR = (SSP2_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: SSP2_DR  ------------------------------------
// SVD Line: 1474

//  <rtree> SFDITEM_REG__SSP2_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40209008) Data register </i>
//    <loc> ( (unsigned int)((SSP2_DR >> 0) & 0xFFFFFFFF), ((SSP2_DR = (SSP2_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_DR_Data </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP2_SR  ---------------------------------
// SVD Line: 1485

unsigned int SSP2_SR __AT (0x4020900C);



// ---------------------------------  Field Item: SSP2_SR_BSY  ------------------------------------
// SVD Line: 1490

//  <item> SFDITEM_FIELD__SSP2_SR_BSY
//    <name> BSY </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4020900C) PrimeCell SSP busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_SR ) </loc>
//      <o.4..4> BSY
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP2_SR_RFF  ------------------------------------
// SVD Line: 1494

//  <item> SFDITEM_FIELD__SSP2_SR_RFF
//    <name> RFF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4020900C) Receive FIFO full </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_SR ) </loc>
//      <o.3..3> RFF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP2_SR_RNE  ------------------------------------
// SVD Line: 1498

//  <item> SFDITEM_FIELD__SSP2_SR_RNE
//    <name> RNE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4020900C) Receive FIFO not empty </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_SR ) </loc>
//      <o.2..2> RNE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP2_SR_TNF  ------------------------------------
// SVD Line: 1502

//  <item> SFDITEM_FIELD__SSP2_SR_TNF
//    <name> TNF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4020900C) Transmit FIFO not full </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_SR ) </loc>
//      <o.1..1> TNF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP2_SR_TFE  ------------------------------------
// SVD Line: 1506

//  <item> SFDITEM_FIELD__SSP2_SR_TFE
//    <name> TFE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4020900C) Transmit FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_SR ) </loc>
//      <o.0..0> TFE
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: SSP2_SR  ------------------------------------
// SVD Line: 1485

//  <rtree> SFDITEM_REG__SSP2_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4020900C) Status register </i>
//    <loc> ( (unsigned int)((SSP2_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP2_SR_BSY </item>
//    <item> SFDITEM_FIELD__SSP2_SR_RFF </item>
//    <item> SFDITEM_FIELD__SSP2_SR_RNE </item>
//    <item> SFDITEM_FIELD__SSP2_SR_TNF </item>
//    <item> SFDITEM_FIELD__SSP2_SR_TFE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP2_CPSR  --------------------------------
// SVD Line: 1512

unsigned int SSP2_CPSR __AT (0x40209010);



// ------------------------------  Field Item: SSP2_CPSR_CPSDVSR  ---------------------------------
// SVD Line: 1517

//  <item> SFDITEM_FIELD__SSP2_CPSR_CPSDVSR
//    <name> CPSDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40209010) Clock prescale divisor </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP2_CPSR >> 0) & 0xFF), ((SSP2_CPSR = (SSP2_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_CPSR  -----------------------------------
// SVD Line: 1512

//  <rtree> SFDITEM_REG__SSP2_CPSR
//    <name> CPSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40209010) Clock prescale register </i>
//    <loc> ( (unsigned int)((SSP2_CPSR >> 0) & 0xFFFFFFFF), ((SSP2_CPSR = (SSP2_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_CPSR_CPSDVSR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP2_IMSC  --------------------------------
// SVD Line: 1523

unsigned int SSP2_IMSC __AT (0x40209014);



// -------------------------------  Field Item: SSP2_IMSC_TXIM  -----------------------------------
// SVD Line: 1528

//  <item> SFDITEM_FIELD__SSP2_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40209014) Transmit FIFO interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_IMSC ) </loc>
//      <o.3..3> TXIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_IMSC_RXIM  -----------------------------------
// SVD Line: 1532

//  <item> SFDITEM_FIELD__SSP2_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40209014) Receive FIFO interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_IMSC ) </loc>
//      <o.2..2> RXIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_IMSC_RTIM  -----------------------------------
// SVD Line: 1536

//  <item> SFDITEM_FIELD__SSP2_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40209014) Receive timeout interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_IMSC ) </loc>
//      <o.1..1> RTIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_IMSC_RORIM  ----------------------------------
// SVD Line: 1540

//  <item> SFDITEM_FIELD__SSP2_IMSC_RORIM
//    <name> RORIM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40209014) Receive overrun interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_IMSC ) </loc>
//      <o.0..0> RORIM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_IMSC  -----------------------------------
// SVD Line: 1523

//  <rtree> SFDITEM_REG__SSP2_IMSC
//    <name> IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40209014) Interrupt mask set or clear register </i>
//    <loc> ( (unsigned int)((SSP2_IMSC >> 0) & 0xFFFFFFFF), ((SSP2_IMSC = (SSP2_IMSC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_IMSC_TXIM </item>
//    <item> SFDITEM_FIELD__SSP2_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__SSP2_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__SSP2_IMSC_RORIM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP2_RIS  --------------------------------
// SVD Line: 1546

unsigned int SSP2_RIS __AT (0x40209018);



// -------------------------------  Field Item: SSP2_RIS_TXRIS  -----------------------------------
// SVD Line: 1551

//  <item> SFDITEM_FIELD__SSP2_RIS_TXRIS
//    <name> TXRIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40209018) transmit FIFOraw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_RIS ) </loc>
//      <o.3..3> TXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_RIS_RXRIS  -----------------------------------
// SVD Line: 1555

//  <item> SFDITEM_FIELD__SSP2_RIS_RXRIS
//    <name> RXRIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40209018) receive FIFO raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_RIS ) </loc>
//      <o.2..2> RXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_RIS_RTRIS  -----------------------------------
// SVD Line: 1559

//  <item> SFDITEM_FIELD__SSP2_RIS_RTRIS
//    <name> RTRIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40209018) receive timeout raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_RIS ) </loc>
//      <o.1..1> RTRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_RIS_RORRIS  ----------------------------------
// SVD Line: 1563

//  <item> SFDITEM_FIELD__SSP2_RIS_RORRIS
//    <name> RORRIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40209018) receive over run raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_RIS ) </loc>
//      <o.0..0> RORRIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_RIS  ------------------------------------
// SVD Line: 1546

//  <rtree> SFDITEM_REG__SSP2_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40209018) Raw interrupt status register </i>
//    <loc> ( (unsigned int)((SSP2_RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP2_RIS_TXRIS </item>
//    <item> SFDITEM_FIELD__SSP2_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__SSP2_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__SSP2_RIS_RORRIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP2_MIS  --------------------------------
// SVD Line: 1569

unsigned int SSP2_MIS __AT (0x4020901C);



// -------------------------------  Field Item: SSP2_MIS_TXMIS  -----------------------------------
// SVD Line: 1574

//  <item> SFDITEM_FIELD__SSP2_MIS_TXMIS
//    <name> TXMIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4020901C) transmit FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_MIS ) </loc>
//      <o.3..3> TXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_MIS_RXMIS  -----------------------------------
// SVD Line: 1578

//  <item> SFDITEM_FIELD__SSP2_MIS_RXMIS
//    <name> RXMIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4020901C) receive FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_MIS ) </loc>
//      <o.2..2> RXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_MIS_RTMIS  -----------------------------------
// SVD Line: 1582

//  <item> SFDITEM_FIELD__SSP2_MIS_RTMIS
//    <name> RTMIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4020901C) receive timeout masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_MIS ) </loc>
//      <o.1..1> RTMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_MIS_RORMIS  ----------------------------------
// SVD Line: 1586

//  <item> SFDITEM_FIELD__SSP2_MIS_RORMIS
//    <name> RORMIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4020901C) receive over run masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_MIS ) </loc>
//      <o.0..0> RORMIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_MIS  ------------------------------------
// SVD Line: 1569

//  <rtree> SFDITEM_REG__SSP2_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4020901C) Masked interrupt status register </i>
//    <loc> ( (unsigned int)((SSP2_MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP2_MIS_TXMIS </item>
//    <item> SFDITEM_FIELD__SSP2_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__SSP2_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__SSP2_MIS_RORMIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP2_ICR  --------------------------------
// SVD Line: 1592

unsigned int SSP2_ICR __AT (0x40209020);



// --------------------------------  Field Item: SSP2_ICR_RTIC  -----------------------------------
// SVD Line: 1597

//  <item> SFDITEM_FIELD__SSP2_ICR_RTIC
//    <name> RTIC </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40209020) Clears the SSPRTINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ICR ) </loc>
//      <o.1..1> RTIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_ICR_RORIC  -----------------------------------
// SVD Line: 1601

//  <item> SFDITEM_FIELD__SSP2_ICR_RORIC
//    <name> RORIC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40209020) Clears the SSPRORINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ICR ) </loc>
//      <o.0..0> RORIC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_ICR  ------------------------------------
// SVD Line: 1592

//  <rtree> SFDITEM_REG__SSP2_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40209020) Interrupt clear register </i>
//    <loc> ( (unsigned int)((SSP2_ICR >> 0) & 0xFFFFFFFF), ((SSP2_ICR = (SSP2_ICR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_ICR_RTIC </item>
//    <item> SFDITEM_FIELD__SSP2_ICR_RORIC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP2_DMACR  -------------------------------
// SVD Line: 1607

unsigned int SSP2_DMACR __AT (0x40209024);



// ------------------------------  Field Item: SSP2_DMACR_TXDMAE  ---------------------------------
// SVD Line: 1612

//  <item> SFDITEM_FIELD__SSP2_DMACR_TXDMAE
//    <name> TXDMAE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40209024) Transmit DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_DMACR ) </loc>
//      <o.1..1> TXDMAE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP2_DMACR_RXDMAE  ---------------------------------
// SVD Line: 1616

//  <item> SFDITEM_FIELD__SSP2_DMACR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40209024) Receive DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_DMACR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SSP2_DMACR  -----------------------------------
// SVD Line: 1607

//  <rtree> SFDITEM_REG__SSP2_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40209024) DMA control register </i>
//    <loc> ( (unsigned int)((SSP2_DMACR >> 0) & 0xFFFFFFFF), ((SSP2_DMACR = (SSP2_DMACR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_DMACR_TXDMAE </item>
//    <item> SFDITEM_FIELD__SSP2_DMACR_RXDMAE </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SSP2  -------------------------------------
// SVD Line: 1638

//  <view> SSP2
//    <name> SSP2 </name>
//    <item> SFDITEM_REG__SSP2_CR0 </item>
//    <item> SFDITEM_REG__SSP2_CR1 </item>
//    <item> SFDITEM_REG__SSP2_DR </item>
//    <item> SFDITEM_REG__SSP2_SR </item>
//    <item> SFDITEM_REG__SSP2_CPSR </item>
//    <item> SFDITEM_REG__SSP2_IMSC </item>
//    <item> SFDITEM_REG__SSP2_RIS </item>
//    <item> SFDITEM_REG__SSP2_MIS </item>
//    <item> SFDITEM_REG__SSP2_ICR </item>
//    <item> SFDITEM_REG__SSP2_DMACR </item>
//  </view>
//  


// -----------------------------  Register Item Address: SSP3_CR0  --------------------------------
// SVD Line: 1424

unsigned int SSP3_CR0 __AT (0x4020A000);



// --------------------------------  Field Item: SSP3_CR0_SCR  ------------------------------------
// SVD Line: 1429

//  <item> SFDITEM_FIELD__SSP3_CR0_SCR
//    <name> SCR </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x4020A000) Serial clock rate </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP3_CR0 >> 8) & 0xFF), ((SSP3_CR0 = (SSP3_CR0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SSP3_CR0_SPH  ------------------------------------
// SVD Line: 1433

//  <item> SFDITEM_FIELD__SSP3_CR0_SPH
//    <name> SPH </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4020A000) SSPCLKOUT phase </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_CR0 ) </loc>
//      <o.7..7> SPH
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP3_CR0_SPO  ------------------------------------
// SVD Line: 1437

//  <item> SFDITEM_FIELD__SSP3_CR0_SPO
//    <name> SPO </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4020A000) SSPCLKOUT polarity </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_CR0 ) </loc>
//      <o.6..6> SPO
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP3_CR0_FRF  ------------------------------------
// SVD Line: 1441

//  <item> SFDITEM_FIELD__SSP3_CR0_FRF
//    <name> FRF </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4020A000) Frame format </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP3_CR0 >> 4) & 0x3), ((SSP3_CR0 = (SSP3_CR0 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SSP3_CR0_DSS  ------------------------------------
// SVD Line: 1445

//  <item> SFDITEM_FIELD__SSP3_CR0_DSS
//    <name> DSS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4020A000) Data Size Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP3_CR0 >> 0) & 0xF), ((SSP3_CR0 = (SSP3_CR0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SSP3_CR0  ------------------------------------
// SVD Line: 1424

//  <rtree> SFDITEM_REG__SSP3_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4020A000) Control register 0 </i>
//    <loc> ( (unsigned int)((SSP3_CR0 >> 0) & 0xFFFFFFFF), ((SSP3_CR0 = (SSP3_CR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP3_CR0_SCR </item>
//    <item> SFDITEM_FIELD__SSP3_CR0_SPH </item>
//    <item> SFDITEM_FIELD__SSP3_CR0_SPO </item>
//    <item> SFDITEM_FIELD__SSP3_CR0_FRF </item>
//    <item> SFDITEM_FIELD__SSP3_CR0_DSS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP3_CR1  --------------------------------
// SVD Line: 1451

unsigned int SSP3_CR1 __AT (0x4020A004);



// --------------------------------  Field Item: SSP3_CR1_SOD  ------------------------------------
// SVD Line: 1456

//  <item> SFDITEM_FIELD__SSP3_CR1_SOD
//    <name> SOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4020A004) Slave-mode output disable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_CR1 ) </loc>
//      <o.3..3> SOD
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP3_CR1_MS  ------------------------------------
// SVD Line: 1460

//  <item> SFDITEM_FIELD__SSP3_CR1_MS
//    <name> MS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4020A004) Master or slave mode select </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_CR1 ) </loc>
//      <o.2..2> MS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP3_CR1_SSE  ------------------------------------
// SVD Line: 1464

//  <item> SFDITEM_FIELD__SSP3_CR1_SSE
//    <name> SSE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4020A004) Synchronous serial port enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_CR1 ) </loc>
//      <o.1..1> SSE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP3_CR1_LBM  ------------------------------------
// SVD Line: 1468

//  <item> SFDITEM_FIELD__SSP3_CR1_LBM
//    <name> LBM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4020A004) Loop back mode </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_CR1 ) </loc>
//      <o.0..0> LBM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP3_CR1  ------------------------------------
// SVD Line: 1451

//  <rtree> SFDITEM_REG__SSP3_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4020A004) Control register 1 </i>
//    <loc> ( (unsigned int)((SSP3_CR1 >> 0) & 0xFFFFFFFF), ((SSP3_CR1 = (SSP3_CR1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP3_CR1_SOD </item>
//    <item> SFDITEM_FIELD__SSP3_CR1_MS </item>
//    <item> SFDITEM_FIELD__SSP3_CR1_SSE </item>
//    <item> SFDITEM_FIELD__SSP3_CR1_LBM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP3_DR  ---------------------------------
// SVD Line: 1474

unsigned int SSP3_DR __AT (0x4020A008);



// --------------------------------  Field Item: SSP3_DR_Data  ------------------------------------
// SVD Line: 1479

//  <item> SFDITEM_FIELD__SSP3_DR_Data
//    <name> Data </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4020A008) Transmit/Receive FIFO </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP3_DR >> 0) & 0xFFFF), ((SSP3_DR = (SSP3_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: SSP3_DR  ------------------------------------
// SVD Line: 1474

//  <rtree> SFDITEM_REG__SSP3_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4020A008) Data register </i>
//    <loc> ( (unsigned int)((SSP3_DR >> 0) & 0xFFFFFFFF), ((SSP3_DR = (SSP3_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP3_DR_Data </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP3_SR  ---------------------------------
// SVD Line: 1485

unsigned int SSP3_SR __AT (0x4020A00C);



// ---------------------------------  Field Item: SSP3_SR_BSY  ------------------------------------
// SVD Line: 1490

//  <item> SFDITEM_FIELD__SSP3_SR_BSY
//    <name> BSY </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4020A00C) PrimeCell SSP busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_SR ) </loc>
//      <o.4..4> BSY
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP3_SR_RFF  ------------------------------------
// SVD Line: 1494

//  <item> SFDITEM_FIELD__SSP3_SR_RFF
//    <name> RFF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4020A00C) Receive FIFO full </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_SR ) </loc>
//      <o.3..3> RFF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP3_SR_RNE  ------------------------------------
// SVD Line: 1498

//  <item> SFDITEM_FIELD__SSP3_SR_RNE
//    <name> RNE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4020A00C) Receive FIFO not empty </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_SR ) </loc>
//      <o.2..2> RNE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP3_SR_TNF  ------------------------------------
// SVD Line: 1502

//  <item> SFDITEM_FIELD__SSP3_SR_TNF
//    <name> TNF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4020A00C) Transmit FIFO not full </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_SR ) </loc>
//      <o.1..1> TNF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP3_SR_TFE  ------------------------------------
// SVD Line: 1506

//  <item> SFDITEM_FIELD__SSP3_SR_TFE
//    <name> TFE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4020A00C) Transmit FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_SR ) </loc>
//      <o.0..0> TFE
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: SSP3_SR  ------------------------------------
// SVD Line: 1485

//  <rtree> SFDITEM_REG__SSP3_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4020A00C) Status register </i>
//    <loc> ( (unsigned int)((SSP3_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP3_SR_BSY </item>
//    <item> SFDITEM_FIELD__SSP3_SR_RFF </item>
//    <item> SFDITEM_FIELD__SSP3_SR_RNE </item>
//    <item> SFDITEM_FIELD__SSP3_SR_TNF </item>
//    <item> SFDITEM_FIELD__SSP3_SR_TFE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP3_CPSR  --------------------------------
// SVD Line: 1512

unsigned int SSP3_CPSR __AT (0x4020A010);



// ------------------------------  Field Item: SSP3_CPSR_CPSDVSR  ---------------------------------
// SVD Line: 1517

//  <item> SFDITEM_FIELD__SSP3_CPSR_CPSDVSR
//    <name> CPSDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4020A010) Clock prescale divisor </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP3_CPSR >> 0) & 0xFF), ((SSP3_CPSR = (SSP3_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SSP3_CPSR  -----------------------------------
// SVD Line: 1512

//  <rtree> SFDITEM_REG__SSP3_CPSR
//    <name> CPSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4020A010) Clock prescale register </i>
//    <loc> ( (unsigned int)((SSP3_CPSR >> 0) & 0xFFFFFFFF), ((SSP3_CPSR = (SSP3_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP3_CPSR_CPSDVSR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP3_IMSC  --------------------------------
// SVD Line: 1523

unsigned int SSP3_IMSC __AT (0x4020A014);



// -------------------------------  Field Item: SSP3_IMSC_TXIM  -----------------------------------
// SVD Line: 1528

//  <item> SFDITEM_FIELD__SSP3_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4020A014) Transmit FIFO interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_IMSC ) </loc>
//      <o.3..3> TXIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP3_IMSC_RXIM  -----------------------------------
// SVD Line: 1532

//  <item> SFDITEM_FIELD__SSP3_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4020A014) Receive FIFO interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_IMSC ) </loc>
//      <o.2..2> RXIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP3_IMSC_RTIM  -----------------------------------
// SVD Line: 1536

//  <item> SFDITEM_FIELD__SSP3_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4020A014) Receive timeout interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_IMSC ) </loc>
//      <o.1..1> RTIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP3_IMSC_RORIM  ----------------------------------
// SVD Line: 1540

//  <item> SFDITEM_FIELD__SSP3_IMSC_RORIM
//    <name> RORIM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4020A014) Receive overrun interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_IMSC ) </loc>
//      <o.0..0> RORIM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP3_IMSC  -----------------------------------
// SVD Line: 1523

//  <rtree> SFDITEM_REG__SSP3_IMSC
//    <name> IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4020A014) Interrupt mask set or clear register </i>
//    <loc> ( (unsigned int)((SSP3_IMSC >> 0) & 0xFFFFFFFF), ((SSP3_IMSC = (SSP3_IMSC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP3_IMSC_TXIM </item>
//    <item> SFDITEM_FIELD__SSP3_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__SSP3_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__SSP3_IMSC_RORIM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP3_RIS  --------------------------------
// SVD Line: 1546

unsigned int SSP3_RIS __AT (0x4020A018);



// -------------------------------  Field Item: SSP3_RIS_TXRIS  -----------------------------------
// SVD Line: 1551

//  <item> SFDITEM_FIELD__SSP3_RIS_TXRIS
//    <name> TXRIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4020A018) transmit FIFOraw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_RIS ) </loc>
//      <o.3..3> TXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP3_RIS_RXRIS  -----------------------------------
// SVD Line: 1555

//  <item> SFDITEM_FIELD__SSP3_RIS_RXRIS
//    <name> RXRIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4020A018) receive FIFO raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_RIS ) </loc>
//      <o.2..2> RXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP3_RIS_RTRIS  -----------------------------------
// SVD Line: 1559

//  <item> SFDITEM_FIELD__SSP3_RIS_RTRIS
//    <name> RTRIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4020A018) receive timeout raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_RIS ) </loc>
//      <o.1..1> RTRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP3_RIS_RORRIS  ----------------------------------
// SVD Line: 1563

//  <item> SFDITEM_FIELD__SSP3_RIS_RORRIS
//    <name> RORRIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4020A018) receive over run raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_RIS ) </loc>
//      <o.0..0> RORRIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP3_RIS  ------------------------------------
// SVD Line: 1546

//  <rtree> SFDITEM_REG__SSP3_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4020A018) Raw interrupt status register </i>
//    <loc> ( (unsigned int)((SSP3_RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP3_RIS_TXRIS </item>
//    <item> SFDITEM_FIELD__SSP3_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__SSP3_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__SSP3_RIS_RORRIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP3_MIS  --------------------------------
// SVD Line: 1569

unsigned int SSP3_MIS __AT (0x4020A01C);



// -------------------------------  Field Item: SSP3_MIS_TXMIS  -----------------------------------
// SVD Line: 1574

//  <item> SFDITEM_FIELD__SSP3_MIS_TXMIS
//    <name> TXMIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4020A01C) transmit FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_MIS ) </loc>
//      <o.3..3> TXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP3_MIS_RXMIS  -----------------------------------
// SVD Line: 1578

//  <item> SFDITEM_FIELD__SSP3_MIS_RXMIS
//    <name> RXMIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4020A01C) receive FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_MIS ) </loc>
//      <o.2..2> RXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP3_MIS_RTMIS  -----------------------------------
// SVD Line: 1582

//  <item> SFDITEM_FIELD__SSP3_MIS_RTMIS
//    <name> RTMIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4020A01C) receive timeout masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_MIS ) </loc>
//      <o.1..1> RTMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP3_MIS_RORMIS  ----------------------------------
// SVD Line: 1586

//  <item> SFDITEM_FIELD__SSP3_MIS_RORMIS
//    <name> RORMIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4020A01C) receive over run masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_MIS ) </loc>
//      <o.0..0> RORMIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP3_MIS  ------------------------------------
// SVD Line: 1569

//  <rtree> SFDITEM_REG__SSP3_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4020A01C) Masked interrupt status register </i>
//    <loc> ( (unsigned int)((SSP3_MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP3_MIS_TXMIS </item>
//    <item> SFDITEM_FIELD__SSP3_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__SSP3_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__SSP3_MIS_RORMIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP3_ICR  --------------------------------
// SVD Line: 1592

unsigned int SSP3_ICR __AT (0x4020A020);



// --------------------------------  Field Item: SSP3_ICR_RTIC  -----------------------------------
// SVD Line: 1597

//  <item> SFDITEM_FIELD__SSP3_ICR_RTIC
//    <name> RTIC </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4020A020) Clears the SSPRTINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_ICR ) </loc>
//      <o.1..1> RTIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP3_ICR_RORIC  -----------------------------------
// SVD Line: 1601

//  <item> SFDITEM_FIELD__SSP3_ICR_RORIC
//    <name> RORIC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4020A020) Clears the SSPRORINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_ICR ) </loc>
//      <o.0..0> RORIC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP3_ICR  ------------------------------------
// SVD Line: 1592

//  <rtree> SFDITEM_REG__SSP3_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4020A020) Interrupt clear register </i>
//    <loc> ( (unsigned int)((SSP3_ICR >> 0) & 0xFFFFFFFF), ((SSP3_ICR = (SSP3_ICR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP3_ICR_RTIC </item>
//    <item> SFDITEM_FIELD__SSP3_ICR_RORIC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP3_DMACR  -------------------------------
// SVD Line: 1607

unsigned int SSP3_DMACR __AT (0x4020A024);



// ------------------------------  Field Item: SSP3_DMACR_TXDMAE  ---------------------------------
// SVD Line: 1612

//  <item> SFDITEM_FIELD__SSP3_DMACR_TXDMAE
//    <name> TXDMAE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4020A024) Transmit DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_DMACR ) </loc>
//      <o.1..1> TXDMAE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP3_DMACR_RXDMAE  ---------------------------------
// SVD Line: 1616

//  <item> SFDITEM_FIELD__SSP3_DMACR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4020A024) Receive DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_DMACR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SSP3_DMACR  -----------------------------------
// SVD Line: 1607

//  <rtree> SFDITEM_REG__SSP3_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4020A024) DMA control register </i>
//    <loc> ( (unsigned int)((SSP3_DMACR >> 0) & 0xFFFFFFFF), ((SSP3_DMACR = (SSP3_DMACR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP3_DMACR_TXDMAE </item>
//    <item> SFDITEM_FIELD__SSP3_DMACR_RXDMAE </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SSP3  -------------------------------------
// SVD Line: 1650

//  <view> SSP3
//    <name> SSP3 </name>
//    <item> SFDITEM_REG__SSP3_CR0 </item>
//    <item> SFDITEM_REG__SSP3_CR1 </item>
//    <item> SFDITEM_REG__SSP3_DR </item>
//    <item> SFDITEM_REG__SSP3_SR </item>
//    <item> SFDITEM_REG__SSP3_CPSR </item>
//    <item> SFDITEM_REG__SSP3_IMSC </item>
//    <item> SFDITEM_REG__SSP3_RIS </item>
//    <item> SFDITEM_REG__SSP3_MIS </item>
//    <item> SFDITEM_REG__SSP3_ICR </item>
//    <item> SFDITEM_REG__SSP3_DMACR </item>
//  </view>
//  


// -----------------------------  Register Item Address: SSP4_CR0  --------------------------------
// SVD Line: 1424

unsigned int SSP4_CR0 __AT (0x4020B000);



// --------------------------------  Field Item: SSP4_CR0_SCR  ------------------------------------
// SVD Line: 1429

//  <item> SFDITEM_FIELD__SSP4_CR0_SCR
//    <name> SCR </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x4020B000) Serial clock rate </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP4_CR0 >> 8) & 0xFF), ((SSP4_CR0 = (SSP4_CR0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SSP4_CR0_SPH  ------------------------------------
// SVD Line: 1433

//  <item> SFDITEM_FIELD__SSP4_CR0_SPH
//    <name> SPH </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4020B000) SSPCLKOUT phase </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_CR0 ) </loc>
//      <o.7..7> SPH
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP4_CR0_SPO  ------------------------------------
// SVD Line: 1437

//  <item> SFDITEM_FIELD__SSP4_CR0_SPO
//    <name> SPO </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4020B000) SSPCLKOUT polarity </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_CR0 ) </loc>
//      <o.6..6> SPO
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP4_CR0_FRF  ------------------------------------
// SVD Line: 1441

//  <item> SFDITEM_FIELD__SSP4_CR0_FRF
//    <name> FRF </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4020B000) Frame format </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP4_CR0 >> 4) & 0x3), ((SSP4_CR0 = (SSP4_CR0 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SSP4_CR0_DSS  ------------------------------------
// SVD Line: 1445

//  <item> SFDITEM_FIELD__SSP4_CR0_DSS
//    <name> DSS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4020B000) Data Size Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP4_CR0 >> 0) & 0xF), ((SSP4_CR0 = (SSP4_CR0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SSP4_CR0  ------------------------------------
// SVD Line: 1424

//  <rtree> SFDITEM_REG__SSP4_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4020B000) Control register 0 </i>
//    <loc> ( (unsigned int)((SSP4_CR0 >> 0) & 0xFFFFFFFF), ((SSP4_CR0 = (SSP4_CR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP4_CR0_SCR </item>
//    <item> SFDITEM_FIELD__SSP4_CR0_SPH </item>
//    <item> SFDITEM_FIELD__SSP4_CR0_SPO </item>
//    <item> SFDITEM_FIELD__SSP4_CR0_FRF </item>
//    <item> SFDITEM_FIELD__SSP4_CR0_DSS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP4_CR1  --------------------------------
// SVD Line: 1451

unsigned int SSP4_CR1 __AT (0x4020B004);



// --------------------------------  Field Item: SSP4_CR1_SOD  ------------------------------------
// SVD Line: 1456

//  <item> SFDITEM_FIELD__SSP4_CR1_SOD
//    <name> SOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4020B004) Slave-mode output disable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_CR1 ) </loc>
//      <o.3..3> SOD
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP4_CR1_MS  ------------------------------------
// SVD Line: 1460

//  <item> SFDITEM_FIELD__SSP4_CR1_MS
//    <name> MS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4020B004) Master or slave mode select </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_CR1 ) </loc>
//      <o.2..2> MS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP4_CR1_SSE  ------------------------------------
// SVD Line: 1464

//  <item> SFDITEM_FIELD__SSP4_CR1_SSE
//    <name> SSE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4020B004) Synchronous serial port enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_CR1 ) </loc>
//      <o.1..1> SSE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP4_CR1_LBM  ------------------------------------
// SVD Line: 1468

//  <item> SFDITEM_FIELD__SSP4_CR1_LBM
//    <name> LBM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4020B004) Loop back mode </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_CR1 ) </loc>
//      <o.0..0> LBM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP4_CR1  ------------------------------------
// SVD Line: 1451

//  <rtree> SFDITEM_REG__SSP4_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4020B004) Control register 1 </i>
//    <loc> ( (unsigned int)((SSP4_CR1 >> 0) & 0xFFFFFFFF), ((SSP4_CR1 = (SSP4_CR1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP4_CR1_SOD </item>
//    <item> SFDITEM_FIELD__SSP4_CR1_MS </item>
//    <item> SFDITEM_FIELD__SSP4_CR1_SSE </item>
//    <item> SFDITEM_FIELD__SSP4_CR1_LBM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP4_DR  ---------------------------------
// SVD Line: 1474

unsigned int SSP4_DR __AT (0x4020B008);



// --------------------------------  Field Item: SSP4_DR_Data  ------------------------------------
// SVD Line: 1479

//  <item> SFDITEM_FIELD__SSP4_DR_Data
//    <name> Data </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4020B008) Transmit/Receive FIFO </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP4_DR >> 0) & 0xFFFF), ((SSP4_DR = (SSP4_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: SSP4_DR  ------------------------------------
// SVD Line: 1474

//  <rtree> SFDITEM_REG__SSP4_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4020B008) Data register </i>
//    <loc> ( (unsigned int)((SSP4_DR >> 0) & 0xFFFFFFFF), ((SSP4_DR = (SSP4_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP4_DR_Data </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP4_SR  ---------------------------------
// SVD Line: 1485

unsigned int SSP4_SR __AT (0x4020B00C);



// ---------------------------------  Field Item: SSP4_SR_BSY  ------------------------------------
// SVD Line: 1490

//  <item> SFDITEM_FIELD__SSP4_SR_BSY
//    <name> BSY </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4020B00C) PrimeCell SSP busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_SR ) </loc>
//      <o.4..4> BSY
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP4_SR_RFF  ------------------------------------
// SVD Line: 1494

//  <item> SFDITEM_FIELD__SSP4_SR_RFF
//    <name> RFF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4020B00C) Receive FIFO full </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_SR ) </loc>
//      <o.3..3> RFF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP4_SR_RNE  ------------------------------------
// SVD Line: 1498

//  <item> SFDITEM_FIELD__SSP4_SR_RNE
//    <name> RNE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4020B00C) Receive FIFO not empty </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_SR ) </loc>
//      <o.2..2> RNE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP4_SR_TNF  ------------------------------------
// SVD Line: 1502

//  <item> SFDITEM_FIELD__SSP4_SR_TNF
//    <name> TNF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4020B00C) Transmit FIFO not full </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_SR ) </loc>
//      <o.1..1> TNF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP4_SR_TFE  ------------------------------------
// SVD Line: 1506

//  <item> SFDITEM_FIELD__SSP4_SR_TFE
//    <name> TFE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4020B00C) Transmit FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_SR ) </loc>
//      <o.0..0> TFE
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: SSP4_SR  ------------------------------------
// SVD Line: 1485

//  <rtree> SFDITEM_REG__SSP4_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4020B00C) Status register </i>
//    <loc> ( (unsigned int)((SSP4_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP4_SR_BSY </item>
//    <item> SFDITEM_FIELD__SSP4_SR_RFF </item>
//    <item> SFDITEM_FIELD__SSP4_SR_RNE </item>
//    <item> SFDITEM_FIELD__SSP4_SR_TNF </item>
//    <item> SFDITEM_FIELD__SSP4_SR_TFE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP4_CPSR  --------------------------------
// SVD Line: 1512

unsigned int SSP4_CPSR __AT (0x4020B010);



// ------------------------------  Field Item: SSP4_CPSR_CPSDVSR  ---------------------------------
// SVD Line: 1517

//  <item> SFDITEM_FIELD__SSP4_CPSR_CPSDVSR
//    <name> CPSDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4020B010) Clock prescale divisor </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP4_CPSR >> 0) & 0xFF), ((SSP4_CPSR = (SSP4_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SSP4_CPSR  -----------------------------------
// SVD Line: 1512

//  <rtree> SFDITEM_REG__SSP4_CPSR
//    <name> CPSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4020B010) Clock prescale register </i>
//    <loc> ( (unsigned int)((SSP4_CPSR >> 0) & 0xFFFFFFFF), ((SSP4_CPSR = (SSP4_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP4_CPSR_CPSDVSR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP4_IMSC  --------------------------------
// SVD Line: 1523

unsigned int SSP4_IMSC __AT (0x4020B014);



// -------------------------------  Field Item: SSP4_IMSC_TXIM  -----------------------------------
// SVD Line: 1528

//  <item> SFDITEM_FIELD__SSP4_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4020B014) Transmit FIFO interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_IMSC ) </loc>
//      <o.3..3> TXIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP4_IMSC_RXIM  -----------------------------------
// SVD Line: 1532

//  <item> SFDITEM_FIELD__SSP4_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4020B014) Receive FIFO interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_IMSC ) </loc>
//      <o.2..2> RXIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP4_IMSC_RTIM  -----------------------------------
// SVD Line: 1536

//  <item> SFDITEM_FIELD__SSP4_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4020B014) Receive timeout interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_IMSC ) </loc>
//      <o.1..1> RTIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP4_IMSC_RORIM  ----------------------------------
// SVD Line: 1540

//  <item> SFDITEM_FIELD__SSP4_IMSC_RORIM
//    <name> RORIM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4020B014) Receive overrun interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_IMSC ) </loc>
//      <o.0..0> RORIM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP4_IMSC  -----------------------------------
// SVD Line: 1523

//  <rtree> SFDITEM_REG__SSP4_IMSC
//    <name> IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4020B014) Interrupt mask set or clear register </i>
//    <loc> ( (unsigned int)((SSP4_IMSC >> 0) & 0xFFFFFFFF), ((SSP4_IMSC = (SSP4_IMSC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP4_IMSC_TXIM </item>
//    <item> SFDITEM_FIELD__SSP4_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__SSP4_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__SSP4_IMSC_RORIM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP4_RIS  --------------------------------
// SVD Line: 1546

unsigned int SSP4_RIS __AT (0x4020B018);



// -------------------------------  Field Item: SSP4_RIS_TXRIS  -----------------------------------
// SVD Line: 1551

//  <item> SFDITEM_FIELD__SSP4_RIS_TXRIS
//    <name> TXRIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4020B018) transmit FIFOraw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_RIS ) </loc>
//      <o.3..3> TXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP4_RIS_RXRIS  -----------------------------------
// SVD Line: 1555

//  <item> SFDITEM_FIELD__SSP4_RIS_RXRIS
//    <name> RXRIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4020B018) receive FIFO raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_RIS ) </loc>
//      <o.2..2> RXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP4_RIS_RTRIS  -----------------------------------
// SVD Line: 1559

//  <item> SFDITEM_FIELD__SSP4_RIS_RTRIS
//    <name> RTRIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4020B018) receive timeout raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_RIS ) </loc>
//      <o.1..1> RTRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP4_RIS_RORRIS  ----------------------------------
// SVD Line: 1563

//  <item> SFDITEM_FIELD__SSP4_RIS_RORRIS
//    <name> RORRIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4020B018) receive over run raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_RIS ) </loc>
//      <o.0..0> RORRIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP4_RIS  ------------------------------------
// SVD Line: 1546

//  <rtree> SFDITEM_REG__SSP4_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4020B018) Raw interrupt status register </i>
//    <loc> ( (unsigned int)((SSP4_RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP4_RIS_TXRIS </item>
//    <item> SFDITEM_FIELD__SSP4_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__SSP4_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__SSP4_RIS_RORRIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP4_MIS  --------------------------------
// SVD Line: 1569

unsigned int SSP4_MIS __AT (0x4020B01C);



// -------------------------------  Field Item: SSP4_MIS_TXMIS  -----------------------------------
// SVD Line: 1574

//  <item> SFDITEM_FIELD__SSP4_MIS_TXMIS
//    <name> TXMIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4020B01C) transmit FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_MIS ) </loc>
//      <o.3..3> TXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP4_MIS_RXMIS  -----------------------------------
// SVD Line: 1578

//  <item> SFDITEM_FIELD__SSP4_MIS_RXMIS
//    <name> RXMIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4020B01C) receive FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_MIS ) </loc>
//      <o.2..2> RXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP4_MIS_RTMIS  -----------------------------------
// SVD Line: 1582

//  <item> SFDITEM_FIELD__SSP4_MIS_RTMIS
//    <name> RTMIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4020B01C) receive timeout masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_MIS ) </loc>
//      <o.1..1> RTMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP4_MIS_RORMIS  ----------------------------------
// SVD Line: 1586

//  <item> SFDITEM_FIELD__SSP4_MIS_RORMIS
//    <name> RORMIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4020B01C) receive over run masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_MIS ) </loc>
//      <o.0..0> RORMIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP4_MIS  ------------------------------------
// SVD Line: 1569

//  <rtree> SFDITEM_REG__SSP4_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4020B01C) Masked interrupt status register </i>
//    <loc> ( (unsigned int)((SSP4_MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP4_MIS_TXMIS </item>
//    <item> SFDITEM_FIELD__SSP4_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__SSP4_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__SSP4_MIS_RORMIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP4_ICR  --------------------------------
// SVD Line: 1592

unsigned int SSP4_ICR __AT (0x4020B020);



// --------------------------------  Field Item: SSP4_ICR_RTIC  -----------------------------------
// SVD Line: 1597

//  <item> SFDITEM_FIELD__SSP4_ICR_RTIC
//    <name> RTIC </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4020B020) Clears the SSPRTINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_ICR ) </loc>
//      <o.1..1> RTIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP4_ICR_RORIC  -----------------------------------
// SVD Line: 1601

//  <item> SFDITEM_FIELD__SSP4_ICR_RORIC
//    <name> RORIC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4020B020) Clears the SSPRORINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_ICR ) </loc>
//      <o.0..0> RORIC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP4_ICR  ------------------------------------
// SVD Line: 1592

//  <rtree> SFDITEM_REG__SSP4_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4020B020) Interrupt clear register </i>
//    <loc> ( (unsigned int)((SSP4_ICR >> 0) & 0xFFFFFFFF), ((SSP4_ICR = (SSP4_ICR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP4_ICR_RTIC </item>
//    <item> SFDITEM_FIELD__SSP4_ICR_RORIC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP4_DMACR  -------------------------------
// SVD Line: 1607

unsigned int SSP4_DMACR __AT (0x4020B024);



// ------------------------------  Field Item: SSP4_DMACR_TXDMAE  ---------------------------------
// SVD Line: 1612

//  <item> SFDITEM_FIELD__SSP4_DMACR_TXDMAE
//    <name> TXDMAE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4020B024) Transmit DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_DMACR ) </loc>
//      <o.1..1> TXDMAE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP4_DMACR_RXDMAE  ---------------------------------
// SVD Line: 1616

//  <item> SFDITEM_FIELD__SSP4_DMACR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4020B024) Receive DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_DMACR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SSP4_DMACR  -----------------------------------
// SVD Line: 1607

//  <rtree> SFDITEM_REG__SSP4_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4020B024) DMA control register </i>
//    <loc> ( (unsigned int)((SSP4_DMACR >> 0) & 0xFFFFFFFF), ((SSP4_DMACR = (SSP4_DMACR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP4_DMACR_TXDMAE </item>
//    <item> SFDITEM_FIELD__SSP4_DMACR_RXDMAE </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SSP4  -------------------------------------
// SVD Line: 1662

//  <view> SSP4
//    <name> SSP4 </name>
//    <item> SFDITEM_REG__SSP4_CR0 </item>
//    <item> SFDITEM_REG__SSP4_CR1 </item>
//    <item> SFDITEM_REG__SSP4_DR </item>
//    <item> SFDITEM_REG__SSP4_SR </item>
//    <item> SFDITEM_REG__SSP4_CPSR </item>
//    <item> SFDITEM_REG__SSP4_IMSC </item>
//    <item> SFDITEM_REG__SSP4_RIS </item>
//    <item> SFDITEM_REG__SSP4_MIS </item>
//    <item> SFDITEM_REG__SSP4_ICR </item>
//    <item> SFDITEM_REG__SSP4_DMACR </item>
//  </view>
//  


// ---------------------------  Register Item Address: I2C0_CONTROL  ------------------------------
// SVD Line: 1687

unsigned int I2C0_CONTROL __AT (0x40207000);



// ------------------------------  Field Item: I2C0_CONTROL_SDA  ----------------------------------
// SVD Line: 1692

//  <item> SFDITEM_FIELD__I2C0_CONTROL_SDA
//    <name> SDA </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40207000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CONTROL ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_CONTROL_SCL  ----------------------------------
// SVD Line: 1696

//  <item> SFDITEM_FIELD__I2C0_CONTROL_SCL
//    <name> SCL </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40207000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CONTROL ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C0_CONTROL  ----------------------------------
// SVD Line: 1687

//  <rtree> SFDITEM_REG__I2C0_CONTROL
//    <name> CONTROL </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40207000) Control Status </i>
//    <loc> ( (unsigned int)((I2C0_CONTROL >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C0_CONTROL_SDA </item>
//    <item> SFDITEM_FIELD__I2C0_CONTROL_SCL </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C0_CONTROLS  ------------------------------
// SVD Line: 1702

unsigned int I2C0_CONTROLS __AT (0x40207000);



// ------------------------------  Field Item: I2C0_CONTROLS_SDA  ---------------------------------
// SVD Line: 1708

//  <item> SFDITEM_FIELD__I2C0_CONTROLS_SDA
//    <name> SDA </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40207000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CONTROLS ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_CONTROLS_SCL  ---------------------------------
// SVD Line: 1712

//  <item> SFDITEM_FIELD__I2C0_CONTROLS_SCL
//    <name> SCL </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40207000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CONTROLS ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C0_CONTROLS  ---------------------------------
// SVD Line: 1702

//  <rtree> SFDITEM_REG__I2C0_CONTROLS
//    <name> CONTROLS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40207000) Control Set </i>
//    <loc> ( (unsigned int)((I2C0_CONTROLS >> 0) & 0xFFFFFFFF), ((I2C0_CONTROLS = (I2C0_CONTROLS & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_CONTROLS_SDA </item>
//    <item> SFDITEM_FIELD__I2C0_CONTROLS_SCL </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C0_CONTROLC  ------------------------------
// SVD Line: 1718

unsigned int I2C0_CONTROLC __AT (0x40207004);



// ------------------------------  Field Item: I2C0_CONTROLC_SDA  ---------------------------------
// SVD Line: 1723

//  <item> SFDITEM_FIELD__I2C0_CONTROLC_SDA
//    <name> SDA </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40207004) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CONTROLC ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_CONTROLC_SCL  ---------------------------------
// SVD Line: 1727

//  <item> SFDITEM_FIELD__I2C0_CONTROLC_SCL
//    <name> SCL </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40207004) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CONTROLC ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C0_CONTROLC  ---------------------------------
// SVD Line: 1718

//  <rtree> SFDITEM_REG__I2C0_CONTROLC
//    <name> CONTROLC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40207004) Control Clear </i>
//    <loc> ( (unsigned int)((I2C0_CONTROLC >> 0) & 0xFFFFFFFF), ((I2C0_CONTROLC = (I2C0_CONTROLC & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_CONTROLC_SDA </item>
//    <item> SFDITEM_FIELD__I2C0_CONTROLC_SCL </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: I2C0  -------------------------------------
// SVD Line: 1674

//  <view> I2C0
//    <name> I2C0 </name>
//    <item> SFDITEM_REG__I2C0_CONTROL </item>
//    <item> SFDITEM_REG__I2C0_CONTROLS </item>
//    <item> SFDITEM_REG__I2C0_CONTROLC </item>
//  </view>
//  


// ---------------------------  Register Item Address: I2C1_CONTROL  ------------------------------
// SVD Line: 1687

unsigned int I2C1_CONTROL __AT (0x40208000);



// ------------------------------  Field Item: I2C1_CONTROL_SDA  ----------------------------------
// SVD Line: 1692

//  <item> SFDITEM_FIELD__I2C1_CONTROL_SDA
//    <name> SDA </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40208000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROL ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_CONTROL_SCL  ----------------------------------
// SVD Line: 1696

//  <item> SFDITEM_FIELD__I2C1_CONTROL_SCL
//    <name> SCL </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40208000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROL ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C1_CONTROL  ----------------------------------
// SVD Line: 1687

//  <rtree> SFDITEM_REG__I2C1_CONTROL
//    <name> CONTROL </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40208000) Control Status </i>
//    <loc> ( (unsigned int)((I2C1_CONTROL >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C1_CONTROL_SDA </item>
//    <item> SFDITEM_FIELD__I2C1_CONTROL_SCL </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C1_CONTROLS  ------------------------------
// SVD Line: 1702

unsigned int I2C1_CONTROLS __AT (0x40208000);



// ------------------------------  Field Item: I2C1_CONTROLS_SDA  ---------------------------------
// SVD Line: 1708

//  <item> SFDITEM_FIELD__I2C1_CONTROLS_SDA
//    <name> SDA </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40208000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROLS ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_CONTROLS_SCL  ---------------------------------
// SVD Line: 1712

//  <item> SFDITEM_FIELD__I2C1_CONTROLS_SCL
//    <name> SCL </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40208000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROLS ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C1_CONTROLS  ---------------------------------
// SVD Line: 1702

//  <rtree> SFDITEM_REG__I2C1_CONTROLS
//    <name> CONTROLS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40208000) Control Set </i>
//    <loc> ( (unsigned int)((I2C1_CONTROLS >> 0) & 0xFFFFFFFF), ((I2C1_CONTROLS = (I2C1_CONTROLS & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_CONTROLS_SDA </item>
//    <item> SFDITEM_FIELD__I2C1_CONTROLS_SCL </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C1_CONTROLC  ------------------------------
// SVD Line: 1718

unsigned int I2C1_CONTROLC __AT (0x40208004);



// ------------------------------  Field Item: I2C1_CONTROLC_SDA  ---------------------------------
// SVD Line: 1723

//  <item> SFDITEM_FIELD__I2C1_CONTROLC_SDA
//    <name> SDA </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40208004) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROLC ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_CONTROLC_SCL  ---------------------------------
// SVD Line: 1727

//  <item> SFDITEM_FIELD__I2C1_CONTROLC_SCL
//    <name> SCL </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40208004) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROLC ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C1_CONTROLC  ---------------------------------
// SVD Line: 1718

//  <rtree> SFDITEM_REG__I2C1_CONTROLC
//    <name> CONTROLC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40208004) Control Clear </i>
//    <loc> ( (unsigned int)((I2C1_CONTROLC >> 0) & 0xFFFFFFFF), ((I2C1_CONTROLC = (I2C1_CONTROLC & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_CONTROLC_SDA </item>
//    <item> SFDITEM_FIELD__I2C1_CONTROLC_SCL </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: I2C1  -------------------------------------
// SVD Line: 1737

//  <view> I2C1
//    <name> I2C1 </name>
//    <item> SFDITEM_REG__I2C1_CONTROL </item>
//    <item> SFDITEM_REG__I2C1_CONTROLS </item>
//    <item> SFDITEM_REG__I2C1_CONTROLC </item>
//  </view>
//  


// ---------------------------  Register Item Address: I2C2_CONTROL  ------------------------------
// SVD Line: 1687

unsigned int I2C2_CONTROL __AT (0x4020C000);



// ------------------------------  Field Item: I2C2_CONTROL_SDA  ----------------------------------
// SVD Line: 1692

//  <item> SFDITEM_FIELD__I2C2_CONTROL_SDA
//    <name> SDA </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4020C000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CONTROL ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C2_CONTROL_SCL  ----------------------------------
// SVD Line: 1696

//  <item> SFDITEM_FIELD__I2C2_CONTROL_SCL
//    <name> SCL </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4020C000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CONTROL ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C2_CONTROL  ----------------------------------
// SVD Line: 1687

//  <rtree> SFDITEM_REG__I2C2_CONTROL
//    <name> CONTROL </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4020C000) Control Status </i>
//    <loc> ( (unsigned int)((I2C2_CONTROL >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C2_CONTROL_SDA </item>
//    <item> SFDITEM_FIELD__I2C2_CONTROL_SCL </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C2_CONTROLS  ------------------------------
// SVD Line: 1702

unsigned int I2C2_CONTROLS __AT (0x4020C000);



// ------------------------------  Field Item: I2C2_CONTROLS_SDA  ---------------------------------
// SVD Line: 1708

//  <item> SFDITEM_FIELD__I2C2_CONTROLS_SDA
//    <name> SDA </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4020C000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CONTROLS ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C2_CONTROLS_SCL  ---------------------------------
// SVD Line: 1712

//  <item> SFDITEM_FIELD__I2C2_CONTROLS_SCL
//    <name> SCL </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4020C000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CONTROLS ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C2_CONTROLS  ---------------------------------
// SVD Line: 1702

//  <rtree> SFDITEM_REG__I2C2_CONTROLS
//    <name> CONTROLS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4020C000) Control Set </i>
//    <loc> ( (unsigned int)((I2C2_CONTROLS >> 0) & 0xFFFFFFFF), ((I2C2_CONTROLS = (I2C2_CONTROLS & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_CONTROLS_SDA </item>
//    <item> SFDITEM_FIELD__I2C2_CONTROLS_SCL </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C2_CONTROLC  ------------------------------
// SVD Line: 1718

unsigned int I2C2_CONTROLC __AT (0x4020C004);



// ------------------------------  Field Item: I2C2_CONTROLC_SDA  ---------------------------------
// SVD Line: 1723

//  <item> SFDITEM_FIELD__I2C2_CONTROLC_SDA
//    <name> SDA </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4020C004) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CONTROLC ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C2_CONTROLC_SCL  ---------------------------------
// SVD Line: 1727

//  <item> SFDITEM_FIELD__I2C2_CONTROLC_SCL
//    <name> SCL </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4020C004) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CONTROLC ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C2_CONTROLC  ---------------------------------
// SVD Line: 1718

//  <rtree> SFDITEM_REG__I2C2_CONTROLC
//    <name> CONTROLC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4020C004) Control Clear </i>
//    <loc> ( (unsigned int)((I2C2_CONTROLC >> 0) & 0xFFFFFFFF), ((I2C2_CONTROLC = (I2C2_CONTROLC & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_CONTROLC_SDA </item>
//    <item> SFDITEM_FIELD__I2C2_CONTROLC_SCL </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: I2C2  -------------------------------------
// SVD Line: 1744

//  <view> I2C2
//    <name> I2C2 </name>
//    <item> SFDITEM_REG__I2C2_CONTROL </item>
//    <item> SFDITEM_REG__I2C2_CONTROLS </item>
//    <item> SFDITEM_REG__I2C2_CONTROLC </item>
//  </view>
//  


// ---------------------------  Register Item Address: I2C3_CONTROL  ------------------------------
// SVD Line: 1687

unsigned int I2C3_CONTROL __AT (0x4020D000);



// ------------------------------  Field Item: I2C3_CONTROL_SDA  ----------------------------------
// SVD Line: 1692

//  <item> SFDITEM_FIELD__I2C3_CONTROL_SDA
//    <name> SDA </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4020D000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C3_CONTROL ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C3_CONTROL_SCL  ----------------------------------
// SVD Line: 1696

//  <item> SFDITEM_FIELD__I2C3_CONTROL_SCL
//    <name> SCL </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4020D000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C3_CONTROL ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C3_CONTROL  ----------------------------------
// SVD Line: 1687

//  <rtree> SFDITEM_REG__I2C3_CONTROL
//    <name> CONTROL </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4020D000) Control Status </i>
//    <loc> ( (unsigned int)((I2C3_CONTROL >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C3_CONTROL_SDA </item>
//    <item> SFDITEM_FIELD__I2C3_CONTROL_SCL </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C3_CONTROLS  ------------------------------
// SVD Line: 1702

unsigned int I2C3_CONTROLS __AT (0x4020D000);



// ------------------------------  Field Item: I2C3_CONTROLS_SDA  ---------------------------------
// SVD Line: 1708

//  <item> SFDITEM_FIELD__I2C3_CONTROLS_SDA
//    <name> SDA </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4020D000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C3_CONTROLS ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C3_CONTROLS_SCL  ---------------------------------
// SVD Line: 1712

//  <item> SFDITEM_FIELD__I2C3_CONTROLS_SCL
//    <name> SCL </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4020D000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C3_CONTROLS ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C3_CONTROLS  ---------------------------------
// SVD Line: 1702

//  <rtree> SFDITEM_REG__I2C3_CONTROLS
//    <name> CONTROLS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4020D000) Control Set </i>
//    <loc> ( (unsigned int)((I2C3_CONTROLS >> 0) & 0xFFFFFFFF), ((I2C3_CONTROLS = (I2C3_CONTROLS & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C3_CONTROLS_SDA </item>
//    <item> SFDITEM_FIELD__I2C3_CONTROLS_SCL </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C3_CONTROLC  ------------------------------
// SVD Line: 1718

unsigned int I2C3_CONTROLC __AT (0x4020D004);



// ------------------------------  Field Item: I2C3_CONTROLC_SDA  ---------------------------------
// SVD Line: 1723

//  <item> SFDITEM_FIELD__I2C3_CONTROLC_SDA
//    <name> SDA </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4020D004) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C3_CONTROLC ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C3_CONTROLC_SCL  ---------------------------------
// SVD Line: 1727

//  <item> SFDITEM_FIELD__I2C3_CONTROLC_SCL
//    <name> SCL </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4020D004) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C3_CONTROLC ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C3_CONTROLC  ---------------------------------
// SVD Line: 1718

//  <rtree> SFDITEM_REG__I2C3_CONTROLC
//    <name> CONTROLC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4020D004) Control Clear </i>
//    <loc> ( (unsigned int)((I2C3_CONTROLC >> 0) & 0xFFFFFFFF), ((I2C3_CONTROLC = (I2C3_CONTROLC & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C3_CONTROLC_SDA </item>
//    <item> SFDITEM_FIELD__I2C3_CONTROLC_SCL </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: I2C3  -------------------------------------
// SVD Line: 1751

//  <view> I2C3
//    <name> I2C3 </name>
//    <item> SFDITEM_REG__I2C3_CONTROL </item>
//    <item> SFDITEM_REG__I2C3_CONTROLS </item>
//    <item> SFDITEM_REG__I2C3_CONTROLC </item>
//  </view>
//  


// --------------------------  Register Item Address: WATCHDOG_LOAD  ------------------------------
// SVD Line: 1774

unsigned int WATCHDOG_LOAD __AT (0x40008000);



// ------------------------------  Register Item: WATCHDOG_LOAD  ----------------------------------
// SVD Line: 1774

//  <item> SFDITEM_REG__WATCHDOG_LOAD
//    <name> LOAD </name>
//    <i> [Bits 31..0] RW (@ 0x40008000) Load Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((WATCHDOG_LOAD >> 0) & 0xFFFFFFFF), ((WATCHDOG_LOAD = (WATCHDOG_LOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: WATCHDOG_VALUE  -----------------------------
// SVD Line: 1779

unsigned int WATCHDOG_VALUE __AT (0x40008004);



// ------------------------------  Register Item: WATCHDOG_VALUE  ---------------------------------
// SVD Line: 1779

//  <item> SFDITEM_REG__WATCHDOG_VALUE
//    <name> VALUE </name>
//    <i> [Bits 31..0] RO (@ 0x40008004) Value Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((WATCHDOG_VALUE >> 0) & 0xFFFFFFFF), ((WATCHDOG_VALUE = (WATCHDOG_VALUE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: WATCHDOG_CONTROL  ----------------------------
// SVD Line: 1784

unsigned int WATCHDOG_CONTROL __AT (0x40008008);



// ---------------------------  Field Item: WATCHDOG_CONTROL_INTEN  -------------------------------
// SVD Line: 1788

//  <item> SFDITEM_FIELD__WATCHDOG_CONTROL_INTEN
//    <name> INTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40008008) \nInterrupt event enable\n0 : Disable = Disable Watchdog interrupt\n1 : Enable = Enable Watchdog interrupt </i>
//    <combo> 
//      <loc> ( (unsigned int) WATCHDOG_CONTROL ) </loc>
//      <o.0..0> INTEN
//        <0=> 0: Disable = Disable Watchdog interrupt
//        <1=> 1: Enable = Enable Watchdog interrupt
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: WATCHDOG_CONTROL_RESEN  -------------------------------
// SVD Line: 1804

//  <item> SFDITEM_FIELD__WATCHDOG_CONTROL_RESEN
//    <name> RESEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40008008) \nWatchdog reset output enable\n0 : Disable = Disable Watchdog reset\n1 : Enable = ENable Watchdog reset </i>
//    <combo> 
//      <loc> ( (unsigned int) WATCHDOG_CONTROL ) </loc>
//      <o.1..1> RESEN
//        <0=> 0: Disable = Disable Watchdog reset
//        <1=> 1: Enable = ENable Watchdog reset
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: WATCHDOG_CONTROL  --------------------------------
// SVD Line: 1784

//  <rtree> SFDITEM_REG__WATCHDOG_CONTROL
//    <name> CONTROL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40008008) Control Register </i>
//    <loc> ( (unsigned int)((WATCHDOG_CONTROL >> 0) & 0xFFFFFFFF), ((WATCHDOG_CONTROL = (WATCHDOG_CONTROL & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WATCHDOG_CONTROL_INTEN </item>
//    <item> SFDITEM_FIELD__WATCHDOG_CONTROL_RESEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: WATCHDOG_INTCLR  -----------------------------
// SVD Line: 1822

unsigned int WATCHDOG_INTCLR __AT (0x4000800C);



// -----------------------------  Field Item: WATCHDOG_INTCLR_INT  --------------------------------
// SVD Line: 1827

//  <item> SFDITEM_FIELD__WATCHDOG_INTCLR_INT
//    <name> INT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4000800C) Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) WATCHDOG_INTCLR ) </loc>
//      <o.0..0> INT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: WATCHDOG_INTCLR  --------------------------------
// SVD Line: 1822

//  <rtree> SFDITEM_REG__WATCHDOG_INTCLR
//    <name> INTCLR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000800C) Interrupt Clear Register </i>
//    <loc> ( (unsigned int)((WATCHDOG_INTCLR >> 0) & 0xFFFFFFFF), ((WATCHDOG_INTCLR = (WATCHDOG_INTCLR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WATCHDOG_INTCLR_INT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: WATCHDOG_RIS  ------------------------------
// SVD Line: 1834

unsigned int WATCHDOG_RIS __AT (0x40008010);



// ------------------------------  Field Item: WATCHDOG_RIS_RIS  ----------------------------------
// SVD Line: 1839

//  <item> SFDITEM_FIELD__WATCHDOG_RIS_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40008010) Raw watchdog interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) WATCHDOG_RIS ) </loc>
//      <o.0..0> RIS
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: WATCHDOG_RIS  ----------------------------------
// SVD Line: 1834

//  <rtree> SFDITEM_REG__WATCHDOG_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40008010) Raw Interrupt Status Register </i>
//    <loc> ( (unsigned int)((WATCHDOG_RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__WATCHDOG_RIS_RIS </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: WATCHDOG_MIS  ------------------------------
// SVD Line: 1845

unsigned int WATCHDOG_MIS __AT (0x40008014);



// ------------------------------  Field Item: WATCHDOG_MIS_MIS  ----------------------------------
// SVD Line: 1850

//  <item> SFDITEM_FIELD__WATCHDOG_MIS_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40008014) Masked Watchdog interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) WATCHDOG_MIS ) </loc>
//      <o.0..0> MIS
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: WATCHDOG_MIS  ----------------------------------
// SVD Line: 1845

//  <rtree> SFDITEM_REG__WATCHDOG_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40008014) Mask Interrupt Status Register </i>
//    <loc> ( (unsigned int)((WATCHDOG_MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__WATCHDOG_MIS_MIS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: WATCHDOG_LOCK  ------------------------------
// SVD Line: 1856

unsigned int WATCHDOG_LOCK __AT (0x40008C00);



// ------------------------------  Register Item: WATCHDOG_LOCK  ----------------------------------
// SVD Line: 1856

//  <item> SFDITEM_REG__WATCHDOG_LOCK
//    <name> LOCK </name>
//    <i> [Bits 31..0] RW (@ 0x40008C00) Lock Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((WATCHDOG_LOCK >> 0) & 0xFFFFFFFF), ((WATCHDOG_LOCK = (WATCHDOG_LOCK & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Peripheral View: WATCHDOG  -----------------------------------
// SVD Line: 1758

//  <view> WATCHDOG
//    <name> WATCHDOG </name>
//    <item> SFDITEM_REG__WATCHDOG_LOAD </item>
//    <item> SFDITEM_REG__WATCHDOG_VALUE </item>
//    <item> SFDITEM_REG__WATCHDOG_CONTROL </item>
//    <item> SFDITEM_REG__WATCHDOG_INTCLR </item>
//    <item> SFDITEM_REG__WATCHDOG_RIS </item>
//    <item> SFDITEM_REG__WATCHDOG_MIS </item>
//    <item> SFDITEM_REG__WATCHDOG_LOCK </item>
//  </view>
//  


// ---------------------------  Register Item Address: SCC_CFG_REG0  ------------------------------
// SVD Line: 1875

unsigned int SCC_CFG_REG0 __AT (0x40300000);



// -----------------------------  Field Item: SCC_CFG_REG0_REMAP  ---------------------------------
// SVD Line: 1880

//  <item> SFDITEM_FIELD__SCC_CFG_REG0_REMAP
//    <name> REMAP </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40300000) REMAP Block RAM to ZBT </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_CFG_REG0 ) </loc>
//      <o.0..0> REMAP
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: SCC_CFG_REG0  ----------------------------------
// SVD Line: 1875

//  <rtree> SFDITEM_REG__SCC_CFG_REG0
//    <name> CFG_REG0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40300000) Configuration register 0 </i>
//    <loc> ( (unsigned int)((SCC_CFG_REG0 >> 0) & 0xFFFFFFFF), ((SCC_CFG_REG0 = (SCC_CFG_REG0 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_CFG_REG0_REMAP </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SCC_CFG_REG1  ------------------------------
// SVD Line: 1886

unsigned int SCC_CFG_REG1 __AT (0x40300004);



// ----------------------------  Field Item: SCC_CFG_REG1_MCC_LED7  -------------------------------
// SVD Line: 1891

//  <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED7
//    <name> MCC_LED7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40300004) \nMCC LED 7\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG1 ) </loc>
//      <o.7..7> MCC_LED7
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SCC_CFG_REG1_MCC_LED6  -------------------------------
// SVD Line: 1905

//  <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED6
//    <name> MCC_LED6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40300004) \nMCC LED 6\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG1 ) </loc>
//      <o.6..6> MCC_LED6
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SCC_CFG_REG1_MCC_LED5  -------------------------------
// SVD Line: 1919

//  <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED5
//    <name> MCC_LED5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40300004) \nMCC LED 5\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG1 ) </loc>
//      <o.5..5> MCC_LED5
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SCC_CFG_REG1_MCC_LED4  -------------------------------
// SVD Line: 1933

//  <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED4
//    <name> MCC_LED4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40300004) \nMCC LED 4\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG1 ) </loc>
//      <o.4..4> MCC_LED4
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SCC_CFG_REG1_MCC_LED3  -------------------------------
// SVD Line: 1947

//  <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED3
//    <name> MCC_LED3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40300004) \nMCC LED 3\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG1 ) </loc>
//      <o.3..3> MCC_LED3
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SCC_CFG_REG1_MCC_LED2  -------------------------------
// SVD Line: 1961

//  <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED2
//    <name> MCC_LED2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40300004) \nMCC LED 2\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG1 ) </loc>
//      <o.2..2> MCC_LED2
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SCC_CFG_REG1_MCC_LED1  -------------------------------
// SVD Line: 1975

//  <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED1
//    <name> MCC_LED1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40300004) \nMCC LED 1\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG1 ) </loc>
//      <o.1..1> MCC_LED1
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SCC_CFG_REG1_MCC_LED0  -------------------------------
// SVD Line: 1989

//  <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED0
//    <name> MCC_LED0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40300004) \nMCC LED 0\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG1 ) </loc>
//      <o.0..0> MCC_LED0
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: SCC_CFG_REG1  ----------------------------------
// SVD Line: 1886

//  <rtree> SFDITEM_REG__SCC_CFG_REG1
//    <name> CFG_REG1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40300004) Configuration register 1 </i>
//    <loc> ( (unsigned int)((SCC_CFG_REG1 >> 0) & 0xFFFFFFFF), ((SCC_CFG_REG1 = (SCC_CFG_REG1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED7 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED6 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED5 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED4 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED3 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED2 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED1 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED0 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SCC_CFG_REG2  ------------------------------
// SVD Line: 2005

unsigned int SCC_CFG_REG2 __AT (0x40300008);



// -------------------------------  Register Item: SCC_CFG_REG2  ----------------------------------
// SVD Line: 2005

//  <item> SFDITEM_REG__SCC_CFG_REG2
//    <name> CFG_REG2 </name>
//    <i> [Bits 31..0] RO (@ 0x40300008) Configuration register 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SCC_CFG_REG2 >> 0) & 0xFFFFFFFF), ((SCC_CFG_REG2 = (SCC_CFG_REG2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: SCC_CFG_REG3  ------------------------------
// SVD Line: 2010

unsigned int SCC_CFG_REG3 __AT (0x4030000C);



// --------------------------  Field Item: SCC_CFG_REG3_MCC_SWITCH7  ------------------------------
// SVD Line: 2015

//  <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH7
//    <name> MCC_SWITCH7 </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4030000C) \nMCC switch 7\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG3 ) </loc>
//      <o.7..7> MCC_SWITCH7
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// --------------------------  Field Item: SCC_CFG_REG3_MCC_SWITCH6  ------------------------------
// SVD Line: 2029

//  <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH6
//    <name> MCC_SWITCH6 </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4030000C) \nMCC switch 6\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG3 ) </loc>
//      <o.6..6> MCC_SWITCH6
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// --------------------------  Field Item: SCC_CFG_REG3_MCC_SWITCH5  ------------------------------
// SVD Line: 2043

//  <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH5
//    <name> MCC_SWITCH5 </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4030000C) \nMCC switch 5\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG3 ) </loc>
//      <o.5..5> MCC_SWITCH5
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// --------------------------  Field Item: SCC_CFG_REG3_MCC_SWITCH4  ------------------------------
// SVD Line: 2057

//  <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH4
//    <name> MCC_SWITCH4 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4030000C) \nMCC switch 4\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG3 ) </loc>
//      <o.4..4> MCC_SWITCH4
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// --------------------------  Field Item: SCC_CFG_REG3_MCC_SWITCH3  ------------------------------
// SVD Line: 2071

//  <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH3
//    <name> MCC_SWITCH3 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4030000C) \nMCC switch 3\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG3 ) </loc>
//      <o.3..3> MCC_SWITCH3
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// --------------------------  Field Item: SCC_CFG_REG3_MCC_SWITCH2  ------------------------------
// SVD Line: 2085

//  <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH2
//    <name> MCC_SWITCH2 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4030000C) \nMCC switch 2\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG3 ) </loc>
//      <o.2..2> MCC_SWITCH2
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// --------------------------  Field Item: SCC_CFG_REG3_MCC_SWITCH1  ------------------------------
// SVD Line: 2099

//  <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH1
//    <name> MCC_SWITCH1 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4030000C) \nMCC switch 1\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG3 ) </loc>
//      <o.1..1> MCC_SWITCH1
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// --------------------------  Field Item: SCC_CFG_REG3_MCC_SWITCHE0  -----------------------------
// SVD Line: 2113

//  <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCHE0
//    <name> MCC_SWITCHE0 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4030000C) \nMCC switch 0\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG3 ) </loc>
//      <o.0..0> MCC_SWITCHE0
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: SCC_CFG_REG3  ----------------------------------
// SVD Line: 2010

//  <rtree> SFDITEM_REG__SCC_CFG_REG3
//    <name> CFG_REG3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4030000C) Configuration register 3 </i>
//    <loc> ( (unsigned int)((SCC_CFG_REG3 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH7 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH6 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH5 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH4 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH3 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH2 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH1 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCHE0 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SCC_CFG_REG4  ------------------------------
// SVD Line: 2129

unsigned int SCC_CFG_REG4 __AT (0x40300010);



// -----------------------------  Field Item: SCC_CFG_REG4_BRDREV  --------------------------------
// SVD Line: 2134

//  <item> SFDITEM_FIELD__SCC_CFG_REG4_BRDREV
//    <name> BRDREV </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x40300010) Board Revision </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_CFG_REG4 >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: SCC_CFG_REG4  ----------------------------------
// SVD Line: 2129

//  <rtree> SFDITEM_REG__SCC_CFG_REG4
//    <name> CFG_REG4 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40300010) Configuration register 4 </i>
//    <loc> ( (unsigned int)((SCC_CFG_REG4 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCC_CFG_REG4_BRDREV </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SCC_CFG_REG5  ------------------------------
// SVD Line: 2140

unsigned int SCC_CFG_REG5 __AT (0x40300014);



// -----------------------------  Field Item: SCC_CFG_REG5_DEBUG  ---------------------------------
// SVD Line: 2144

//  <item> SFDITEM_FIELD__SCC_CFG_REG5_DEBUG
//    <name> DEBUG </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40300014) \nDebug connection\n0 : SWD = Serial Wire Debug\n1 : JTAG = JTAG </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG5 ) </loc>
//      <o.5..5> DEBUG
//        <0=> 0: SWD = Serial Wire Debug
//        <1=> 1: JTAG = JTAG
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: SCC_CFG_REG5  ----------------------------------
// SVD Line: 2140

//  <rtree> SFDITEM_REG__SCC_CFG_REG5
//    <name> CFG_REG5 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40300014) CFG_REG5 </i>
//    <loc> ( (unsigned int)((SCC_CFG_REG5 >> 0) & 0xFFFFFFFF), ((SCC_CFG_REG5 = (SCC_CFG_REG5 & ~(0x20UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x20) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_CFG_REG5_DEBUG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SCC_CFG_REG6  ------------------------------
// SVD Line: 2160

unsigned int SCC_CFG_REG6 __AT (0x40300018);



// -------------------------------  Register Item: SCC_CFG_REG6  ----------------------------------
// SVD Line: 2160

//  <item> SFDITEM_REG__SCC_CFG_REG6
//    <name> CFG_REG6 </name>
//    <i> [Bits 31..0] RO (@ 0x40300018) CFG_REG6 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SCC_CFG_REG6 >> 0) & 0xFFFFFFFF), ((SCC_CFG_REG6 = (SCC_CFG_REG6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: SCC_CFG_REG7  ------------------------------
// SVD Line: 2164

unsigned int SCC_CFG_REG7 __AT (0x4030001C);



// -------------------------------  Register Item: SCC_CFG_REG7  ----------------------------------
// SVD Line: 2164

//  <item> SFDITEM_REG__SCC_CFG_REG7
//    <name> CFG_REG7 </name>
//    <i> [Bits 31..0] RO (@ 0x4030001C) CFG_REG7 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SCC_CFG_REG7 >> 0) & 0xFFFFFFFF), ((SCC_CFG_REG7 = (SCC_CFG_REG7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SCC_SYS_CFGDATA_RTN  ---------------------------
// SVD Line: 2168

unsigned int SCC_SYS_CFGDATA_RTN __AT (0x403000A0);



// ---------------------------  Register Item: SCC_SYS_CFGDATA_RTN  -------------------------------
// SVD Line: 2168

//  <item> SFDITEM_REG__SCC_SYS_CFGDATA_RTN
//    <name> SYS_CFGDATA_RTN </name>
//    <i> [Bits 31..0] RW (@ 0x403000A0) System configuration data register RTN </i>
//    <edit> 
//      <loc> ( (unsigned int)((SCC_SYS_CFGDATA_RTN >> 0) & 0xFFFFFFFF), ((SCC_SYS_CFGDATA_RTN = (SCC_SYS_CFGDATA_RTN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SCC_SYS_CFGDATA_OUT  ---------------------------
// SVD Line: 2173

unsigned int SCC_SYS_CFGDATA_OUT __AT (0x403000A4);



// ---------------------------  Register Item: SCC_SYS_CFGDATA_OUT  -------------------------------
// SVD Line: 2173

//  <item> SFDITEM_REG__SCC_SYS_CFGDATA_OUT
//    <name> SYS_CFGDATA_OUT </name>
//    <i> [Bits 31..0] RW (@ 0x403000A4) System configuration data register OUT </i>
//    <edit> 
//      <loc> ( (unsigned int)((SCC_SYS_CFGDATA_OUT >> 0) & 0xFFFFFFFF), ((SCC_SYS_CFGDATA_OUT = (SCC_SYS_CFGDATA_OUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SCC_SYS_CFGCTRL  -----------------------------
// SVD Line: 2178

unsigned int SCC_SYS_CFGCTRL __AT (0x403000A8);



// ----------------------------  Field Item: SCC_SYS_CFGCTRL_START  -------------------------------
// SVD Line: 2183

//  <item> SFDITEM_FIELD__SCC_SYS_CFGCTRL_START
//    <name> START </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x403000A8) Start: generates interrupt on write to this bit </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_SYS_CFGCTRL ) </loc>
//      <o.31..31> START
//    </check>
//  </item>
//  


// --------------------------  Field Item: SCC_SYS_CFGCTRL_RW_ACCESS  -----------------------------
// SVD Line: 2187

//  <item> SFDITEM_FIELD__SCC_SYS_CFGCTRL_RW_ACCESS
//    <name> RW_ACCESS </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x403000A8) Read/Write Access </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_SYS_CFGCTRL ) </loc>
//      <o.30..30> RW_ACCESS
//    </check>
//  </item>
//  


// --------------------------  Field Item: SCC_SYS_CFGCTRL_RFUNCVAL  ------------------------------
// SVD Line: 2191

//  <item> SFDITEM_FIELD__SCC_SYS_CFGCTRL_RFUNCVAL
//    <name> RFUNCVAL </name>
//    <rw> 
//    <i> [Bits 25..20] RW (@ 0x403000A8) Function value </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_SYS_CFGCTRL >> 20) & 0x3F), ((SCC_SYS_CFGCTRL = (SCC_SYS_CFGCTRL & ~(0x3FUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: SCC_SYS_CFGCTRL_DEVICE  -------------------------------
// SVD Line: 2195

//  <item> SFDITEM_FIELD__SCC_SYS_CFGCTRL_DEVICE
//    <name> DEVICE </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x403000A8) Device (value of 0/1/2 for supported clocks </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCC_SYS_CFGCTRL >> 0) & 0xFFF), ((SCC_SYS_CFGCTRL = (SCC_SYS_CFGCTRL & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SCC_SYS_CFGCTRL  --------------------------------
// SVD Line: 2178

//  <rtree> SFDITEM_REG__SCC_SYS_CFGCTRL
//    <name> SYS_CFGCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x403000A8) System configuration control register </i>
//    <loc> ( (unsigned int)((SCC_SYS_CFGCTRL >> 0) & 0xFFFFFFFF), ((SCC_SYS_CFGCTRL = (SCC_SYS_CFGCTRL & ~(0xC3F00FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC3F00FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_SYS_CFGCTRL_START </item>
//    <item> SFDITEM_FIELD__SCC_SYS_CFGCTRL_RW_ACCESS </item>
//    <item> SFDITEM_FIELD__SCC_SYS_CFGCTRL_RFUNCVAL </item>
//    <item> SFDITEM_FIELD__SCC_SYS_CFGCTRL_DEVICE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SCC_SYS_CFGSTAT  -----------------------------
// SVD Line: 2201

unsigned int SCC_SYS_CFGSTAT __AT (0x403000AC);



// ----------------------------  Field Item: SCC_SYS_CFGSTAT_ERROR  -------------------------------
// SVD Line: 2206

//  <item> SFDITEM_FIELD__SCC_SYS_CFGSTAT_ERROR
//    <name> ERROR </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x403000AC) Error Flag </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_SYS_CFGSTAT ) </loc>
//      <o.1..1> ERROR
//    </check>
//  </item>
//  


// --------------------------  Field Item: SCC_SYS_CFGSTAT_COMPLETE  ------------------------------
// SVD Line: 2210

//  <item> SFDITEM_FIELD__SCC_SYS_CFGSTAT_COMPLETE
//    <name> COMPLETE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x403000AC) Complete Flag </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_SYS_CFGSTAT ) </loc>
//      <o.0..0> COMPLETE
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SCC_SYS_CFGSTAT  --------------------------------
// SVD Line: 2201

//  <rtree> SFDITEM_REG__SCC_SYS_CFGSTAT
//    <name> SYS_CFGSTAT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x403000AC) System configuration status register </i>
//    <loc> ( (unsigned int)((SCC_SYS_CFGSTAT >> 0) & 0xFFFFFFFF), ((SCC_SYS_CFGSTAT = (SCC_SYS_CFGSTAT & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_SYS_CFGSTAT_ERROR </item>
//    <item> SFDITEM_FIELD__SCC_SYS_CFGSTAT_COMPLETE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCC_DLL  ---------------------------------
// SVD Line: 2216

unsigned int SCC_DLL __AT (0x40300100);



// ----------------------------  Field Item: SCC_DLL_LOCKED_MASKED  -------------------------------
// SVD Line: 2221

//  <item> SFDITEM_FIELD__SCC_DLL_LOCKED_MASKED
//    <name> LOCKED_MASKED </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x40300100) Error Flag </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_DLL >> 24) & 0xFF), ((SCC_DLL = (SCC_DLL & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SCC_DLL_LOCK_UNLOCK  --------------------------------
// SVD Line: 2225

//  <item> SFDITEM_FIELD__SCC_DLL_LOCK_UNLOCK
//    <name> LOCK_UNLOCK </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x40300100) Complete Flag </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_DLL >> 16) & 0xFF), ((SCC_DLL = (SCC_DLL & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCC_DLL_LOCKED  -----------------------------------
// SVD Line: 2229

//  <item> SFDITEM_FIELD__SCC_DLL_LOCKED
//    <name> LOCKED </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40300100) Complete Flag </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_DLL ) </loc>
//      <o.0..0> LOCKED
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: SCC_DLL  ------------------------------------
// SVD Line: 2216

//  <rtree> SFDITEM_REG__SCC_DLL
//    <name> DLL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40300100) DLL Lock Register </i>
//    <loc> ( (unsigned int)((SCC_DLL >> 0) & 0xFFFFFFFF), ((SCC_DLL = (SCC_DLL & ~(0xFFFF0001UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF0001) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_DLL_LOCKED_MASKED </item>
//    <item> SFDITEM_FIELD__SCC_DLL_LOCK_UNLOCK </item>
//    <item> SFDITEM_FIELD__SCC_DLL_LOCKED </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCC_AID  ---------------------------------
// SVD Line: 2235

unsigned int SCC_AID __AT (0x40300FF8);



// -----------------------------  Field Item: SCC_AID_FPGA_BUILD  ---------------------------------
// SVD Line: 2240

//  <item> SFDITEM_FIELD__SCC_AID_FPGA_BUILD
//    <name> FPGA_BUILD </name>
//    <r> 
//    <i> [Bits 31..24] RO (@ 0x40300FF8) FPGA Build Number </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_AID >> 24) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: SCC_AID_MPS2_REV  ----------------------------------
// SVD Line: 2244

//  <item> SFDITEM_FIELD__SCC_AID_MPS2_REV
//    <name> MPS2_REV </name>
//    <r> 
//    <i> [Bits 23..20] RO (@ 0x40300FF8) \nV2M-MPS2 target Board Revision\n0 : A = Revision A\n1 : B = Revision B\n2 : C = Revision C\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_AID ) </loc>
//      <o.23..20> MPS2_REV
//        <0=> 0: A = Revision A
//        <1=> 1: B = Revision B
//        <2=> 2: C = Revision C
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SCC_AID_NUM_CFG_REG  --------------------------------
// SVD Line: 2262

//  <item> SFDITEM_FIELD__SCC_AID_NUM_CFG_REG
//    <name> NUM_CFG_REG </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40300FF8) Number of SCC configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_AID >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: SCC_AID  ------------------------------------
// SVD Line: 2235

//  <rtree> SFDITEM_REG__SCC_AID
//    <name> AID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40300FF8) AID register </i>
//    <loc> ( (unsigned int)((SCC_AID >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCC_AID_FPGA_BUILD </item>
//    <item> SFDITEM_FIELD__SCC_AID_MPS2_REV </item>
//    <item> SFDITEM_FIELD__SCC_AID_NUM_CFG_REG </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: SCC_ID  ---------------------------------
// SVD Line: 2268

unsigned int SCC_ID __AT (0x40300FFC);



// ----------------------------  Field Item: SCC_ID_IMPLEMENTER_ID  -------------------------------
// SVD Line: 2273

//  <item> SFDITEM_FIELD__SCC_ID_IMPLEMENTER_ID
//    <name> IMPLEMENTER_ID </name>
//    <r> 
//    <i> [Bits 31..24] RO (@ 0x40300FFC) Implementer ID: 0x41 = ARM </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_ID >> 24) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SCC_ID_APP_NOTE_VAR  --------------------------------
// SVD Line: 2283

//  <item> SFDITEM_FIELD__SCC_ID_APP_NOTE_VAR
//    <name> APP_NOTE_VAR </name>
//    <r> 
//    <i> [Bits 23..20] RO (@ 0x40300FFC) Application note IP variant number </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_ID >> 20) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCC_ID_IP_ARCH  -----------------------------------
// SVD Line: 2287

//  <item> SFDITEM_FIELD__SCC_ID_IP_ARCH
//    <name> IP_ARCH </name>
//    <r> 
//    <i> [Bits 19..16] RO (@ 0x40300FFC) \nIP Architecture\n0 : Reserved - do not use\n1 : Reserved - do not use\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : AHB = AHB\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_ID ) </loc>
//      <o.19..16> IP_ARCH
//        <0=> 0: 
//        <1=> 1: 
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: AHB = AHB
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: SCC_ID_PRI_NUM  -----------------------------------
// SVD Line: 2297

//  <item> SFDITEM_FIELD__SCC_ID_PRI_NUM
//    <name> PRI_NUM </name>
//    <r> 
//    <i> [Bits 11..4] RO (@ 0x40300FFC) Primary Part Number: 383 = AN383 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_ID >> 4) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCC_ID_APP_REV  -----------------------------------
// SVD Line: 2301

//  <item> SFDITEM_FIELD__SCC_ID_APP_REV
//    <name> APP_REV </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x40300FFC) Application note IP revision number </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_ID >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: SCC_ID  -------------------------------------
// SVD Line: 2268

//  <rtree> SFDITEM_REG__SCC_ID
//    <name> ID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40300FFC) AID register </i>
//    <loc> ( (unsigned int)((SCC_ID >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCC_ID_IMPLEMENTER_ID </item>
//    <item> SFDITEM_FIELD__SCC_ID_APP_NOTE_VAR </item>
//    <item> SFDITEM_FIELD__SCC_ID_IP_ARCH </item>
//    <item> SFDITEM_FIELD__SCC_ID_PRI_NUM </item>
//    <item> SFDITEM_FIELD__SCC_ID_APP_REV </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SCC  --------------------------------------
// SVD Line: 1864

//  <view> SCC
//    <name> SCC </name>
//    <item> SFDITEM_REG__SCC_CFG_REG0 </item>
//    <item> SFDITEM_REG__SCC_CFG_REG1 </item>
//    <item> SFDITEM_REG__SCC_CFG_REG2 </item>
//    <item> SFDITEM_REG__SCC_CFG_REG3 </item>
//    <item> SFDITEM_REG__SCC_CFG_REG4 </item>
//    <item> SFDITEM_REG__SCC_CFG_REG5 </item>
//    <item> SFDITEM_REG__SCC_CFG_REG6 </item>
//    <item> SFDITEM_REG__SCC_CFG_REG7 </item>
//    <item> SFDITEM_REG__SCC_SYS_CFGDATA_RTN </item>
//    <item> SFDITEM_REG__SCC_SYS_CFGDATA_OUT </item>
//    <item> SFDITEM_REG__SCC_SYS_CFGCTRL </item>
//    <item> SFDITEM_REG__SCC_SYS_CFGSTAT </item>
//    <item> SFDITEM_REG__SCC_DLL </item>
//    <item> SFDITEM_REG__SCC_AID </item>
//    <item> SFDITEM_REG__SCC_ID </item>
//  </view>
//  


// ---------------------------  Register Item Address: I2S_CONTROL  -------------------------------
// SVD Line: 2328

unsigned int I2S_CONTROL __AT (0x40301000);



// -------------------------------  Register Item: I2S_CONTROL  -----------------------------------
// SVD Line: 2328

//  <item> SFDITEM_REG__I2S_CONTROL
//    <name> CONTROL </name>
//    <i> [Bits 31..0] RW (@ 0x40301000) CONTROL Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((I2S_CONTROL >> 0) & 0xFFFFFFFF), ((I2S_CONTROL = (I2S_CONTROL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: I2S_STATUS  -------------------------------
// SVD Line: 2333

unsigned int I2S_STATUS __AT (0x40301004);



// --------------------------------  Register Item: I2S_STATUS  -----------------------------------
// SVD Line: 2333

//  <item> SFDITEM_REG__I2S_STATUS
//    <name> STATUS </name>
//    <i> [Bits 31..0] RO (@ 0x40301004) STATUS Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((I2S_STATUS >> 0) & 0xFFFFFFFF), ((I2S_STATUS = (I2S_STATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: I2S_ERROR  --------------------------------
// SVD Line: 2338

unsigned int I2S_ERROR __AT (0x40301008);



// --------------------------------  Register Item: I2S_ERROR  ------------------------------------
// SVD Line: 2338

//  <item> SFDITEM_REG__I2S_ERROR
//    <name> ERROR </name>
//    <i> [Bits 31..0] RW (@ 0x40301008) Error Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((I2S_ERROR >> 0) & 0xFFFFFFFF), ((I2S_ERROR = (I2S_ERROR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: I2S_DIVIDE  -------------------------------
// SVD Line: 2343

unsigned int I2S_DIVIDE __AT (0x4030100C);



// --------------------------------  Register Item: I2S_DIVIDE  -----------------------------------
// SVD Line: 2343

//  <item> SFDITEM_REG__I2S_DIVIDE
//    <name> DIVIDE </name>
//    <i> [Bits 31..0] RW (@ 0x4030100C) Divide ratio Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((I2S_DIVIDE >> 0) & 0xFFFFFFFF), ((I2S_DIVIDE = (I2S_DIVIDE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: I2S_TXBUF  --------------------------------
// SVD Line: 2348

unsigned int I2S_TXBUF __AT (0x40301010);



// --------------------------------  Register Item: I2S_TXBUF  ------------------------------------
// SVD Line: 2348

//  <item> SFDITEM_REG__I2S_TXBUF
//    <name> TXBUF </name>
//    <i> [Bits 31..0] WO (@ 0x40301010) Transmit Buffer </i>
//    <edit> 
//      <loc> ( (unsigned int)((I2S_TXBUF >> 0) & 0xFFFFFFFF), ((I2S_TXBUF = (I2S_TXBUF & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: I2S_RXBUF  --------------------------------
// SVD Line: 2353

unsigned int I2S_RXBUF __AT (0x40301014);



// --------------------------------  Register Item: I2S_RXBUF  ------------------------------------
// SVD Line: 2353

//  <item> SFDITEM_REG__I2S_RXBUF
//    <name> RXBUF </name>
//    <i> [Bits 31..0] RO (@ 0x40301014) Receive Buffer </i>
//    <edit> 
//      <loc> ( (unsigned int)((I2S_RXBUF >> 0) & 0xFFFFFFFF), ((I2S_RXBUF = (I2S_RXBUF & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: I2S_ITCR  --------------------------------
// SVD Line: 2358

unsigned int I2S_ITCR __AT (0x40301300);



// ---------------------------------  Register Item: I2S_ITCR  ------------------------------------
// SVD Line: 2358

//  <item> SFDITEM_REG__I2S_ITCR
//    <name> ITCR </name>
//    <i> [Bits 31..0] RW (@ 0x40301300) Integration Test Control Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((I2S_ITCR >> 0) & 0xFFFFFFFF), ((I2S_ITCR = (I2S_ITCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: I2S_ITIP1  --------------------------------
// SVD Line: 2363

unsigned int I2S_ITIP1 __AT (0x40301304);



// --------------------------------  Register Item: I2S_ITIP1  ------------------------------------
// SVD Line: 2363

//  <item> SFDITEM_REG__I2S_ITIP1
//    <name> ITIP1 </name>
//    <i> [Bits 31..0] RW (@ 0x40301304) Integration Test Input Register 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((I2S_ITIP1 >> 0) & 0xFFFFFFFF), ((I2S_ITIP1 = (I2S_ITIP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: I2S_ITOP1  --------------------------------
// SVD Line: 2368

unsigned int I2S_ITOP1 __AT (0x40301308);



// --------------------------------  Register Item: I2S_ITOP1  ------------------------------------
// SVD Line: 2368

//  <item> SFDITEM_REG__I2S_ITOP1
//    <name> ITOP1 </name>
//    <i> [Bits 31..0] RW (@ 0x40301308) Integration Test Output Register 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((I2S_ITOP1 >> 0) & 0xFFFFFFFF), ((I2S_ITOP1 = (I2S_ITOP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: I2S  --------------------------------------
// SVD Line: 2311

//  <view> I2S
//    <name> I2S </name>
//    <item> SFDITEM_REG__I2S_CONTROL </item>
//    <item> SFDITEM_REG__I2S_STATUS </item>
//    <item> SFDITEM_REG__I2S_ERROR </item>
//    <item> SFDITEM_REG__I2S_DIVIDE </item>
//    <item> SFDITEM_REG__I2S_TXBUF </item>
//    <item> SFDITEM_REG__I2S_RXBUF </item>
//    <item> SFDITEM_REG__I2S_ITCR </item>
//    <item> SFDITEM_REG__I2S_ITIP1 </item>
//    <item> SFDITEM_REG__I2S_ITOP1 </item>
//  </view>
//  


// ---------------------------  Register Item Address: FPGASYS_LED  -------------------------------
// SVD Line: 2389

unsigned int FPGASYS_LED __AT (0x40302000);



// ------------------------------  Field Item: FPGASYS_LED_LED0  ----------------------------------
// SVD Line: 2394

//  <item> SFDITEM_FIELD__FPGASYS_LED_LED0
//    <name> LED0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40302000) \nLED0\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGASYS_LED ) </loc>
//      <o.0..0> LED0
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: FPGASYS_LED_LED1  ----------------------------------
// SVD Line: 2407

//  <item> SFDITEM_FIELD__FPGASYS_LED_LED1
//    <name> LED1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40302000) \nLED1\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGASYS_LED ) </loc>
//      <o.1..1> LED1
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: FPGASYS_LED  ----------------------------------
// SVD Line: 2389

//  <rtree> SFDITEM_REG__FPGASYS_LED
//    <name> LED </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40302000) LED Connections </i>
//    <loc> ( (unsigned int)((FPGASYS_LED >> 0) & 0xFFFFFFFF), ((FPGASYS_LED = (FPGASYS_LED & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FPGASYS_LED_LED0 </item>
//    <item> SFDITEM_FIELD__FPGASYS_LED_LED1 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: FPGASYS_BUTTON  -----------------------------
// SVD Line: 2422

unsigned int FPGASYS_BUTTON __AT (0x40302008);



// ---------------------------  Field Item: FPGASYS_BUTTON_BUTTON0  -------------------------------
// SVD Line: 2427

//  <item> SFDITEM_FIELD__FPGASYS_BUTTON_BUTTON0
//    <name> BUTTON0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40302008) \nBUTTON0\n0 : Off = BUTTON is off\n1 : On = BUTTON is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGASYS_BUTTON ) </loc>
//      <o.0..0> BUTTON0
//        <0=> 0: Off = BUTTON is off
//        <1=> 1: On = BUTTON is on
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: FPGASYS_BUTTON_BUTTON1  -------------------------------
// SVD Line: 2440

//  <item> SFDITEM_FIELD__FPGASYS_BUTTON_BUTTON1
//    <name> BUTTON1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40302008) \nBUTTON1\n0 : Off = BUTTON is off\n1 : On = BUTTON is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGASYS_BUTTON ) </loc>
//      <o.1..1> BUTTON1
//        <0=> 0: Off = BUTTON is off
//        <1=> 1: On = BUTTON is on
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: FPGASYS_BUTTON  ---------------------------------
// SVD Line: 2422

//  <rtree> SFDITEM_REG__FPGASYS_BUTTON
//    <name> BUTTON </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40302008) Button Connections </i>
//    <loc> ( (unsigned int)((FPGASYS_BUTTON >> 0) & 0xFFFFFFFF), ((FPGASYS_BUTTON = (FPGASYS_BUTTON & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FPGASYS_BUTTON_BUTTON0 </item>
//    <item> SFDITEM_FIELD__FPGASYS_BUTTON_BUTTON1 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: FPGASYS_CLK1HZ  -----------------------------
// SVD Line: 2455

unsigned int FPGASYS_CLK1HZ __AT (0x40302010);



// ------------------------------  Register Item: FPGASYS_CLK1HZ  ---------------------------------
// SVD Line: 2455

//  <item> SFDITEM_REG__FPGASYS_CLK1HZ
//    <name> CLK1HZ </name>
//    <i> [Bits 31..0] RO (@ 0x40302010) 1Hz Up Counter </i>
//    <edit> 
//      <loc> ( (unsigned int)((FPGASYS_CLK1HZ >> 0) & 0xFFFFFFFF), ((FPGASYS_CLK1HZ = (FPGASYS_CLK1HZ & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: FPGASYS_CLK100HZ  ----------------------------
// SVD Line: 2460

unsigned int FPGASYS_CLK100HZ __AT (0x40302014);



// -----------------------------  Register Item: FPGASYS_CLK100HZ  --------------------------------
// SVD Line: 2460

//  <item> SFDITEM_REG__FPGASYS_CLK100HZ
//    <name> CLK100HZ </name>
//    <i> [Bits 31..0] RO (@ 0x40302014) 100Hz Up Counter </i>
//    <edit> 
//      <loc> ( (unsigned int)((FPGASYS_CLK100HZ >> 0) & 0xFFFFFFFF), ((FPGASYS_CLK100HZ = (FPGASYS_CLK100HZ & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: FPGASYS_COUNTER  -----------------------------
// SVD Line: 2465

unsigned int FPGASYS_COUNTER __AT (0x40302018);



// -----------------------------  Register Item: FPGASYS_COUNTER  ---------------------------------
// SVD Line: 2465

//  <item> SFDITEM_REG__FPGASYS_COUNTER
//    <name> COUNTER </name>
//    <i> [Bits 31..0] RW (@ 0x40302018) Cycle up counter </i>
//    <edit> 
//      <loc> ( (unsigned int)((FPGASYS_COUNTER >> 0) & 0xFFFFFFFF), ((FPGASYS_COUNTER = (FPGASYS_COUNTER & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: FPGASYS_PRESCALER  ----------------------------
// SVD Line: 2470

unsigned int FPGASYS_PRESCALER __AT (0x4030201C);



// ----------------------------  Register Item: FPGASYS_PRESCALER  --------------------------------
// SVD Line: 2470

//  <item> SFDITEM_REG__FPGASYS_PRESCALER
//    <name> PRESCALER </name>
//    <i> [Bits 31..0] RW (@ 0x4030201C) Reload value for prescaler counter </i>
//    <edit> 
//      <loc> ( (unsigned int)((FPGASYS_PRESCALER >> 0) & 0xFFFFFFFF), ((FPGASYS_PRESCALER = (FPGASYS_PRESCALER & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: FPGASYS_PSCNTR  -----------------------------
// SVD Line: 2475

unsigned int FPGASYS_PSCNTR __AT (0x40302020);



// ------------------------------  Register Item: FPGASYS_PSCNTR  ---------------------------------
// SVD Line: 2475

//  <item> SFDITEM_REG__FPGASYS_PSCNTR
//    <name> PSCNTR </name>
//    <i> [Bits 31..0] RW (@ 0x40302020) Prescale Counter </i>
//    <edit> 
//      <loc> ( (unsigned int)((FPGASYS_PSCNTR >> 0) & 0xFFFFFFFF), ((FPGASYS_PSCNTR = (FPGASYS_PSCNTR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: FPGASYS_MISC  ------------------------------
// SVD Line: 2480

unsigned int FPGASYS_MISC __AT (0x4030204C);



// ------------------------  Field Item: FPGASYS_MISC_SHIELD1_SPI_nCS  ----------------------------
// SVD Line: 2485

//  <item> SFDITEM_FIELD__FPGASYS_MISC_SHIELD1_SPI_nCS
//    <name> SHIELD1_SPI_nCS </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4030204C) SHIELD1_SPI_nCS </i>
//    <check> 
//      <loc> ( (unsigned int) FPGASYS_MISC ) </loc>
//      <o.9..9> SHIELD1_SPI_nCS
//    </check>
//  </item>
//  


// ------------------------  Field Item: FPGASYS_MISC_SHIELD0_SPI_nCS  ----------------------------
// SVD Line: 2488

//  <item> SFDITEM_FIELD__FPGASYS_MISC_SHIELD0_SPI_nCS
//    <name> SHIELD0_SPI_nCS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4030204C) SHIELD0_SPI_nCS </i>
//    <check> 
//      <loc> ( (unsigned int) FPGASYS_MISC ) </loc>
//      <o.8..8> SHIELD0_SPI_nCS
//    </check>
//  </item>
//  


// --------------------------  Field Item: FPGASYS_MISC_ADC_SPI_nCS  ------------------------------
// SVD Line: 2491

//  <item> SFDITEM_FIELD__FPGASYS_MISC_ADC_SPI_nCS
//    <name> ADC_SPI_nCS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4030204C) ADC_SPI_nCS </i>
//    <check> 
//      <loc> ( (unsigned int) FPGASYS_MISC ) </loc>
//      <o.7..7> ADC_SPI_nCS
//    </check>
//  </item>
//  


// --------------------------  Field Item: FPGASYS_MISC_CLCD_BL_CTRL  -----------------------------
// SVD Line: 2494

//  <item> SFDITEM_FIELD__FPGASYS_MISC_CLCD_BL_CTRL
//    <name> CLCD_BL_CTRL </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4030204C) CLCD_BL_CTRL </i>
//    <check> 
//      <loc> ( (unsigned int) FPGASYS_MISC ) </loc>
//      <o.6..6> CLCD_BL_CTRL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: FPGASYS_MISC_CLCD_RD  --------------------------------
// SVD Line: 2497

//  <item> SFDITEM_FIELD__FPGASYS_MISC_CLCD_RD
//    <name> CLCD_RD </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4030204C) CLCD_RD </i>
//    <check> 
//      <loc> ( (unsigned int) FPGASYS_MISC ) </loc>
//      <o.5..5> CLCD_RD
//    </check>
//  </item>
//  


// ----------------------------  Field Item: FPGASYS_MISC_CLCD_RS  --------------------------------
// SVD Line: 2500

//  <item> SFDITEM_FIELD__FPGASYS_MISC_CLCD_RS
//    <name> CLCD_RS </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4030204C) CLCD_RS </i>
//    <check> 
//      <loc> ( (unsigned int) FPGASYS_MISC ) </loc>
//      <o.4..4> CLCD_RS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: FPGASYS_MISC_CLCD_RESET  ------------------------------
// SVD Line: 2503

//  <item> SFDITEM_FIELD__FPGASYS_MISC_CLCD_RESET
//    <name> CLCD_RESET </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4030204C) CLCD_RESET </i>
//    <check> 
//      <loc> ( (unsigned int) FPGASYS_MISC ) </loc>
//      <o.3..3> CLCD_RESET
//    </check>
//  </item>
//  


// ----------------------------  Field Item: FPGASYS_MISC_SPI_nSS  --------------------------------
// SVD Line: 2506

//  <item> SFDITEM_FIELD__FPGASYS_MISC_SPI_nSS
//    <name> SPI_nSS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4030204C) SPI_nSS </i>
//    <check> 
//      <loc> ( (unsigned int) FPGASYS_MISC ) </loc>
//      <o.1..1> SPI_nSS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: FPGASYS_MISC_CLCD_CS  --------------------------------
// SVD Line: 2509

//  <item> SFDITEM_FIELD__FPGASYS_MISC_CLCD_CS
//    <name> CLCD_CS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4030204C) CLCD_CS </i>
//    <check> 
//      <loc> ( (unsigned int) FPGASYS_MISC ) </loc>
//      <o.0..0> CLCD_CS
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: FPGASYS_MISC  ----------------------------------
// SVD Line: 2480

//  <rtree> SFDITEM_REG__FPGASYS_MISC
//    <name> MISC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4030204C) Misc. Control </i>
//    <loc> ( (unsigned int)((FPGASYS_MISC >> 0) & 0xFFFFFFFF), ((FPGASYS_MISC = (FPGASYS_MISC & ~(0x3FBUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FB) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FPGASYS_MISC_SHIELD1_SPI_nCS </item>
//    <item> SFDITEM_FIELD__FPGASYS_MISC_SHIELD0_SPI_nCS </item>
//    <item> SFDITEM_FIELD__FPGASYS_MISC_ADC_SPI_nCS </item>
//    <item> SFDITEM_FIELD__FPGASYS_MISC_CLCD_BL_CTRL </item>
//    <item> SFDITEM_FIELD__FPGASYS_MISC_CLCD_RD </item>
//    <item> SFDITEM_FIELD__FPGASYS_MISC_CLCD_RS </item>
//    <item> SFDITEM_FIELD__FPGASYS_MISC_CLCD_RESET </item>
//    <item> SFDITEM_FIELD__FPGASYS_MISC_SPI_nSS </item>
//    <item> SFDITEM_FIELD__FPGASYS_MISC_CLCD_CS </item>
//  </rtree>
//  


// --------------------------------  Peripheral View: FPGASYS  ------------------------------------
// SVD Line: 2377

//  <view> FPGASYS
//    <name> FPGASYS </name>
//    <item> SFDITEM_REG__FPGASYS_LED </item>
//    <item> SFDITEM_REG__FPGASYS_BUTTON </item>
//    <item> SFDITEM_REG__FPGASYS_CLK1HZ </item>
//    <item> SFDITEM_REG__FPGASYS_CLK100HZ </item>
//    <item> SFDITEM_REG__FPGASYS_COUNTER </item>
//    <item> SFDITEM_REG__FPGASYS_PRESCALER </item>
//    <item> SFDITEM_REG__FPGASYS_PSCNTR </item>
//    <item> SFDITEM_REG__FPGASYS_MISC </item>
//  </view>
//  


// -------------------------  Register Item Address: MPC_SSRAM1_CTRL  -----------------------------
// SVD Line: 2531

unsigned int MPC_SSRAM1_CTRL __AT (0x58007000);



// -----------------------------  Register Item: MPC_SSRAM1_CTRL  ---------------------------------
// SVD Line: 2531

//  <item> SFDITEM_REG__MPC_SSRAM1_CTRL
//    <name> CTRL </name>
//    <i> [Bits 31..0] RW (@ 0x58007000) Control Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM1_CTRL >> 0) & 0xFFFFFFFF), ((MPC_SSRAM1_CTRL = (MPC_SSRAM1_CTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: MPC_SSRAM1_BLK_MAX  ---------------------------
// SVD Line: 2536

unsigned int MPC_SSRAM1_BLK_MAX __AT (0x58007010);



// ----------------------------  Register Item: MPC_SSRAM1_BLK_MAX  -------------------------------
// SVD Line: 2536

//  <item> SFDITEM_REG__MPC_SSRAM1_BLK_MAX
//    <name> BLK_MAX </name>
//    <i> [Bits 31..0] RO (@ 0x58007010) Block Maximum Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM1_BLK_MAX >> 0) & 0xFFFFFFFF), ((MPC_SSRAM1_BLK_MAX = (MPC_SSRAM1_BLK_MAX & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: MPC_SSRAM1_BLK_CFG  ---------------------------
// SVD Line: 2541

unsigned int MPC_SSRAM1_BLK_CFG __AT (0x58007014);



// ----------------------------  Register Item: MPC_SSRAM1_BLK_CFG  -------------------------------
// SVD Line: 2541

//  <item> SFDITEM_REG__MPC_SSRAM1_BLK_CFG
//    <name> BLK_CFG </name>
//    <i> [Bits 31..0] RO (@ 0x58007014) Block Configuration Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM1_BLK_CFG >> 0) & 0xFFFFFFFF), ((MPC_SSRAM1_BLK_CFG = (MPC_SSRAM1_BLK_CFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: MPC_SSRAM1_BLK_IDX  ---------------------------
// SVD Line: 2546

unsigned int MPC_SSRAM1_BLK_IDX __AT (0x58007018);



// ----------------------------  Register Item: MPC_SSRAM1_BLK_IDX  -------------------------------
// SVD Line: 2546

//  <item> SFDITEM_REG__MPC_SSRAM1_BLK_IDX
//    <name> BLK_IDX </name>
//    <i> [Bits 31..0] RW (@ 0x58007018) Block Index Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM1_BLK_IDX >> 0) & 0xFFFFFFFF), ((MPC_SSRAM1_BLK_IDX = (MPC_SSRAM1_BLK_IDX & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: MPC_SSRAM1_BLK_LUT  ---------------------------
// SVD Line: 2551

unsigned int MPC_SSRAM1_BLK_LUT __AT (0x5800701C);



// ----------------------------  Register Item: MPC_SSRAM1_BLK_LUT  -------------------------------
// SVD Line: 2551

//  <item> SFDITEM_REG__MPC_SSRAM1_BLK_LUT
//    <name> BLK_LUT </name>
//    <i> [Bits 31..0] RW (@ 0x5800701C) Block Lookup Tabe Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM1_BLK_LUT >> 0) & 0xFFFFFFFF), ((MPC_SSRAM1_BLK_LUT = (MPC_SSRAM1_BLK_LUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: MPC_SSRAM1_INT_STAT  ---------------------------
// SVD Line: 2556

unsigned int MPC_SSRAM1_INT_STAT __AT (0x58007020);



// ---------------------------  Register Item: MPC_SSRAM1_INT_STAT  -------------------------------
// SVD Line: 2556

//  <item> SFDITEM_REG__MPC_SSRAM1_INT_STAT
//    <name> INT_STAT </name>
//    <i> [Bits 31..0] RO (@ 0x58007020) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM1_INT_STAT >> 0) & 0xFFFFFFFF), ((MPC_SSRAM1_INT_STAT = (MPC_SSRAM1_INT_STAT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: MPC_SSRAM1_INT_CLEAR  --------------------------
// SVD Line: 2561

unsigned int MPC_SSRAM1_INT_CLEAR __AT (0x58007024);



// ---------------------------  Register Item: MPC_SSRAM1_INT_CLEAR  ------------------------------
// SVD Line: 2561

//  <item> SFDITEM_REG__MPC_SSRAM1_INT_CLEAR
//    <name> INT_CLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x58007024) Interrupt Clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM1_INT_CLEAR >> 0) & 0xFFFFFFFF), ((MPC_SSRAM1_INT_CLEAR = (MPC_SSRAM1_INT_CLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: MPC_SSRAM1_INT_EN  ----------------------------
// SVD Line: 2566

unsigned int MPC_SSRAM1_INT_EN __AT (0x58007028);



// ----------------------------  Register Item: MPC_SSRAM1_INT_EN  --------------------------------
// SVD Line: 2566

//  <item> SFDITEM_REG__MPC_SSRAM1_INT_EN
//    <name> INT_EN </name>
//    <i> [Bits 31..0] RW (@ 0x58007028) Interrupt Enable Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM1_INT_EN >> 0) & 0xFFFFFFFF), ((MPC_SSRAM1_INT_EN = (MPC_SSRAM1_INT_EN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: MPC_SSRAM1_INT_INFO1  --------------------------
// SVD Line: 2571

unsigned int MPC_SSRAM1_INT_INFO1 __AT (0x5800702C);



// ---------------------------  Register Item: MPC_SSRAM1_INT_INFO1  ------------------------------
// SVD Line: 2571

//  <item> SFDITEM_REG__MPC_SSRAM1_INT_INFO1
//    <name> INT_INFO1 </name>
//    <i> [Bits 31..0] RO (@ 0x5800702C) Interrupt Info1 Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM1_INT_INFO1 >> 0) & 0xFFFFFFFF), ((MPC_SSRAM1_INT_INFO1 = (MPC_SSRAM1_INT_INFO1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: MPC_SSRAM1_INT_INFO2  --------------------------
// SVD Line: 2576

unsigned int MPC_SSRAM1_INT_INFO2 __AT (0x58007030);



// ---------------------------  Register Item: MPC_SSRAM1_INT_INFO2  ------------------------------
// SVD Line: 2576

//  <item> SFDITEM_REG__MPC_SSRAM1_INT_INFO2
//    <name> INT_INFO2 </name>
//    <i> [Bits 31..0] RO (@ 0x58007030) Interrupt Info2 Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM1_INT_INFO2 >> 0) & 0xFFFFFFFF), ((MPC_SSRAM1_INT_INFO2 = (MPC_SSRAM1_INT_INFO2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: MPC_SSRAM1_INT_SET  ---------------------------
// SVD Line: 2581

unsigned int MPC_SSRAM1_INT_SET __AT (0x58007034);



// ----------------------------  Register Item: MPC_SSRAM1_INT_SET  -------------------------------
// SVD Line: 2581

//  <item> SFDITEM_REG__MPC_SSRAM1_INT_SET
//    <name> INT_SET </name>
//    <i> [Bits 31..0] WO (@ 0x58007034) Interrupt Set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM1_INT_SET >> 0) & 0xFFFFFFFF), ((MPC_SSRAM1_INT_SET = (MPC_SSRAM1_INT_SET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: MPC_SSRAM1  ----------------------------------
// SVD Line: 2519

//  <view> MPC_SSRAM1
//    <name> MPC_SSRAM1 </name>
//    <item> SFDITEM_REG__MPC_SSRAM1_CTRL </item>
//    <item> SFDITEM_REG__MPC_SSRAM1_BLK_MAX </item>
//    <item> SFDITEM_REG__MPC_SSRAM1_BLK_CFG </item>
//    <item> SFDITEM_REG__MPC_SSRAM1_BLK_IDX </item>
//    <item> SFDITEM_REG__MPC_SSRAM1_BLK_LUT </item>
//    <item> SFDITEM_REG__MPC_SSRAM1_INT_STAT </item>
//    <item> SFDITEM_REG__MPC_SSRAM1_INT_CLEAR </item>
//    <item> SFDITEM_REG__MPC_SSRAM1_INT_EN </item>
//    <item> SFDITEM_REG__MPC_SSRAM1_INT_INFO1 </item>
//    <item> SFDITEM_REG__MPC_SSRAM1_INT_INFO2 </item>
//    <item> SFDITEM_REG__MPC_SSRAM1_INT_SET </item>
//  </view>
//  


// -------------------------  Register Item Address: MPC_SSRAM2_CTRL  -----------------------------
// SVD Line: 2531

unsigned int MPC_SSRAM2_CTRL __AT (0x58008000);



// -----------------------------  Register Item: MPC_SSRAM2_CTRL  ---------------------------------
// SVD Line: 2531

//  <item> SFDITEM_REG__MPC_SSRAM2_CTRL
//    <name> CTRL </name>
//    <i> [Bits 31..0] RW (@ 0x58008000) Control Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM2_CTRL >> 0) & 0xFFFFFFFF), ((MPC_SSRAM2_CTRL = (MPC_SSRAM2_CTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: MPC_SSRAM2_BLK_MAX  ---------------------------
// SVD Line: 2536

unsigned int MPC_SSRAM2_BLK_MAX __AT (0x58008010);



// ----------------------------  Register Item: MPC_SSRAM2_BLK_MAX  -------------------------------
// SVD Line: 2536

//  <item> SFDITEM_REG__MPC_SSRAM2_BLK_MAX
//    <name> BLK_MAX </name>
//    <i> [Bits 31..0] RO (@ 0x58008010) Block Maximum Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM2_BLK_MAX >> 0) & 0xFFFFFFFF), ((MPC_SSRAM2_BLK_MAX = (MPC_SSRAM2_BLK_MAX & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: MPC_SSRAM2_BLK_CFG  ---------------------------
// SVD Line: 2541

unsigned int MPC_SSRAM2_BLK_CFG __AT (0x58008014);



// ----------------------------  Register Item: MPC_SSRAM2_BLK_CFG  -------------------------------
// SVD Line: 2541

//  <item> SFDITEM_REG__MPC_SSRAM2_BLK_CFG
//    <name> BLK_CFG </name>
//    <i> [Bits 31..0] RO (@ 0x58008014) Block Configuration Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM2_BLK_CFG >> 0) & 0xFFFFFFFF), ((MPC_SSRAM2_BLK_CFG = (MPC_SSRAM2_BLK_CFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: MPC_SSRAM2_BLK_IDX  ---------------------------
// SVD Line: 2546

unsigned int MPC_SSRAM2_BLK_IDX __AT (0x58008018);



// ----------------------------  Register Item: MPC_SSRAM2_BLK_IDX  -------------------------------
// SVD Line: 2546

//  <item> SFDITEM_REG__MPC_SSRAM2_BLK_IDX
//    <name> BLK_IDX </name>
//    <i> [Bits 31..0] RW (@ 0x58008018) Block Index Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM2_BLK_IDX >> 0) & 0xFFFFFFFF), ((MPC_SSRAM2_BLK_IDX = (MPC_SSRAM2_BLK_IDX & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: MPC_SSRAM2_BLK_LUT  ---------------------------
// SVD Line: 2551

unsigned int MPC_SSRAM2_BLK_LUT __AT (0x5800801C);



// ----------------------------  Register Item: MPC_SSRAM2_BLK_LUT  -------------------------------
// SVD Line: 2551

//  <item> SFDITEM_REG__MPC_SSRAM2_BLK_LUT
//    <name> BLK_LUT </name>
//    <i> [Bits 31..0] RW (@ 0x5800801C) Block Lookup Tabe Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM2_BLK_LUT >> 0) & 0xFFFFFFFF), ((MPC_SSRAM2_BLK_LUT = (MPC_SSRAM2_BLK_LUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: MPC_SSRAM2_INT_STAT  ---------------------------
// SVD Line: 2556

unsigned int MPC_SSRAM2_INT_STAT __AT (0x58008020);



// ---------------------------  Register Item: MPC_SSRAM2_INT_STAT  -------------------------------
// SVD Line: 2556

//  <item> SFDITEM_REG__MPC_SSRAM2_INT_STAT
//    <name> INT_STAT </name>
//    <i> [Bits 31..0] RO (@ 0x58008020) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM2_INT_STAT >> 0) & 0xFFFFFFFF), ((MPC_SSRAM2_INT_STAT = (MPC_SSRAM2_INT_STAT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: MPC_SSRAM2_INT_CLEAR  --------------------------
// SVD Line: 2561

unsigned int MPC_SSRAM2_INT_CLEAR __AT (0x58008024);



// ---------------------------  Register Item: MPC_SSRAM2_INT_CLEAR  ------------------------------
// SVD Line: 2561

//  <item> SFDITEM_REG__MPC_SSRAM2_INT_CLEAR
//    <name> INT_CLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x58008024) Interrupt Clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM2_INT_CLEAR >> 0) & 0xFFFFFFFF), ((MPC_SSRAM2_INT_CLEAR = (MPC_SSRAM2_INT_CLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: MPC_SSRAM2_INT_EN  ----------------------------
// SVD Line: 2566

unsigned int MPC_SSRAM2_INT_EN __AT (0x58008028);



// ----------------------------  Register Item: MPC_SSRAM2_INT_EN  --------------------------------
// SVD Line: 2566

//  <item> SFDITEM_REG__MPC_SSRAM2_INT_EN
//    <name> INT_EN </name>
//    <i> [Bits 31..0] RW (@ 0x58008028) Interrupt Enable Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM2_INT_EN >> 0) & 0xFFFFFFFF), ((MPC_SSRAM2_INT_EN = (MPC_SSRAM2_INT_EN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: MPC_SSRAM2_INT_INFO1  --------------------------
// SVD Line: 2571

unsigned int MPC_SSRAM2_INT_INFO1 __AT (0x5800802C);



// ---------------------------  Register Item: MPC_SSRAM2_INT_INFO1  ------------------------------
// SVD Line: 2571

//  <item> SFDITEM_REG__MPC_SSRAM2_INT_INFO1
//    <name> INT_INFO1 </name>
//    <i> [Bits 31..0] RO (@ 0x5800802C) Interrupt Info1 Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM2_INT_INFO1 >> 0) & 0xFFFFFFFF), ((MPC_SSRAM2_INT_INFO1 = (MPC_SSRAM2_INT_INFO1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: MPC_SSRAM2_INT_INFO2  --------------------------
// SVD Line: 2576

unsigned int MPC_SSRAM2_INT_INFO2 __AT (0x58008030);



// ---------------------------  Register Item: MPC_SSRAM2_INT_INFO2  ------------------------------
// SVD Line: 2576

//  <item> SFDITEM_REG__MPC_SSRAM2_INT_INFO2
//    <name> INT_INFO2 </name>
//    <i> [Bits 31..0] RO (@ 0x58008030) Interrupt Info2 Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM2_INT_INFO2 >> 0) & 0xFFFFFFFF), ((MPC_SSRAM2_INT_INFO2 = (MPC_SSRAM2_INT_INFO2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: MPC_SSRAM2_INT_SET  ---------------------------
// SVD Line: 2581

unsigned int MPC_SSRAM2_INT_SET __AT (0x58008034);



// ----------------------------  Register Item: MPC_SSRAM2_INT_SET  -------------------------------
// SVD Line: 2581

//  <item> SFDITEM_REG__MPC_SSRAM2_INT_SET
//    <name> INT_SET </name>
//    <i> [Bits 31..0] WO (@ 0x58008034) Interrupt Set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM2_INT_SET >> 0) & 0xFFFFFFFF), ((MPC_SSRAM2_INT_SET = (MPC_SSRAM2_INT_SET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: MPC_SSRAM2  ----------------------------------
// SVD Line: 2590

//  <view> MPC_SSRAM2
//    <name> MPC_SSRAM2 </name>
//    <item> SFDITEM_REG__MPC_SSRAM2_CTRL </item>
//    <item> SFDITEM_REG__MPC_SSRAM2_BLK_MAX </item>
//    <item> SFDITEM_REG__MPC_SSRAM2_BLK_CFG </item>
//    <item> SFDITEM_REG__MPC_SSRAM2_BLK_IDX </item>
//    <item> SFDITEM_REG__MPC_SSRAM2_BLK_LUT </item>
//    <item> SFDITEM_REG__MPC_SSRAM2_INT_STAT </item>
//    <item> SFDITEM_REG__MPC_SSRAM2_INT_CLEAR </item>
//    <item> SFDITEM_REG__MPC_SSRAM2_INT_EN </item>
//    <item> SFDITEM_REG__MPC_SSRAM2_INT_INFO1 </item>
//    <item> SFDITEM_REG__MPC_SSRAM2_INT_INFO2 </item>
//    <item> SFDITEM_REG__MPC_SSRAM2_INT_SET </item>
//  </view>
//  


// -------------------------  Register Item Address: MPC_SSRAM3_CTRL  -----------------------------
// SVD Line: 2531

unsigned int MPC_SSRAM3_CTRL __AT (0x58009000);



// -----------------------------  Register Item: MPC_SSRAM3_CTRL  ---------------------------------
// SVD Line: 2531

//  <item> SFDITEM_REG__MPC_SSRAM3_CTRL
//    <name> CTRL </name>
//    <i> [Bits 31..0] RW (@ 0x58009000) Control Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM3_CTRL >> 0) & 0xFFFFFFFF), ((MPC_SSRAM3_CTRL = (MPC_SSRAM3_CTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: MPC_SSRAM3_BLK_MAX  ---------------------------
// SVD Line: 2536

unsigned int MPC_SSRAM3_BLK_MAX __AT (0x58009010);



// ----------------------------  Register Item: MPC_SSRAM3_BLK_MAX  -------------------------------
// SVD Line: 2536

//  <item> SFDITEM_REG__MPC_SSRAM3_BLK_MAX
//    <name> BLK_MAX </name>
//    <i> [Bits 31..0] RO (@ 0x58009010) Block Maximum Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM3_BLK_MAX >> 0) & 0xFFFFFFFF), ((MPC_SSRAM3_BLK_MAX = (MPC_SSRAM3_BLK_MAX & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: MPC_SSRAM3_BLK_CFG  ---------------------------
// SVD Line: 2541

unsigned int MPC_SSRAM3_BLK_CFG __AT (0x58009014);



// ----------------------------  Register Item: MPC_SSRAM3_BLK_CFG  -------------------------------
// SVD Line: 2541

//  <item> SFDITEM_REG__MPC_SSRAM3_BLK_CFG
//    <name> BLK_CFG </name>
//    <i> [Bits 31..0] RO (@ 0x58009014) Block Configuration Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM3_BLK_CFG >> 0) & 0xFFFFFFFF), ((MPC_SSRAM3_BLK_CFG = (MPC_SSRAM3_BLK_CFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: MPC_SSRAM3_BLK_IDX  ---------------------------
// SVD Line: 2546

unsigned int MPC_SSRAM3_BLK_IDX __AT (0x58009018);



// ----------------------------  Register Item: MPC_SSRAM3_BLK_IDX  -------------------------------
// SVD Line: 2546

//  <item> SFDITEM_REG__MPC_SSRAM3_BLK_IDX
//    <name> BLK_IDX </name>
//    <i> [Bits 31..0] RW (@ 0x58009018) Block Index Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM3_BLK_IDX >> 0) & 0xFFFFFFFF), ((MPC_SSRAM3_BLK_IDX = (MPC_SSRAM3_BLK_IDX & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: MPC_SSRAM3_BLK_LUT  ---------------------------
// SVD Line: 2551

unsigned int MPC_SSRAM3_BLK_LUT __AT (0x5800901C);



// ----------------------------  Register Item: MPC_SSRAM3_BLK_LUT  -------------------------------
// SVD Line: 2551

//  <item> SFDITEM_REG__MPC_SSRAM3_BLK_LUT
//    <name> BLK_LUT </name>
//    <i> [Bits 31..0] RW (@ 0x5800901C) Block Lookup Tabe Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM3_BLK_LUT >> 0) & 0xFFFFFFFF), ((MPC_SSRAM3_BLK_LUT = (MPC_SSRAM3_BLK_LUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: MPC_SSRAM3_INT_STAT  ---------------------------
// SVD Line: 2556

unsigned int MPC_SSRAM3_INT_STAT __AT (0x58009020);



// ---------------------------  Register Item: MPC_SSRAM3_INT_STAT  -------------------------------
// SVD Line: 2556

//  <item> SFDITEM_REG__MPC_SSRAM3_INT_STAT
//    <name> INT_STAT </name>
//    <i> [Bits 31..0] RO (@ 0x58009020) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM3_INT_STAT >> 0) & 0xFFFFFFFF), ((MPC_SSRAM3_INT_STAT = (MPC_SSRAM3_INT_STAT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: MPC_SSRAM3_INT_CLEAR  --------------------------
// SVD Line: 2561

unsigned int MPC_SSRAM3_INT_CLEAR __AT (0x58009024);



// ---------------------------  Register Item: MPC_SSRAM3_INT_CLEAR  ------------------------------
// SVD Line: 2561

//  <item> SFDITEM_REG__MPC_SSRAM3_INT_CLEAR
//    <name> INT_CLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x58009024) Interrupt Clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM3_INT_CLEAR >> 0) & 0xFFFFFFFF), ((MPC_SSRAM3_INT_CLEAR = (MPC_SSRAM3_INT_CLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: MPC_SSRAM3_INT_EN  ----------------------------
// SVD Line: 2566

unsigned int MPC_SSRAM3_INT_EN __AT (0x58009028);



// ----------------------------  Register Item: MPC_SSRAM3_INT_EN  --------------------------------
// SVD Line: 2566

//  <item> SFDITEM_REG__MPC_SSRAM3_INT_EN
//    <name> INT_EN </name>
//    <i> [Bits 31..0] RW (@ 0x58009028) Interrupt Enable Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM3_INT_EN >> 0) & 0xFFFFFFFF), ((MPC_SSRAM3_INT_EN = (MPC_SSRAM3_INT_EN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: MPC_SSRAM3_INT_INFO1  --------------------------
// SVD Line: 2571

unsigned int MPC_SSRAM3_INT_INFO1 __AT (0x5800902C);



// ---------------------------  Register Item: MPC_SSRAM3_INT_INFO1  ------------------------------
// SVD Line: 2571

//  <item> SFDITEM_REG__MPC_SSRAM3_INT_INFO1
//    <name> INT_INFO1 </name>
//    <i> [Bits 31..0] RO (@ 0x5800902C) Interrupt Info1 Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM3_INT_INFO1 >> 0) & 0xFFFFFFFF), ((MPC_SSRAM3_INT_INFO1 = (MPC_SSRAM3_INT_INFO1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: MPC_SSRAM3_INT_INFO2  --------------------------
// SVD Line: 2576

unsigned int MPC_SSRAM3_INT_INFO2 __AT (0x58009030);



// ---------------------------  Register Item: MPC_SSRAM3_INT_INFO2  ------------------------------
// SVD Line: 2576

//  <item> SFDITEM_REG__MPC_SSRAM3_INT_INFO2
//    <name> INT_INFO2 </name>
//    <i> [Bits 31..0] RO (@ 0x58009030) Interrupt Info2 Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM3_INT_INFO2 >> 0) & 0xFFFFFFFF), ((MPC_SSRAM3_INT_INFO2 = (MPC_SSRAM3_INT_INFO2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: MPC_SSRAM3_INT_SET  ---------------------------
// SVD Line: 2581

unsigned int MPC_SSRAM3_INT_SET __AT (0x58009034);



// ----------------------------  Register Item: MPC_SSRAM3_INT_SET  -------------------------------
// SVD Line: 2581

//  <item> SFDITEM_REG__MPC_SSRAM3_INT_SET
//    <name> INT_SET </name>
//    <i> [Bits 31..0] WO (@ 0x58009034) Interrupt Set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((MPC_SSRAM3_INT_SET >> 0) & 0xFFFFFFFF), ((MPC_SSRAM3_INT_SET = (MPC_SSRAM3_INT_SET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: MPC_SSRAM3  ----------------------------------
// SVD Line: 2597

//  <view> MPC_SSRAM3
//    <name> MPC_SSRAM3 </name>
//    <item> SFDITEM_REG__MPC_SSRAM3_CTRL </item>
//    <item> SFDITEM_REG__MPC_SSRAM3_BLK_MAX </item>
//    <item> SFDITEM_REG__MPC_SSRAM3_BLK_CFG </item>
//    <item> SFDITEM_REG__MPC_SSRAM3_BLK_IDX </item>
//    <item> SFDITEM_REG__MPC_SSRAM3_BLK_LUT </item>
//    <item> SFDITEM_REG__MPC_SSRAM3_INT_STAT </item>
//    <item> SFDITEM_REG__MPC_SSRAM3_INT_CLEAR </item>
//    <item> SFDITEM_REG__MPC_SSRAM3_INT_EN </item>
//    <item> SFDITEM_REG__MPC_SSRAM3_INT_INFO1 </item>
//    <item> SFDITEM_REG__MPC_SSRAM3_INT_INFO2 </item>
//    <item> SFDITEM_REG__MPC_SSRAM3_INT_SET </item>
//  </view>
//  


// --------------------------  Register Item Address: SPC_SECRESPCFG  -----------------------------
// SVD Line: 2619

unsigned int SPC_SECRESPCFG __AT (0x50080010);



// ------------------------------  Register Item: SPC_SECRESPCFG  ---------------------------------
// SVD Line: 2619

//  <item> SFDITEM_REG__SPC_SECRESPCFG
//    <name> SECRESPCFG </name>
//    <i> [Bits 31..0] RW (@ 0x50080010) Security Violation Response Configuration Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_SECRESPCFG >> 0) & 0xFFFFFFFF), ((SPC_SECRESPCFG = (SPC_SECRESPCFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SPC_NSCCFG  -------------------------------
// SVD Line: 2624

unsigned int SPC_NSCCFG __AT (0x50080014);



// --------------------------------  Register Item: SPC_NSCCFG  -----------------------------------
// SVD Line: 2624

//  <item> SFDITEM_REG__SPC_NSCCFG
//    <name> NSCCFG </name>
//    <i> [Bits 31..0] RW (@ 0x50080014) Non Secure Callable Configuration for IDAU </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_NSCCFG >> 0) & 0xFFFFFFFF), ((SPC_NSCCFG = (SPC_NSCCFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SPC_SECMPCINTSTATUS  ---------------------------
// SVD Line: 2629

unsigned int SPC_SECMPCINTSTATUS __AT (0x5008001C);



// ---------------------------  Register Item: SPC_SECMPCINTSTATUS  -------------------------------
// SVD Line: 2629

//  <item> SFDITEM_REG__SPC_SECMPCINTSTATUS
//    <name> SECMPCINTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x5008001C) Secure MPC Interrupt Status </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_SECMPCINTSTATUS >> 0) & 0xFFFFFFFF), ((SPC_SECMPCINTSTATUS = (SPC_SECMPCINTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: SPC_SECPPCINTSTAT  ----------------------------
// SVD Line: 2634

unsigned int SPC_SECPPCINTSTAT __AT (0x50080020);



// ----------------------------  Register Item: SPC_SECPPCINTSTAT  --------------------------------
// SVD Line: 2634

//  <item> SFDITEM_REG__SPC_SECPPCINTSTAT
//    <name> SECPPCINTSTAT </name>
//    <i> [Bits 31..0] RO (@ 0x50080020) Secure PPC Interrupt Status </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_SECPPCINTSTAT >> 0) & 0xFFFFFFFF), ((SPC_SECPPCINTSTAT = (SPC_SECPPCINTSTAT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SPC_SECPPCINTCLR  ----------------------------
// SVD Line: 2639

unsigned int SPC_SECPPCINTCLR __AT (0x50080024);



// -----------------------------  Register Item: SPC_SECPPCINTCLR  --------------------------------
// SVD Line: 2639

//  <item> SFDITEM_REG__SPC_SECPPCINTCLR
//    <name> SECPPCINTCLR </name>
//    <i> [Bits 31..0] WO (@ 0x50080024) Secure PPC Interrupt Clear </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_SECPPCINTCLR >> 0) & 0xFFFFFFFF), ((SPC_SECPPCINTCLR = (SPC_SECPPCINTCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SPC_SECPPCINTEN  -----------------------------
// SVD Line: 2644

unsigned int SPC_SECPPCINTEN __AT (0x50080028);



// -----------------------------  Register Item: SPC_SECPPCINTEN  ---------------------------------
// SVD Line: 2644

//  <item> SFDITEM_REG__SPC_SECPPCINTEN
//    <name> SECPPCINTEN </name>
//    <i> [Bits 31..0] RW (@ 0x50080028) Secure PPC Interrupt Enable </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_SECPPCINTEN >> 0) & 0xFFFFFFFF), ((SPC_SECPPCINTEN = (SPC_SECPPCINTEN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: SPC_SECMSCINTSTAT  ----------------------------
// SVD Line: 2649

unsigned int SPC_SECMSCINTSTAT __AT (0x50080030);



// ----------------------------  Register Item: SPC_SECMSCINTSTAT  --------------------------------
// SVD Line: 2649

//  <item> SFDITEM_REG__SPC_SECMSCINTSTAT
//    <name> SECMSCINTSTAT </name>
//    <i> [Bits 31..0] RO (@ 0x50080030) Secure MSC Interrupt Status </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_SECMSCINTSTAT >> 0) & 0xFFFFFFFF), ((SPC_SECMSCINTSTAT = (SPC_SECMSCINTSTAT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SPC_SECMSCINTCLR  ----------------------------
// SVD Line: 2654

unsigned int SPC_SECMSCINTCLR __AT (0x50080034);



// -----------------------------  Register Item: SPC_SECMSCINTCLR  --------------------------------
// SVD Line: 2654

//  <item> SFDITEM_REG__SPC_SECMSCINTCLR
//    <name> SECMSCINTCLR </name>
//    <i> [Bits 31..0] WO (@ 0x50080034) Secure MSC Interrupt Clear </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_SECMSCINTCLR >> 0) & 0xFFFFFFFF), ((SPC_SECMSCINTCLR = (SPC_SECMSCINTCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SPC_SECMSCINTEN  -----------------------------
// SVD Line: 2659

unsigned int SPC_SECMSCINTEN __AT (0x50080038);



// -----------------------------  Register Item: SPC_SECMSCINTEN  ---------------------------------
// SVD Line: 2659

//  <item> SFDITEM_REG__SPC_SECMSCINTEN
//    <name> SECMSCINTEN </name>
//    <i> [Bits 31..0] RW (@ 0x50080038) Secure MSC Interrupt Enable </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_SECMSCINTEN >> 0) & 0xFFFFFFFF), ((SPC_SECMSCINTEN = (SPC_SECMSCINTEN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: SPC_BRGINTSTAT  -----------------------------
// SVD Line: 2664

unsigned int SPC_BRGINTSTAT __AT (0x50080040);



// ------------------------------  Register Item: SPC_BRGINTSTAT  ---------------------------------
// SVD Line: 2664

//  <item> SFDITEM_REG__SPC_BRGINTSTAT
//    <name> BRGINTSTAT </name>
//    <i> [Bits 31..0] RO (@ 0x50080040) Bridge Buffer Error Interrupt Status </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_BRGINTSTAT >> 0) & 0xFFFFFFFF), ((SPC_BRGINTSTAT = (SPC_BRGINTSTAT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: SPC_BRGINTCLR  ------------------------------
// SVD Line: 2669

unsigned int SPC_BRGINTCLR __AT (0x50080044);



// ------------------------------  Register Item: SPC_BRGINTCLR  ----------------------------------
// SVD Line: 2669

//  <item> SFDITEM_REG__SPC_BRGINTCLR
//    <name> BRGINTCLR </name>
//    <i> [Bits 31..0] WO (@ 0x50080044) Bridge Buffer Error Interrupt Clear </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_BRGINTCLR >> 0) & 0xFFFFFFFF), ((SPC_BRGINTCLR = (SPC_BRGINTCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: SPC_BRGINTEN  ------------------------------
// SVD Line: 2674

unsigned int SPC_BRGINTEN __AT (0x50080048);



// -------------------------------  Register Item: SPC_BRGINTEN  ----------------------------------
// SVD Line: 2674

//  <item> SFDITEM_REG__SPC_BRGINTEN
//    <name> BRGINTEN </name>
//    <i> [Bits 31..0] RW (@ 0x50080048) Bridge Buffer Error Interrupt Enable </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_BRGINTEN >> 0) & 0xFFFFFFFF), ((SPC_BRGINTEN = (SPC_BRGINTEN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------  Register Array Item Address: SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC0  ------------------
// SVD Line: 2679

unsigned int SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC0 __AT (0x50080050);



// ------------------  Register Array Item: SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC0  ----------------------
// SVD Line: 2679

//  <item> SFDITEM_REG__SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC0
//    <name> [0] </name>
//    <i> [Bits 31..0] RW (@ 0x50080050) Non-Secure Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC0 >> 0) & 0xFFFFFFFF), ((SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC0 = (SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------  Register Array Item Address: SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC1  ------------------
// SVD Line: 2679

unsigned int SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC1 __AT (0x50080054);



// ------------------  Register Array Item: SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC1  ----------------------
// SVD Line: 2679

//  <item> SFDITEM_REG__SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC1
//    <name> [1] </name>
//    <i> [Bits 31..0] RW (@ 0x50080054) Non-Secure Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC1 >> 0) & 0xFFFFFFFF), ((SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC1 = (SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------  Register Array Item Address: SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC2  ------------------
// SVD Line: 2679

unsigned int SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC2 __AT (0x50080058);



// ------------------  Register Array Item: SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC2  ----------------------
// SVD Line: 2679

//  <item> SFDITEM_REG__SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC2
//    <name> [2] </name>
//    <i> [Bits 31..0] RW (@ 0x50080058) Non-Secure Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC2 >> 0) & 0xFFFFFFFF), ((SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC2 = (SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------  Register Array Item Address: SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC3  ------------------
// SVD Line: 2679

unsigned int SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC3 __AT (0x5008005C);



// ------------------  Register Array Item: SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC3  ----------------------
// SVD Line: 2679

//  <item> SFDITEM_REG__SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC3
//    <name> [3] </name>
//    <i> [Bits 31..0] RW (@ 0x5008005C) Non-Secure Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC3 >> 0) & 0xFFFFFFFF), ((SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC3 = (SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Array ITree: SPC_AHBNSPPC  -------------------------------
// SVD Line: 2679

//  <itree> SFDITEM_REG__SPC_AHBNSPPC
//    <name> AHBNSPPC </name>
//    <i> Non-Secure Access AHB slave Peripheral Protection Control </i>
//    <item> SFDITEM_REG__SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC0 </item>
//    <item> SFDITEM_REG__SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC1 </item>
//    <item> SFDITEM_REG__SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC2 </item>
//    <item> SFDITEM_REG__SPC_AHBNSPPC_AHBNSPPC_AHBNSPPC3 </item>
//  </itree>
//  


// ----------  Register Array Item Address: SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP0  -------------
// SVD Line: 2687

unsigned int SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP0 __AT (0x50080060);



// --------------  Register Array Item: SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP0  -----------------
// SVD Line: 2687

//  <item> SFDITEM_REG__SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP0
//    <name> [0] </name>
//    <i> [Bits 31..0] RW (@ 0x50080060) Expansion Non_Secure Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP0 >> 0) & 0xFFFFFFFF), ((SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP0 = (SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------  Register Array Item Address: SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP1  -------------
// SVD Line: 2687

unsigned int SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP1 __AT (0x50080064);



// --------------  Register Array Item: SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP1  -----------------
// SVD Line: 2687

//  <item> SFDITEM_REG__SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP1
//    <name> [1] </name>
//    <i> [Bits 31..0] RW (@ 0x50080064) Expansion Non_Secure Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP1 >> 0) & 0xFFFFFFFF), ((SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP1 = (SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------  Register Array Item Address: SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP2  -------------
// SVD Line: 2687

unsigned int SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP2 __AT (0x50080068);



// --------------  Register Array Item: SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP2  -----------------
// SVD Line: 2687

//  <item> SFDITEM_REG__SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP2
//    <name> [2] </name>
//    <i> [Bits 31..0] RW (@ 0x50080068) Expansion Non_Secure Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP2 >> 0) & 0xFFFFFFFF), ((SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP2 = (SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------  Register Array Item Address: SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP3  -------------
// SVD Line: 2687

unsigned int SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP3 __AT (0x5008006C);



// --------------  Register Array Item: SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP3  -----------------
// SVD Line: 2687

//  <item> SFDITEM_REG__SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP3
//    <name> [3] </name>
//    <i> [Bits 31..0] RW (@ 0x5008006C) Expansion Non_Secure Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP3 >> 0) & 0xFFFFFFFF), ((SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP3 = (SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Array ITree: SPC_AHBNSPPCEXP  -----------------------------
// SVD Line: 2687

//  <itree> SFDITEM_REG__SPC_AHBNSPPCEXP
//    <name> AHBNSPPCEXP </name>
//    <i> Expansion Non_Secure Access AHB slave Peripheral Protection Control </i>
//    <item> SFDITEM_REG__SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP0 </item>
//    <item> SFDITEM_REG__SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP1 </item>
//    <item> SFDITEM_REG__SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP2 </item>
//    <item> SFDITEM_REG__SPC_AHBNSPPCEXP_AHBNSPPCEXP_AHBNSPPCEXP3 </item>
//  </itree>
//  


// --------------  Register Array Item Address: SPC_APBNSPPC_APBNSPPC_APBNSPPC0  ------------------
// SVD Line: 2695

unsigned int SPC_APBNSPPC_APBNSPPC_APBNSPPC0 __AT (0x50080070);



// ------------------  Register Array Item: SPC_APBNSPPC_APBNSPPC_APBNSPPC0  ----------------------
// SVD Line: 2695

//  <item> SFDITEM_REG__SPC_APBNSPPC_APBNSPPC_APBNSPPC0
//    <name> [0] </name>
//    <i> [Bits 31..0] RW (@ 0x50080070) Non-Secure Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_APBNSPPC_APBNSPPC_APBNSPPC0 >> 0) & 0xFFFFFFFF), ((SPC_APBNSPPC_APBNSPPC_APBNSPPC0 = (SPC_APBNSPPC_APBNSPPC_APBNSPPC0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------  Register Array Item Address: SPC_APBNSPPC_APBNSPPC_APBNSPPC1  ------------------
// SVD Line: 2695

unsigned int SPC_APBNSPPC_APBNSPPC_APBNSPPC1 __AT (0x50080074);



// ------------------  Register Array Item: SPC_APBNSPPC_APBNSPPC_APBNSPPC1  ----------------------
// SVD Line: 2695

//  <item> SFDITEM_REG__SPC_APBNSPPC_APBNSPPC_APBNSPPC1
//    <name> [1] </name>
//    <i> [Bits 31..0] RW (@ 0x50080074) Non-Secure Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_APBNSPPC_APBNSPPC_APBNSPPC1 >> 0) & 0xFFFFFFFF), ((SPC_APBNSPPC_APBNSPPC_APBNSPPC1 = (SPC_APBNSPPC_APBNSPPC_APBNSPPC1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------  Register Array Item Address: SPC_APBNSPPC_APBNSPPC_APBNSPPC2  ------------------
// SVD Line: 2695

unsigned int SPC_APBNSPPC_APBNSPPC_APBNSPPC2 __AT (0x50080078);



// ------------------  Register Array Item: SPC_APBNSPPC_APBNSPPC_APBNSPPC2  ----------------------
// SVD Line: 2695

//  <item> SFDITEM_REG__SPC_APBNSPPC_APBNSPPC_APBNSPPC2
//    <name> [2] </name>
//    <i> [Bits 31..0] RW (@ 0x50080078) Non-Secure Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_APBNSPPC_APBNSPPC_APBNSPPC2 >> 0) & 0xFFFFFFFF), ((SPC_APBNSPPC_APBNSPPC_APBNSPPC2 = (SPC_APBNSPPC_APBNSPPC_APBNSPPC2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------  Register Array Item Address: SPC_APBNSPPC_APBNSPPC_APBNSPPC3  ------------------
// SVD Line: 2695

unsigned int SPC_APBNSPPC_APBNSPPC_APBNSPPC3 __AT (0x5008007C);



// ------------------  Register Array Item: SPC_APBNSPPC_APBNSPPC_APBNSPPC3  ----------------------
// SVD Line: 2695

//  <item> SFDITEM_REG__SPC_APBNSPPC_APBNSPPC_APBNSPPC3
//    <name> [3] </name>
//    <i> [Bits 31..0] RW (@ 0x5008007C) Non-Secure Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_APBNSPPC_APBNSPPC_APBNSPPC3 >> 0) & 0xFFFFFFFF), ((SPC_APBNSPPC_APBNSPPC_APBNSPPC3 = (SPC_APBNSPPC_APBNSPPC_APBNSPPC3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Array ITree: SPC_APBNSPPC  -------------------------------
// SVD Line: 2695

//  <itree> SFDITEM_REG__SPC_APBNSPPC
//    <name> APBNSPPC </name>
//    <i> Non-Secure Access APB slave Peripheral Protection Control </i>
//    <item> SFDITEM_REG__SPC_APBNSPPC_APBNSPPC_APBNSPPC0 </item>
//    <item> SFDITEM_REG__SPC_APBNSPPC_APBNSPPC_APBNSPPC1 </item>
//    <item> SFDITEM_REG__SPC_APBNSPPC_APBNSPPC_APBNSPPC2 </item>
//    <item> SFDITEM_REG__SPC_APBNSPPC_APBNSPPC_APBNSPPC3 </item>
//  </itree>
//  


// ----------  Register Array Item Address: SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP0  -------------
// SVD Line: 2703

unsigned int SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP0 __AT (0x50080080);



// --------------  Register Array Item: SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP0  -----------------
// SVD Line: 2703

//  <item> SFDITEM_REG__SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP0
//    <name> [0] </name>
//    <i> [Bits 31..0] RW (@ 0x50080080) Expansion Non_Secure Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP0 >> 0) & 0xFFFFFFFF), ((SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP0 = (SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------  Register Array Item Address: SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP1  -------------
// SVD Line: 2703

unsigned int SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP1 __AT (0x50080084);



// --------------  Register Array Item: SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP1  -----------------
// SVD Line: 2703

//  <item> SFDITEM_REG__SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP1
//    <name> [1] </name>
//    <i> [Bits 31..0] RW (@ 0x50080084) Expansion Non_Secure Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP1 >> 0) & 0xFFFFFFFF), ((SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP1 = (SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------  Register Array Item Address: SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP2  -------------
// SVD Line: 2703

unsigned int SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP2 __AT (0x50080088);



// --------------  Register Array Item: SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP2  -----------------
// SVD Line: 2703

//  <item> SFDITEM_REG__SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP2
//    <name> [2] </name>
//    <i> [Bits 31..0] RW (@ 0x50080088) Expansion Non_Secure Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP2 >> 0) & 0xFFFFFFFF), ((SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP2 = (SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------  Register Array Item Address: SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP3  -------------
// SVD Line: 2703

unsigned int SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP3 __AT (0x5008008C);



// --------------  Register Array Item: SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP3  -----------------
// SVD Line: 2703

//  <item> SFDITEM_REG__SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP3
//    <name> [3] </name>
//    <i> [Bits 31..0] RW (@ 0x5008008C) Expansion Non_Secure Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP3 >> 0) & 0xFFFFFFFF), ((SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP3 = (SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Array ITree: SPC_APBNSPPCEXP  -----------------------------
// SVD Line: 2703

//  <itree> SFDITEM_REG__SPC_APBNSPPCEXP
//    <name> APBNSPPCEXP </name>
//    <i> Expansion Non_Secure Access APB slave Peripheral Protection Control </i>
//    <item> SFDITEM_REG__SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP0 </item>
//    <item> SFDITEM_REG__SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP1 </item>
//    <item> SFDITEM_REG__SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP2 </item>
//    <item> SFDITEM_REG__SPC_APBNSPPCEXP_APBNSPPCEXP_APBNSPPCEXP3 </item>
//  </itree>
//  


// --------------  Register Array Item Address: SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC0  ------------------
// SVD Line: 2711

unsigned int SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC0 __AT (0x50080090);



// ------------------  Register Array Item: SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC0  ----------------------
// SVD Line: 2711

//  <item> SFDITEM_REG__SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC0
//    <name> [0] </name>
//    <i> [Bits 31..0] RO (@ 0x50080090) Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC0 >> 0) & 0xFFFFFFFF), ((SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC0 = (SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------  Register Array Item Address: SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC1  ------------------
// SVD Line: 2711

unsigned int SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC1 __AT (0x50080094);



// ------------------  Register Array Item: SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC1  ----------------------
// SVD Line: 2711

//  <item> SFDITEM_REG__SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC1
//    <name> [1] </name>
//    <i> [Bits 31..0] RO (@ 0x50080094) Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC1 >> 0) & 0xFFFFFFFF), ((SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC1 = (SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------  Register Array Item Address: SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC2  ------------------
// SVD Line: 2711

unsigned int SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC2 __AT (0x50080098);



// ------------------  Register Array Item: SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC2  ----------------------
// SVD Line: 2711

//  <item> SFDITEM_REG__SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC2
//    <name> [2] </name>
//    <i> [Bits 31..0] RO (@ 0x50080098) Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC2 >> 0) & 0xFFFFFFFF), ((SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC2 = (SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------  Register Array Item Address: SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC3  ------------------
// SVD Line: 2711

unsigned int SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC3 __AT (0x5008009C);



// ------------------  Register Array Item: SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC3  ----------------------
// SVD Line: 2711

//  <item> SFDITEM_REG__SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC3
//    <name> [3] </name>
//    <i> [Bits 31..0] RO (@ 0x5008009C) Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC3 >> 0) & 0xFFFFFFFF), ((SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC3 = (SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Array ITree: SPC_AHBSPPPC  -------------------------------
// SVD Line: 2711

//  <itree> SFDITEM_REG__SPC_AHBSPPPC
//    <name> AHBSPPPC </name>
//    <i> Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <item> SFDITEM_REG__SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC0 </item>
//    <item> SFDITEM_REG__SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC1 </item>
//    <item> SFDITEM_REG__SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC2 </item>
//    <item> SFDITEM_REG__SPC_AHBSPPPC_AHBSPPPC_AHBSPPPC3 </item>
//  </itree>
//  


// ----------  Register Array Item Address: SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP0  -------------
// SVD Line: 2719

unsigned int SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP0 __AT (0x500800A0);



// --------------  Register Array Item: SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP0  -----------------
// SVD Line: 2719

//  <item> SFDITEM_REG__SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP0
//    <name> [0] </name>
//    <i> [Bits 31..0] RW (@ 0x500800A0) Expansion Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP0 >> 0) & 0xFFFFFFFF), ((SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP0 = (SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------  Register Array Item Address: SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP1  -------------
// SVD Line: 2719

unsigned int SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP1 __AT (0x500800A4);



// --------------  Register Array Item: SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP1  -----------------
// SVD Line: 2719

//  <item> SFDITEM_REG__SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP1
//    <name> [1] </name>
//    <i> [Bits 31..0] RW (@ 0x500800A4) Expansion Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP1 >> 0) & 0xFFFFFFFF), ((SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP1 = (SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------  Register Array Item Address: SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP2  -------------
// SVD Line: 2719

unsigned int SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP2 __AT (0x500800A8);



// --------------  Register Array Item: SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP2  -----------------
// SVD Line: 2719

//  <item> SFDITEM_REG__SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP2
//    <name> [2] </name>
//    <i> [Bits 31..0] RW (@ 0x500800A8) Expansion Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP2 >> 0) & 0xFFFFFFFF), ((SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP2 = (SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------  Register Array Item Address: SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP3  -------------
// SVD Line: 2719

unsigned int SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP3 __AT (0x500800AC);



// --------------  Register Array Item: SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP3  -----------------
// SVD Line: 2719

//  <item> SFDITEM_REG__SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP3
//    <name> [3] </name>
//    <i> [Bits 31..0] RW (@ 0x500800AC) Expansion Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP3 >> 0) & 0xFFFFFFFF), ((SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP3 = (SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Array ITree: SPC_AHBSPPPCEXP  -----------------------------
// SVD Line: 2719

//  <itree> SFDITEM_REG__SPC_AHBSPPPCEXP
//    <name> AHBSPPPCEXP </name>
//    <i> Expansion Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <item> SFDITEM_REG__SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP0 </item>
//    <item> SFDITEM_REG__SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP1 </item>
//    <item> SFDITEM_REG__SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP2 </item>
//    <item> SFDITEM_REG__SPC_AHBSPPPCEXP_AHBSPPPCEXP_AHBSPPPCEXP3 </item>
//  </itree>
//  


// --------------  Register Array Item Address: SPC_APBSPPPC_APBSPPPC_APBSPPPC0  ------------------
// SVD Line: 2727

unsigned int SPC_APBSPPPC_APBSPPPC_APBSPPPC0 __AT (0x500800B0);



// ------------------  Register Array Item: SPC_APBSPPPC_APBSPPPC_APBSPPPC0  ----------------------
// SVD Line: 2727

//  <item> SFDITEM_REG__SPC_APBSPPPC_APBSPPPC_APBSPPPC0
//    <name> [0] </name>
//    <i> [Bits 31..0] RW (@ 0x500800B0) Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_APBSPPPC_APBSPPPC_APBSPPPC0 >> 0) & 0xFFFFFFFF), ((SPC_APBSPPPC_APBSPPPC_APBSPPPC0 = (SPC_APBSPPPC_APBSPPPC_APBSPPPC0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------  Register Array Item Address: SPC_APBSPPPC_APBSPPPC_APBSPPPC1  ------------------
// SVD Line: 2727

unsigned int SPC_APBSPPPC_APBSPPPC_APBSPPPC1 __AT (0x500800B4);



// ------------------  Register Array Item: SPC_APBSPPPC_APBSPPPC_APBSPPPC1  ----------------------
// SVD Line: 2727

//  <item> SFDITEM_REG__SPC_APBSPPPC_APBSPPPC_APBSPPPC1
//    <name> [1] </name>
//    <i> [Bits 31..0] RW (@ 0x500800B4) Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_APBSPPPC_APBSPPPC_APBSPPPC1 >> 0) & 0xFFFFFFFF), ((SPC_APBSPPPC_APBSPPPC_APBSPPPC1 = (SPC_APBSPPPC_APBSPPPC_APBSPPPC1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------  Register Array Item Address: SPC_APBSPPPC_APBSPPPC_APBSPPPC2  ------------------
// SVD Line: 2727

unsigned int SPC_APBSPPPC_APBSPPPC_APBSPPPC2 __AT (0x500800B8);



// ------------------  Register Array Item: SPC_APBSPPPC_APBSPPPC_APBSPPPC2  ----------------------
// SVD Line: 2727

//  <item> SFDITEM_REG__SPC_APBSPPPC_APBSPPPC_APBSPPPC2
//    <name> [2] </name>
//    <i> [Bits 31..0] RW (@ 0x500800B8) Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_APBSPPPC_APBSPPPC_APBSPPPC2 >> 0) & 0xFFFFFFFF), ((SPC_APBSPPPC_APBSPPPC_APBSPPPC2 = (SPC_APBSPPPC_APBSPPPC_APBSPPPC2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------  Register Array Item Address: SPC_APBSPPPC_APBSPPPC_APBSPPPC3  ------------------
// SVD Line: 2727

unsigned int SPC_APBSPPPC_APBSPPPC_APBSPPPC3 __AT (0x500800BC);



// ------------------  Register Array Item: SPC_APBSPPPC_APBSPPPC_APBSPPPC3  ----------------------
// SVD Line: 2727

//  <item> SFDITEM_REG__SPC_APBSPPPC_APBSPPPC_APBSPPPC3
//    <name> [3] </name>
//    <i> [Bits 31..0] RW (@ 0x500800BC) Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_APBSPPPC_APBSPPPC_APBSPPPC3 >> 0) & 0xFFFFFFFF), ((SPC_APBSPPPC_APBSPPPC_APBSPPPC3 = (SPC_APBSPPPC_APBSPPPC_APBSPPPC3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Array ITree: SPC_APBSPPPC  -------------------------------
// SVD Line: 2727

//  <itree> SFDITEM_REG__SPC_APBSPPPC
//    <name> APBSPPPC </name>
//    <i> Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <item> SFDITEM_REG__SPC_APBSPPPC_APBSPPPC_APBSPPPC0 </item>
//    <item> SFDITEM_REG__SPC_APBSPPPC_APBSPPPC_APBSPPPC1 </item>
//    <item> SFDITEM_REG__SPC_APBSPPPC_APBSPPPC_APBSPPPC2 </item>
//    <item> SFDITEM_REG__SPC_APBSPPPC_APBSPPPC_APBSPPPC3 </item>
//  </itree>
//  


// ----------  Register Array Item Address: SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP0  -------------
// SVD Line: 2735

unsigned int SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP0 __AT (0x500800C0);



// --------------  Register Array Item: SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP0  -----------------
// SVD Line: 2735

//  <item> SFDITEM_REG__SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP0
//    <name> [0] </name>
//    <i> [Bits 31..0] RW (@ 0x500800C0) Expansion Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP0 >> 0) & 0xFFFFFFFF), ((SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP0 = (SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------  Register Array Item Address: SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP1  -------------
// SVD Line: 2735

unsigned int SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP1 __AT (0x500800C4);



// --------------  Register Array Item: SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP1  -----------------
// SVD Line: 2735

//  <item> SFDITEM_REG__SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP1
//    <name> [1] </name>
//    <i> [Bits 31..0] RW (@ 0x500800C4) Expansion Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP1 >> 0) & 0xFFFFFFFF), ((SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP1 = (SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------  Register Array Item Address: SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP2  -------------
// SVD Line: 2735

unsigned int SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP2 __AT (0x500800C8);



// --------------  Register Array Item: SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP2  -----------------
// SVD Line: 2735

//  <item> SFDITEM_REG__SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP2
//    <name> [2] </name>
//    <i> [Bits 31..0] RW (@ 0x500800C8) Expansion Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP2 >> 0) & 0xFFFFFFFF), ((SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP2 = (SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------  Register Array Item Address: SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP3  -------------
// SVD Line: 2735

unsigned int SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP3 __AT (0x500800CC);



// --------------  Register Array Item: SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP3  -----------------
// SVD Line: 2735

//  <item> SFDITEM_REG__SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP3
//    <name> [3] </name>
//    <i> [Bits 31..0] RW (@ 0x500800CC) Expansion Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP3 >> 0) & 0xFFFFFFFF), ((SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP3 = (SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Array ITree: SPC_APBSPPPCEXP  -----------------------------
// SVD Line: 2735

//  <itree> SFDITEM_REG__SPC_APBSPPPCEXP
//    <name> APBSPPPCEXP </name>
//    <i> Expansion Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <item> SFDITEM_REG__SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP0 </item>
//    <item> SFDITEM_REG__SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP1 </item>
//    <item> SFDITEM_REG__SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP2 </item>
//    <item> SFDITEM_REG__SPC_APBSPPPCEXP_APBSPPPCEXP_APBSPPPCEXP3 </item>
//  </itree>
//  


// ---------------------------  Register Item Address: SPC_NSMSCEXP  ------------------------------
// SVD Line: 2743

unsigned int SPC_NSMSCEXP __AT (0x500800D0);



// -------------------------------  Register Item: SPC_NSMSCEXP  ----------------------------------
// SVD Line: 2743

//  <item> SFDITEM_REG__SPC_NSMSCEXP
//    <name> NSMSCEXP </name>
//    <i> [Bits 31..0] RO (@ 0x500800D0) Expansion MSC Non-Secure Configuration </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPC_NSMSCEXP >> 0) & 0xFFFFFFFF), ((SPC_NSMSCEXP = (SPC_NSMSCEXP & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: SPC  --------------------------------------
// SVD Line: 2607

//  <view> SPC
//    <name> SPC </name>
//    <item> SFDITEM_REG__SPC_SECRESPCFG </item>
//    <item> SFDITEM_REG__SPC_NSCCFG </item>
//    <item> SFDITEM_REG__SPC_SECMPCINTSTATUS </item>
//    <item> SFDITEM_REG__SPC_SECPPCINTSTAT </item>
//    <item> SFDITEM_REG__SPC_SECPPCINTCLR </item>
//    <item> SFDITEM_REG__SPC_SECPPCINTEN </item>
//    <item> SFDITEM_REG__SPC_SECMSCINTSTAT </item>
//    <item> SFDITEM_REG__SPC_SECMSCINTCLR </item>
//    <item> SFDITEM_REG__SPC_SECMSCINTEN </item>
//    <item> SFDITEM_REG__SPC_BRGINTSTAT </item>
//    <item> SFDITEM_REG__SPC_BRGINTCLR </item>
//    <item> SFDITEM_REG__SPC_BRGINTEN </item>
//    <item> SFDITEM_REG__SPC_AHBNSPPC </item>
//    <item> SFDITEM_REG__SPC_AHBNSPPCEXP </item>
//    <item> SFDITEM_REG__SPC_APBNSPPC </item>
//    <item> SFDITEM_REG__SPC_APBNSPPCEXP </item>
//    <item> SFDITEM_REG__SPC_AHBSPPPC </item>
//    <item> SFDITEM_REG__SPC_AHBSPPPCEXP </item>
//    <item> SFDITEM_REG__SPC_APBSPPPC </item>
//    <item> SFDITEM_REG__SPC_APBSPPPCEXP </item>
//    <item> SFDITEM_REG__SPC_NSMSCEXP </item>
//  </view>
//  


// ------------  Register Array Item Address: NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC0  ----------------
// SVD Line: 2766

unsigned int NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC0 __AT (0x40080090);



// ----------------  Register Array Item: NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC0  --------------------
// SVD Line: 2766

//  <item> SFDITEM_REG__NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC0
//    <name> [0] </name>
//    <i> [Bits 31..0] RW (@ 0x40080090) Non-Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC0 >> 0) & 0xFFFFFFFF), ((NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC0 = (NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------  Register Array Item Address: NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC1  ----------------
// SVD Line: 2766

unsigned int NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC1 __AT (0x40080094);



// ----------------  Register Array Item: NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC1  --------------------
// SVD Line: 2766

//  <item> SFDITEM_REG__NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC1
//    <name> [1] </name>
//    <i> [Bits 31..0] RW (@ 0x40080094) Non-Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC1 >> 0) & 0xFFFFFFFF), ((NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC1 = (NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------  Register Array Item Address: NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC2  ----------------
// SVD Line: 2766

unsigned int NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC2 __AT (0x40080098);



// ----------------  Register Array Item: NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC2  --------------------
// SVD Line: 2766

//  <item> SFDITEM_REG__NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC2
//    <name> [2] </name>
//    <i> [Bits 31..0] RW (@ 0x40080098) Non-Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC2 >> 0) & 0xFFFFFFFF), ((NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC2 = (NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------  Register Array Item Address: NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC3  ----------------
// SVD Line: 2766

unsigned int NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC3 __AT (0x4008009C);



// ----------------  Register Array Item: NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC3  --------------------
// SVD Line: 2766

//  <item> SFDITEM_REG__NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC3
//    <name> [3] </name>
//    <i> [Bits 31..0] RW (@ 0x4008009C) Non-Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC3 >> 0) & 0xFFFFFFFF), ((NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC3 = (NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Array ITree: NSPC_AHBNSPPPC  ------------------------------
// SVD Line: 2766

//  <itree> SFDITEM_REG__NSPC_AHBNSPPPC
//    <name> AHBNSPPPC </name>
//    <i> Non-Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <item> SFDITEM_REG__NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC0 </item>
//    <item> SFDITEM_REG__NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC1 </item>
//    <item> SFDITEM_REG__NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC2 </item>
//    <item> SFDITEM_REG__NSPC_AHBNSPPPC_AHBNSPPPC_AHBNSPPPC3 </item>
//  </itree>
//  


// --------  Register Array Item Address: NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP0  -----------
// SVD Line: 2774

unsigned int NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP0 __AT (0x400800A0);



// ------------  Register Array Item: NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP0  ---------------
// SVD Line: 2774

//  <item> SFDITEM_REG__NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP0
//    <name> [0] </name>
//    <i> [Bits 31..0] RW (@ 0x400800A0) Expansion 0 Non-Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP0 >> 0) & 0xFFFFFFFF), ((NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP0 = (NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------  Register Array Item Address: NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP1  -----------
// SVD Line: 2774

unsigned int NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP1 __AT (0x400800A4);



// ------------  Register Array Item: NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP1  ---------------
// SVD Line: 2774

//  <item> SFDITEM_REG__NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP1
//    <name> [1] </name>
//    <i> [Bits 31..0] RW (@ 0x400800A4) Expansion 0 Non-Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP1 >> 0) & 0xFFFFFFFF), ((NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP1 = (NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------  Register Array Item Address: NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP2  -----------
// SVD Line: 2774

unsigned int NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP2 __AT (0x400800A8);



// ------------  Register Array Item: NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP2  ---------------
// SVD Line: 2774

//  <item> SFDITEM_REG__NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP2
//    <name> [2] </name>
//    <i> [Bits 31..0] RW (@ 0x400800A8) Expansion 0 Non-Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP2 >> 0) & 0xFFFFFFFF), ((NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP2 = (NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------  Register Array Item Address: NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP3  -----------
// SVD Line: 2774

unsigned int NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP3 __AT (0x400800AC);



// ------------  Register Array Item: NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP3  ---------------
// SVD Line: 2774

//  <item> SFDITEM_REG__NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP3
//    <name> [3] </name>
//    <i> [Bits 31..0] RW (@ 0x400800AC) Expansion 0 Non-Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP3 >> 0) & 0xFFFFFFFF), ((NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP3 = (NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Array ITree: NSPC_AHBNSPPPCEXP  ----------------------------
// SVD Line: 2774

//  <itree> SFDITEM_REG__NSPC_AHBNSPPPCEXP
//    <name> AHBNSPPPCEXP </name>
//    <i> Expansion 0 Non-Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <item> SFDITEM_REG__NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP0 </item>
//    <item> SFDITEM_REG__NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP1 </item>
//    <item> SFDITEM_REG__NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP2 </item>
//    <item> SFDITEM_REG__NSPC_AHBNSPPPCEXP_AHBNSPPPCEXP_AHBNSPPPCEXP3 </item>
//  </itree>
//  


// ------------  Register Array Item Address: NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC0  ----------------
// SVD Line: 2782

unsigned int NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC0 __AT (0x400800B0);



// ----------------  Register Array Item: NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC0  --------------------
// SVD Line: 2782

//  <item> SFDITEM_REG__NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC0
//    <name> [0] </name>
//    <i> [Bits 31..0] RW (@ 0x400800B0) Non-Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC0 >> 0) & 0xFFFFFFFF), ((NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC0 = (NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------  Register Array Item Address: NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC1  ----------------
// SVD Line: 2782

unsigned int NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC1 __AT (0x400800B4);



// ----------------  Register Array Item: NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC1  --------------------
// SVD Line: 2782

//  <item> SFDITEM_REG__NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC1
//    <name> [1] </name>
//    <i> [Bits 31..0] RW (@ 0x400800B4) Non-Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC1 >> 0) & 0xFFFFFFFF), ((NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC1 = (NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------  Register Array Item Address: NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC2  ----------------
// SVD Line: 2782

unsigned int NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC2 __AT (0x400800B8);



// ----------------  Register Array Item: NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC2  --------------------
// SVD Line: 2782

//  <item> SFDITEM_REG__NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC2
//    <name> [2] </name>
//    <i> [Bits 31..0] RW (@ 0x400800B8) Non-Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC2 >> 0) & 0xFFFFFFFF), ((NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC2 = (NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------  Register Array Item Address: NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC3  ----------------
// SVD Line: 2782

unsigned int NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC3 __AT (0x400800BC);



// ----------------  Register Array Item: NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC3  --------------------
// SVD Line: 2782

//  <item> SFDITEM_REG__NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC3
//    <name> [3] </name>
//    <i> [Bits 31..0] RW (@ 0x400800BC) Non-Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC3 >> 0) & 0xFFFFFFFF), ((NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC3 = (NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Array ITree: NSPC_APBNSPPPC  ------------------------------
// SVD Line: 2782

//  <itree> SFDITEM_REG__NSPC_APBNSPPPC
//    <name> APBNSPPPC </name>
//    <i> Non-Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <item> SFDITEM_REG__NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC0 </item>
//    <item> SFDITEM_REG__NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC1 </item>
//    <item> SFDITEM_REG__NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC2 </item>
//    <item> SFDITEM_REG__NSPC_APBNSPPPC_APBNSPPPC_APBNSPPPC3 </item>
//  </itree>
//  


// --------  Register Array Item Address: NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP0  -----------
// SVD Line: 2790

unsigned int NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP0 __AT (0x400800C0);



// ------------  Register Array Item: NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP0  ---------------
// SVD Line: 2790

//  <item> SFDITEM_REG__NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP0
//    <name> [0] </name>
//    <i> [Bits 31..0] RW (@ 0x400800C0) Expansion 0 Non-Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP0 >> 0) & 0xFFFFFFFF), ((NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP0 = (NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------  Register Array Item Address: NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP1  -----------
// SVD Line: 2790

unsigned int NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP1 __AT (0x400800C4);



// ------------  Register Array Item: NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP1  ---------------
// SVD Line: 2790

//  <item> SFDITEM_REG__NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP1
//    <name> [1] </name>
//    <i> [Bits 31..0] RW (@ 0x400800C4) Expansion 0 Non-Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP1 >> 0) & 0xFFFFFFFF), ((NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP1 = (NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------  Register Array Item Address: NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP2  -----------
// SVD Line: 2790

unsigned int NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP2 __AT (0x400800C8);



// ------------  Register Array Item: NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP2  ---------------
// SVD Line: 2790

//  <item> SFDITEM_REG__NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP2
//    <name> [2] </name>
//    <i> [Bits 31..0] RW (@ 0x400800C8) Expansion 0 Non-Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP2 >> 0) & 0xFFFFFFFF), ((NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP2 = (NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------  Register Array Item Address: NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP3  -----------
// SVD Line: 2790

unsigned int NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP3 __AT (0x400800CC);



// ------------  Register Array Item: NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP3  ---------------
// SVD Line: 2790

//  <item> SFDITEM_REG__NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP3
//    <name> [3] </name>
//    <i> [Bits 31..0] RW (@ 0x400800CC) Expansion 0 Non-Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP3 >> 0) & 0xFFFFFFFF), ((NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP3 = (NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Array ITree: NSPC_APBNSPPPCEXP  ----------------------------
// SVD Line: 2790

//  <itree> SFDITEM_REG__NSPC_APBNSPPPCEXP
//    <name> APBNSPPPCEXP </name>
//    <i> Expansion 0 Non-Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <item> SFDITEM_REG__NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP0 </item>
//    <item> SFDITEM_REG__NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP1 </item>
//    <item> SFDITEM_REG__NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP2 </item>
//    <item> SFDITEM_REG__NSPC_APBNSPPPCEXP_APBNSPPPCEXP_APBNSPPPCEXP3 </item>
//  </itree>
//  


// ----------------------------------  Peripheral View: NSPC  -------------------------------------
// SVD Line: 2754

//  <view> NSPC
//    <name> NSPC </name>
//    <item> SFDITEM_REG__NSPC_AHBNSPPPC </item>
//    <item> SFDITEM_REG__NSPC_AHBNSPPPCEXP </item>
//    <item> SFDITEM_REG__NSPC_APBNSPPPC </item>
//    <item> SFDITEM_REG__NSPC_APBNSPPPCEXP </item>
//  </view>
//  


// ----------------------------  Register Item Address: DEBUG_CTRL  -------------------------------
// SVD Line: 2820

unsigned int DEBUG_CTRL __AT (0x50007FFC);



// -----------------------------  Field Item: DEBUG_CTRL_SPNIDEN  ---------------------------------
// SVD Line: 2825

//  <item> SFDITEM_FIELD__DEBUG_CTRL_SPNIDEN
//    <name> SPNIDEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50007FFC) Secure Non Invasive Debug </i>
//    <check> 
//      <loc> ( (unsigned int) DEBUG_CTRL ) </loc>
//      <o.3..3> SPNIDEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DEBUG_CTRL_SPIDEN  ---------------------------------
// SVD Line: 2830

//  <item> SFDITEM_FIELD__DEBUG_CTRL_SPIDEN
//    <name> SPIDEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50007FFC) Secure Debug Enable </i>
//    <check> 
//      <loc> ( (unsigned int) DEBUG_CTRL ) </loc>
//      <o.2..2> SPIDEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DEBUG_CTRL_NIDEN  ----------------------------------
// SVD Line: 2835

//  <item> SFDITEM_FIELD__DEBUG_CTRL_NIDEN
//    <name> NIDEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50007FFC) Non-intrusive debug enable </i>
//    <check> 
//      <loc> ( (unsigned int) DEBUG_CTRL ) </loc>
//      <o.1..1> NIDEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DEBUG_CTRL_DBGEN  ----------------------------------
// SVD Line: 2840

//  <item> SFDITEM_FIELD__DEBUG_CTRL_DBGEN
//    <name> DBGEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50007FFC) Debug enable (must be 1 to debug) </i>
//    <check> 
//      <loc> ( (unsigned int) DEBUG_CTRL ) </loc>
//      <o.0..0> DBGEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: DEBUG_CTRL  -----------------------------------
// SVD Line: 2820

//  <rtree> SFDITEM_REG__DEBUG_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50007FFC) CTRL </i>
//    <loc> ( (unsigned int)((DEBUG_CTRL >> 0) & 0xFFFFFFFF), ((DEBUG_CTRL = (DEBUG_CTRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DEBUG_CTRL_SPNIDEN </item>
//    <item> SFDITEM_FIELD__DEBUG_CTRL_SPIDEN </item>
//    <item> SFDITEM_FIELD__DEBUG_CTRL_NIDEN </item>
//    <item> SFDITEM_FIELD__DEBUG_CTRL_DBGEN </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: DEBUG  -------------------------------------
// SVD Line: 2809

//  <view> DEBUG
//    <name> DEBUG </name>
//    <item> SFDITEM_REG__DEBUG_CTRL </item>
//  </view>
//  


// ------------------------  Register Item Address: TIMER0_Secure_CTRL  ---------------------------
// SVD Line: 117

unsigned int TIMER0_Secure_CTRL __AT (0x50000000);



// --------------------------  Field Item: TIMER0_Secure_CTRL_ENABLE  -----------------------------
// SVD Line: 122

//  <item> SFDITEM_FIELD__TIMER0_Secure_CTRL_ENABLE
//    <name> ENABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50000000) \nEnable\n0 : Disable = Timer is disabled\n1 : Enable = Timer is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_Secure_CTRL ) </loc>
//      <o.0..0> ENABLE
//        <0=> 0: Disable = Timer is disabled
//        <1=> 1: Enable = Timer is enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: TIMER0_Secure_CTRL_EXTIN  ------------------------------
// SVD Line: 136

//  <item> SFDITEM_FIELD__TIMER0_Secure_CTRL_EXTIN
//    <name> EXTIN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50000000) \nExternal Input as Enable\n0 : Disable = External Input as Enable is disabled\n1 : Enable = External Input as Enable is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_Secure_CTRL ) </loc>
//      <o.1..1> EXTIN
//        <0=> 0: Disable = External Input as Enable is disabled
//        <1=> 1: Enable = External Input as Enable is enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: TIMER0_Secure_CTRL_EXTCLK  -----------------------------
// SVD Line: 150

//  <item> SFDITEM_FIELD__TIMER0_Secure_CTRL_EXTCLK
//    <name> EXTCLK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50000000) \nExternal Clock Enable\n0 : Disable = External Clock s disabled\n1 : Enable = External Clock is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_Secure_CTRL ) </loc>
//      <o.2..2> EXTCLK
//        <0=> 0: Disable = External Clock s disabled
//        <1=> 1: Enable = External Clock is enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: TIMER0_Secure_CTRL_INTEN  ------------------------------
// SVD Line: 164

//  <item> SFDITEM_FIELD__TIMER0_Secure_CTRL_INTEN
//    <name> INTEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50000000) \nInterrupt Enable\n0 : Disable = Interrupt is disabled\n1 : Enable = Interrupt is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_Secure_CTRL ) </loc>
//      <o.3..3> INTEN
//        <0=> 0: Disable = Interrupt is disabled
//        <1=> 1: Enable = Interrupt is enabled
//    </combo>
//  </item>
//  


// ---------------------------  Register RTree: TIMER0_Secure_CTRL  -------------------------------
// SVD Line: 117

//  <rtree> SFDITEM_REG__TIMER0_Secure_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50000000) Control Register </i>
//    <loc> ( (unsigned int)((TIMER0_Secure_CTRL >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_CTRL = (TIMER0_Secure_CTRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_Secure_CTRL_ENABLE </item>
//    <item> SFDITEM_FIELD__TIMER0_Secure_CTRL_EXTIN </item>
//    <item> SFDITEM_FIELD__TIMER0_Secure_CTRL_EXTCLK </item>
//    <item> SFDITEM_FIELD__TIMER0_Secure_CTRL_INTEN </item>
//  </rtree>
//  


// -----------------------  Register Item Address: TIMER0_Secure_VALUE  ---------------------------
// SVD Line: 180

unsigned int TIMER0_Secure_VALUE __AT (0x50000004);



// ---------------------------  Register Item: TIMER0_Secure_VALUE  -------------------------------
// SVD Line: 180

//  <item> SFDITEM_REG__TIMER0_Secure_VALUE
//    <name> VALUE </name>
//    <i> [Bits 31..0] RW (@ 0x50000004) Current Timer Counter Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_Secure_VALUE >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_VALUE = (TIMER0_Secure_VALUE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER0_Secure_RELOAD  --------------------------
// SVD Line: 185

unsigned int TIMER0_Secure_RELOAD __AT (0x50000008);



// ---------------------------  Register Item: TIMER0_Secure_RELOAD  ------------------------------
// SVD Line: 185

//  <item> SFDITEM_REG__TIMER0_Secure_RELOAD
//    <name> RELOAD </name>
//    <i> [Bits 31..0] RW (@ 0x50000008) Counter Reload Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_Secure_RELOAD >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_RELOAD = (TIMER0_Secure_RELOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: TIMER0_Secure_INTSTATUS  -------------------------
// SVD Line: 190

unsigned int TIMER0_Secure_INTSTATUS __AT (0x5000000C);



// -------------------------  Register Item: TIMER0_Secure_INTSTATUS  -----------------------------
// SVD Line: 190

//  <item> SFDITEM_REG__TIMER0_Secure_INTSTATUS
//    <name> INTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x5000000C) Timer Interrupt status register </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_Secure_INTSTATUS >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_INTSTATUS = (TIMER0_Secure_INTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: TIMER0_Secure_INTCLEAR  -------------------------
// SVD Line: 195

unsigned int TIMER0_Secure_INTCLEAR __AT (0x5000000C);



// --------------------------  Register Item: TIMER0_Secure_INTCLEAR  -----------------------------
// SVD Line: 195

//  <item> SFDITEM_REG__TIMER0_Secure_INTCLEAR
//    <name> INTCLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x5000000C) Timer Interrupt clear register </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_Secure_INTCLEAR >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_INTCLEAR = (TIMER0_Secure_INTCLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Peripheral View: TIMER0_Secure  ---------------------------------
// SVD Line: 2852

//  <view> TIMER0_Secure
//    <name> TIMER0_Secure </name>
//    <item> SFDITEM_REG__TIMER0_Secure_CTRL </item>
//    <item> SFDITEM_REG__TIMER0_Secure_VALUE </item>
//    <item> SFDITEM_REG__TIMER0_Secure_RELOAD </item>
//    <item> SFDITEM_REG__TIMER0_Secure_INTSTATUS </item>
//    <item> SFDITEM_REG__TIMER0_Secure_INTCLEAR </item>
//  </view>
//  


// ------------------------  Register Item Address: TIMER1_Secure_CTRL  ---------------------------
// SVD Line: 117

unsigned int TIMER1_Secure_CTRL __AT (0x50001000);



// --------------------------  Field Item: TIMER1_Secure_CTRL_ENABLE  -----------------------------
// SVD Line: 122

//  <item> SFDITEM_FIELD__TIMER1_Secure_CTRL_ENABLE
//    <name> ENABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50001000) \nEnable\n0 : Disable = Timer is disabled\n1 : Enable = Timer is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_Secure_CTRL ) </loc>
//      <o.0..0> ENABLE
//        <0=> 0: Disable = Timer is disabled
//        <1=> 1: Enable = Timer is enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: TIMER1_Secure_CTRL_EXTIN  ------------------------------
// SVD Line: 136

//  <item> SFDITEM_FIELD__TIMER1_Secure_CTRL_EXTIN
//    <name> EXTIN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50001000) \nExternal Input as Enable\n0 : Disable = External Input as Enable is disabled\n1 : Enable = External Input as Enable is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_Secure_CTRL ) </loc>
//      <o.1..1> EXTIN
//        <0=> 0: Disable = External Input as Enable is disabled
//        <1=> 1: Enable = External Input as Enable is enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: TIMER1_Secure_CTRL_EXTCLK  -----------------------------
// SVD Line: 150

//  <item> SFDITEM_FIELD__TIMER1_Secure_CTRL_EXTCLK
//    <name> EXTCLK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50001000) \nExternal Clock Enable\n0 : Disable = External Clock s disabled\n1 : Enable = External Clock is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_Secure_CTRL ) </loc>
//      <o.2..2> EXTCLK
//        <0=> 0: Disable = External Clock s disabled
//        <1=> 1: Enable = External Clock is enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: TIMER1_Secure_CTRL_INTEN  ------------------------------
// SVD Line: 164

//  <item> SFDITEM_FIELD__TIMER1_Secure_CTRL_INTEN
//    <name> INTEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50001000) \nInterrupt Enable\n0 : Disable = Interrupt is disabled\n1 : Enable = Interrupt is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_Secure_CTRL ) </loc>
//      <o.3..3> INTEN
//        <0=> 0: Disable = Interrupt is disabled
//        <1=> 1: Enable = Interrupt is enabled
//    </combo>
//  </item>
//  


// ---------------------------  Register RTree: TIMER1_Secure_CTRL  -------------------------------
// SVD Line: 117

//  <rtree> SFDITEM_REG__TIMER1_Secure_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50001000) Control Register </i>
//    <loc> ( (unsigned int)((TIMER1_Secure_CTRL >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_CTRL = (TIMER1_Secure_CTRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_Secure_CTRL_ENABLE </item>
//    <item> SFDITEM_FIELD__TIMER1_Secure_CTRL_EXTIN </item>
//    <item> SFDITEM_FIELD__TIMER1_Secure_CTRL_EXTCLK </item>
//    <item> SFDITEM_FIELD__TIMER1_Secure_CTRL_INTEN </item>
//  </rtree>
//  


// -----------------------  Register Item Address: TIMER1_Secure_VALUE  ---------------------------
// SVD Line: 180

unsigned int TIMER1_Secure_VALUE __AT (0x50001004);



// ---------------------------  Register Item: TIMER1_Secure_VALUE  -------------------------------
// SVD Line: 180

//  <item> SFDITEM_REG__TIMER1_Secure_VALUE
//    <name> VALUE </name>
//    <i> [Bits 31..0] RW (@ 0x50001004) Current Timer Counter Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_Secure_VALUE >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_VALUE = (TIMER1_Secure_VALUE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER1_Secure_RELOAD  --------------------------
// SVD Line: 185

unsigned int TIMER1_Secure_RELOAD __AT (0x50001008);



// ---------------------------  Register Item: TIMER1_Secure_RELOAD  ------------------------------
// SVD Line: 185

//  <item> SFDITEM_REG__TIMER1_Secure_RELOAD
//    <name> RELOAD </name>
//    <i> [Bits 31..0] RW (@ 0x50001008) Counter Reload Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_Secure_RELOAD >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_RELOAD = (TIMER1_Secure_RELOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: TIMER1_Secure_INTSTATUS  -------------------------
// SVD Line: 190

unsigned int TIMER1_Secure_INTSTATUS __AT (0x5000100C);



// -------------------------  Register Item: TIMER1_Secure_INTSTATUS  -----------------------------
// SVD Line: 190

//  <item> SFDITEM_REG__TIMER1_Secure_INTSTATUS
//    <name> INTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x5000100C) Timer Interrupt status register </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_Secure_INTSTATUS >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_INTSTATUS = (TIMER1_Secure_INTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: TIMER1_Secure_INTCLEAR  -------------------------
// SVD Line: 195

unsigned int TIMER1_Secure_INTCLEAR __AT (0x5000100C);



// --------------------------  Register Item: TIMER1_Secure_INTCLEAR  -----------------------------
// SVD Line: 195

//  <item> SFDITEM_REG__TIMER1_Secure_INTCLEAR
//    <name> INTCLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x5000100C) Timer Interrupt clear register </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_Secure_INTCLEAR >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_INTCLEAR = (TIMER1_Secure_INTCLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Peripheral View: TIMER1_Secure  ---------------------------------
// SVD Line: 2859

//  <view> TIMER1_Secure
//    <name> TIMER1_Secure </name>
//    <item> SFDITEM_REG__TIMER1_Secure_CTRL </item>
//    <item> SFDITEM_REG__TIMER1_Secure_VALUE </item>
//    <item> SFDITEM_REG__TIMER1_Secure_RELOAD </item>
//    <item> SFDITEM_REG__TIMER1_Secure_INTSTATUS </item>
//    <item> SFDITEM_REG__TIMER1_Secure_INTCLEAR </item>
//  </view>
//  


// -------------------  Register Item Address: DUALTIMER_Secure_TIMER1LOAD  -----------------------
// SVD Line: 236

unsigned int DUALTIMER_Secure_TIMER1LOAD __AT (0x50002000);



// -----------------------  Register Item: DUALTIMER_Secure_TIMER1LOAD  ---------------------------
// SVD Line: 236

//  <item> SFDITEM_REG__DUALTIMER_Secure_TIMER1LOAD
//    <name> TIMER1LOAD </name>
//    <i> [Bits 31..0] RW (@ 0x50002000) Timer 1 Load Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DUALTIMER_Secure_TIMER1LOAD >> 0) & 0xFFFFFFFF), ((DUALTIMER_Secure_TIMER1LOAD = (DUALTIMER_Secure_TIMER1LOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DUALTIMER_Secure_TIMER1VALUE  ----------------------
// SVD Line: 241

unsigned int DUALTIMER_Secure_TIMER1VALUE __AT (0x50002004);



// -----------------------  Register Item: DUALTIMER_Secure_TIMER1VALUE  --------------------------
// SVD Line: 241

//  <item> SFDITEM_REG__DUALTIMER_Secure_TIMER1VALUE
//    <name> TIMER1VALUE </name>
//    <i> [Bits 31..0] RO (@ 0x50002004) Timer 1 Value Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DUALTIMER_Secure_TIMER1VALUE >> 0) & 0xFFFFFFFF), ((DUALTIMER_Secure_TIMER1VALUE = (DUALTIMER_Secure_TIMER1VALUE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DUALTIMER_Secure_TIMER1CONTROL  ---------------------
// SVD Line: 246

unsigned int DUALTIMER_Secure_TIMER1CONTROL __AT (0x50002008);



// -----------------  Field Item: DUALTIMER_Secure_TIMER1CONTROL_OneShotCount  --------------------
// SVD Line: 251

//  <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER1CONTROL_OneShotCount
//    <name> OneShotCount </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50002008) \nSelects one-shot or wrapping counter mode.\n0 : Wrapping = Wrapping counter mode\n1 : OneShot = One-shot counter mode </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_Secure_TIMER1CONTROL ) </loc>
//      <o.0..0> OneShotCount
//        <0=> 0: Wrapping = Wrapping counter mode
//        <1=> 1: OneShot = One-shot counter mode
//    </combo>
//  </item>
//  


// ------------------  Field Item: DUALTIMER_Secure_TIMER1CONTROL_TimerSize  ----------------------
// SVD Line: 265

//  <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER1CONTROL_TimerSize
//    <name> TimerSize </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50002008) \nSelects 16-bit or 32- bit counter operation.\n0 : 16-bit = 16-bit counter mode\n1 : 32-bit = 32-bit counter mode </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_Secure_TIMER1CONTROL ) </loc>
//      <o.1..1> TimerSize
//        <0=> 0: 16-bit = 16-bit counter mode
//        <1=> 1: 32-bit = 32-bit counter mode
//    </combo>
//  </item>
//  


// -------------------  Field Item: DUALTIMER_Secure_TIMER1CONTROL_TimerPre  ----------------------
// SVD Line: 279

//  <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER1CONTROL_TimerPre
//    <name> TimerPre </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x50002008) \nTimer prescale bits\n0 : divided by 1 = clock is divided by 1\n1 : divided by 16 = clock is divided by 16\n2 : divided by 256 = clock is divided by 256\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_Secure_TIMER1CONTROL ) </loc>
//      <o.3..2> TimerPre
//        <0=> 0: divided by 1 = clock is divided by 1
//        <1=> 1: divided by 16 = clock is divided by 16
//        <2=> 2: divided by 256 = clock is divided by 256
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------  Field Item: DUALTIMER_Secure_TIMER1CONTROL_InterruptEnable  -------------------
// SVD Line: 297

//  <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER1CONTROL_InterruptEnable
//    <name> InterruptEnable </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x50002008) \nInterrupt Enable bit\n0 : Disable = Interrupt is disabled.\n1 : Enable = Interrupt is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_Secure_TIMER1CONTROL ) </loc>
//      <o.5..5> InterruptEnable
//        <0=> 0: Disable = Interrupt is disabled.
//        <1=> 1: Enable = Interrupt is enabled.
//    </combo>
//  </item>
//  


// ------------------  Field Item: DUALTIMER_Secure_TIMER1CONTROL_TimerMode  ----------------------
// SVD Line: 311

//  <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER1CONTROL_TimerMode
//    <name> TimerMode </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50002008) \nTimer Mode bit\n0 : Free-Running = Free-Running timer mode.\n1 : Periodic = Periodic timer mode. </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_Secure_TIMER1CONTROL ) </loc>
//      <o.6..6> TimerMode
//        <0=> 0: Free-Running = Free-Running timer mode.
//        <1=> 1: Periodic = Periodic timer mode.
//    </combo>
//  </item>
//  


// -----------------  Field Item: DUALTIMER_Secure_TIMER1CONTROL_TimerEnable  ---------------------
// SVD Line: 325

//  <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER1CONTROL_TimerEnable
//    <name> TimerEnable </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x50002008) \nTimer Enable Enable bit.\n0 : Disable = Timer is disabled.\n1 : Enable = Timer is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_Secure_TIMER1CONTROL ) </loc>
//      <o.7..7> TimerEnable
//        <0=> 0: Disable = Timer is disabled.
//        <1=> 1: Enable = Timer is enabled.
//    </combo>
//  </item>
//  


// ---------------------  Register RTree: DUALTIMER_Secure_TIMER1CONTROL  -------------------------
// SVD Line: 246

//  <rtree> SFDITEM_REG__DUALTIMER_Secure_TIMER1CONTROL
//    <name> TIMER1CONTROL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50002008) Timer 1 Control Register </i>
//    <loc> ( (unsigned int)((DUALTIMER_Secure_TIMER1CONTROL >> 0) & 0xFFFFFFFF), ((DUALTIMER_Secure_TIMER1CONTROL = (DUALTIMER_Secure_TIMER1CONTROL & ~(0xEFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xEF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER1CONTROL_OneShotCount </item>
//    <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER1CONTROL_TimerSize </item>
//    <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER1CONTROL_TimerPre </item>
//    <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER1CONTROL_InterruptEnable </item>
//    <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER1CONTROL_TimerMode </item>
//    <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER1CONTROL_TimerEnable </item>
//  </rtree>
//  


// ------------------  Register Item Address: DUALTIMER_Secure_TIMER1INTCLR  ----------------------
// SVD Line: 341

unsigned int DUALTIMER_Secure_TIMER1INTCLR __AT (0x5000200C);



// ----------------------  Field Item: DUALTIMER_Secure_TIMER1INTCLR_INT  -------------------------
// SVD Line: 347

//  <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER1INTCLR_INT
//    <name> INT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x5000200C) interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) DUALTIMER_Secure_TIMER1INTCLR ) </loc>
//      <o.0..0> INT
//    </check>
//  </item>
//  


// ----------------------  Register RTree: DUALTIMER_Secure_TIMER1INTCLR  -------------------------
// SVD Line: 341

//  <rtree> SFDITEM_REG__DUALTIMER_Secure_TIMER1INTCLR
//    <name> TIMER1INTCLR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x5000200C) Timer 1 Interrupt Clear Register </i>
//    <loc> ( (unsigned int)((DUALTIMER_Secure_TIMER1INTCLR >> 0) & 0xFFFFFFFF), ((DUALTIMER_Secure_TIMER1INTCLR = (DUALTIMER_Secure_TIMER1INTCLR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER1INTCLR_INT </item>
//  </rtree>
//  


// --------------------  Register Item Address: DUALTIMER_Secure_TIMER1RIS  -----------------------
// SVD Line: 353

unsigned int DUALTIMER_Secure_TIMER1RIS __AT (0x50002010);



// -----------------------  Field Item: DUALTIMER_Secure_TIMER1RIS_RIS  ---------------------------
// SVD Line: 358

//  <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER1RIS_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x50002010) Raw Timer interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) DUALTIMER_Secure_TIMER1RIS ) </loc>
//      <o.0..0> RIS
//    </check>
//  </item>
//  


// -----------------------  Register RTree: DUALTIMER_Secure_TIMER1RIS  ---------------------------
// SVD Line: 353

//  <rtree> SFDITEM_REG__DUALTIMER_Secure_TIMER1RIS
//    <name> TIMER1RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50002010) Timer 1 Raw Interrupt Status Register </i>
//    <loc> ( (unsigned int)((DUALTIMER_Secure_TIMER1RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER1RIS_RIS </item>
//  </rtree>
//  


// --------------------  Register Item Address: DUALTIMER_Secure_TIMER1MIS  -----------------------
// SVD Line: 364

unsigned int DUALTIMER_Secure_TIMER1MIS __AT (0x50002014);



// -----------------------  Field Item: DUALTIMER_Secure_TIMER1MIS_MIS  ---------------------------
// SVD Line: 369

//  <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER1MIS_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x50002014) Masked Timer interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) DUALTIMER_Secure_TIMER1MIS ) </loc>
//      <o.0..0> MIS
//    </check>
//  </item>
//  


// -----------------------  Register RTree: DUALTIMER_Secure_TIMER1MIS  ---------------------------
// SVD Line: 364

//  <rtree> SFDITEM_REG__DUALTIMER_Secure_TIMER1MIS
//    <name> TIMER1MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50002014) Timer 1 Mask Interrupt Status Register </i>
//    <loc> ( (unsigned int)((DUALTIMER_Secure_TIMER1MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER1MIS_MIS </item>
//  </rtree>
//  


// ------------------  Register Item Address: DUALTIMER_Secure_TIMER1BGLOAD  ----------------------
// SVD Line: 375

unsigned int DUALTIMER_Secure_TIMER1BGLOAD __AT (0x50002018);



// ----------------------  Register Item: DUALTIMER_Secure_TIMER1BGLOAD  --------------------------
// SVD Line: 375

//  <item> SFDITEM_REG__DUALTIMER_Secure_TIMER1BGLOAD
//    <name> TIMER1BGLOAD </name>
//    <i> [Bits 31..0] RW (@ 0x50002018) Timer 1 Background Load Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DUALTIMER_Secure_TIMER1BGLOAD >> 0) & 0xFFFFFFFF), ((DUALTIMER_Secure_TIMER1BGLOAD = (DUALTIMER_Secure_TIMER1BGLOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DUALTIMER_Secure_TIMER2LOAD  -----------------------
// SVD Line: 380

unsigned int DUALTIMER_Secure_TIMER2LOAD __AT (0x50002020);



// -----------------------  Register Item: DUALTIMER_Secure_TIMER2LOAD  ---------------------------
// SVD Line: 380

//  <item> SFDITEM_REG__DUALTIMER_Secure_TIMER2LOAD
//    <name> TIMER2LOAD </name>
//    <i> [Bits 31..0] RW (@ 0x50002020) Timer 2 Load Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DUALTIMER_Secure_TIMER2LOAD >> 0) & 0xFFFFFFFF), ((DUALTIMER_Secure_TIMER2LOAD = (DUALTIMER_Secure_TIMER2LOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DUALTIMER_Secure_TIMER2VALUE  ----------------------
// SVD Line: 385

unsigned int DUALTIMER_Secure_TIMER2VALUE __AT (0x50002024);



// -----------------------  Register Item: DUALTIMER_Secure_TIMER2VALUE  --------------------------
// SVD Line: 385

//  <item> SFDITEM_REG__DUALTIMER_Secure_TIMER2VALUE
//    <name> TIMER2VALUE </name>
//    <i> [Bits 31..0] RO (@ 0x50002024) Timer 2 Value Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DUALTIMER_Secure_TIMER2VALUE >> 0) & 0xFFFFFFFF), ((DUALTIMER_Secure_TIMER2VALUE = (DUALTIMER_Secure_TIMER2VALUE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DUALTIMER_Secure_TIMER2CONTROL  ---------------------
// SVD Line: 390

unsigned int DUALTIMER_Secure_TIMER2CONTROL __AT (0x50002028);



// -----------------  Field Item: DUALTIMER_Secure_TIMER2CONTROL_OneShotCount  --------------------
// SVD Line: 395

//  <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER2CONTROL_OneShotCount
//    <name> OneShotCount </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50002028) \nSelects one-shot or wrapping counter mode.\n0 : Wrapping = Wrapping counter mode\n1 : OneShot = One-shot counter mode </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_Secure_TIMER2CONTROL ) </loc>
//      <o.0..0> OneShotCount
//        <0=> 0: Wrapping = Wrapping counter mode
//        <1=> 1: OneShot = One-shot counter mode
//    </combo>
//  </item>
//  


// ------------------  Field Item: DUALTIMER_Secure_TIMER2CONTROL_TimerSize  ----------------------
// SVD Line: 409

//  <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER2CONTROL_TimerSize
//    <name> TimerSize </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50002028) \nSelects 16-bit or 32- bit counter operation.\n0 : 16-bit = 16-bit counter mode\n1 : 32-bit = 32-bit counter mode </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_Secure_TIMER2CONTROL ) </loc>
//      <o.1..1> TimerSize
//        <0=> 0: 16-bit = 16-bit counter mode
//        <1=> 1: 32-bit = 32-bit counter mode
//    </combo>
//  </item>
//  


// -------------------  Field Item: DUALTIMER_Secure_TIMER2CONTROL_TimerPre  ----------------------
// SVD Line: 423

//  <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER2CONTROL_TimerPre
//    <name> TimerPre </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x50002028) \nTimer prescale bits.\n0 : divided by 1 = clock is divided by 1\n1 : divided by 16 = clock is divided by 16\n2 : divided by 256 = clock is divided by 256\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_Secure_TIMER2CONTROL ) </loc>
//      <o.3..2> TimerPre
//        <0=> 0: divided by 1 = clock is divided by 1
//        <1=> 1: divided by 16 = clock is divided by 16
//        <2=> 2: divided by 256 = clock is divided by 256
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------  Field Item: DUALTIMER_Secure_TIMER2CONTROL_InterruptEnable  -------------------
// SVD Line: 441

//  <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER2CONTROL_InterruptEnable
//    <name> InterruptEnable </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x50002028) \nInterrupt Enable bit.\n0 : Disable = Interrupt is disabled.\n1 : Enable = Interrupt is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_Secure_TIMER2CONTROL ) </loc>
//      <o.5..5> InterruptEnable
//        <0=> 0: Disable = Interrupt is disabled.
//        <1=> 1: Enable = Interrupt is enabled.
//    </combo>
//  </item>
//  


// ------------------  Field Item: DUALTIMER_Secure_TIMER2CONTROL_TimerMode  ----------------------
// SVD Line: 455

//  <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER2CONTROL_TimerMode
//    <name> TimerMode </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50002028) \nTimer Mode bit.\n0 : Free-Running = Free-Running timer mode.\n1 : Periodic = Periodic timer mode. </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_Secure_TIMER2CONTROL ) </loc>
//      <o.6..6> TimerMode
//        <0=> 0: Free-Running = Free-Running timer mode.
//        <1=> 1: Periodic = Periodic timer mode.
//    </combo>
//  </item>
//  


// -----------------  Field Item: DUALTIMER_Secure_TIMER2CONTROL_TimerEnable  ---------------------
// SVD Line: 469

//  <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER2CONTROL_TimerEnable
//    <name> TimerEnable </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x50002028) \nTimer Enable Enable bit.\n0 : Disable = Timer is disabled.\n1 : Enable = Timer is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) DUALTIMER_Secure_TIMER2CONTROL ) </loc>
//      <o.7..7> TimerEnable
//        <0=> 0: Disable = Timer is disabled.
//        <1=> 1: Enable = Timer is enabled.
//    </combo>
//  </item>
//  


// ---------------------  Register RTree: DUALTIMER_Secure_TIMER2CONTROL  -------------------------
// SVD Line: 390

//  <rtree> SFDITEM_REG__DUALTIMER_Secure_TIMER2CONTROL
//    <name> TIMER2CONTROL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50002028) Timer 2 Control Register </i>
//    <loc> ( (unsigned int)((DUALTIMER_Secure_TIMER2CONTROL >> 0) & 0xFFFFFFFF), ((DUALTIMER_Secure_TIMER2CONTROL = (DUALTIMER_Secure_TIMER2CONTROL & ~(0xEFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xEF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER2CONTROL_OneShotCount </item>
//    <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER2CONTROL_TimerSize </item>
//    <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER2CONTROL_TimerPre </item>
//    <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER2CONTROL_InterruptEnable </item>
//    <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER2CONTROL_TimerMode </item>
//    <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER2CONTROL_TimerEnable </item>
//  </rtree>
//  


// ------------------  Register Item Address: DUALTIMER_Secure_TIMER2INTCLR  ----------------------
// SVD Line: 486

unsigned int DUALTIMER_Secure_TIMER2INTCLR __AT (0x5000202C);



// ----------------------  Field Item: DUALTIMER_Secure_TIMER2INTCLR_INT  -------------------------
// SVD Line: 492

//  <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER2INTCLR_INT
//    <name> INT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x5000202C) interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) DUALTIMER_Secure_TIMER2INTCLR ) </loc>
//      <o.0..0> INT
//    </check>
//  </item>
//  


// ----------------------  Register RTree: DUALTIMER_Secure_TIMER2INTCLR  -------------------------
// SVD Line: 486

//  <rtree> SFDITEM_REG__DUALTIMER_Secure_TIMER2INTCLR
//    <name> TIMER2INTCLR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x5000202C) Timer 2 Interrupt Clear Register </i>
//    <loc> ( (unsigned int)((DUALTIMER_Secure_TIMER2INTCLR >> 0) & 0xFFFFFFFF), ((DUALTIMER_Secure_TIMER2INTCLR = (DUALTIMER_Secure_TIMER2INTCLR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER2INTCLR_INT </item>
//  </rtree>
//  


// --------------------  Register Item Address: DUALTIMER_Secure_TIMER2RIS  -----------------------
// SVD Line: 499

unsigned int DUALTIMER_Secure_TIMER2RIS __AT (0x50002030);



// -----------------------  Field Item: DUALTIMER_Secure_TIMER2RIS_RIS  ---------------------------
// SVD Line: 504

//  <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER2RIS_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x50002030) Raw Timer interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) DUALTIMER_Secure_TIMER2RIS ) </loc>
//      <o.0..0> RIS
//    </check>
//  </item>
//  


// -----------------------  Register RTree: DUALTIMER_Secure_TIMER2RIS  ---------------------------
// SVD Line: 499

//  <rtree> SFDITEM_REG__DUALTIMER_Secure_TIMER2RIS
//    <name> TIMER2RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50002030) Timer 2 Raw Interrupt Status Register </i>
//    <loc> ( (unsigned int)((DUALTIMER_Secure_TIMER2RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER2RIS_RIS </item>
//  </rtree>
//  


// --------------------  Register Item Address: DUALTIMER_Secure_TIMER2MIS  -----------------------
// SVD Line: 511

unsigned int DUALTIMER_Secure_TIMER2MIS __AT (0x50002034);



// -----------------------  Field Item: DUALTIMER_Secure_TIMER2MIS_MIS  ---------------------------
// SVD Line: 516

//  <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER2MIS_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x50002034) Masked Timer interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) DUALTIMER_Secure_TIMER2MIS ) </loc>
//      <o.0..0> MIS
//    </check>
//  </item>
//  


// -----------------------  Register RTree: DUALTIMER_Secure_TIMER2MIS  ---------------------------
// SVD Line: 511

//  <rtree> SFDITEM_REG__DUALTIMER_Secure_TIMER2MIS
//    <name> TIMER2MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50002034) Timer 2 Mask Interrupt Status Register </i>
//    <loc> ( (unsigned int)((DUALTIMER_Secure_TIMER2MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DUALTIMER_Secure_TIMER2MIS_MIS </item>
//  </rtree>
//  


// ------------------  Register Item Address: DUALTIMER_Secure_TIMER2BGLOAD  ----------------------
// SVD Line: 522

unsigned int DUALTIMER_Secure_TIMER2BGLOAD __AT (0x50002038);



// ----------------------  Register Item: DUALTIMER_Secure_TIMER2BGLOAD  --------------------------
// SVD Line: 522

//  <item> SFDITEM_REG__DUALTIMER_Secure_TIMER2BGLOAD
//    <name> TIMER2BGLOAD </name>
//    <i> [Bits 31..0] RW (@ 0x50002038) Timer 2 Background Load Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DUALTIMER_Secure_TIMER2BGLOAD >> 0) & 0xFFFFFFFF), ((DUALTIMER_Secure_TIMER2BGLOAD = (DUALTIMER_Secure_TIMER2BGLOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Peripheral View: DUALTIMER_Secure  -------------------------------
// SVD Line: 2866

//  <view> DUALTIMER_Secure
//    <name> DUALTIMER_Secure </name>
//    <item> SFDITEM_REG__DUALTIMER_Secure_TIMER1LOAD </item>
//    <item> SFDITEM_REG__DUALTIMER_Secure_TIMER1VALUE </item>
//    <item> SFDITEM_REG__DUALTIMER_Secure_TIMER1CONTROL </item>
//    <item> SFDITEM_REG__DUALTIMER_Secure_TIMER1INTCLR </item>
//    <item> SFDITEM_REG__DUALTIMER_Secure_TIMER1RIS </item>
//    <item> SFDITEM_REG__DUALTIMER_Secure_TIMER1MIS </item>
//    <item> SFDITEM_REG__DUALTIMER_Secure_TIMER1BGLOAD </item>
//    <item> SFDITEM_REG__DUALTIMER_Secure_TIMER2LOAD </item>
//    <item> SFDITEM_REG__DUALTIMER_Secure_TIMER2VALUE </item>
//    <item> SFDITEM_REG__DUALTIMER_Secure_TIMER2CONTROL </item>
//    <item> SFDITEM_REG__DUALTIMER_Secure_TIMER2INTCLR </item>
//    <item> SFDITEM_REG__DUALTIMER_Secure_TIMER2RIS </item>
//    <item> SFDITEM_REG__DUALTIMER_Secure_TIMER2MIS </item>
//    <item> SFDITEM_REG__DUALTIMER_Secure_TIMER2BGLOAD </item>
//  </view>
//  


// ------------------------  Register Item Address: UART0_Secure_DATA  ----------------------------
// SVD Line: 561

unsigned int UART0_Secure_DATA __AT (0x50200000);



// ----------------------------  Register Item: UART0_Secure_DATA  --------------------------------
// SVD Line: 561

//  <item> SFDITEM_REG__UART0_Secure_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x50200000) Recieve and Transmit Data Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART0_Secure_DATA >> 0) & 0xFFFFFFFF), ((UART0_Secure_DATA = (UART0_Secure_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: UART0_Secure_STATE  ---------------------------
// SVD Line: 566

unsigned int UART0_Secure_STATE __AT (0x50200004);



// ---------------------------  Field Item: UART0_Secure_STATE_RXOV  ------------------------------
// SVD Line: 571

//  <item> SFDITEM_FIELD__UART0_Secure_STATE_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50200004) RX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_STATE ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART0_Secure_STATE_TXOV  ------------------------------
// SVD Line: 576

//  <item> SFDITEM_FIELD__UART0_Secure_STATE_TXOV
//    <name> TXOV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50200004) TX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_STATE ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART0_Secure_STATE_RXBF  ------------------------------
// SVD Line: 581

//  <item> SFDITEM_FIELD__UART0_Secure_STATE_RXBF
//    <name> RXBF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x50200004) RX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_STATE ) </loc>
//      <o.1..1> RXBF
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART0_Secure_STATE_TXBF  ------------------------------
// SVD Line: 586

//  <item> SFDITEM_FIELD__UART0_Secure_STATE_TXBF
//    <name> TXBF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x50200004) TX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_STATE ) </loc>
//      <o.0..0> TXBF
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: UART0_Secure_STATE  -------------------------------
// SVD Line: 566

//  <rtree> SFDITEM_REG__UART0_Secure_STATE
//    <name> STATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50200004) UART Status Register </i>
//    <loc> ( (unsigned int)((UART0_Secure_STATE >> 0) & 0xFFFFFFFF), ((UART0_Secure_STATE = (UART0_Secure_STATE & ~(0xCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART0_Secure_STATE_RXOV </item>
//    <item> SFDITEM_FIELD__UART0_Secure_STATE_TXOV </item>
//    <item> SFDITEM_FIELD__UART0_Secure_STATE_RXBF </item>
//    <item> SFDITEM_FIELD__UART0_Secure_STATE_TXBF </item>
//  </rtree>
//  


// ------------------------  Register Item Address: UART0_Secure_CTRL  ----------------------------
// SVD Line: 593

unsigned int UART0_Secure_CTRL __AT (0x50200008);



// ---------------------------  Field Item: UART0_Secure_CTRL_HSTX  -------------------------------
// SVD Line: 598

//  <item> SFDITEM_FIELD__UART0_Secure_CTRL_HSTX
//    <name> HSTX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50200008) \nHigh Speed Test Mode for TX only\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_Secure_CTRL ) </loc>
//      <o.6..6> HSTX
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: UART0_Secure_CTRL_RVOVINT  -----------------------------
// SVD Line: 612

//  <item> SFDITEM_FIELD__UART0_Secure_CTRL_RVOVINT
//    <name> RVOVINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x50200008) \nRX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_Secure_CTRL ) </loc>
//      <o.5..5> RVOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: UART0_Secure_CTRL_TXOVINT  -----------------------------
// SVD Line: 626

//  <item> SFDITEM_FIELD__UART0_Secure_CTRL_TXOVINT
//    <name> TXOVINT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x50200008) \nTX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_Secure_CTRL ) </loc>
//      <o.4..4> TXOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART0_Secure_CTRL_RXINT  ------------------------------
// SVD Line: 640

//  <item> SFDITEM_FIELD__UART0_Secure_CTRL_RXINT
//    <name> RXINT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50200008) \nRX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_Secure_CTRL ) </loc>
//      <o.3..3> RXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART0_Secure_CTRL_TXINT  ------------------------------
// SVD Line: 654

//  <item> SFDITEM_FIELD__UART0_Secure_CTRL_TXINT
//    <name> TXINT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50200008) \nTX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_Secure_CTRL ) </loc>
//      <o.2..2> TXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART0_Secure_CTRL_RXEN  -------------------------------
// SVD Line: 668

//  <item> SFDITEM_FIELD__UART0_Secure_CTRL_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50200008) \nRX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_Secure_CTRL ) </loc>
//      <o.1..1> RXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART0_Secure_CTRL_TXEN  -------------------------------
// SVD Line: 682

//  <item> SFDITEM_FIELD__UART0_Secure_CTRL_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50200008) \nTX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_Secure_CTRL ) </loc>
//      <o.0..0> TXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: UART0_Secure_CTRL  -------------------------------
// SVD Line: 593

//  <rtree> SFDITEM_REG__UART0_Secure_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50200008) UART Control Register </i>
//    <loc> ( (unsigned int)((UART0_Secure_CTRL >> 0) & 0xFFFFFFFF), ((UART0_Secure_CTRL = (UART0_Secure_CTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART0_Secure_CTRL_HSTX </item>
//    <item> SFDITEM_FIELD__UART0_Secure_CTRL_RVOVINT </item>
//    <item> SFDITEM_FIELD__UART0_Secure_CTRL_TXOVINT </item>
//    <item> SFDITEM_FIELD__UART0_Secure_CTRL_RXINT </item>
//    <item> SFDITEM_FIELD__UART0_Secure_CTRL_TXINT </item>
//    <item> SFDITEM_FIELD__UART0_Secure_CTRL_RXEN </item>
//    <item> SFDITEM_FIELD__UART0_Secure_CTRL_TXEN </item>
//  </rtree>
//  


// ----------------------  Register Item Address: UART0_Secure_INTSTATUS  -------------------------
// SVD Line: 698

unsigned int UART0_Secure_INTSTATUS __AT (0x5020000C);



// -------------------------  Field Item: UART0_Secure_INTSTATUS_RXOV  ----------------------------
// SVD Line: 703

//  <item> SFDITEM_FIELD__UART0_Secure_INTSTATUS_RXOV
//    <name> RXOV </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5020000C) RX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_INTSTATUS ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART0_Secure_INTSTATUS_TXOV  ----------------------------
// SVD Line: 707

//  <item> SFDITEM_FIELD__UART0_Secure_INTSTATUS_TXOV
//    <name> TXOV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5020000C) TX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_INTSTATUS ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ------------------------  Field Item: UART0_Secure_INTSTATUS_RXINT  ----------------------------
// SVD Line: 711

//  <item> SFDITEM_FIELD__UART0_Secure_INTSTATUS_RXINT
//    <name> RXINT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5020000C) RX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_INTSTATUS ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ------------------------  Field Item: UART0_Secure_INTSTATUS_TXINT  ----------------------------
// SVD Line: 715

//  <item> SFDITEM_FIELD__UART0_Secure_INTSTATUS_TXINT
//    <name> TXINT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5020000C) TX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_INTSTATUS ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -------------------------  Register RTree: UART0_Secure_INTSTATUS  -----------------------------
// SVD Line: 698

//  <rtree> SFDITEM_REG__UART0_Secure_INTSTATUS
//    <name> INTSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5020000C) UART Interrupt Status Register </i>
//    <loc> ( (unsigned int)((UART0_Secure_INTSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART0_Secure_INTSTATUS_RXOV </item>
//    <item> SFDITEM_FIELD__UART0_Secure_INTSTATUS_TXOV </item>
//    <item> SFDITEM_FIELD__UART0_Secure_INTSTATUS_RXINT </item>
//    <item> SFDITEM_FIELD__UART0_Secure_INTSTATUS_TXINT </item>
//  </rtree>
//  


// ----------------------  Register Item Address: UART0_Secure_INTCLEAR  --------------------------
// SVD Line: 721

unsigned int UART0_Secure_INTCLEAR __AT (0x5020000C);



// -------------------------  Field Item: UART0_Secure_INTCLEAR_RXOV  -----------------------------
// SVD Line: 727

//  <item> SFDITEM_FIELD__UART0_Secure_INTCLEAR_RXOV
//    <name> RXOV </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x5020000C) RX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_INTCLEAR ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART0_Secure_INTCLEAR_TXOV  -----------------------------
// SVD Line: 732

//  <item> SFDITEM_FIELD__UART0_Secure_INTCLEAR_TXOV
//    <name> TXOV </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x5020000C) TX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_INTCLEAR ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART0_Secure_INTCLEAR_RXINT  ----------------------------
// SVD Line: 737

//  <item> SFDITEM_FIELD__UART0_Secure_INTCLEAR_RXINT
//    <name> RXINT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x5020000C) RX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_INTCLEAR ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART0_Secure_INTCLEAR_TXINT  ----------------------------
// SVD Line: 742

//  <item> SFDITEM_FIELD__UART0_Secure_INTCLEAR_TXINT
//    <name> TXINT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x5020000C) TX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_INTCLEAR ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// --------------------------  Register RTree: UART0_Secure_INTCLEAR  -----------------------------
// SVD Line: 721

//  <rtree> SFDITEM_REG__UART0_Secure_INTCLEAR
//    <name> INTCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x5020000C) UART Interrupt CLEAR Register </i>
//    <loc> ( (unsigned int)((UART0_Secure_INTCLEAR >> 0) & 0xFFFFFFFF), ((UART0_Secure_INTCLEAR = (UART0_Secure_INTCLEAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART0_Secure_INTCLEAR_RXOV </item>
//    <item> SFDITEM_FIELD__UART0_Secure_INTCLEAR_TXOV </item>
//    <item> SFDITEM_FIELD__UART0_Secure_INTCLEAR_RXINT </item>
//    <item> SFDITEM_FIELD__UART0_Secure_INTCLEAR_TXINT </item>
//  </rtree>
//  


// -----------------------  Register Item Address: UART0_Secure_BAUDDIV  --------------------------
// SVD Line: 749

unsigned int UART0_Secure_BAUDDIV __AT (0x50200010);



// ---------------------------  Register Item: UART0_Secure_BAUDDIV  ------------------------------
// SVD Line: 749

//  <item> SFDITEM_REG__UART0_Secure_BAUDDIV
//    <name> BAUDDIV </name>
//    <i> [Bits 31..0] RW (@ 0x50200010) Baudrate Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART0_Secure_BAUDDIV >> 0) & 0xFFFFFFFF), ((UART0_Secure_BAUDDIV = (UART0_Secure_BAUDDIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Peripheral View: UART0_Secure  ---------------------------------
// SVD Line: 2873

//  <view> UART0_Secure
//    <name> UART0_Secure </name>
//    <item> SFDITEM_REG__UART0_Secure_DATA </item>
//    <item> SFDITEM_REG__UART0_Secure_STATE </item>
//    <item> SFDITEM_REG__UART0_Secure_CTRL </item>
//    <item> SFDITEM_REG__UART0_Secure_INTSTATUS </item>
//    <item> SFDITEM_REG__UART0_Secure_INTCLEAR </item>
//    <item> SFDITEM_REG__UART0_Secure_BAUDDIV </item>
//  </view>
//  


// ------------------------  Register Item Address: UART1_Secure_DATA  ----------------------------
// SVD Line: 561

unsigned int UART1_Secure_DATA __AT (0x50201000);



// ----------------------------  Register Item: UART1_Secure_DATA  --------------------------------
// SVD Line: 561

//  <item> SFDITEM_REG__UART1_Secure_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x50201000) Recieve and Transmit Data Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART1_Secure_DATA >> 0) & 0xFFFFFFFF), ((UART1_Secure_DATA = (UART1_Secure_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: UART1_Secure_STATE  ---------------------------
// SVD Line: 566

unsigned int UART1_Secure_STATE __AT (0x50201004);



// ---------------------------  Field Item: UART1_Secure_STATE_RXOV  ------------------------------
// SVD Line: 571

//  <item> SFDITEM_FIELD__UART1_Secure_STATE_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50201004) RX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_STATE ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART1_Secure_STATE_TXOV  ------------------------------
// SVD Line: 576

//  <item> SFDITEM_FIELD__UART1_Secure_STATE_TXOV
//    <name> TXOV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50201004) TX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_STATE ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART1_Secure_STATE_RXBF  ------------------------------
// SVD Line: 581

//  <item> SFDITEM_FIELD__UART1_Secure_STATE_RXBF
//    <name> RXBF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x50201004) RX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_STATE ) </loc>
//      <o.1..1> RXBF
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART1_Secure_STATE_TXBF  ------------------------------
// SVD Line: 586

//  <item> SFDITEM_FIELD__UART1_Secure_STATE_TXBF
//    <name> TXBF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x50201004) TX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_STATE ) </loc>
//      <o.0..0> TXBF
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: UART1_Secure_STATE  -------------------------------
// SVD Line: 566

//  <rtree> SFDITEM_REG__UART1_Secure_STATE
//    <name> STATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50201004) UART Status Register </i>
//    <loc> ( (unsigned int)((UART1_Secure_STATE >> 0) & 0xFFFFFFFF), ((UART1_Secure_STATE = (UART1_Secure_STATE & ~(0xCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART1_Secure_STATE_RXOV </item>
//    <item> SFDITEM_FIELD__UART1_Secure_STATE_TXOV </item>
//    <item> SFDITEM_FIELD__UART1_Secure_STATE_RXBF </item>
//    <item> SFDITEM_FIELD__UART1_Secure_STATE_TXBF </item>
//  </rtree>
//  


// ------------------------  Register Item Address: UART1_Secure_CTRL  ----------------------------
// SVD Line: 593

unsigned int UART1_Secure_CTRL __AT (0x50201008);



// ---------------------------  Field Item: UART1_Secure_CTRL_HSTX  -------------------------------
// SVD Line: 598

//  <item> SFDITEM_FIELD__UART1_Secure_CTRL_HSTX
//    <name> HSTX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50201008) \nHigh Speed Test Mode for TX only\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_Secure_CTRL ) </loc>
//      <o.6..6> HSTX
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: UART1_Secure_CTRL_RVOVINT  -----------------------------
// SVD Line: 612

//  <item> SFDITEM_FIELD__UART1_Secure_CTRL_RVOVINT
//    <name> RVOVINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x50201008) \nRX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_Secure_CTRL ) </loc>
//      <o.5..5> RVOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: UART1_Secure_CTRL_TXOVINT  -----------------------------
// SVD Line: 626

//  <item> SFDITEM_FIELD__UART1_Secure_CTRL_TXOVINT
//    <name> TXOVINT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x50201008) \nTX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_Secure_CTRL ) </loc>
//      <o.4..4> TXOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART1_Secure_CTRL_RXINT  ------------------------------
// SVD Line: 640

//  <item> SFDITEM_FIELD__UART1_Secure_CTRL_RXINT
//    <name> RXINT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50201008) \nRX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_Secure_CTRL ) </loc>
//      <o.3..3> RXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART1_Secure_CTRL_TXINT  ------------------------------
// SVD Line: 654

//  <item> SFDITEM_FIELD__UART1_Secure_CTRL_TXINT
//    <name> TXINT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50201008) \nTX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_Secure_CTRL ) </loc>
//      <o.2..2> TXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART1_Secure_CTRL_RXEN  -------------------------------
// SVD Line: 668

//  <item> SFDITEM_FIELD__UART1_Secure_CTRL_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50201008) \nRX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_Secure_CTRL ) </loc>
//      <o.1..1> RXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART1_Secure_CTRL_TXEN  -------------------------------
// SVD Line: 682

//  <item> SFDITEM_FIELD__UART1_Secure_CTRL_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50201008) \nTX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_Secure_CTRL ) </loc>
//      <o.0..0> TXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: UART1_Secure_CTRL  -------------------------------
// SVD Line: 593

//  <rtree> SFDITEM_REG__UART1_Secure_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50201008) UART Control Register </i>
//    <loc> ( (unsigned int)((UART1_Secure_CTRL >> 0) & 0xFFFFFFFF), ((UART1_Secure_CTRL = (UART1_Secure_CTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART1_Secure_CTRL_HSTX </item>
//    <item> SFDITEM_FIELD__UART1_Secure_CTRL_RVOVINT </item>
//    <item> SFDITEM_FIELD__UART1_Secure_CTRL_TXOVINT </item>
//    <item> SFDITEM_FIELD__UART1_Secure_CTRL_RXINT </item>
//    <item> SFDITEM_FIELD__UART1_Secure_CTRL_TXINT </item>
//    <item> SFDITEM_FIELD__UART1_Secure_CTRL_RXEN </item>
//    <item> SFDITEM_FIELD__UART1_Secure_CTRL_TXEN </item>
//  </rtree>
//  


// ----------------------  Register Item Address: UART1_Secure_INTSTATUS  -------------------------
// SVD Line: 698

unsigned int UART1_Secure_INTSTATUS __AT (0x5020100C);



// -------------------------  Field Item: UART1_Secure_INTSTATUS_RXOV  ----------------------------
// SVD Line: 703

//  <item> SFDITEM_FIELD__UART1_Secure_INTSTATUS_RXOV
//    <name> RXOV </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5020100C) RX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_INTSTATUS ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART1_Secure_INTSTATUS_TXOV  ----------------------------
// SVD Line: 707

//  <item> SFDITEM_FIELD__UART1_Secure_INTSTATUS_TXOV
//    <name> TXOV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5020100C) TX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_INTSTATUS ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ------------------------  Field Item: UART1_Secure_INTSTATUS_RXINT  ----------------------------
// SVD Line: 711

//  <item> SFDITEM_FIELD__UART1_Secure_INTSTATUS_RXINT
//    <name> RXINT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5020100C) RX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_INTSTATUS ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ------------------------  Field Item: UART1_Secure_INTSTATUS_TXINT  ----------------------------
// SVD Line: 715

//  <item> SFDITEM_FIELD__UART1_Secure_INTSTATUS_TXINT
//    <name> TXINT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5020100C) TX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_INTSTATUS ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -------------------------  Register RTree: UART1_Secure_INTSTATUS  -----------------------------
// SVD Line: 698

//  <rtree> SFDITEM_REG__UART1_Secure_INTSTATUS
//    <name> INTSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5020100C) UART Interrupt Status Register </i>
//    <loc> ( (unsigned int)((UART1_Secure_INTSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART1_Secure_INTSTATUS_RXOV </item>
//    <item> SFDITEM_FIELD__UART1_Secure_INTSTATUS_TXOV </item>
//    <item> SFDITEM_FIELD__UART1_Secure_INTSTATUS_RXINT </item>
//    <item> SFDITEM_FIELD__UART1_Secure_INTSTATUS_TXINT </item>
//  </rtree>
//  


// ----------------------  Register Item Address: UART1_Secure_INTCLEAR  --------------------------
// SVD Line: 721

unsigned int UART1_Secure_INTCLEAR __AT (0x5020100C);



// -------------------------  Field Item: UART1_Secure_INTCLEAR_RXOV  -----------------------------
// SVD Line: 727

//  <item> SFDITEM_FIELD__UART1_Secure_INTCLEAR_RXOV
//    <name> RXOV </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x5020100C) RX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_INTCLEAR ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART1_Secure_INTCLEAR_TXOV  -----------------------------
// SVD Line: 732

//  <item> SFDITEM_FIELD__UART1_Secure_INTCLEAR_TXOV
//    <name> TXOV </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x5020100C) TX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_INTCLEAR ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART1_Secure_INTCLEAR_RXINT  ----------------------------
// SVD Line: 737

//  <item> SFDITEM_FIELD__UART1_Secure_INTCLEAR_RXINT
//    <name> RXINT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x5020100C) RX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_INTCLEAR ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART1_Secure_INTCLEAR_TXINT  ----------------------------
// SVD Line: 742

//  <item> SFDITEM_FIELD__UART1_Secure_INTCLEAR_TXINT
//    <name> TXINT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x5020100C) TX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_INTCLEAR ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// --------------------------  Register RTree: UART1_Secure_INTCLEAR  -----------------------------
// SVD Line: 721

//  <rtree> SFDITEM_REG__UART1_Secure_INTCLEAR
//    <name> INTCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x5020100C) UART Interrupt CLEAR Register </i>
//    <loc> ( (unsigned int)((UART1_Secure_INTCLEAR >> 0) & 0xFFFFFFFF), ((UART1_Secure_INTCLEAR = (UART1_Secure_INTCLEAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART1_Secure_INTCLEAR_RXOV </item>
//    <item> SFDITEM_FIELD__UART1_Secure_INTCLEAR_TXOV </item>
//    <item> SFDITEM_FIELD__UART1_Secure_INTCLEAR_RXINT </item>
//    <item> SFDITEM_FIELD__UART1_Secure_INTCLEAR_TXINT </item>
//  </rtree>
//  


// -----------------------  Register Item Address: UART1_Secure_BAUDDIV  --------------------------
// SVD Line: 749

unsigned int UART1_Secure_BAUDDIV __AT (0x50201010);



// ---------------------------  Register Item: UART1_Secure_BAUDDIV  ------------------------------
// SVD Line: 749

//  <item> SFDITEM_REG__UART1_Secure_BAUDDIV
//    <name> BAUDDIV </name>
//    <i> [Bits 31..0] RW (@ 0x50201010) Baudrate Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART1_Secure_BAUDDIV >> 0) & 0xFFFFFFFF), ((UART1_Secure_BAUDDIV = (UART1_Secure_BAUDDIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Peripheral View: UART1_Secure  ---------------------------------
// SVD Line: 2880

//  <view> UART1_Secure
//    <name> UART1_Secure </name>
//    <item> SFDITEM_REG__UART1_Secure_DATA </item>
//    <item> SFDITEM_REG__UART1_Secure_STATE </item>
//    <item> SFDITEM_REG__UART1_Secure_CTRL </item>
//    <item> SFDITEM_REG__UART1_Secure_INTSTATUS </item>
//    <item> SFDITEM_REG__UART1_Secure_INTCLEAR </item>
//    <item> SFDITEM_REG__UART1_Secure_BAUDDIV </item>
//  </view>
//  


// ------------------------  Register Item Address: UART2_Secure_DATA  ----------------------------
// SVD Line: 561

unsigned int UART2_Secure_DATA __AT (0x50202000);



// ----------------------------  Register Item: UART2_Secure_DATA  --------------------------------
// SVD Line: 561

//  <item> SFDITEM_REG__UART2_Secure_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x50202000) Recieve and Transmit Data Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART2_Secure_DATA >> 0) & 0xFFFFFFFF), ((UART2_Secure_DATA = (UART2_Secure_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: UART2_Secure_STATE  ---------------------------
// SVD Line: 566

unsigned int UART2_Secure_STATE __AT (0x50202004);



// ---------------------------  Field Item: UART2_Secure_STATE_RXOV  ------------------------------
// SVD Line: 571

//  <item> SFDITEM_FIELD__UART2_Secure_STATE_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50202004) RX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_STATE ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART2_Secure_STATE_TXOV  ------------------------------
// SVD Line: 576

//  <item> SFDITEM_FIELD__UART2_Secure_STATE_TXOV
//    <name> TXOV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50202004) TX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_STATE ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART2_Secure_STATE_RXBF  ------------------------------
// SVD Line: 581

//  <item> SFDITEM_FIELD__UART2_Secure_STATE_RXBF
//    <name> RXBF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x50202004) RX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_STATE ) </loc>
//      <o.1..1> RXBF
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART2_Secure_STATE_TXBF  ------------------------------
// SVD Line: 586

//  <item> SFDITEM_FIELD__UART2_Secure_STATE_TXBF
//    <name> TXBF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x50202004) TX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_STATE ) </loc>
//      <o.0..0> TXBF
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: UART2_Secure_STATE  -------------------------------
// SVD Line: 566

//  <rtree> SFDITEM_REG__UART2_Secure_STATE
//    <name> STATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50202004) UART Status Register </i>
//    <loc> ( (unsigned int)((UART2_Secure_STATE >> 0) & 0xFFFFFFFF), ((UART2_Secure_STATE = (UART2_Secure_STATE & ~(0xCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_Secure_STATE_RXOV </item>
//    <item> SFDITEM_FIELD__UART2_Secure_STATE_TXOV </item>
//    <item> SFDITEM_FIELD__UART2_Secure_STATE_RXBF </item>
//    <item> SFDITEM_FIELD__UART2_Secure_STATE_TXBF </item>
//  </rtree>
//  


// ------------------------  Register Item Address: UART2_Secure_CTRL  ----------------------------
// SVD Line: 593

unsigned int UART2_Secure_CTRL __AT (0x50202008);



// ---------------------------  Field Item: UART2_Secure_CTRL_HSTX  -------------------------------
// SVD Line: 598

//  <item> SFDITEM_FIELD__UART2_Secure_CTRL_HSTX
//    <name> HSTX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50202008) \nHigh Speed Test Mode for TX only\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_Secure_CTRL ) </loc>
//      <o.6..6> HSTX
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: UART2_Secure_CTRL_RVOVINT  -----------------------------
// SVD Line: 612

//  <item> SFDITEM_FIELD__UART2_Secure_CTRL_RVOVINT
//    <name> RVOVINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x50202008) \nRX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_Secure_CTRL ) </loc>
//      <o.5..5> RVOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: UART2_Secure_CTRL_TXOVINT  -----------------------------
// SVD Line: 626

//  <item> SFDITEM_FIELD__UART2_Secure_CTRL_TXOVINT
//    <name> TXOVINT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x50202008) \nTX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_Secure_CTRL ) </loc>
//      <o.4..4> TXOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART2_Secure_CTRL_RXINT  ------------------------------
// SVD Line: 640

//  <item> SFDITEM_FIELD__UART2_Secure_CTRL_RXINT
//    <name> RXINT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50202008) \nRX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_Secure_CTRL ) </loc>
//      <o.3..3> RXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART2_Secure_CTRL_TXINT  ------------------------------
// SVD Line: 654

//  <item> SFDITEM_FIELD__UART2_Secure_CTRL_TXINT
//    <name> TXINT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50202008) \nTX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_Secure_CTRL ) </loc>
//      <o.2..2> TXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART2_Secure_CTRL_RXEN  -------------------------------
// SVD Line: 668

//  <item> SFDITEM_FIELD__UART2_Secure_CTRL_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50202008) \nRX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_Secure_CTRL ) </loc>
//      <o.1..1> RXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART2_Secure_CTRL_TXEN  -------------------------------
// SVD Line: 682

//  <item> SFDITEM_FIELD__UART2_Secure_CTRL_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50202008) \nTX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_Secure_CTRL ) </loc>
//      <o.0..0> TXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: UART2_Secure_CTRL  -------------------------------
// SVD Line: 593

//  <rtree> SFDITEM_REG__UART2_Secure_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50202008) UART Control Register </i>
//    <loc> ( (unsigned int)((UART2_Secure_CTRL >> 0) & 0xFFFFFFFF), ((UART2_Secure_CTRL = (UART2_Secure_CTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_Secure_CTRL_HSTX </item>
//    <item> SFDITEM_FIELD__UART2_Secure_CTRL_RVOVINT </item>
//    <item> SFDITEM_FIELD__UART2_Secure_CTRL_TXOVINT </item>
//    <item> SFDITEM_FIELD__UART2_Secure_CTRL_RXINT </item>
//    <item> SFDITEM_FIELD__UART2_Secure_CTRL_TXINT </item>
//    <item> SFDITEM_FIELD__UART2_Secure_CTRL_RXEN </item>
//    <item> SFDITEM_FIELD__UART2_Secure_CTRL_TXEN </item>
//  </rtree>
//  


// ----------------------  Register Item Address: UART2_Secure_INTSTATUS  -------------------------
// SVD Line: 698

unsigned int UART2_Secure_INTSTATUS __AT (0x5020200C);



// -------------------------  Field Item: UART2_Secure_INTSTATUS_RXOV  ----------------------------
// SVD Line: 703

//  <item> SFDITEM_FIELD__UART2_Secure_INTSTATUS_RXOV
//    <name> RXOV </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5020200C) RX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_INTSTATUS ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART2_Secure_INTSTATUS_TXOV  ----------------------------
// SVD Line: 707

//  <item> SFDITEM_FIELD__UART2_Secure_INTSTATUS_TXOV
//    <name> TXOV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5020200C) TX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_INTSTATUS ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ------------------------  Field Item: UART2_Secure_INTSTATUS_RXINT  ----------------------------
// SVD Line: 711

//  <item> SFDITEM_FIELD__UART2_Secure_INTSTATUS_RXINT
//    <name> RXINT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5020200C) RX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_INTSTATUS ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ------------------------  Field Item: UART2_Secure_INTSTATUS_TXINT  ----------------------------
// SVD Line: 715

//  <item> SFDITEM_FIELD__UART2_Secure_INTSTATUS_TXINT
//    <name> TXINT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5020200C) TX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_INTSTATUS ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -------------------------  Register RTree: UART2_Secure_INTSTATUS  -----------------------------
// SVD Line: 698

//  <rtree> SFDITEM_REG__UART2_Secure_INTSTATUS
//    <name> INTSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5020200C) UART Interrupt Status Register </i>
//    <loc> ( (unsigned int)((UART2_Secure_INTSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART2_Secure_INTSTATUS_RXOV </item>
//    <item> SFDITEM_FIELD__UART2_Secure_INTSTATUS_TXOV </item>
//    <item> SFDITEM_FIELD__UART2_Secure_INTSTATUS_RXINT </item>
//    <item> SFDITEM_FIELD__UART2_Secure_INTSTATUS_TXINT </item>
//  </rtree>
//  


// ----------------------  Register Item Address: UART2_Secure_INTCLEAR  --------------------------
// SVD Line: 721

unsigned int UART2_Secure_INTCLEAR __AT (0x5020200C);



// -------------------------  Field Item: UART2_Secure_INTCLEAR_RXOV  -----------------------------
// SVD Line: 727

//  <item> SFDITEM_FIELD__UART2_Secure_INTCLEAR_RXOV
//    <name> RXOV </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x5020200C) RX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_INTCLEAR ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART2_Secure_INTCLEAR_TXOV  -----------------------------
// SVD Line: 732

//  <item> SFDITEM_FIELD__UART2_Secure_INTCLEAR_TXOV
//    <name> TXOV </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x5020200C) TX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_INTCLEAR ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART2_Secure_INTCLEAR_RXINT  ----------------------------
// SVD Line: 737

//  <item> SFDITEM_FIELD__UART2_Secure_INTCLEAR_RXINT
//    <name> RXINT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x5020200C) RX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_INTCLEAR ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART2_Secure_INTCLEAR_TXINT  ----------------------------
// SVD Line: 742

//  <item> SFDITEM_FIELD__UART2_Secure_INTCLEAR_TXINT
//    <name> TXINT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x5020200C) TX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_INTCLEAR ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// --------------------------  Register RTree: UART2_Secure_INTCLEAR  -----------------------------
// SVD Line: 721

//  <rtree> SFDITEM_REG__UART2_Secure_INTCLEAR
//    <name> INTCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x5020200C) UART Interrupt CLEAR Register </i>
//    <loc> ( (unsigned int)((UART2_Secure_INTCLEAR >> 0) & 0xFFFFFFFF), ((UART2_Secure_INTCLEAR = (UART2_Secure_INTCLEAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_Secure_INTCLEAR_RXOV </item>
//    <item> SFDITEM_FIELD__UART2_Secure_INTCLEAR_TXOV </item>
//    <item> SFDITEM_FIELD__UART2_Secure_INTCLEAR_RXINT </item>
//    <item> SFDITEM_FIELD__UART2_Secure_INTCLEAR_TXINT </item>
//  </rtree>
//  


// -----------------------  Register Item Address: UART2_Secure_BAUDDIV  --------------------------
// SVD Line: 749

unsigned int UART2_Secure_BAUDDIV __AT (0x50202010);



// ---------------------------  Register Item: UART2_Secure_BAUDDIV  ------------------------------
// SVD Line: 749

//  <item> SFDITEM_REG__UART2_Secure_BAUDDIV
//    <name> BAUDDIV </name>
//    <i> [Bits 31..0] RW (@ 0x50202010) Baudrate Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART2_Secure_BAUDDIV >> 0) & 0xFFFFFFFF), ((UART2_Secure_BAUDDIV = (UART2_Secure_BAUDDIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Peripheral View: UART2_Secure  ---------------------------------
// SVD Line: 2887

//  <view> UART2_Secure
//    <name> UART2_Secure </name>
//    <item> SFDITEM_REG__UART2_Secure_DATA </item>
//    <item> SFDITEM_REG__UART2_Secure_STATE </item>
//    <item> SFDITEM_REG__UART2_Secure_CTRL </item>
//    <item> SFDITEM_REG__UART2_Secure_INTSTATUS </item>
//    <item> SFDITEM_REG__UART2_Secure_INTCLEAR </item>
//    <item> SFDITEM_REG__UART2_Secure_BAUDDIV </item>
//  </view>
//  


// ------------------------  Register Item Address: UART3_Secure_DATA  ----------------------------
// SVD Line: 561

unsigned int UART3_Secure_DATA __AT (0x50203000);



// ----------------------------  Register Item: UART3_Secure_DATA  --------------------------------
// SVD Line: 561

//  <item> SFDITEM_REG__UART3_Secure_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x50203000) Recieve and Transmit Data Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART3_Secure_DATA >> 0) & 0xFFFFFFFF), ((UART3_Secure_DATA = (UART3_Secure_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: UART3_Secure_STATE  ---------------------------
// SVD Line: 566

unsigned int UART3_Secure_STATE __AT (0x50203004);



// ---------------------------  Field Item: UART3_Secure_STATE_RXOV  ------------------------------
// SVD Line: 571

//  <item> SFDITEM_FIELD__UART3_Secure_STATE_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50203004) RX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_STATE ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART3_Secure_STATE_TXOV  ------------------------------
// SVD Line: 576

//  <item> SFDITEM_FIELD__UART3_Secure_STATE_TXOV
//    <name> TXOV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50203004) TX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_STATE ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART3_Secure_STATE_RXBF  ------------------------------
// SVD Line: 581

//  <item> SFDITEM_FIELD__UART3_Secure_STATE_RXBF
//    <name> RXBF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x50203004) RX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_STATE ) </loc>
//      <o.1..1> RXBF
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART3_Secure_STATE_TXBF  ------------------------------
// SVD Line: 586

//  <item> SFDITEM_FIELD__UART3_Secure_STATE_TXBF
//    <name> TXBF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x50203004) TX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_STATE ) </loc>
//      <o.0..0> TXBF
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: UART3_Secure_STATE  -------------------------------
// SVD Line: 566

//  <rtree> SFDITEM_REG__UART3_Secure_STATE
//    <name> STATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50203004) UART Status Register </i>
//    <loc> ( (unsigned int)((UART3_Secure_STATE >> 0) & 0xFFFFFFFF), ((UART3_Secure_STATE = (UART3_Secure_STATE & ~(0xCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_Secure_STATE_RXOV </item>
//    <item> SFDITEM_FIELD__UART3_Secure_STATE_TXOV </item>
//    <item> SFDITEM_FIELD__UART3_Secure_STATE_RXBF </item>
//    <item> SFDITEM_FIELD__UART3_Secure_STATE_TXBF </item>
//  </rtree>
//  


// ------------------------  Register Item Address: UART3_Secure_CTRL  ----------------------------
// SVD Line: 593

unsigned int UART3_Secure_CTRL __AT (0x50203008);



// ---------------------------  Field Item: UART3_Secure_CTRL_HSTX  -------------------------------
// SVD Line: 598

//  <item> SFDITEM_FIELD__UART3_Secure_CTRL_HSTX
//    <name> HSTX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50203008) \nHigh Speed Test Mode for TX only\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_Secure_CTRL ) </loc>
//      <o.6..6> HSTX
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: UART3_Secure_CTRL_RVOVINT  -----------------------------
// SVD Line: 612

//  <item> SFDITEM_FIELD__UART3_Secure_CTRL_RVOVINT
//    <name> RVOVINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x50203008) \nRX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_Secure_CTRL ) </loc>
//      <o.5..5> RVOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: UART3_Secure_CTRL_TXOVINT  -----------------------------
// SVD Line: 626

//  <item> SFDITEM_FIELD__UART3_Secure_CTRL_TXOVINT
//    <name> TXOVINT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x50203008) \nTX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_Secure_CTRL ) </loc>
//      <o.4..4> TXOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART3_Secure_CTRL_RXINT  ------------------------------
// SVD Line: 640

//  <item> SFDITEM_FIELD__UART3_Secure_CTRL_RXINT
//    <name> RXINT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50203008) \nRX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_Secure_CTRL ) </loc>
//      <o.3..3> RXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART3_Secure_CTRL_TXINT  ------------------------------
// SVD Line: 654

//  <item> SFDITEM_FIELD__UART3_Secure_CTRL_TXINT
//    <name> TXINT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50203008) \nTX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_Secure_CTRL ) </loc>
//      <o.2..2> TXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART3_Secure_CTRL_RXEN  -------------------------------
// SVD Line: 668

//  <item> SFDITEM_FIELD__UART3_Secure_CTRL_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50203008) \nRX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_Secure_CTRL ) </loc>
//      <o.1..1> RXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART3_Secure_CTRL_TXEN  -------------------------------
// SVD Line: 682

//  <item> SFDITEM_FIELD__UART3_Secure_CTRL_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50203008) \nTX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_Secure_CTRL ) </loc>
//      <o.0..0> TXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: UART3_Secure_CTRL  -------------------------------
// SVD Line: 593

//  <rtree> SFDITEM_REG__UART3_Secure_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50203008) UART Control Register </i>
//    <loc> ( (unsigned int)((UART3_Secure_CTRL >> 0) & 0xFFFFFFFF), ((UART3_Secure_CTRL = (UART3_Secure_CTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_Secure_CTRL_HSTX </item>
//    <item> SFDITEM_FIELD__UART3_Secure_CTRL_RVOVINT </item>
//    <item> SFDITEM_FIELD__UART3_Secure_CTRL_TXOVINT </item>
//    <item> SFDITEM_FIELD__UART3_Secure_CTRL_RXINT </item>
//    <item> SFDITEM_FIELD__UART3_Secure_CTRL_TXINT </item>
//    <item> SFDITEM_FIELD__UART3_Secure_CTRL_RXEN </item>
//    <item> SFDITEM_FIELD__UART3_Secure_CTRL_TXEN </item>
//  </rtree>
//  


// ----------------------  Register Item Address: UART3_Secure_INTSTATUS  -------------------------
// SVD Line: 698

unsigned int UART3_Secure_INTSTATUS __AT (0x5020300C);



// -------------------------  Field Item: UART3_Secure_INTSTATUS_RXOV  ----------------------------
// SVD Line: 703

//  <item> SFDITEM_FIELD__UART3_Secure_INTSTATUS_RXOV
//    <name> RXOV </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5020300C) RX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_INTSTATUS ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART3_Secure_INTSTATUS_TXOV  ----------------------------
// SVD Line: 707

//  <item> SFDITEM_FIELD__UART3_Secure_INTSTATUS_TXOV
//    <name> TXOV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5020300C) TX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_INTSTATUS ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ------------------------  Field Item: UART3_Secure_INTSTATUS_RXINT  ----------------------------
// SVD Line: 711

//  <item> SFDITEM_FIELD__UART3_Secure_INTSTATUS_RXINT
//    <name> RXINT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5020300C) RX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_INTSTATUS ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ------------------------  Field Item: UART3_Secure_INTSTATUS_TXINT  ----------------------------
// SVD Line: 715

//  <item> SFDITEM_FIELD__UART3_Secure_INTSTATUS_TXINT
//    <name> TXINT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5020300C) TX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_INTSTATUS ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -------------------------  Register RTree: UART3_Secure_INTSTATUS  -----------------------------
// SVD Line: 698

//  <rtree> SFDITEM_REG__UART3_Secure_INTSTATUS
//    <name> INTSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5020300C) UART Interrupt Status Register </i>
//    <loc> ( (unsigned int)((UART3_Secure_INTSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART3_Secure_INTSTATUS_RXOV </item>
//    <item> SFDITEM_FIELD__UART3_Secure_INTSTATUS_TXOV </item>
//    <item> SFDITEM_FIELD__UART3_Secure_INTSTATUS_RXINT </item>
//    <item> SFDITEM_FIELD__UART3_Secure_INTSTATUS_TXINT </item>
//  </rtree>
//  


// ----------------------  Register Item Address: UART3_Secure_INTCLEAR  --------------------------
// SVD Line: 721

unsigned int UART3_Secure_INTCLEAR __AT (0x5020300C);



// -------------------------  Field Item: UART3_Secure_INTCLEAR_RXOV  -----------------------------
// SVD Line: 727

//  <item> SFDITEM_FIELD__UART3_Secure_INTCLEAR_RXOV
//    <name> RXOV </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x5020300C) RX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_INTCLEAR ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART3_Secure_INTCLEAR_TXOV  -----------------------------
// SVD Line: 732

//  <item> SFDITEM_FIELD__UART3_Secure_INTCLEAR_TXOV
//    <name> TXOV </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x5020300C) TX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_INTCLEAR ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART3_Secure_INTCLEAR_RXINT  ----------------------------
// SVD Line: 737

//  <item> SFDITEM_FIELD__UART3_Secure_INTCLEAR_RXINT
//    <name> RXINT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x5020300C) RX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_INTCLEAR ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART3_Secure_INTCLEAR_TXINT  ----------------------------
// SVD Line: 742

//  <item> SFDITEM_FIELD__UART3_Secure_INTCLEAR_TXINT
//    <name> TXINT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x5020300C) TX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_INTCLEAR ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// --------------------------  Register RTree: UART3_Secure_INTCLEAR  -----------------------------
// SVD Line: 721

//  <rtree> SFDITEM_REG__UART3_Secure_INTCLEAR
//    <name> INTCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x5020300C) UART Interrupt CLEAR Register </i>
//    <loc> ( (unsigned int)((UART3_Secure_INTCLEAR >> 0) & 0xFFFFFFFF), ((UART3_Secure_INTCLEAR = (UART3_Secure_INTCLEAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_Secure_INTCLEAR_RXOV </item>
//    <item> SFDITEM_FIELD__UART3_Secure_INTCLEAR_TXOV </item>
//    <item> SFDITEM_FIELD__UART3_Secure_INTCLEAR_RXINT </item>
//    <item> SFDITEM_FIELD__UART3_Secure_INTCLEAR_TXINT </item>
//  </rtree>
//  


// -----------------------  Register Item Address: UART3_Secure_BAUDDIV  --------------------------
// SVD Line: 749

unsigned int UART3_Secure_BAUDDIV __AT (0x50203010);



// ---------------------------  Register Item: UART3_Secure_BAUDDIV  ------------------------------
// SVD Line: 749

//  <item> SFDITEM_REG__UART3_Secure_BAUDDIV
//    <name> BAUDDIV </name>
//    <i> [Bits 31..0] RW (@ 0x50203010) Baudrate Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART3_Secure_BAUDDIV >> 0) & 0xFFFFFFFF), ((UART3_Secure_BAUDDIV = (UART3_Secure_BAUDDIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Peripheral View: UART3_Secure  ---------------------------------
// SVD Line: 2894

//  <view> UART3_Secure
//    <name> UART3_Secure </name>
//    <item> SFDITEM_REG__UART3_Secure_DATA </item>
//    <item> SFDITEM_REG__UART3_Secure_STATE </item>
//    <item> SFDITEM_REG__UART3_Secure_CTRL </item>
//    <item> SFDITEM_REG__UART3_Secure_INTSTATUS </item>
//    <item> SFDITEM_REG__UART3_Secure_INTCLEAR </item>
//    <item> SFDITEM_REG__UART3_Secure_BAUDDIV </item>
//  </view>
//  


// ------------------------  Register Item Address: UART4_Secure_DATA  ----------------------------
// SVD Line: 561

unsigned int UART4_Secure_DATA __AT (0x50204000);



// ----------------------------  Register Item: UART4_Secure_DATA  --------------------------------
// SVD Line: 561

//  <item> SFDITEM_REG__UART4_Secure_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x50204000) Recieve and Transmit Data Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART4_Secure_DATA >> 0) & 0xFFFFFFFF), ((UART4_Secure_DATA = (UART4_Secure_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: UART4_Secure_STATE  ---------------------------
// SVD Line: 566

unsigned int UART4_Secure_STATE __AT (0x50204004);



// ---------------------------  Field Item: UART4_Secure_STATE_RXOV  ------------------------------
// SVD Line: 571

//  <item> SFDITEM_FIELD__UART4_Secure_STATE_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50204004) RX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_STATE ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART4_Secure_STATE_TXOV  ------------------------------
// SVD Line: 576

//  <item> SFDITEM_FIELD__UART4_Secure_STATE_TXOV
//    <name> TXOV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50204004) TX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_STATE ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART4_Secure_STATE_RXBF  ------------------------------
// SVD Line: 581

//  <item> SFDITEM_FIELD__UART4_Secure_STATE_RXBF
//    <name> RXBF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x50204004) RX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_STATE ) </loc>
//      <o.1..1> RXBF
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART4_Secure_STATE_TXBF  ------------------------------
// SVD Line: 586

//  <item> SFDITEM_FIELD__UART4_Secure_STATE_TXBF
//    <name> TXBF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x50204004) TX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_STATE ) </loc>
//      <o.0..0> TXBF
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: UART4_Secure_STATE  -------------------------------
// SVD Line: 566

//  <rtree> SFDITEM_REG__UART4_Secure_STATE
//    <name> STATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50204004) UART Status Register </i>
//    <loc> ( (unsigned int)((UART4_Secure_STATE >> 0) & 0xFFFFFFFF), ((UART4_Secure_STATE = (UART4_Secure_STATE & ~(0xCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_Secure_STATE_RXOV </item>
//    <item> SFDITEM_FIELD__UART4_Secure_STATE_TXOV </item>
//    <item> SFDITEM_FIELD__UART4_Secure_STATE_RXBF </item>
//    <item> SFDITEM_FIELD__UART4_Secure_STATE_TXBF </item>
//  </rtree>
//  


// ------------------------  Register Item Address: UART4_Secure_CTRL  ----------------------------
// SVD Line: 593

unsigned int UART4_Secure_CTRL __AT (0x50204008);



// ---------------------------  Field Item: UART4_Secure_CTRL_HSTX  -------------------------------
// SVD Line: 598

//  <item> SFDITEM_FIELD__UART4_Secure_CTRL_HSTX
//    <name> HSTX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50204008) \nHigh Speed Test Mode for TX only\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_Secure_CTRL ) </loc>
//      <o.6..6> HSTX
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: UART4_Secure_CTRL_RVOVINT  -----------------------------
// SVD Line: 612

//  <item> SFDITEM_FIELD__UART4_Secure_CTRL_RVOVINT
//    <name> RVOVINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x50204008) \nRX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_Secure_CTRL ) </loc>
//      <o.5..5> RVOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: UART4_Secure_CTRL_TXOVINT  -----------------------------
// SVD Line: 626

//  <item> SFDITEM_FIELD__UART4_Secure_CTRL_TXOVINT
//    <name> TXOVINT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x50204008) \nTX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_Secure_CTRL ) </loc>
//      <o.4..4> TXOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART4_Secure_CTRL_RXINT  ------------------------------
// SVD Line: 640

//  <item> SFDITEM_FIELD__UART4_Secure_CTRL_RXINT
//    <name> RXINT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50204008) \nRX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_Secure_CTRL ) </loc>
//      <o.3..3> RXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART4_Secure_CTRL_TXINT  ------------------------------
// SVD Line: 654

//  <item> SFDITEM_FIELD__UART4_Secure_CTRL_TXINT
//    <name> TXINT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50204008) \nTX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_Secure_CTRL ) </loc>
//      <o.2..2> TXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART4_Secure_CTRL_RXEN  -------------------------------
// SVD Line: 668

//  <item> SFDITEM_FIELD__UART4_Secure_CTRL_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50204008) \nRX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_Secure_CTRL ) </loc>
//      <o.1..1> RXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART4_Secure_CTRL_TXEN  -------------------------------
// SVD Line: 682

//  <item> SFDITEM_FIELD__UART4_Secure_CTRL_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50204008) \nTX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_Secure_CTRL ) </loc>
//      <o.0..0> TXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: UART4_Secure_CTRL  -------------------------------
// SVD Line: 593

//  <rtree> SFDITEM_REG__UART4_Secure_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50204008) UART Control Register </i>
//    <loc> ( (unsigned int)((UART4_Secure_CTRL >> 0) & 0xFFFFFFFF), ((UART4_Secure_CTRL = (UART4_Secure_CTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_Secure_CTRL_HSTX </item>
//    <item> SFDITEM_FIELD__UART4_Secure_CTRL_RVOVINT </item>
//    <item> SFDITEM_FIELD__UART4_Secure_CTRL_TXOVINT </item>
//    <item> SFDITEM_FIELD__UART4_Secure_CTRL_RXINT </item>
//    <item> SFDITEM_FIELD__UART4_Secure_CTRL_TXINT </item>
//    <item> SFDITEM_FIELD__UART4_Secure_CTRL_RXEN </item>
//    <item> SFDITEM_FIELD__UART4_Secure_CTRL_TXEN </item>
//  </rtree>
//  


// ----------------------  Register Item Address: UART4_Secure_INTSTATUS  -------------------------
// SVD Line: 698

unsigned int UART4_Secure_INTSTATUS __AT (0x5020400C);



// -------------------------  Field Item: UART4_Secure_INTSTATUS_RXOV  ----------------------------
// SVD Line: 703

//  <item> SFDITEM_FIELD__UART4_Secure_INTSTATUS_RXOV
//    <name> RXOV </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5020400C) RX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_INTSTATUS ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART4_Secure_INTSTATUS_TXOV  ----------------------------
// SVD Line: 707

//  <item> SFDITEM_FIELD__UART4_Secure_INTSTATUS_TXOV
//    <name> TXOV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5020400C) TX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_INTSTATUS ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ------------------------  Field Item: UART4_Secure_INTSTATUS_RXINT  ----------------------------
// SVD Line: 711

//  <item> SFDITEM_FIELD__UART4_Secure_INTSTATUS_RXINT
//    <name> RXINT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5020400C) RX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_INTSTATUS ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ------------------------  Field Item: UART4_Secure_INTSTATUS_TXINT  ----------------------------
// SVD Line: 715

//  <item> SFDITEM_FIELD__UART4_Secure_INTSTATUS_TXINT
//    <name> TXINT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5020400C) TX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_INTSTATUS ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -------------------------  Register RTree: UART4_Secure_INTSTATUS  -----------------------------
// SVD Line: 698

//  <rtree> SFDITEM_REG__UART4_Secure_INTSTATUS
//    <name> INTSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5020400C) UART Interrupt Status Register </i>
//    <loc> ( (unsigned int)((UART4_Secure_INTSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART4_Secure_INTSTATUS_RXOV </item>
//    <item> SFDITEM_FIELD__UART4_Secure_INTSTATUS_TXOV </item>
//    <item> SFDITEM_FIELD__UART4_Secure_INTSTATUS_RXINT </item>
//    <item> SFDITEM_FIELD__UART4_Secure_INTSTATUS_TXINT </item>
//  </rtree>
//  


// ----------------------  Register Item Address: UART4_Secure_INTCLEAR  --------------------------
// SVD Line: 721

unsigned int UART4_Secure_INTCLEAR __AT (0x5020400C);



// -------------------------  Field Item: UART4_Secure_INTCLEAR_RXOV  -----------------------------
// SVD Line: 727

//  <item> SFDITEM_FIELD__UART4_Secure_INTCLEAR_RXOV
//    <name> RXOV </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x5020400C) RX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_INTCLEAR ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART4_Secure_INTCLEAR_TXOV  -----------------------------
// SVD Line: 732

//  <item> SFDITEM_FIELD__UART4_Secure_INTCLEAR_TXOV
//    <name> TXOV </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x5020400C) TX Overrun interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_INTCLEAR ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART4_Secure_INTCLEAR_RXINT  ----------------------------
// SVD Line: 737

//  <item> SFDITEM_FIELD__UART4_Secure_INTCLEAR_RXINT
//    <name> RXINT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x5020400C) RX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_INTCLEAR ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART4_Secure_INTCLEAR_TXINT  ----------------------------
// SVD Line: 742

//  <item> SFDITEM_FIELD__UART4_Secure_INTCLEAR_TXINT
//    <name> TXINT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x5020400C) TX interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_INTCLEAR ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// --------------------------  Register RTree: UART4_Secure_INTCLEAR  -----------------------------
// SVD Line: 721

//  <rtree> SFDITEM_REG__UART4_Secure_INTCLEAR
//    <name> INTCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x5020400C) UART Interrupt CLEAR Register </i>
//    <loc> ( (unsigned int)((UART4_Secure_INTCLEAR >> 0) & 0xFFFFFFFF), ((UART4_Secure_INTCLEAR = (UART4_Secure_INTCLEAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_Secure_INTCLEAR_RXOV </item>
//    <item> SFDITEM_FIELD__UART4_Secure_INTCLEAR_TXOV </item>
//    <item> SFDITEM_FIELD__UART4_Secure_INTCLEAR_RXINT </item>
//    <item> SFDITEM_FIELD__UART4_Secure_INTCLEAR_TXINT </item>
//  </rtree>
//  


// -----------------------  Register Item Address: UART4_Secure_BAUDDIV  --------------------------
// SVD Line: 749

unsigned int UART4_Secure_BAUDDIV __AT (0x50204010);



// ---------------------------  Register Item: UART4_Secure_BAUDDIV  ------------------------------
// SVD Line: 749

//  <item> SFDITEM_REG__UART4_Secure_BAUDDIV
//    <name> BAUDDIV </name>
//    <i> [Bits 31..0] RW (@ 0x50204010) Baudrate Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART4_Secure_BAUDDIV >> 0) & 0xFFFFFFFF), ((UART4_Secure_BAUDDIV = (UART4_Secure_BAUDDIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Peripheral View: UART4_Secure  ---------------------------------
// SVD Line: 2901

//  <view> UART4_Secure
//    <name> UART4_Secure </name>
//    <item> SFDITEM_REG__UART4_Secure_DATA </item>
//    <item> SFDITEM_REG__UART4_Secure_STATE </item>
//    <item> SFDITEM_REG__UART4_Secure_CTRL </item>
//    <item> SFDITEM_REG__UART4_Secure_INTSTATUS </item>
//    <item> SFDITEM_REG__UART4_Secure_INTCLEAR </item>
//    <item> SFDITEM_REG__UART4_Secure_BAUDDIV </item>
//  </view>
//  


// ------------------------  Register Item Address: GPIO0_Secure_DATA  ----------------------------
// SVD Line: 917

unsigned int GPIO0_Secure_DATA __AT (0x50100000);



// ----------------------------  Register Item: GPIO0_Secure_DATA  --------------------------------
// SVD Line: 917

//  <item> SFDITEM_REG__GPIO0_Secure_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x50100000) Data Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_DATA >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_DATA = (GPIO0_Secure_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: GPIO0_Secure_DATAOUT  --------------------------
// SVD Line: 922

unsigned int GPIO0_Secure_DATAOUT __AT (0x50100004);



// ---------------------------  Register Item: GPIO0_Secure_DATAOUT  ------------------------------
// SVD Line: 922

//  <item> SFDITEM_REG__GPIO0_Secure_DATAOUT
//    <name> DATAOUT </name>
//    <i> [Bits 31..0] RW (@ 0x50100004) Data Output Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_DATAOUT >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_DATAOUT = (GPIO0_Secure_DATAOUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO0_Secure_OUTENSET  --------------------------
// SVD Line: 927

unsigned int GPIO0_Secure_OUTENSET __AT (0x50100010);



// --------------------------  Register Item: GPIO0_Secure_OUTENSET  ------------------------------
// SVD Line: 927

//  <item> SFDITEM_REG__GPIO0_Secure_OUTENSET
//    <name> OUTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x50100010) Ouptut enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_OUTENSET >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_OUTENSET = (GPIO0_Secure_OUTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO0_Secure_OUTENCLR  --------------------------
// SVD Line: 932

unsigned int GPIO0_Secure_OUTENCLR __AT (0x50100014);



// --------------------------  Register Item: GPIO0_Secure_OUTENCLR  ------------------------------
// SVD Line: 932

//  <item> SFDITEM_REG__GPIO0_Secure_OUTENCLR
//    <name> OUTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50100014) Ouptut enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_OUTENCLR >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_OUTENCLR = (GPIO0_Secure_OUTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO0_Secure_ALTFUNCSET  -------------------------
// SVD Line: 937

unsigned int GPIO0_Secure_ALTFUNCSET __AT (0x50100018);



// -------------------------  Register Item: GPIO0_Secure_ALTFUNCSET  -----------------------------
// SVD Line: 937

//  <item> SFDITEM_REG__GPIO0_Secure_ALTFUNCSET
//    <name> ALTFUNCSET </name>
//    <i> [Bits 31..0] RW (@ 0x50100018) Alternate function set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_ALTFUNCSET >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_ALTFUNCSET = (GPIO0_Secure_ALTFUNCSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO0_Secure_ALTFUNCCLR  -------------------------
// SVD Line: 942

unsigned int GPIO0_Secure_ALTFUNCCLR __AT (0x5010001C);



// -------------------------  Register Item: GPIO0_Secure_ALTFUNCCLR  -----------------------------
// SVD Line: 942

//  <item> SFDITEM_REG__GPIO0_Secure_ALTFUNCCLR
//    <name> ALTFUNCCLR </name>
//    <i> [Bits 31..0] RW (@ 0x5010001C) Alternate function clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_ALTFUNCCLR >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_ALTFUNCCLR = (GPIO0_Secure_ALTFUNCCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO0_Secure_INTENSET  --------------------------
// SVD Line: 947

unsigned int GPIO0_Secure_INTENSET __AT (0x50100020);



// --------------------------  Register Item: GPIO0_Secure_INTENSET  ------------------------------
// SVD Line: 947

//  <item> SFDITEM_REG__GPIO0_Secure_INTENSET
//    <name> INTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x50100020) Interrupt enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_INTENSET >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_INTENSET = (GPIO0_Secure_INTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO0_Secure_INTENCLR  --------------------------
// SVD Line: 952

unsigned int GPIO0_Secure_INTENCLR __AT (0x50100024);



// --------------------------  Register Item: GPIO0_Secure_INTENCLR  ------------------------------
// SVD Line: 952

//  <item> SFDITEM_REG__GPIO0_Secure_INTENCLR
//    <name> INTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50100024) Interrupt enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_INTENCLR >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_INTENCLR = (GPIO0_Secure_INTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO0_Secure_INTTYPESET  -------------------------
// SVD Line: 957

unsigned int GPIO0_Secure_INTTYPESET __AT (0x50100028);



// -------------------------  Register Item: GPIO0_Secure_INTTYPESET  -----------------------------
// SVD Line: 957

//  <item> SFDITEM_REG__GPIO0_Secure_INTTYPESET
//    <name> INTTYPESET </name>
//    <i> [Bits 31..0] RW (@ 0x50100028) Interrupt type set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_INTTYPESET >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_INTTYPESET = (GPIO0_Secure_INTTYPESET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO0_Secure_INTTYPECLR  -------------------------
// SVD Line: 962

unsigned int GPIO0_Secure_INTTYPECLR __AT (0x5010002C);



// -------------------------  Register Item: GPIO0_Secure_INTTYPECLR  -----------------------------
// SVD Line: 962

//  <item> SFDITEM_REG__GPIO0_Secure_INTTYPECLR
//    <name> INTTYPECLR </name>
//    <i> [Bits 31..0] RW (@ 0x5010002C) Interrupt type clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_INTTYPECLR >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_INTTYPECLR = (GPIO0_Secure_INTTYPECLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO0_Secure_INTPOLSET  -------------------------
// SVD Line: 967

unsigned int GPIO0_Secure_INTPOLSET __AT (0x50100030);



// --------------------------  Register Item: GPIO0_Secure_INTPOLSET  -----------------------------
// SVD Line: 967

//  <item> SFDITEM_REG__GPIO0_Secure_INTPOLSET
//    <name> INTPOLSET </name>
//    <i> [Bits 31..0] RW (@ 0x50100030) Polarity-level, edge interrupt configuration set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_INTPOLSET >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_INTPOLSET = (GPIO0_Secure_INTPOLSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO0_Secure_INTPOLCLR  -------------------------
// SVD Line: 972

unsigned int GPIO0_Secure_INTPOLCLR __AT (0x50100034);



// --------------------------  Register Item: GPIO0_Secure_INTPOLCLR  -----------------------------
// SVD Line: 972

//  <item> SFDITEM_REG__GPIO0_Secure_INTPOLCLR
//    <name> INTPOLCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50100034) Polarity-level, edge interrupt configuration clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_INTPOLCLR >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_INTPOLCLR = (GPIO0_Secure_INTPOLCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO0_Secure_INTSTATUS  -------------------------
// SVD Line: 977

unsigned int GPIO0_Secure_INTSTATUS __AT (0x50100038);



// --------------------------  Register Item: GPIO0_Secure_INTSTATUS  -----------------------------
// SVD Line: 977

//  <item> SFDITEM_REG__GPIO0_Secure_INTSTATUS
//    <name> INTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x50100038) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_INTSTATUS >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_INTSTATUS = (GPIO0_Secure_INTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO0_Secure_INTCLEAR  --------------------------
// SVD Line: 982

unsigned int GPIO0_Secure_INTCLEAR __AT (0x50100038);



// --------------------------  Register Item: GPIO0_Secure_INTCLEAR  ------------------------------
// SVD Line: 982

//  <item> SFDITEM_REG__GPIO0_Secure_INTCLEAR
//    <name> INTCLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x50100038) Interrupt CLEAR Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_INTCLEAR >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_INTCLEAR = (GPIO0_Secure_INTCLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Peripheral View: GPIO0_Secure  ---------------------------------
// SVD Line: 2908

//  <view> GPIO0_Secure
//    <name> GPIO0_Secure </name>
//    <item> SFDITEM_REG__GPIO0_Secure_DATA </item>
//    <item> SFDITEM_REG__GPIO0_Secure_DATAOUT </item>
//    <item> SFDITEM_REG__GPIO0_Secure_OUTENSET </item>
//    <item> SFDITEM_REG__GPIO0_Secure_OUTENCLR </item>
//    <item> SFDITEM_REG__GPIO0_Secure_ALTFUNCSET </item>
//    <item> SFDITEM_REG__GPIO0_Secure_ALTFUNCCLR </item>
//    <item> SFDITEM_REG__GPIO0_Secure_INTENSET </item>
//    <item> SFDITEM_REG__GPIO0_Secure_INTENCLR </item>
//    <item> SFDITEM_REG__GPIO0_Secure_INTTYPESET </item>
//    <item> SFDITEM_REG__GPIO0_Secure_INTTYPECLR </item>
//    <item> SFDITEM_REG__GPIO0_Secure_INTPOLSET </item>
//    <item> SFDITEM_REG__GPIO0_Secure_INTPOLCLR </item>
//    <item> SFDITEM_REG__GPIO0_Secure_INTSTATUS </item>
//    <item> SFDITEM_REG__GPIO0_Secure_INTCLEAR </item>
//  </view>
//  


// ------------------------  Register Item Address: GPIO1_Secure_DATA  ----------------------------
// SVD Line: 917

unsigned int GPIO1_Secure_DATA __AT (0x50101000);



// ----------------------------  Register Item: GPIO1_Secure_DATA  --------------------------------
// SVD Line: 917

//  <item> SFDITEM_REG__GPIO1_Secure_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x50101000) Data Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_DATA >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_DATA = (GPIO1_Secure_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: GPIO1_Secure_DATAOUT  --------------------------
// SVD Line: 922

unsigned int GPIO1_Secure_DATAOUT __AT (0x50101004);



// ---------------------------  Register Item: GPIO1_Secure_DATAOUT  ------------------------------
// SVD Line: 922

//  <item> SFDITEM_REG__GPIO1_Secure_DATAOUT
//    <name> DATAOUT </name>
//    <i> [Bits 31..0] RW (@ 0x50101004) Data Output Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_DATAOUT >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_DATAOUT = (GPIO1_Secure_DATAOUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO1_Secure_OUTENSET  --------------------------
// SVD Line: 927

unsigned int GPIO1_Secure_OUTENSET __AT (0x50101010);



// --------------------------  Register Item: GPIO1_Secure_OUTENSET  ------------------------------
// SVD Line: 927

//  <item> SFDITEM_REG__GPIO1_Secure_OUTENSET
//    <name> OUTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x50101010) Ouptut enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_OUTENSET >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_OUTENSET = (GPIO1_Secure_OUTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO1_Secure_OUTENCLR  --------------------------
// SVD Line: 932

unsigned int GPIO1_Secure_OUTENCLR __AT (0x50101014);



// --------------------------  Register Item: GPIO1_Secure_OUTENCLR  ------------------------------
// SVD Line: 932

//  <item> SFDITEM_REG__GPIO1_Secure_OUTENCLR
//    <name> OUTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50101014) Ouptut enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_OUTENCLR >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_OUTENCLR = (GPIO1_Secure_OUTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO1_Secure_ALTFUNCSET  -------------------------
// SVD Line: 937

unsigned int GPIO1_Secure_ALTFUNCSET __AT (0x50101018);



// -------------------------  Register Item: GPIO1_Secure_ALTFUNCSET  -----------------------------
// SVD Line: 937

//  <item> SFDITEM_REG__GPIO1_Secure_ALTFUNCSET
//    <name> ALTFUNCSET </name>
//    <i> [Bits 31..0] RW (@ 0x50101018) Alternate function set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_ALTFUNCSET >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_ALTFUNCSET = (GPIO1_Secure_ALTFUNCSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO1_Secure_ALTFUNCCLR  -------------------------
// SVD Line: 942

unsigned int GPIO1_Secure_ALTFUNCCLR __AT (0x5010101C);



// -------------------------  Register Item: GPIO1_Secure_ALTFUNCCLR  -----------------------------
// SVD Line: 942

//  <item> SFDITEM_REG__GPIO1_Secure_ALTFUNCCLR
//    <name> ALTFUNCCLR </name>
//    <i> [Bits 31..0] RW (@ 0x5010101C) Alternate function clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_ALTFUNCCLR >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_ALTFUNCCLR = (GPIO1_Secure_ALTFUNCCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO1_Secure_INTENSET  --------------------------
// SVD Line: 947

unsigned int GPIO1_Secure_INTENSET __AT (0x50101020);



// --------------------------  Register Item: GPIO1_Secure_INTENSET  ------------------------------
// SVD Line: 947

//  <item> SFDITEM_REG__GPIO1_Secure_INTENSET
//    <name> INTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x50101020) Interrupt enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_INTENSET >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_INTENSET = (GPIO1_Secure_INTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO1_Secure_INTENCLR  --------------------------
// SVD Line: 952

unsigned int GPIO1_Secure_INTENCLR __AT (0x50101024);



// --------------------------  Register Item: GPIO1_Secure_INTENCLR  ------------------------------
// SVD Line: 952

//  <item> SFDITEM_REG__GPIO1_Secure_INTENCLR
//    <name> INTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50101024) Interrupt enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_INTENCLR >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_INTENCLR = (GPIO1_Secure_INTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO1_Secure_INTTYPESET  -------------------------
// SVD Line: 957

unsigned int GPIO1_Secure_INTTYPESET __AT (0x50101028);



// -------------------------  Register Item: GPIO1_Secure_INTTYPESET  -----------------------------
// SVD Line: 957

//  <item> SFDITEM_REG__GPIO1_Secure_INTTYPESET
//    <name> INTTYPESET </name>
//    <i> [Bits 31..0] RW (@ 0x50101028) Interrupt type set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_INTTYPESET >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_INTTYPESET = (GPIO1_Secure_INTTYPESET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO1_Secure_INTTYPECLR  -------------------------
// SVD Line: 962

unsigned int GPIO1_Secure_INTTYPECLR __AT (0x5010102C);



// -------------------------  Register Item: GPIO1_Secure_INTTYPECLR  -----------------------------
// SVD Line: 962

//  <item> SFDITEM_REG__GPIO1_Secure_INTTYPECLR
//    <name> INTTYPECLR </name>
//    <i> [Bits 31..0] RW (@ 0x5010102C) Interrupt type clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_INTTYPECLR >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_INTTYPECLR = (GPIO1_Secure_INTTYPECLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO1_Secure_INTPOLSET  -------------------------
// SVD Line: 967

unsigned int GPIO1_Secure_INTPOLSET __AT (0x50101030);



// --------------------------  Register Item: GPIO1_Secure_INTPOLSET  -----------------------------
// SVD Line: 967

//  <item> SFDITEM_REG__GPIO1_Secure_INTPOLSET
//    <name> INTPOLSET </name>
//    <i> [Bits 31..0] RW (@ 0x50101030) Polarity-level, edge interrupt configuration set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_INTPOLSET >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_INTPOLSET = (GPIO1_Secure_INTPOLSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO1_Secure_INTPOLCLR  -------------------------
// SVD Line: 972

unsigned int GPIO1_Secure_INTPOLCLR __AT (0x50101034);



// --------------------------  Register Item: GPIO1_Secure_INTPOLCLR  -----------------------------
// SVD Line: 972

//  <item> SFDITEM_REG__GPIO1_Secure_INTPOLCLR
//    <name> INTPOLCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50101034) Polarity-level, edge interrupt configuration clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_INTPOLCLR >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_INTPOLCLR = (GPIO1_Secure_INTPOLCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO1_Secure_INTSTATUS  -------------------------
// SVD Line: 977

unsigned int GPIO1_Secure_INTSTATUS __AT (0x50101038);



// --------------------------  Register Item: GPIO1_Secure_INTSTATUS  -----------------------------
// SVD Line: 977

//  <item> SFDITEM_REG__GPIO1_Secure_INTSTATUS
//    <name> INTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x50101038) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_INTSTATUS >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_INTSTATUS = (GPIO1_Secure_INTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO1_Secure_INTCLEAR  --------------------------
// SVD Line: 982

unsigned int GPIO1_Secure_INTCLEAR __AT (0x50101038);



// --------------------------  Register Item: GPIO1_Secure_INTCLEAR  ------------------------------
// SVD Line: 982

//  <item> SFDITEM_REG__GPIO1_Secure_INTCLEAR
//    <name> INTCLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x50101038) Interrupt CLEAR Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_INTCLEAR >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_INTCLEAR = (GPIO1_Secure_INTCLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Peripheral View: GPIO1_Secure  ---------------------------------
// SVD Line: 2916

//  <view> GPIO1_Secure
//    <name> GPIO1_Secure </name>
//    <item> SFDITEM_REG__GPIO1_Secure_DATA </item>
//    <item> SFDITEM_REG__GPIO1_Secure_DATAOUT </item>
//    <item> SFDITEM_REG__GPIO1_Secure_OUTENSET </item>
//    <item> SFDITEM_REG__GPIO1_Secure_OUTENCLR </item>
//    <item> SFDITEM_REG__GPIO1_Secure_ALTFUNCSET </item>
//    <item> SFDITEM_REG__GPIO1_Secure_ALTFUNCCLR </item>
//    <item> SFDITEM_REG__GPIO1_Secure_INTENSET </item>
//    <item> SFDITEM_REG__GPIO1_Secure_INTENCLR </item>
//    <item> SFDITEM_REG__GPIO1_Secure_INTTYPESET </item>
//    <item> SFDITEM_REG__GPIO1_Secure_INTTYPECLR </item>
//    <item> SFDITEM_REG__GPIO1_Secure_INTPOLSET </item>
//    <item> SFDITEM_REG__GPIO1_Secure_INTPOLCLR </item>
//    <item> SFDITEM_REG__GPIO1_Secure_INTSTATUS </item>
//    <item> SFDITEM_REG__GPIO1_Secure_INTCLEAR </item>
//  </view>
//  


// ------------------------  Register Item Address: GPIO2_Secure_DATA  ----------------------------
// SVD Line: 917

unsigned int GPIO2_Secure_DATA __AT (0x50102000);



// ----------------------------  Register Item: GPIO2_Secure_DATA  --------------------------------
// SVD Line: 917

//  <item> SFDITEM_REG__GPIO2_Secure_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x50102000) Data Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_DATA >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_DATA = (GPIO2_Secure_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: GPIO2_Secure_DATAOUT  --------------------------
// SVD Line: 922

unsigned int GPIO2_Secure_DATAOUT __AT (0x50102004);



// ---------------------------  Register Item: GPIO2_Secure_DATAOUT  ------------------------------
// SVD Line: 922

//  <item> SFDITEM_REG__GPIO2_Secure_DATAOUT
//    <name> DATAOUT </name>
//    <i> [Bits 31..0] RW (@ 0x50102004) Data Output Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_DATAOUT >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_DATAOUT = (GPIO2_Secure_DATAOUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO2_Secure_OUTENSET  --------------------------
// SVD Line: 927

unsigned int GPIO2_Secure_OUTENSET __AT (0x50102010);



// --------------------------  Register Item: GPIO2_Secure_OUTENSET  ------------------------------
// SVD Line: 927

//  <item> SFDITEM_REG__GPIO2_Secure_OUTENSET
//    <name> OUTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x50102010) Ouptut enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_OUTENSET >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_OUTENSET = (GPIO2_Secure_OUTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO2_Secure_OUTENCLR  --------------------------
// SVD Line: 932

unsigned int GPIO2_Secure_OUTENCLR __AT (0x50102014);



// --------------------------  Register Item: GPIO2_Secure_OUTENCLR  ------------------------------
// SVD Line: 932

//  <item> SFDITEM_REG__GPIO2_Secure_OUTENCLR
//    <name> OUTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50102014) Ouptut enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_OUTENCLR >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_OUTENCLR = (GPIO2_Secure_OUTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO2_Secure_ALTFUNCSET  -------------------------
// SVD Line: 937

unsigned int GPIO2_Secure_ALTFUNCSET __AT (0x50102018);



// -------------------------  Register Item: GPIO2_Secure_ALTFUNCSET  -----------------------------
// SVD Line: 937

//  <item> SFDITEM_REG__GPIO2_Secure_ALTFUNCSET
//    <name> ALTFUNCSET </name>
//    <i> [Bits 31..0] RW (@ 0x50102018) Alternate function set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_ALTFUNCSET >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_ALTFUNCSET = (GPIO2_Secure_ALTFUNCSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO2_Secure_ALTFUNCCLR  -------------------------
// SVD Line: 942

unsigned int GPIO2_Secure_ALTFUNCCLR __AT (0x5010201C);



// -------------------------  Register Item: GPIO2_Secure_ALTFUNCCLR  -----------------------------
// SVD Line: 942

//  <item> SFDITEM_REG__GPIO2_Secure_ALTFUNCCLR
//    <name> ALTFUNCCLR </name>
//    <i> [Bits 31..0] RW (@ 0x5010201C) Alternate function clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_ALTFUNCCLR >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_ALTFUNCCLR = (GPIO2_Secure_ALTFUNCCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO2_Secure_INTENSET  --------------------------
// SVD Line: 947

unsigned int GPIO2_Secure_INTENSET __AT (0x50102020);



// --------------------------  Register Item: GPIO2_Secure_INTENSET  ------------------------------
// SVD Line: 947

//  <item> SFDITEM_REG__GPIO2_Secure_INTENSET
//    <name> INTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x50102020) Interrupt enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_INTENSET >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_INTENSET = (GPIO2_Secure_INTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO2_Secure_INTENCLR  --------------------------
// SVD Line: 952

unsigned int GPIO2_Secure_INTENCLR __AT (0x50102024);



// --------------------------  Register Item: GPIO2_Secure_INTENCLR  ------------------------------
// SVD Line: 952

//  <item> SFDITEM_REG__GPIO2_Secure_INTENCLR
//    <name> INTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50102024) Interrupt enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_INTENCLR >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_INTENCLR = (GPIO2_Secure_INTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO2_Secure_INTTYPESET  -------------------------
// SVD Line: 957

unsigned int GPIO2_Secure_INTTYPESET __AT (0x50102028);



// -------------------------  Register Item: GPIO2_Secure_INTTYPESET  -----------------------------
// SVD Line: 957

//  <item> SFDITEM_REG__GPIO2_Secure_INTTYPESET
//    <name> INTTYPESET </name>
//    <i> [Bits 31..0] RW (@ 0x50102028) Interrupt type set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_INTTYPESET >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_INTTYPESET = (GPIO2_Secure_INTTYPESET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO2_Secure_INTTYPECLR  -------------------------
// SVD Line: 962

unsigned int GPIO2_Secure_INTTYPECLR __AT (0x5010202C);



// -------------------------  Register Item: GPIO2_Secure_INTTYPECLR  -----------------------------
// SVD Line: 962

//  <item> SFDITEM_REG__GPIO2_Secure_INTTYPECLR
//    <name> INTTYPECLR </name>
//    <i> [Bits 31..0] RW (@ 0x5010202C) Interrupt type clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_INTTYPECLR >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_INTTYPECLR = (GPIO2_Secure_INTTYPECLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO2_Secure_INTPOLSET  -------------------------
// SVD Line: 967

unsigned int GPIO2_Secure_INTPOLSET __AT (0x50102030);



// --------------------------  Register Item: GPIO2_Secure_INTPOLSET  -----------------------------
// SVD Line: 967

//  <item> SFDITEM_REG__GPIO2_Secure_INTPOLSET
//    <name> INTPOLSET </name>
//    <i> [Bits 31..0] RW (@ 0x50102030) Polarity-level, edge interrupt configuration set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_INTPOLSET >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_INTPOLSET = (GPIO2_Secure_INTPOLSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO2_Secure_INTPOLCLR  -------------------------
// SVD Line: 972

unsigned int GPIO2_Secure_INTPOLCLR __AT (0x50102034);



// --------------------------  Register Item: GPIO2_Secure_INTPOLCLR  -----------------------------
// SVD Line: 972

//  <item> SFDITEM_REG__GPIO2_Secure_INTPOLCLR
//    <name> INTPOLCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50102034) Polarity-level, edge interrupt configuration clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_INTPOLCLR >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_INTPOLCLR = (GPIO2_Secure_INTPOLCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO2_Secure_INTSTATUS  -------------------------
// SVD Line: 977

unsigned int GPIO2_Secure_INTSTATUS __AT (0x50102038);



// --------------------------  Register Item: GPIO2_Secure_INTSTATUS  -----------------------------
// SVD Line: 977

//  <item> SFDITEM_REG__GPIO2_Secure_INTSTATUS
//    <name> INTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x50102038) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_INTSTATUS >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_INTSTATUS = (GPIO2_Secure_INTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO2_Secure_INTCLEAR  --------------------------
// SVD Line: 982

unsigned int GPIO2_Secure_INTCLEAR __AT (0x50102038);



// --------------------------  Register Item: GPIO2_Secure_INTCLEAR  ------------------------------
// SVD Line: 982

//  <item> SFDITEM_REG__GPIO2_Secure_INTCLEAR
//    <name> INTCLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x50102038) Interrupt CLEAR Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_INTCLEAR >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_INTCLEAR = (GPIO2_Secure_INTCLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Peripheral View: GPIO2_Secure  ---------------------------------
// SVD Line: 2924

//  <view> GPIO2_Secure
//    <name> GPIO2_Secure </name>
//    <item> SFDITEM_REG__GPIO2_Secure_DATA </item>
//    <item> SFDITEM_REG__GPIO2_Secure_DATAOUT </item>
//    <item> SFDITEM_REG__GPIO2_Secure_OUTENSET </item>
//    <item> SFDITEM_REG__GPIO2_Secure_OUTENCLR </item>
//    <item> SFDITEM_REG__GPIO2_Secure_ALTFUNCSET </item>
//    <item> SFDITEM_REG__GPIO2_Secure_ALTFUNCCLR </item>
//    <item> SFDITEM_REG__GPIO2_Secure_INTENSET </item>
//    <item> SFDITEM_REG__GPIO2_Secure_INTENCLR </item>
//    <item> SFDITEM_REG__GPIO2_Secure_INTTYPESET </item>
//    <item> SFDITEM_REG__GPIO2_Secure_INTTYPECLR </item>
//    <item> SFDITEM_REG__GPIO2_Secure_INTPOLSET </item>
//    <item> SFDITEM_REG__GPIO2_Secure_INTPOLCLR </item>
//    <item> SFDITEM_REG__GPIO2_Secure_INTSTATUS </item>
//    <item> SFDITEM_REG__GPIO2_Secure_INTCLEAR </item>
//  </view>
//  


// ------------------------  Register Item Address: GPIO3_Secure_DATA  ----------------------------
// SVD Line: 917

unsigned int GPIO3_Secure_DATA __AT (0x50103000);



// ----------------------------  Register Item: GPIO3_Secure_DATA  --------------------------------
// SVD Line: 917

//  <item> SFDITEM_REG__GPIO3_Secure_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x50103000) Data Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_DATA >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_DATA = (GPIO3_Secure_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: GPIO3_Secure_DATAOUT  --------------------------
// SVD Line: 922

unsigned int GPIO3_Secure_DATAOUT __AT (0x50103004);



// ---------------------------  Register Item: GPIO3_Secure_DATAOUT  ------------------------------
// SVD Line: 922

//  <item> SFDITEM_REG__GPIO3_Secure_DATAOUT
//    <name> DATAOUT </name>
//    <i> [Bits 31..0] RW (@ 0x50103004) Data Output Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_DATAOUT >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_DATAOUT = (GPIO3_Secure_DATAOUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO3_Secure_OUTENSET  --------------------------
// SVD Line: 927

unsigned int GPIO3_Secure_OUTENSET __AT (0x50103010);



// --------------------------  Register Item: GPIO3_Secure_OUTENSET  ------------------------------
// SVD Line: 927

//  <item> SFDITEM_REG__GPIO3_Secure_OUTENSET
//    <name> OUTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x50103010) Ouptut enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_OUTENSET >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_OUTENSET = (GPIO3_Secure_OUTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO3_Secure_OUTENCLR  --------------------------
// SVD Line: 932

unsigned int GPIO3_Secure_OUTENCLR __AT (0x50103014);



// --------------------------  Register Item: GPIO3_Secure_OUTENCLR  ------------------------------
// SVD Line: 932

//  <item> SFDITEM_REG__GPIO3_Secure_OUTENCLR
//    <name> OUTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50103014) Ouptut enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_OUTENCLR >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_OUTENCLR = (GPIO3_Secure_OUTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO3_Secure_ALTFUNCSET  -------------------------
// SVD Line: 937

unsigned int GPIO3_Secure_ALTFUNCSET __AT (0x50103018);



// -------------------------  Register Item: GPIO3_Secure_ALTFUNCSET  -----------------------------
// SVD Line: 937

//  <item> SFDITEM_REG__GPIO3_Secure_ALTFUNCSET
//    <name> ALTFUNCSET </name>
//    <i> [Bits 31..0] RW (@ 0x50103018) Alternate function set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_ALTFUNCSET >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_ALTFUNCSET = (GPIO3_Secure_ALTFUNCSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO3_Secure_ALTFUNCCLR  -------------------------
// SVD Line: 942

unsigned int GPIO3_Secure_ALTFUNCCLR __AT (0x5010301C);



// -------------------------  Register Item: GPIO3_Secure_ALTFUNCCLR  -----------------------------
// SVD Line: 942

//  <item> SFDITEM_REG__GPIO3_Secure_ALTFUNCCLR
//    <name> ALTFUNCCLR </name>
//    <i> [Bits 31..0] RW (@ 0x5010301C) Alternate function clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_ALTFUNCCLR >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_ALTFUNCCLR = (GPIO3_Secure_ALTFUNCCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO3_Secure_INTENSET  --------------------------
// SVD Line: 947

unsigned int GPIO3_Secure_INTENSET __AT (0x50103020);



// --------------------------  Register Item: GPIO3_Secure_INTENSET  ------------------------------
// SVD Line: 947

//  <item> SFDITEM_REG__GPIO3_Secure_INTENSET
//    <name> INTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x50103020) Interrupt enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_INTENSET >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_INTENSET = (GPIO3_Secure_INTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO3_Secure_INTENCLR  --------------------------
// SVD Line: 952

unsigned int GPIO3_Secure_INTENCLR __AT (0x50103024);



// --------------------------  Register Item: GPIO3_Secure_INTENCLR  ------------------------------
// SVD Line: 952

//  <item> SFDITEM_REG__GPIO3_Secure_INTENCLR
//    <name> INTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50103024) Interrupt enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_INTENCLR >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_INTENCLR = (GPIO3_Secure_INTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO3_Secure_INTTYPESET  -------------------------
// SVD Line: 957

unsigned int GPIO3_Secure_INTTYPESET __AT (0x50103028);



// -------------------------  Register Item: GPIO3_Secure_INTTYPESET  -----------------------------
// SVD Line: 957

//  <item> SFDITEM_REG__GPIO3_Secure_INTTYPESET
//    <name> INTTYPESET </name>
//    <i> [Bits 31..0] RW (@ 0x50103028) Interrupt type set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_INTTYPESET >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_INTTYPESET = (GPIO3_Secure_INTTYPESET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO3_Secure_INTTYPECLR  -------------------------
// SVD Line: 962

unsigned int GPIO3_Secure_INTTYPECLR __AT (0x5010302C);



// -------------------------  Register Item: GPIO3_Secure_INTTYPECLR  -----------------------------
// SVD Line: 962

//  <item> SFDITEM_REG__GPIO3_Secure_INTTYPECLR
//    <name> INTTYPECLR </name>
//    <i> [Bits 31..0] RW (@ 0x5010302C) Interrupt type clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_INTTYPECLR >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_INTTYPECLR = (GPIO3_Secure_INTTYPECLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO3_Secure_INTPOLSET  -------------------------
// SVD Line: 967

unsigned int GPIO3_Secure_INTPOLSET __AT (0x50103030);



// --------------------------  Register Item: GPIO3_Secure_INTPOLSET  -----------------------------
// SVD Line: 967

//  <item> SFDITEM_REG__GPIO3_Secure_INTPOLSET
//    <name> INTPOLSET </name>
//    <i> [Bits 31..0] RW (@ 0x50103030) Polarity-level, edge interrupt configuration set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_INTPOLSET >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_INTPOLSET = (GPIO3_Secure_INTPOLSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO3_Secure_INTPOLCLR  -------------------------
// SVD Line: 972

unsigned int GPIO3_Secure_INTPOLCLR __AT (0x50103034);



// --------------------------  Register Item: GPIO3_Secure_INTPOLCLR  -----------------------------
// SVD Line: 972

//  <item> SFDITEM_REG__GPIO3_Secure_INTPOLCLR
//    <name> INTPOLCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50103034) Polarity-level, edge interrupt configuration clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_INTPOLCLR >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_INTPOLCLR = (GPIO3_Secure_INTPOLCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO3_Secure_INTSTATUS  -------------------------
// SVD Line: 977

unsigned int GPIO3_Secure_INTSTATUS __AT (0x50103038);



// --------------------------  Register Item: GPIO3_Secure_INTSTATUS  -----------------------------
// SVD Line: 977

//  <item> SFDITEM_REG__GPIO3_Secure_INTSTATUS
//    <name> INTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x50103038) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_INTSTATUS >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_INTSTATUS = (GPIO3_Secure_INTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO3_Secure_INTCLEAR  --------------------------
// SVD Line: 982

unsigned int GPIO3_Secure_INTCLEAR __AT (0x50103038);



// --------------------------  Register Item: GPIO3_Secure_INTCLEAR  ------------------------------
// SVD Line: 982

//  <item> SFDITEM_REG__GPIO3_Secure_INTCLEAR
//    <name> INTCLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x50103038) Interrupt CLEAR Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_INTCLEAR >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_INTCLEAR = (GPIO3_Secure_INTCLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Peripheral View: GPIO3_Secure  ---------------------------------
// SVD Line: 2932

//  <view> GPIO3_Secure
//    <name> GPIO3_Secure </name>
//    <item> SFDITEM_REG__GPIO3_Secure_DATA </item>
//    <item> SFDITEM_REG__GPIO3_Secure_DATAOUT </item>
//    <item> SFDITEM_REG__GPIO3_Secure_OUTENSET </item>
//    <item> SFDITEM_REG__GPIO3_Secure_OUTENCLR </item>
//    <item> SFDITEM_REG__GPIO3_Secure_ALTFUNCSET </item>
//    <item> SFDITEM_REG__GPIO3_Secure_ALTFUNCCLR </item>
//    <item> SFDITEM_REG__GPIO3_Secure_INTENSET </item>
//    <item> SFDITEM_REG__GPIO3_Secure_INTENCLR </item>
//    <item> SFDITEM_REG__GPIO3_Secure_INTTYPESET </item>
//    <item> SFDITEM_REG__GPIO3_Secure_INTTYPECLR </item>
//    <item> SFDITEM_REG__GPIO3_Secure_INTPOLSET </item>
//    <item> SFDITEM_REG__GPIO3_Secure_INTPOLCLR </item>
//    <item> SFDITEM_REG__GPIO3_Secure_INTSTATUS </item>
//    <item> SFDITEM_REG__GPIO3_Secure_INTCLEAR </item>
//  </view>
//  


// ----------------------  Register Item Address: DMA0_SECURE_IntStatus  --------------------------
// SVD Line: 1197

unsigned int DMA0_SECURE_IntStatus __AT (0x50110000);



// --------------------------  Register Item: DMA0_SECURE_IntStatus  ------------------------------
// SVD Line: 1197

//  <item> SFDITEM_REG__DMA0_SECURE_IntStatus
//    <name> IntStatus </name>
//    <i> [Bits 31..0] RW (@ 0x50110000) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_IntStatus >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_IntStatus = (DMA0_SECURE_IntStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: DMA0_SECURE_IntTCStatus  -------------------------
// SVD Line: 1202

unsigned int DMA0_SECURE_IntTCStatus __AT (0x50110004);



// -------------------------  Register Item: DMA0_SECURE_IntTCStatus  -----------------------------
// SVD Line: 1202

//  <item> SFDITEM_REG__DMA0_SECURE_IntTCStatus
//    <name> IntTCStatus </name>
//    <i> [Bits 31..0] RO (@ 0x50110004) Interrupt Terminal Count Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_IntTCStatus >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_IntTCStatus = (DMA0_SECURE_IntTCStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA0_SECURE_IntTCClear  -------------------------
// SVD Line: 1207

unsigned int DMA0_SECURE_IntTCClear __AT (0x50110008);



// --------------------------  Register Item: DMA0_SECURE_IntTCClear  -----------------------------
// SVD Line: 1207

//  <item> SFDITEM_REG__DMA0_SECURE_IntTCClear
//    <name> IntTCClear </name>
//    <i> [Bits 31..0] WO (@ 0x50110008) Interrupt Terminal Count Clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_IntTCClear >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_IntTCClear = (DMA0_SECURE_IntTCClear & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: DMA0_SECURE_IntErrorStatus  -----------------------
// SVD Line: 1212

unsigned int DMA0_SECURE_IntErrorStatus __AT (0x5011000C);



// ------------------------  Register Item: DMA0_SECURE_IntErrorStatus  ---------------------------
// SVD Line: 1212

//  <item> SFDITEM_REG__DMA0_SECURE_IntErrorStatus
//    <name> IntErrorStatus </name>
//    <i> [Bits 31..0] RO (@ 0x5011000C) Interrupt Error Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_IntErrorStatus >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_IntErrorStatus = (DMA0_SECURE_IntErrorStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA0_SECURE_IntErrClr  --------------------------
// SVD Line: 1217

unsigned int DMA0_SECURE_IntErrClr __AT (0x50110010);



// --------------------------  Register Item: DMA0_SECURE_IntErrClr  ------------------------------
// SVD Line: 1217

//  <item> SFDITEM_REG__DMA0_SECURE_IntErrClr
//    <name> IntErrClr </name>
//    <i> [Bits 31..0] WO (@ 0x50110010) Interrupt Error Clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_IntErrClr >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_IntErrClr = (DMA0_SECURE_IntErrClr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: DMA0_SECURE_RawIntTCStatus  -----------------------
// SVD Line: 1222

unsigned int DMA0_SECURE_RawIntTCStatus __AT (0x50110014);



// ------------------------  Register Item: DMA0_SECURE_RawIntTCStatus  ---------------------------
// SVD Line: 1222

//  <item> SFDITEM_REG__DMA0_SECURE_RawIntTCStatus
//    <name> RawIntTCStatus </name>
//    <i> [Bits 31..0] RO (@ 0x50110014) Raw Interrupt Terminal Count Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_RawIntTCStatus >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_RawIntTCStatus = (DMA0_SECURE_RawIntTCStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMA0_SECURE_RawIntErrorStatus  ----------------------
// SVD Line: 1227

unsigned int DMA0_SECURE_RawIntErrorStatus __AT (0x50110018);



// ----------------------  Register Item: DMA0_SECURE_RawIntErrorStatus  --------------------------
// SVD Line: 1227

//  <item> SFDITEM_REG__DMA0_SECURE_RawIntErrorStatus
//    <name> RawIntErrorStatus </name>
//    <i> [Bits 31..0] RO (@ 0x50110018) Raw Error Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_RawIntErrorStatus >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_RawIntErrorStatus = (DMA0_SECURE_RawIntErrorStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA0_SECURE_EnbldChns  --------------------------
// SVD Line: 1232

unsigned int DMA0_SECURE_EnbldChns __AT (0x5011001C);



// --------------------------  Register Item: DMA0_SECURE_EnbldChns  ------------------------------
// SVD Line: 1232

//  <item> SFDITEM_REG__DMA0_SECURE_EnbldChns
//    <name> EnbldChns </name>
//    <i> [Bits 31..0] RO (@ 0x5011001C) Enabled Channel Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_EnbldChns >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_EnbldChns = (DMA0_SECURE_EnbldChns & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA0_SECURE_SoftBReq  --------------------------
// SVD Line: 1237

unsigned int DMA0_SECURE_SoftBReq __AT (0x50110020);



// ---------------------------  Register Item: DMA0_SECURE_SoftBReq  ------------------------------
// SVD Line: 1237

//  <item> SFDITEM_REG__DMA0_SECURE_SoftBReq
//    <name> SoftBReq </name>
//    <i> [Bits 31..0] RW (@ 0x50110020) Software Burst Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_SoftBReq >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_SoftBReq = (DMA0_SECURE_SoftBReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA0_SECURE_SoftSReq  --------------------------
// SVD Line: 1242

unsigned int DMA0_SECURE_SoftSReq __AT (0x50110024);



// ---------------------------  Register Item: DMA0_SECURE_SoftSReq  ------------------------------
// SVD Line: 1242

//  <item> SFDITEM_REG__DMA0_SECURE_SoftSReq
//    <name> SoftSReq </name>
//    <i> [Bits 31..0] RW (@ 0x50110024) Software Single Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_SoftSReq >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_SoftSReq = (DMA0_SECURE_SoftSReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA0_SECURE_SoftLBReq  --------------------------
// SVD Line: 1247

unsigned int DMA0_SECURE_SoftLBReq __AT (0x50110028);



// --------------------------  Register Item: DMA0_SECURE_SoftLBReq  ------------------------------
// SVD Line: 1247

//  <item> SFDITEM_REG__DMA0_SECURE_SoftLBReq
//    <name> SoftLBReq </name>
//    <i> [Bits 31..0] RW (@ 0x50110028) Software Last Burst Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_SoftLBReq >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_SoftLBReq = (DMA0_SECURE_SoftLBReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA0_SECURE_SoftLSReq  --------------------------
// SVD Line: 1252

unsigned int DMA0_SECURE_SoftLSReq __AT (0x5011002C);



// --------------------------  Register Item: DMA0_SECURE_SoftLSReq  ------------------------------
// SVD Line: 1252

//  <item> SFDITEM_REG__DMA0_SECURE_SoftLSReq
//    <name> SoftLSReq </name>
//    <i> [Bits 31..0] RW (@ 0x5011002C) Software Last Single Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_SoftLSReq >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_SoftLSReq = (DMA0_SECURE_SoftLSReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: DMA0_SECURE_Configuration  ------------------------
// SVD Line: 1257

unsigned int DMA0_SECURE_Configuration __AT (0x50110030);



// ------------------------  Register Item: DMA0_SECURE_Configuration  ----------------------------
// SVD Line: 1257

//  <item> SFDITEM_REG__DMA0_SECURE_Configuration
//    <name> Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x50110030) Configuration Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_Configuration >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_Configuration = (DMA0_SECURE_Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA0_SECURE_Sync  ----------------------------
// SVD Line: 1262

unsigned int DMA0_SECURE_Sync __AT (0x50110034);



// -----------------------------  Register Item: DMA0_SECURE_Sync  --------------------------------
// SVD Line: 1262

//  <item> SFDITEM_REG__DMA0_SECURE_Sync
//    <name> Sync </name>
//    <i> [Bits 31..0] RW (@ 0x50110034) Synchronization Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_Sync >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_Sync = (DMA0_SECURE_Sync & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA0_SECURE_C0SrcAddr  --------------------------
// SVD Line: 1267

unsigned int DMA0_SECURE_C0SrcAddr __AT (0x50110100);



// --------------------------  Register Item: DMA0_SECURE_C0SrcAddr  ------------------------------
// SVD Line: 1267

//  <item> SFDITEM_REG__DMA0_SECURE_C0SrcAddr
//    <name> C0SrcAddr </name>
//    <i> [Bits 31..0] RW (@ 0x50110100) Channel Source Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_C0SrcAddr >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_C0SrcAddr = (DMA0_SECURE_C0SrcAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA0_SECURE_C0DestAddr  -------------------------
// SVD Line: 1272

unsigned int DMA0_SECURE_C0DestAddr __AT (0x50110104);



// --------------------------  Register Item: DMA0_SECURE_C0DestAddr  -----------------------------
// SVD Line: 1272

//  <item> SFDITEM_REG__DMA0_SECURE_C0DestAddr
//    <name> C0DestAddr </name>
//    <i> [Bits 31..0] RW (@ 0x50110104) Channel Destination Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_C0DestAddr >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_C0DestAddr = (DMA0_SECURE_C0DestAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA0_SECURE_C0LLI  ----------------------------
// SVD Line: 1277

unsigned int DMA0_SECURE_C0LLI __AT (0x50110108);



// ----------------------------  Register Item: DMA0_SECURE_C0LLI  --------------------------------
// SVD Line: 1277

//  <item> SFDITEM_REG__DMA0_SECURE_C0LLI
//    <name> C0LLI </name>
//    <i> [Bits 31..0] RW (@ 0x50110108) Channel Linked List Item Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_C0LLI >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_C0LLI = (DMA0_SECURE_C0LLI & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA0_SECURE_C0Control  --------------------------
// SVD Line: 1282

unsigned int DMA0_SECURE_C0Control __AT (0x5011010C);



// --------------------------  Register Item: DMA0_SECURE_C0Control  ------------------------------
// SVD Line: 1282

//  <item> SFDITEM_REG__DMA0_SECURE_C0Control
//    <name> C0Control </name>
//    <i> [Bits 31..0] RW (@ 0x5011010C) Channel Control Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_C0Control >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_C0Control = (DMA0_SECURE_C0Control & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMA0_SECURE_C0Configuration  -----------------------
// SVD Line: 1287

unsigned int DMA0_SECURE_C0Configuration __AT (0x50110110);



// -----------------------  Register Item: DMA0_SECURE_C0Configuration  ---------------------------
// SVD Line: 1287

//  <item> SFDITEM_REG__DMA0_SECURE_C0Configuration
//    <name> C0Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x50110110) Channel Configuration Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_C0Configuration >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_C0Configuration = (DMA0_SECURE_C0Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA0_SECURE_C1SrcAddr  --------------------------
// SVD Line: 1292

unsigned int DMA0_SECURE_C1SrcAddr __AT (0x50110120);



// --------------------------  Register Item: DMA0_SECURE_C1SrcAddr  ------------------------------
// SVD Line: 1292

//  <item> SFDITEM_REG__DMA0_SECURE_C1SrcAddr
//    <name> C1SrcAddr </name>
//    <i> [Bits 31..0] RW (@ 0x50110120) Channel Source Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_C1SrcAddr >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_C1SrcAddr = (DMA0_SECURE_C1SrcAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA0_SECURE_C1DestAddr  -------------------------
// SVD Line: 1297

unsigned int DMA0_SECURE_C1DestAddr __AT (0x50110124);



// --------------------------  Register Item: DMA0_SECURE_C1DestAddr  -----------------------------
// SVD Line: 1297

//  <item> SFDITEM_REG__DMA0_SECURE_C1DestAddr
//    <name> C1DestAddr </name>
//    <i> [Bits 31..0] RW (@ 0x50110124) Channel Destination Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_C1DestAddr >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_C1DestAddr = (DMA0_SECURE_C1DestAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA0_SECURE_C1LLI  ----------------------------
// SVD Line: 1302

unsigned int DMA0_SECURE_C1LLI __AT (0x50110128);



// ----------------------------  Register Item: DMA0_SECURE_C1LLI  --------------------------------
// SVD Line: 1302

//  <item> SFDITEM_REG__DMA0_SECURE_C1LLI
//    <name> C1LLI </name>
//    <i> [Bits 31..0] RW (@ 0x50110128) Channel Linked List Item Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_C1LLI >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_C1LLI = (DMA0_SECURE_C1LLI & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA0_SECURE_C1Control  --------------------------
// SVD Line: 1307

unsigned int DMA0_SECURE_C1Control __AT (0x5011012C);



// --------------------------  Register Item: DMA0_SECURE_C1Control  ------------------------------
// SVD Line: 1307

//  <item> SFDITEM_REG__DMA0_SECURE_C1Control
//    <name> C1Control </name>
//    <i> [Bits 31..0] RW (@ 0x5011012C) Channel Control Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_C1Control >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_C1Control = (DMA0_SECURE_C1Control & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMA0_SECURE_C1Configuration  -----------------------
// SVD Line: 1312

unsigned int DMA0_SECURE_C1Configuration __AT (0x50110130);



// -----------------------  Register Item: DMA0_SECURE_C1Configuration  ---------------------------
// SVD Line: 1312

//  <item> SFDITEM_REG__DMA0_SECURE_C1Configuration
//    <name> C1Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x50110130) Channel Configuration Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_C1Configuration >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_C1Configuration = (DMA0_SECURE_C1Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA0_SECURE_ITCR  ----------------------------
// SVD Line: 1317

unsigned int DMA0_SECURE_ITCR __AT (0x50110500);



// -----------------------------  Register Item: DMA0_SECURE_ITCR  --------------------------------
// SVD Line: 1317

//  <item> SFDITEM_REG__DMA0_SECURE_ITCR
//    <name> ITCR </name>
//    <i> [Bits 31..0] RW (@ 0x50110500) Test Control Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_ITCR >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_ITCR = (DMA0_SECURE_ITCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA0_SECURE_ITOP1  ----------------------------
// SVD Line: 1322

unsigned int DMA0_SECURE_ITOP1 __AT (0x50110504);



// ----------------------------  Register Item: DMA0_SECURE_ITOP1  --------------------------------
// SVD Line: 1322

//  <item> SFDITEM_REG__DMA0_SECURE_ITOP1
//    <name> ITOP1 </name>
//    <i> [Bits 31..0] RW (@ 0x50110504) Integration Test Output Register 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_ITOP1 >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_ITOP1 = (DMA0_SECURE_ITOP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA0_SECURE_ITOP2  ----------------------------
// SVD Line: 1327

unsigned int DMA0_SECURE_ITOP2 __AT (0x50110508);



// ----------------------------  Register Item: DMA0_SECURE_ITOP2  --------------------------------
// SVD Line: 1327

//  <item> SFDITEM_REG__DMA0_SECURE_ITOP2
//    <name> ITOP2 </name>
//    <i> [Bits 31..0] RW (@ 0x50110508) Integration Test Output Register 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_ITOP2 >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_ITOP2 = (DMA0_SECURE_ITOP2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA0_SECURE_ITOP3  ----------------------------
// SVD Line: 1332

unsigned int DMA0_SECURE_ITOP3 __AT (0x5011050C);



// ----------------------------  Register Item: DMA0_SECURE_ITOP3  --------------------------------
// SVD Line: 1332

//  <item> SFDITEM_REG__DMA0_SECURE_ITOP3
//    <name> ITOP3 </name>
//    <i> [Bits 31..0] RW (@ 0x5011050C) Integration Test Output Register 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA0_SECURE_ITOP3 >> 0) & 0xFFFFFFFF), ((DMA0_SECURE_ITOP3 = (DMA0_SECURE_ITOP3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Peripheral View: DMA0_SECURE  ----------------------------------
// SVD Line: 2940

//  <view> DMA0_SECURE
//    <name> DMA0_SECURE </name>
//    <item> SFDITEM_REG__DMA0_SECURE_IntStatus </item>
//    <item> SFDITEM_REG__DMA0_SECURE_IntTCStatus </item>
//    <item> SFDITEM_REG__DMA0_SECURE_IntTCClear </item>
//    <item> SFDITEM_REG__DMA0_SECURE_IntErrorStatus </item>
//    <item> SFDITEM_REG__DMA0_SECURE_IntErrClr </item>
//    <item> SFDITEM_REG__DMA0_SECURE_RawIntTCStatus </item>
//    <item> SFDITEM_REG__DMA0_SECURE_RawIntErrorStatus </item>
//    <item> SFDITEM_REG__DMA0_SECURE_EnbldChns </item>
//    <item> SFDITEM_REG__DMA0_SECURE_SoftBReq </item>
//    <item> SFDITEM_REG__DMA0_SECURE_SoftSReq </item>
//    <item> SFDITEM_REG__DMA0_SECURE_SoftLBReq </item>
//    <item> SFDITEM_REG__DMA0_SECURE_SoftLSReq </item>
//    <item> SFDITEM_REG__DMA0_SECURE_Configuration </item>
//    <item> SFDITEM_REG__DMA0_SECURE_Sync </item>
//    <item> SFDITEM_REG__DMA0_SECURE_C0SrcAddr </item>
//    <item> SFDITEM_REG__DMA0_SECURE_C0DestAddr </item>
//    <item> SFDITEM_REG__DMA0_SECURE_C0LLI </item>
//    <item> SFDITEM_REG__DMA0_SECURE_C0Control </item>
//    <item> SFDITEM_REG__DMA0_SECURE_C0Configuration </item>
//    <item> SFDITEM_REG__DMA0_SECURE_C1SrcAddr </item>
//    <item> SFDITEM_REG__DMA0_SECURE_C1DestAddr </item>
//    <item> SFDITEM_REG__DMA0_SECURE_C1LLI </item>
//    <item> SFDITEM_REG__DMA0_SECURE_C1Control </item>
//    <item> SFDITEM_REG__DMA0_SECURE_C1Configuration </item>
//    <item> SFDITEM_REG__DMA0_SECURE_ITCR </item>
//    <item> SFDITEM_REG__DMA0_SECURE_ITOP1 </item>
//    <item> SFDITEM_REG__DMA0_SECURE_ITOP2 </item>
//    <item> SFDITEM_REG__DMA0_SECURE_ITOP3 </item>
//  </view>
//  


// ----------------------  Register Item Address: DMA1_SECURE_IntStatus  --------------------------
// SVD Line: 1197

unsigned int DMA1_SECURE_IntStatus __AT (0x50111000);



// --------------------------  Register Item: DMA1_SECURE_IntStatus  ------------------------------
// SVD Line: 1197

//  <item> SFDITEM_REG__DMA1_SECURE_IntStatus
//    <name> IntStatus </name>
//    <i> [Bits 31..0] RW (@ 0x50111000) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_IntStatus >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_IntStatus = (DMA1_SECURE_IntStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: DMA1_SECURE_IntTCStatus  -------------------------
// SVD Line: 1202

unsigned int DMA1_SECURE_IntTCStatus __AT (0x50111004);



// -------------------------  Register Item: DMA1_SECURE_IntTCStatus  -----------------------------
// SVD Line: 1202

//  <item> SFDITEM_REG__DMA1_SECURE_IntTCStatus
//    <name> IntTCStatus </name>
//    <i> [Bits 31..0] RO (@ 0x50111004) Interrupt Terminal Count Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_IntTCStatus >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_IntTCStatus = (DMA1_SECURE_IntTCStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA1_SECURE_IntTCClear  -------------------------
// SVD Line: 1207

unsigned int DMA1_SECURE_IntTCClear __AT (0x50111008);



// --------------------------  Register Item: DMA1_SECURE_IntTCClear  -----------------------------
// SVD Line: 1207

//  <item> SFDITEM_REG__DMA1_SECURE_IntTCClear
//    <name> IntTCClear </name>
//    <i> [Bits 31..0] WO (@ 0x50111008) Interrupt Terminal Count Clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_IntTCClear >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_IntTCClear = (DMA1_SECURE_IntTCClear & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: DMA1_SECURE_IntErrorStatus  -----------------------
// SVD Line: 1212

unsigned int DMA1_SECURE_IntErrorStatus __AT (0x5011100C);



// ------------------------  Register Item: DMA1_SECURE_IntErrorStatus  ---------------------------
// SVD Line: 1212

//  <item> SFDITEM_REG__DMA1_SECURE_IntErrorStatus
//    <name> IntErrorStatus </name>
//    <i> [Bits 31..0] RO (@ 0x5011100C) Interrupt Error Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_IntErrorStatus >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_IntErrorStatus = (DMA1_SECURE_IntErrorStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA1_SECURE_IntErrClr  --------------------------
// SVD Line: 1217

unsigned int DMA1_SECURE_IntErrClr __AT (0x50111010);



// --------------------------  Register Item: DMA1_SECURE_IntErrClr  ------------------------------
// SVD Line: 1217

//  <item> SFDITEM_REG__DMA1_SECURE_IntErrClr
//    <name> IntErrClr </name>
//    <i> [Bits 31..0] WO (@ 0x50111010) Interrupt Error Clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_IntErrClr >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_IntErrClr = (DMA1_SECURE_IntErrClr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: DMA1_SECURE_RawIntTCStatus  -----------------------
// SVD Line: 1222

unsigned int DMA1_SECURE_RawIntTCStatus __AT (0x50111014);



// ------------------------  Register Item: DMA1_SECURE_RawIntTCStatus  ---------------------------
// SVD Line: 1222

//  <item> SFDITEM_REG__DMA1_SECURE_RawIntTCStatus
//    <name> RawIntTCStatus </name>
//    <i> [Bits 31..0] RO (@ 0x50111014) Raw Interrupt Terminal Count Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_RawIntTCStatus >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_RawIntTCStatus = (DMA1_SECURE_RawIntTCStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMA1_SECURE_RawIntErrorStatus  ----------------------
// SVD Line: 1227

unsigned int DMA1_SECURE_RawIntErrorStatus __AT (0x50111018);



// ----------------------  Register Item: DMA1_SECURE_RawIntErrorStatus  --------------------------
// SVD Line: 1227

//  <item> SFDITEM_REG__DMA1_SECURE_RawIntErrorStatus
//    <name> RawIntErrorStatus </name>
//    <i> [Bits 31..0] RO (@ 0x50111018) Raw Error Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_RawIntErrorStatus >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_RawIntErrorStatus = (DMA1_SECURE_RawIntErrorStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA1_SECURE_EnbldChns  --------------------------
// SVD Line: 1232

unsigned int DMA1_SECURE_EnbldChns __AT (0x5011101C);



// --------------------------  Register Item: DMA1_SECURE_EnbldChns  ------------------------------
// SVD Line: 1232

//  <item> SFDITEM_REG__DMA1_SECURE_EnbldChns
//    <name> EnbldChns </name>
//    <i> [Bits 31..0] RO (@ 0x5011101C) Enabled Channel Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_EnbldChns >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_EnbldChns = (DMA1_SECURE_EnbldChns & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA1_SECURE_SoftBReq  --------------------------
// SVD Line: 1237

unsigned int DMA1_SECURE_SoftBReq __AT (0x50111020);



// ---------------------------  Register Item: DMA1_SECURE_SoftBReq  ------------------------------
// SVD Line: 1237

//  <item> SFDITEM_REG__DMA1_SECURE_SoftBReq
//    <name> SoftBReq </name>
//    <i> [Bits 31..0] RW (@ 0x50111020) Software Burst Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_SoftBReq >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_SoftBReq = (DMA1_SECURE_SoftBReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA1_SECURE_SoftSReq  --------------------------
// SVD Line: 1242

unsigned int DMA1_SECURE_SoftSReq __AT (0x50111024);



// ---------------------------  Register Item: DMA1_SECURE_SoftSReq  ------------------------------
// SVD Line: 1242

//  <item> SFDITEM_REG__DMA1_SECURE_SoftSReq
//    <name> SoftSReq </name>
//    <i> [Bits 31..0] RW (@ 0x50111024) Software Single Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_SoftSReq >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_SoftSReq = (DMA1_SECURE_SoftSReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA1_SECURE_SoftLBReq  --------------------------
// SVD Line: 1247

unsigned int DMA1_SECURE_SoftLBReq __AT (0x50111028);



// --------------------------  Register Item: DMA1_SECURE_SoftLBReq  ------------------------------
// SVD Line: 1247

//  <item> SFDITEM_REG__DMA1_SECURE_SoftLBReq
//    <name> SoftLBReq </name>
//    <i> [Bits 31..0] RW (@ 0x50111028) Software Last Burst Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_SoftLBReq >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_SoftLBReq = (DMA1_SECURE_SoftLBReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA1_SECURE_SoftLSReq  --------------------------
// SVD Line: 1252

unsigned int DMA1_SECURE_SoftLSReq __AT (0x5011102C);



// --------------------------  Register Item: DMA1_SECURE_SoftLSReq  ------------------------------
// SVD Line: 1252

//  <item> SFDITEM_REG__DMA1_SECURE_SoftLSReq
//    <name> SoftLSReq </name>
//    <i> [Bits 31..0] RW (@ 0x5011102C) Software Last Single Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_SoftLSReq >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_SoftLSReq = (DMA1_SECURE_SoftLSReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: DMA1_SECURE_Configuration  ------------------------
// SVD Line: 1257

unsigned int DMA1_SECURE_Configuration __AT (0x50111030);



// ------------------------  Register Item: DMA1_SECURE_Configuration  ----------------------------
// SVD Line: 1257

//  <item> SFDITEM_REG__DMA1_SECURE_Configuration
//    <name> Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x50111030) Configuration Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_Configuration >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_Configuration = (DMA1_SECURE_Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA1_SECURE_Sync  ----------------------------
// SVD Line: 1262

unsigned int DMA1_SECURE_Sync __AT (0x50111034);



// -----------------------------  Register Item: DMA1_SECURE_Sync  --------------------------------
// SVD Line: 1262

//  <item> SFDITEM_REG__DMA1_SECURE_Sync
//    <name> Sync </name>
//    <i> [Bits 31..0] RW (@ 0x50111034) Synchronization Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_Sync >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_Sync = (DMA1_SECURE_Sync & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA1_SECURE_C0SrcAddr  --------------------------
// SVD Line: 1267

unsigned int DMA1_SECURE_C0SrcAddr __AT (0x50111100);



// --------------------------  Register Item: DMA1_SECURE_C0SrcAddr  ------------------------------
// SVD Line: 1267

//  <item> SFDITEM_REG__DMA1_SECURE_C0SrcAddr
//    <name> C0SrcAddr </name>
//    <i> [Bits 31..0] RW (@ 0x50111100) Channel Source Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_C0SrcAddr >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_C0SrcAddr = (DMA1_SECURE_C0SrcAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA1_SECURE_C0DestAddr  -------------------------
// SVD Line: 1272

unsigned int DMA1_SECURE_C0DestAddr __AT (0x50111104);



// --------------------------  Register Item: DMA1_SECURE_C0DestAddr  -----------------------------
// SVD Line: 1272

//  <item> SFDITEM_REG__DMA1_SECURE_C0DestAddr
//    <name> C0DestAddr </name>
//    <i> [Bits 31..0] RW (@ 0x50111104) Channel Destination Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_C0DestAddr >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_C0DestAddr = (DMA1_SECURE_C0DestAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA1_SECURE_C0LLI  ----------------------------
// SVD Line: 1277

unsigned int DMA1_SECURE_C0LLI __AT (0x50111108);



// ----------------------------  Register Item: DMA1_SECURE_C0LLI  --------------------------------
// SVD Line: 1277

//  <item> SFDITEM_REG__DMA1_SECURE_C0LLI
//    <name> C0LLI </name>
//    <i> [Bits 31..0] RW (@ 0x50111108) Channel Linked List Item Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_C0LLI >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_C0LLI = (DMA1_SECURE_C0LLI & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA1_SECURE_C0Control  --------------------------
// SVD Line: 1282

unsigned int DMA1_SECURE_C0Control __AT (0x5011110C);



// --------------------------  Register Item: DMA1_SECURE_C0Control  ------------------------------
// SVD Line: 1282

//  <item> SFDITEM_REG__DMA1_SECURE_C0Control
//    <name> C0Control </name>
//    <i> [Bits 31..0] RW (@ 0x5011110C) Channel Control Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_C0Control >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_C0Control = (DMA1_SECURE_C0Control & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMA1_SECURE_C0Configuration  -----------------------
// SVD Line: 1287

unsigned int DMA1_SECURE_C0Configuration __AT (0x50111110);



// -----------------------  Register Item: DMA1_SECURE_C0Configuration  ---------------------------
// SVD Line: 1287

//  <item> SFDITEM_REG__DMA1_SECURE_C0Configuration
//    <name> C0Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x50111110) Channel Configuration Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_C0Configuration >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_C0Configuration = (DMA1_SECURE_C0Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA1_SECURE_C1SrcAddr  --------------------------
// SVD Line: 1292

unsigned int DMA1_SECURE_C1SrcAddr __AT (0x50111120);



// --------------------------  Register Item: DMA1_SECURE_C1SrcAddr  ------------------------------
// SVD Line: 1292

//  <item> SFDITEM_REG__DMA1_SECURE_C1SrcAddr
//    <name> C1SrcAddr </name>
//    <i> [Bits 31..0] RW (@ 0x50111120) Channel Source Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_C1SrcAddr >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_C1SrcAddr = (DMA1_SECURE_C1SrcAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA1_SECURE_C1DestAddr  -------------------------
// SVD Line: 1297

unsigned int DMA1_SECURE_C1DestAddr __AT (0x50111124);



// --------------------------  Register Item: DMA1_SECURE_C1DestAddr  -----------------------------
// SVD Line: 1297

//  <item> SFDITEM_REG__DMA1_SECURE_C1DestAddr
//    <name> C1DestAddr </name>
//    <i> [Bits 31..0] RW (@ 0x50111124) Channel Destination Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_C1DestAddr >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_C1DestAddr = (DMA1_SECURE_C1DestAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA1_SECURE_C1LLI  ----------------------------
// SVD Line: 1302

unsigned int DMA1_SECURE_C1LLI __AT (0x50111128);



// ----------------------------  Register Item: DMA1_SECURE_C1LLI  --------------------------------
// SVD Line: 1302

//  <item> SFDITEM_REG__DMA1_SECURE_C1LLI
//    <name> C1LLI </name>
//    <i> [Bits 31..0] RW (@ 0x50111128) Channel Linked List Item Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_C1LLI >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_C1LLI = (DMA1_SECURE_C1LLI & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA1_SECURE_C1Control  --------------------------
// SVD Line: 1307

unsigned int DMA1_SECURE_C1Control __AT (0x5011112C);



// --------------------------  Register Item: DMA1_SECURE_C1Control  ------------------------------
// SVD Line: 1307

//  <item> SFDITEM_REG__DMA1_SECURE_C1Control
//    <name> C1Control </name>
//    <i> [Bits 31..0] RW (@ 0x5011112C) Channel Control Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_C1Control >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_C1Control = (DMA1_SECURE_C1Control & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMA1_SECURE_C1Configuration  -----------------------
// SVD Line: 1312

unsigned int DMA1_SECURE_C1Configuration __AT (0x50111130);



// -----------------------  Register Item: DMA1_SECURE_C1Configuration  ---------------------------
// SVD Line: 1312

//  <item> SFDITEM_REG__DMA1_SECURE_C1Configuration
//    <name> C1Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x50111130) Channel Configuration Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_C1Configuration >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_C1Configuration = (DMA1_SECURE_C1Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA1_SECURE_ITCR  ----------------------------
// SVD Line: 1317

unsigned int DMA1_SECURE_ITCR __AT (0x50111500);



// -----------------------------  Register Item: DMA1_SECURE_ITCR  --------------------------------
// SVD Line: 1317

//  <item> SFDITEM_REG__DMA1_SECURE_ITCR
//    <name> ITCR </name>
//    <i> [Bits 31..0] RW (@ 0x50111500) Test Control Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_ITCR >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_ITCR = (DMA1_SECURE_ITCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA1_SECURE_ITOP1  ----------------------------
// SVD Line: 1322

unsigned int DMA1_SECURE_ITOP1 __AT (0x50111504);



// ----------------------------  Register Item: DMA1_SECURE_ITOP1  --------------------------------
// SVD Line: 1322

//  <item> SFDITEM_REG__DMA1_SECURE_ITOP1
//    <name> ITOP1 </name>
//    <i> [Bits 31..0] RW (@ 0x50111504) Integration Test Output Register 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_ITOP1 >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_ITOP1 = (DMA1_SECURE_ITOP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA1_SECURE_ITOP2  ----------------------------
// SVD Line: 1327

unsigned int DMA1_SECURE_ITOP2 __AT (0x50111508);



// ----------------------------  Register Item: DMA1_SECURE_ITOP2  --------------------------------
// SVD Line: 1327

//  <item> SFDITEM_REG__DMA1_SECURE_ITOP2
//    <name> ITOP2 </name>
//    <i> [Bits 31..0] RW (@ 0x50111508) Integration Test Output Register 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_ITOP2 >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_ITOP2 = (DMA1_SECURE_ITOP2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA1_SECURE_ITOP3  ----------------------------
// SVD Line: 1332

unsigned int DMA1_SECURE_ITOP3 __AT (0x5011150C);



// ----------------------------  Register Item: DMA1_SECURE_ITOP3  --------------------------------
// SVD Line: 1332

//  <item> SFDITEM_REG__DMA1_SECURE_ITOP3
//    <name> ITOP3 </name>
//    <i> [Bits 31..0] RW (@ 0x5011150C) Integration Test Output Register 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA1_SECURE_ITOP3 >> 0) & 0xFFFFFFFF), ((DMA1_SECURE_ITOP3 = (DMA1_SECURE_ITOP3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Peripheral View: DMA1_SECURE  ----------------------------------
// SVD Line: 2948

//  <view> DMA1_SECURE
//    <name> DMA1_SECURE </name>
//    <item> SFDITEM_REG__DMA1_SECURE_IntStatus </item>
//    <item> SFDITEM_REG__DMA1_SECURE_IntTCStatus </item>
//    <item> SFDITEM_REG__DMA1_SECURE_IntTCClear </item>
//    <item> SFDITEM_REG__DMA1_SECURE_IntErrorStatus </item>
//    <item> SFDITEM_REG__DMA1_SECURE_IntErrClr </item>
//    <item> SFDITEM_REG__DMA1_SECURE_RawIntTCStatus </item>
//    <item> SFDITEM_REG__DMA1_SECURE_RawIntErrorStatus </item>
//    <item> SFDITEM_REG__DMA1_SECURE_EnbldChns </item>
//    <item> SFDITEM_REG__DMA1_SECURE_SoftBReq </item>
//    <item> SFDITEM_REG__DMA1_SECURE_SoftSReq </item>
//    <item> SFDITEM_REG__DMA1_SECURE_SoftLBReq </item>
//    <item> SFDITEM_REG__DMA1_SECURE_SoftLSReq </item>
//    <item> SFDITEM_REG__DMA1_SECURE_Configuration </item>
//    <item> SFDITEM_REG__DMA1_SECURE_Sync </item>
//    <item> SFDITEM_REG__DMA1_SECURE_C0SrcAddr </item>
//    <item> SFDITEM_REG__DMA1_SECURE_C0DestAddr </item>
//    <item> SFDITEM_REG__DMA1_SECURE_C0LLI </item>
//    <item> SFDITEM_REG__DMA1_SECURE_C0Control </item>
//    <item> SFDITEM_REG__DMA1_SECURE_C0Configuration </item>
//    <item> SFDITEM_REG__DMA1_SECURE_C1SrcAddr </item>
//    <item> SFDITEM_REG__DMA1_SECURE_C1DestAddr </item>
//    <item> SFDITEM_REG__DMA1_SECURE_C1LLI </item>
//    <item> SFDITEM_REG__DMA1_SECURE_C1Control </item>
//    <item> SFDITEM_REG__DMA1_SECURE_C1Configuration </item>
//    <item> SFDITEM_REG__DMA1_SECURE_ITCR </item>
//    <item> SFDITEM_REG__DMA1_SECURE_ITOP1 </item>
//    <item> SFDITEM_REG__DMA1_SECURE_ITOP2 </item>
//    <item> SFDITEM_REG__DMA1_SECURE_ITOP3 </item>
//  </view>
//  


// ----------------------  Register Item Address: DMA2_SECURE_IntStatus  --------------------------
// SVD Line: 1197

unsigned int DMA2_SECURE_IntStatus __AT (0x50112000);



// --------------------------  Register Item: DMA2_SECURE_IntStatus  ------------------------------
// SVD Line: 1197

//  <item> SFDITEM_REG__DMA2_SECURE_IntStatus
//    <name> IntStatus </name>
//    <i> [Bits 31..0] RW (@ 0x50112000) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_IntStatus >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_IntStatus = (DMA2_SECURE_IntStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: DMA2_SECURE_IntTCStatus  -------------------------
// SVD Line: 1202

unsigned int DMA2_SECURE_IntTCStatus __AT (0x50112004);



// -------------------------  Register Item: DMA2_SECURE_IntTCStatus  -----------------------------
// SVD Line: 1202

//  <item> SFDITEM_REG__DMA2_SECURE_IntTCStatus
//    <name> IntTCStatus </name>
//    <i> [Bits 31..0] RO (@ 0x50112004) Interrupt Terminal Count Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_IntTCStatus >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_IntTCStatus = (DMA2_SECURE_IntTCStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA2_SECURE_IntTCClear  -------------------------
// SVD Line: 1207

unsigned int DMA2_SECURE_IntTCClear __AT (0x50112008);



// --------------------------  Register Item: DMA2_SECURE_IntTCClear  -----------------------------
// SVD Line: 1207

//  <item> SFDITEM_REG__DMA2_SECURE_IntTCClear
//    <name> IntTCClear </name>
//    <i> [Bits 31..0] WO (@ 0x50112008) Interrupt Terminal Count Clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_IntTCClear >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_IntTCClear = (DMA2_SECURE_IntTCClear & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: DMA2_SECURE_IntErrorStatus  -----------------------
// SVD Line: 1212

unsigned int DMA2_SECURE_IntErrorStatus __AT (0x5011200C);



// ------------------------  Register Item: DMA2_SECURE_IntErrorStatus  ---------------------------
// SVD Line: 1212

//  <item> SFDITEM_REG__DMA2_SECURE_IntErrorStatus
//    <name> IntErrorStatus </name>
//    <i> [Bits 31..0] RO (@ 0x5011200C) Interrupt Error Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_IntErrorStatus >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_IntErrorStatus = (DMA2_SECURE_IntErrorStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA2_SECURE_IntErrClr  --------------------------
// SVD Line: 1217

unsigned int DMA2_SECURE_IntErrClr __AT (0x50112010);



// --------------------------  Register Item: DMA2_SECURE_IntErrClr  ------------------------------
// SVD Line: 1217

//  <item> SFDITEM_REG__DMA2_SECURE_IntErrClr
//    <name> IntErrClr </name>
//    <i> [Bits 31..0] WO (@ 0x50112010) Interrupt Error Clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_IntErrClr >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_IntErrClr = (DMA2_SECURE_IntErrClr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: DMA2_SECURE_RawIntTCStatus  -----------------------
// SVD Line: 1222

unsigned int DMA2_SECURE_RawIntTCStatus __AT (0x50112014);



// ------------------------  Register Item: DMA2_SECURE_RawIntTCStatus  ---------------------------
// SVD Line: 1222

//  <item> SFDITEM_REG__DMA2_SECURE_RawIntTCStatus
//    <name> RawIntTCStatus </name>
//    <i> [Bits 31..0] RO (@ 0x50112014) Raw Interrupt Terminal Count Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_RawIntTCStatus >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_RawIntTCStatus = (DMA2_SECURE_RawIntTCStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMA2_SECURE_RawIntErrorStatus  ----------------------
// SVD Line: 1227

unsigned int DMA2_SECURE_RawIntErrorStatus __AT (0x50112018);



// ----------------------  Register Item: DMA2_SECURE_RawIntErrorStatus  --------------------------
// SVD Line: 1227

//  <item> SFDITEM_REG__DMA2_SECURE_RawIntErrorStatus
//    <name> RawIntErrorStatus </name>
//    <i> [Bits 31..0] RO (@ 0x50112018) Raw Error Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_RawIntErrorStatus >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_RawIntErrorStatus = (DMA2_SECURE_RawIntErrorStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA2_SECURE_EnbldChns  --------------------------
// SVD Line: 1232

unsigned int DMA2_SECURE_EnbldChns __AT (0x5011201C);



// --------------------------  Register Item: DMA2_SECURE_EnbldChns  ------------------------------
// SVD Line: 1232

//  <item> SFDITEM_REG__DMA2_SECURE_EnbldChns
//    <name> EnbldChns </name>
//    <i> [Bits 31..0] RO (@ 0x5011201C) Enabled Channel Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_EnbldChns >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_EnbldChns = (DMA2_SECURE_EnbldChns & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA2_SECURE_SoftBReq  --------------------------
// SVD Line: 1237

unsigned int DMA2_SECURE_SoftBReq __AT (0x50112020);



// ---------------------------  Register Item: DMA2_SECURE_SoftBReq  ------------------------------
// SVD Line: 1237

//  <item> SFDITEM_REG__DMA2_SECURE_SoftBReq
//    <name> SoftBReq </name>
//    <i> [Bits 31..0] RW (@ 0x50112020) Software Burst Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_SoftBReq >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_SoftBReq = (DMA2_SECURE_SoftBReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA2_SECURE_SoftSReq  --------------------------
// SVD Line: 1242

unsigned int DMA2_SECURE_SoftSReq __AT (0x50112024);



// ---------------------------  Register Item: DMA2_SECURE_SoftSReq  ------------------------------
// SVD Line: 1242

//  <item> SFDITEM_REG__DMA2_SECURE_SoftSReq
//    <name> SoftSReq </name>
//    <i> [Bits 31..0] RW (@ 0x50112024) Software Single Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_SoftSReq >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_SoftSReq = (DMA2_SECURE_SoftSReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA2_SECURE_SoftLBReq  --------------------------
// SVD Line: 1247

unsigned int DMA2_SECURE_SoftLBReq __AT (0x50112028);



// --------------------------  Register Item: DMA2_SECURE_SoftLBReq  ------------------------------
// SVD Line: 1247

//  <item> SFDITEM_REG__DMA2_SECURE_SoftLBReq
//    <name> SoftLBReq </name>
//    <i> [Bits 31..0] RW (@ 0x50112028) Software Last Burst Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_SoftLBReq >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_SoftLBReq = (DMA2_SECURE_SoftLBReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA2_SECURE_SoftLSReq  --------------------------
// SVD Line: 1252

unsigned int DMA2_SECURE_SoftLSReq __AT (0x5011202C);



// --------------------------  Register Item: DMA2_SECURE_SoftLSReq  ------------------------------
// SVD Line: 1252

//  <item> SFDITEM_REG__DMA2_SECURE_SoftLSReq
//    <name> SoftLSReq </name>
//    <i> [Bits 31..0] RW (@ 0x5011202C) Software Last Single Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_SoftLSReq >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_SoftLSReq = (DMA2_SECURE_SoftLSReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: DMA2_SECURE_Configuration  ------------------------
// SVD Line: 1257

unsigned int DMA2_SECURE_Configuration __AT (0x50112030);



// ------------------------  Register Item: DMA2_SECURE_Configuration  ----------------------------
// SVD Line: 1257

//  <item> SFDITEM_REG__DMA2_SECURE_Configuration
//    <name> Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x50112030) Configuration Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_Configuration >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_Configuration = (DMA2_SECURE_Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA2_SECURE_Sync  ----------------------------
// SVD Line: 1262

unsigned int DMA2_SECURE_Sync __AT (0x50112034);



// -----------------------------  Register Item: DMA2_SECURE_Sync  --------------------------------
// SVD Line: 1262

//  <item> SFDITEM_REG__DMA2_SECURE_Sync
//    <name> Sync </name>
//    <i> [Bits 31..0] RW (@ 0x50112034) Synchronization Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_Sync >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_Sync = (DMA2_SECURE_Sync & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA2_SECURE_C0SrcAddr  --------------------------
// SVD Line: 1267

unsigned int DMA2_SECURE_C0SrcAddr __AT (0x50112100);



// --------------------------  Register Item: DMA2_SECURE_C0SrcAddr  ------------------------------
// SVD Line: 1267

//  <item> SFDITEM_REG__DMA2_SECURE_C0SrcAddr
//    <name> C0SrcAddr </name>
//    <i> [Bits 31..0] RW (@ 0x50112100) Channel Source Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_C0SrcAddr >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_C0SrcAddr = (DMA2_SECURE_C0SrcAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA2_SECURE_C0DestAddr  -------------------------
// SVD Line: 1272

unsigned int DMA2_SECURE_C0DestAddr __AT (0x50112104);



// --------------------------  Register Item: DMA2_SECURE_C0DestAddr  -----------------------------
// SVD Line: 1272

//  <item> SFDITEM_REG__DMA2_SECURE_C0DestAddr
//    <name> C0DestAddr </name>
//    <i> [Bits 31..0] RW (@ 0x50112104) Channel Destination Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_C0DestAddr >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_C0DestAddr = (DMA2_SECURE_C0DestAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA2_SECURE_C0LLI  ----------------------------
// SVD Line: 1277

unsigned int DMA2_SECURE_C0LLI __AT (0x50112108);



// ----------------------------  Register Item: DMA2_SECURE_C0LLI  --------------------------------
// SVD Line: 1277

//  <item> SFDITEM_REG__DMA2_SECURE_C0LLI
//    <name> C0LLI </name>
//    <i> [Bits 31..0] RW (@ 0x50112108) Channel Linked List Item Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_C0LLI >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_C0LLI = (DMA2_SECURE_C0LLI & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA2_SECURE_C0Control  --------------------------
// SVD Line: 1282

unsigned int DMA2_SECURE_C0Control __AT (0x5011210C);



// --------------------------  Register Item: DMA2_SECURE_C0Control  ------------------------------
// SVD Line: 1282

//  <item> SFDITEM_REG__DMA2_SECURE_C0Control
//    <name> C0Control </name>
//    <i> [Bits 31..0] RW (@ 0x5011210C) Channel Control Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_C0Control >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_C0Control = (DMA2_SECURE_C0Control & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMA2_SECURE_C0Configuration  -----------------------
// SVD Line: 1287

unsigned int DMA2_SECURE_C0Configuration __AT (0x50112110);



// -----------------------  Register Item: DMA2_SECURE_C0Configuration  ---------------------------
// SVD Line: 1287

//  <item> SFDITEM_REG__DMA2_SECURE_C0Configuration
//    <name> C0Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x50112110) Channel Configuration Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_C0Configuration >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_C0Configuration = (DMA2_SECURE_C0Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA2_SECURE_C1SrcAddr  --------------------------
// SVD Line: 1292

unsigned int DMA2_SECURE_C1SrcAddr __AT (0x50112120);



// --------------------------  Register Item: DMA2_SECURE_C1SrcAddr  ------------------------------
// SVD Line: 1292

//  <item> SFDITEM_REG__DMA2_SECURE_C1SrcAddr
//    <name> C1SrcAddr </name>
//    <i> [Bits 31..0] RW (@ 0x50112120) Channel Source Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_C1SrcAddr >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_C1SrcAddr = (DMA2_SECURE_C1SrcAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA2_SECURE_C1DestAddr  -------------------------
// SVD Line: 1297

unsigned int DMA2_SECURE_C1DestAddr __AT (0x50112124);



// --------------------------  Register Item: DMA2_SECURE_C1DestAddr  -----------------------------
// SVD Line: 1297

//  <item> SFDITEM_REG__DMA2_SECURE_C1DestAddr
//    <name> C1DestAddr </name>
//    <i> [Bits 31..0] RW (@ 0x50112124) Channel Destination Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_C1DestAddr >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_C1DestAddr = (DMA2_SECURE_C1DestAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA2_SECURE_C1LLI  ----------------------------
// SVD Line: 1302

unsigned int DMA2_SECURE_C1LLI __AT (0x50112128);



// ----------------------------  Register Item: DMA2_SECURE_C1LLI  --------------------------------
// SVD Line: 1302

//  <item> SFDITEM_REG__DMA2_SECURE_C1LLI
//    <name> C1LLI </name>
//    <i> [Bits 31..0] RW (@ 0x50112128) Channel Linked List Item Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_C1LLI >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_C1LLI = (DMA2_SECURE_C1LLI & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA2_SECURE_C1Control  --------------------------
// SVD Line: 1307

unsigned int DMA2_SECURE_C1Control __AT (0x5011212C);



// --------------------------  Register Item: DMA2_SECURE_C1Control  ------------------------------
// SVD Line: 1307

//  <item> SFDITEM_REG__DMA2_SECURE_C1Control
//    <name> C1Control </name>
//    <i> [Bits 31..0] RW (@ 0x5011212C) Channel Control Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_C1Control >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_C1Control = (DMA2_SECURE_C1Control & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMA2_SECURE_C1Configuration  -----------------------
// SVD Line: 1312

unsigned int DMA2_SECURE_C1Configuration __AT (0x50112130);



// -----------------------  Register Item: DMA2_SECURE_C1Configuration  ---------------------------
// SVD Line: 1312

//  <item> SFDITEM_REG__DMA2_SECURE_C1Configuration
//    <name> C1Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x50112130) Channel Configuration Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_C1Configuration >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_C1Configuration = (DMA2_SECURE_C1Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA2_SECURE_ITCR  ----------------------------
// SVD Line: 1317

unsigned int DMA2_SECURE_ITCR __AT (0x50112500);



// -----------------------------  Register Item: DMA2_SECURE_ITCR  --------------------------------
// SVD Line: 1317

//  <item> SFDITEM_REG__DMA2_SECURE_ITCR
//    <name> ITCR </name>
//    <i> [Bits 31..0] RW (@ 0x50112500) Test Control Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_ITCR >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_ITCR = (DMA2_SECURE_ITCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA2_SECURE_ITOP1  ----------------------------
// SVD Line: 1322

unsigned int DMA2_SECURE_ITOP1 __AT (0x50112504);



// ----------------------------  Register Item: DMA2_SECURE_ITOP1  --------------------------------
// SVD Line: 1322

//  <item> SFDITEM_REG__DMA2_SECURE_ITOP1
//    <name> ITOP1 </name>
//    <i> [Bits 31..0] RW (@ 0x50112504) Integration Test Output Register 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_ITOP1 >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_ITOP1 = (DMA2_SECURE_ITOP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA2_SECURE_ITOP2  ----------------------------
// SVD Line: 1327

unsigned int DMA2_SECURE_ITOP2 __AT (0x50112508);



// ----------------------------  Register Item: DMA2_SECURE_ITOP2  --------------------------------
// SVD Line: 1327

//  <item> SFDITEM_REG__DMA2_SECURE_ITOP2
//    <name> ITOP2 </name>
//    <i> [Bits 31..0] RW (@ 0x50112508) Integration Test Output Register 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_ITOP2 >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_ITOP2 = (DMA2_SECURE_ITOP2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA2_SECURE_ITOP3  ----------------------------
// SVD Line: 1332

unsigned int DMA2_SECURE_ITOP3 __AT (0x5011250C);



// ----------------------------  Register Item: DMA2_SECURE_ITOP3  --------------------------------
// SVD Line: 1332

//  <item> SFDITEM_REG__DMA2_SECURE_ITOP3
//    <name> ITOP3 </name>
//    <i> [Bits 31..0] RW (@ 0x5011250C) Integration Test Output Register 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA2_SECURE_ITOP3 >> 0) & 0xFFFFFFFF), ((DMA2_SECURE_ITOP3 = (DMA2_SECURE_ITOP3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Peripheral View: DMA2_SECURE  ----------------------------------
// SVD Line: 2956

//  <view> DMA2_SECURE
//    <name> DMA2_SECURE </name>
//    <item> SFDITEM_REG__DMA2_SECURE_IntStatus </item>
//    <item> SFDITEM_REG__DMA2_SECURE_IntTCStatus </item>
//    <item> SFDITEM_REG__DMA2_SECURE_IntTCClear </item>
//    <item> SFDITEM_REG__DMA2_SECURE_IntErrorStatus </item>
//    <item> SFDITEM_REG__DMA2_SECURE_IntErrClr </item>
//    <item> SFDITEM_REG__DMA2_SECURE_RawIntTCStatus </item>
//    <item> SFDITEM_REG__DMA2_SECURE_RawIntErrorStatus </item>
//    <item> SFDITEM_REG__DMA2_SECURE_EnbldChns </item>
//    <item> SFDITEM_REG__DMA2_SECURE_SoftBReq </item>
//    <item> SFDITEM_REG__DMA2_SECURE_SoftSReq </item>
//    <item> SFDITEM_REG__DMA2_SECURE_SoftLBReq </item>
//    <item> SFDITEM_REG__DMA2_SECURE_SoftLSReq </item>
//    <item> SFDITEM_REG__DMA2_SECURE_Configuration </item>
//    <item> SFDITEM_REG__DMA2_SECURE_Sync </item>
//    <item> SFDITEM_REG__DMA2_SECURE_C0SrcAddr </item>
//    <item> SFDITEM_REG__DMA2_SECURE_C0DestAddr </item>
//    <item> SFDITEM_REG__DMA2_SECURE_C0LLI </item>
//    <item> SFDITEM_REG__DMA2_SECURE_C0Control </item>
//    <item> SFDITEM_REG__DMA2_SECURE_C0Configuration </item>
//    <item> SFDITEM_REG__DMA2_SECURE_C1SrcAddr </item>
//    <item> SFDITEM_REG__DMA2_SECURE_C1DestAddr </item>
//    <item> SFDITEM_REG__DMA2_SECURE_C1LLI </item>
//    <item> SFDITEM_REG__DMA2_SECURE_C1Control </item>
//    <item> SFDITEM_REG__DMA2_SECURE_C1Configuration </item>
//    <item> SFDITEM_REG__DMA2_SECURE_ITCR </item>
//    <item> SFDITEM_REG__DMA2_SECURE_ITOP1 </item>
//    <item> SFDITEM_REG__DMA2_SECURE_ITOP2 </item>
//    <item> SFDITEM_REG__DMA2_SECURE_ITOP3 </item>
//  </view>
//  


// ----------------------  Register Item Address: DMA3_SECURE_IntStatus  --------------------------
// SVD Line: 1197

unsigned int DMA3_SECURE_IntStatus __AT (0x50113000);



// --------------------------  Register Item: DMA3_SECURE_IntStatus  ------------------------------
// SVD Line: 1197

//  <item> SFDITEM_REG__DMA3_SECURE_IntStatus
//    <name> IntStatus </name>
//    <i> [Bits 31..0] RW (@ 0x50113000) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_IntStatus >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_IntStatus = (DMA3_SECURE_IntStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: DMA3_SECURE_IntTCStatus  -------------------------
// SVD Line: 1202

unsigned int DMA3_SECURE_IntTCStatus __AT (0x50113004);



// -------------------------  Register Item: DMA3_SECURE_IntTCStatus  -----------------------------
// SVD Line: 1202

//  <item> SFDITEM_REG__DMA3_SECURE_IntTCStatus
//    <name> IntTCStatus </name>
//    <i> [Bits 31..0] RO (@ 0x50113004) Interrupt Terminal Count Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_IntTCStatus >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_IntTCStatus = (DMA3_SECURE_IntTCStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA3_SECURE_IntTCClear  -------------------------
// SVD Line: 1207

unsigned int DMA3_SECURE_IntTCClear __AT (0x50113008);



// --------------------------  Register Item: DMA3_SECURE_IntTCClear  -----------------------------
// SVD Line: 1207

//  <item> SFDITEM_REG__DMA3_SECURE_IntTCClear
//    <name> IntTCClear </name>
//    <i> [Bits 31..0] WO (@ 0x50113008) Interrupt Terminal Count Clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_IntTCClear >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_IntTCClear = (DMA3_SECURE_IntTCClear & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: DMA3_SECURE_IntErrorStatus  -----------------------
// SVD Line: 1212

unsigned int DMA3_SECURE_IntErrorStatus __AT (0x5011300C);



// ------------------------  Register Item: DMA3_SECURE_IntErrorStatus  ---------------------------
// SVD Line: 1212

//  <item> SFDITEM_REG__DMA3_SECURE_IntErrorStatus
//    <name> IntErrorStatus </name>
//    <i> [Bits 31..0] RO (@ 0x5011300C) Interrupt Error Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_IntErrorStatus >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_IntErrorStatus = (DMA3_SECURE_IntErrorStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA3_SECURE_IntErrClr  --------------------------
// SVD Line: 1217

unsigned int DMA3_SECURE_IntErrClr __AT (0x50113010);



// --------------------------  Register Item: DMA3_SECURE_IntErrClr  ------------------------------
// SVD Line: 1217

//  <item> SFDITEM_REG__DMA3_SECURE_IntErrClr
//    <name> IntErrClr </name>
//    <i> [Bits 31..0] WO (@ 0x50113010) Interrupt Error Clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_IntErrClr >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_IntErrClr = (DMA3_SECURE_IntErrClr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: DMA3_SECURE_RawIntTCStatus  -----------------------
// SVD Line: 1222

unsigned int DMA3_SECURE_RawIntTCStatus __AT (0x50113014);



// ------------------------  Register Item: DMA3_SECURE_RawIntTCStatus  ---------------------------
// SVD Line: 1222

//  <item> SFDITEM_REG__DMA3_SECURE_RawIntTCStatus
//    <name> RawIntTCStatus </name>
//    <i> [Bits 31..0] RO (@ 0x50113014) Raw Interrupt Terminal Count Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_RawIntTCStatus >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_RawIntTCStatus = (DMA3_SECURE_RawIntTCStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMA3_SECURE_RawIntErrorStatus  ----------------------
// SVD Line: 1227

unsigned int DMA3_SECURE_RawIntErrorStatus __AT (0x50113018);



// ----------------------  Register Item: DMA3_SECURE_RawIntErrorStatus  --------------------------
// SVD Line: 1227

//  <item> SFDITEM_REG__DMA3_SECURE_RawIntErrorStatus
//    <name> RawIntErrorStatus </name>
//    <i> [Bits 31..0] RO (@ 0x50113018) Raw Error Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_RawIntErrorStatus >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_RawIntErrorStatus = (DMA3_SECURE_RawIntErrorStatus & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA3_SECURE_EnbldChns  --------------------------
// SVD Line: 1232

unsigned int DMA3_SECURE_EnbldChns __AT (0x5011301C);



// --------------------------  Register Item: DMA3_SECURE_EnbldChns  ------------------------------
// SVD Line: 1232

//  <item> SFDITEM_REG__DMA3_SECURE_EnbldChns
//    <name> EnbldChns </name>
//    <i> [Bits 31..0] RO (@ 0x5011301C) Enabled Channel Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_EnbldChns >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_EnbldChns = (DMA3_SECURE_EnbldChns & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA3_SECURE_SoftBReq  --------------------------
// SVD Line: 1237

unsigned int DMA3_SECURE_SoftBReq __AT (0x50113020);



// ---------------------------  Register Item: DMA3_SECURE_SoftBReq  ------------------------------
// SVD Line: 1237

//  <item> SFDITEM_REG__DMA3_SECURE_SoftBReq
//    <name> SoftBReq </name>
//    <i> [Bits 31..0] RW (@ 0x50113020) Software Burst Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_SoftBReq >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_SoftBReq = (DMA3_SECURE_SoftBReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: DMA3_SECURE_SoftSReq  --------------------------
// SVD Line: 1242

unsigned int DMA3_SECURE_SoftSReq __AT (0x50113024);



// ---------------------------  Register Item: DMA3_SECURE_SoftSReq  ------------------------------
// SVD Line: 1242

//  <item> SFDITEM_REG__DMA3_SECURE_SoftSReq
//    <name> SoftSReq </name>
//    <i> [Bits 31..0] RW (@ 0x50113024) Software Single Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_SoftSReq >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_SoftSReq = (DMA3_SECURE_SoftSReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA3_SECURE_SoftLBReq  --------------------------
// SVD Line: 1247

unsigned int DMA3_SECURE_SoftLBReq __AT (0x50113028);



// --------------------------  Register Item: DMA3_SECURE_SoftLBReq  ------------------------------
// SVD Line: 1247

//  <item> SFDITEM_REG__DMA3_SECURE_SoftLBReq
//    <name> SoftLBReq </name>
//    <i> [Bits 31..0] RW (@ 0x50113028) Software Last Burst Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_SoftLBReq >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_SoftLBReq = (DMA3_SECURE_SoftLBReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA3_SECURE_SoftLSReq  --------------------------
// SVD Line: 1252

unsigned int DMA3_SECURE_SoftLSReq __AT (0x5011302C);



// --------------------------  Register Item: DMA3_SECURE_SoftLSReq  ------------------------------
// SVD Line: 1252

//  <item> SFDITEM_REG__DMA3_SECURE_SoftLSReq
//    <name> SoftLSReq </name>
//    <i> [Bits 31..0] RW (@ 0x5011302C) Software Last Single Request Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_SoftLSReq >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_SoftLSReq = (DMA3_SECURE_SoftLSReq & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: DMA3_SECURE_Configuration  ------------------------
// SVD Line: 1257

unsigned int DMA3_SECURE_Configuration __AT (0x50113030);



// ------------------------  Register Item: DMA3_SECURE_Configuration  ----------------------------
// SVD Line: 1257

//  <item> SFDITEM_REG__DMA3_SECURE_Configuration
//    <name> Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x50113030) Configuration Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_Configuration >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_Configuration = (DMA3_SECURE_Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA3_SECURE_Sync  ----------------------------
// SVD Line: 1262

unsigned int DMA3_SECURE_Sync __AT (0x50113034);



// -----------------------------  Register Item: DMA3_SECURE_Sync  --------------------------------
// SVD Line: 1262

//  <item> SFDITEM_REG__DMA3_SECURE_Sync
//    <name> Sync </name>
//    <i> [Bits 31..0] RW (@ 0x50113034) Synchronization Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_Sync >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_Sync = (DMA3_SECURE_Sync & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA3_SECURE_C0SrcAddr  --------------------------
// SVD Line: 1267

unsigned int DMA3_SECURE_C0SrcAddr __AT (0x50113100);



// --------------------------  Register Item: DMA3_SECURE_C0SrcAddr  ------------------------------
// SVD Line: 1267

//  <item> SFDITEM_REG__DMA3_SECURE_C0SrcAddr
//    <name> C0SrcAddr </name>
//    <i> [Bits 31..0] RW (@ 0x50113100) Channel Source Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_C0SrcAddr >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_C0SrcAddr = (DMA3_SECURE_C0SrcAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA3_SECURE_C0DestAddr  -------------------------
// SVD Line: 1272

unsigned int DMA3_SECURE_C0DestAddr __AT (0x50113104);



// --------------------------  Register Item: DMA3_SECURE_C0DestAddr  -----------------------------
// SVD Line: 1272

//  <item> SFDITEM_REG__DMA3_SECURE_C0DestAddr
//    <name> C0DestAddr </name>
//    <i> [Bits 31..0] RW (@ 0x50113104) Channel Destination Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_C0DestAddr >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_C0DestAddr = (DMA3_SECURE_C0DestAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA3_SECURE_C0LLI  ----------------------------
// SVD Line: 1277

unsigned int DMA3_SECURE_C0LLI __AT (0x50113108);



// ----------------------------  Register Item: DMA3_SECURE_C0LLI  --------------------------------
// SVD Line: 1277

//  <item> SFDITEM_REG__DMA3_SECURE_C0LLI
//    <name> C0LLI </name>
//    <i> [Bits 31..0] RW (@ 0x50113108) Channel Linked List Item Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_C0LLI >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_C0LLI = (DMA3_SECURE_C0LLI & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA3_SECURE_C0Control  --------------------------
// SVD Line: 1282

unsigned int DMA3_SECURE_C0Control __AT (0x5011310C);



// --------------------------  Register Item: DMA3_SECURE_C0Control  ------------------------------
// SVD Line: 1282

//  <item> SFDITEM_REG__DMA3_SECURE_C0Control
//    <name> C0Control </name>
//    <i> [Bits 31..0] RW (@ 0x5011310C) Channel Control Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_C0Control >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_C0Control = (DMA3_SECURE_C0Control & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMA3_SECURE_C0Configuration  -----------------------
// SVD Line: 1287

unsigned int DMA3_SECURE_C0Configuration __AT (0x50113110);



// -----------------------  Register Item: DMA3_SECURE_C0Configuration  ---------------------------
// SVD Line: 1287

//  <item> SFDITEM_REG__DMA3_SECURE_C0Configuration
//    <name> C0Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x50113110) Channel Configuration Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_C0Configuration >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_C0Configuration = (DMA3_SECURE_C0Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA3_SECURE_C1SrcAddr  --------------------------
// SVD Line: 1292

unsigned int DMA3_SECURE_C1SrcAddr __AT (0x50113120);



// --------------------------  Register Item: DMA3_SECURE_C1SrcAddr  ------------------------------
// SVD Line: 1292

//  <item> SFDITEM_REG__DMA3_SECURE_C1SrcAddr
//    <name> C1SrcAddr </name>
//    <i> [Bits 31..0] RW (@ 0x50113120) Channel Source Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_C1SrcAddr >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_C1SrcAddr = (DMA3_SECURE_C1SrcAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA3_SECURE_C1DestAddr  -------------------------
// SVD Line: 1297

unsigned int DMA3_SECURE_C1DestAddr __AT (0x50113124);



// --------------------------  Register Item: DMA3_SECURE_C1DestAddr  -----------------------------
// SVD Line: 1297

//  <item> SFDITEM_REG__DMA3_SECURE_C1DestAddr
//    <name> C1DestAddr </name>
//    <i> [Bits 31..0] RW (@ 0x50113124) Channel Destination Address Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_C1DestAddr >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_C1DestAddr = (DMA3_SECURE_C1DestAddr & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA3_SECURE_C1LLI  ----------------------------
// SVD Line: 1302

unsigned int DMA3_SECURE_C1LLI __AT (0x50113128);



// ----------------------------  Register Item: DMA3_SECURE_C1LLI  --------------------------------
// SVD Line: 1302

//  <item> SFDITEM_REG__DMA3_SECURE_C1LLI
//    <name> C1LLI </name>
//    <i> [Bits 31..0] RW (@ 0x50113128) Channel Linked List Item Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_C1LLI >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_C1LLI = (DMA3_SECURE_C1LLI & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA3_SECURE_C1Control  --------------------------
// SVD Line: 1307

unsigned int DMA3_SECURE_C1Control __AT (0x5011312C);



// --------------------------  Register Item: DMA3_SECURE_C1Control  ------------------------------
// SVD Line: 1307

//  <item> SFDITEM_REG__DMA3_SECURE_C1Control
//    <name> C1Control </name>
//    <i> [Bits 31..0] RW (@ 0x5011312C) Channel Control Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_C1Control >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_C1Control = (DMA3_SECURE_C1Control & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMA3_SECURE_C1Configuration  -----------------------
// SVD Line: 1312

unsigned int DMA3_SECURE_C1Configuration __AT (0x50113130);



// -----------------------  Register Item: DMA3_SECURE_C1Configuration  ---------------------------
// SVD Line: 1312

//  <item> SFDITEM_REG__DMA3_SECURE_C1Configuration
//    <name> C1Configuration </name>
//    <i> [Bits 31..0] RW (@ 0x50113130) Channel Configuration Registers </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_C1Configuration >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_C1Configuration = (DMA3_SECURE_C1Configuration & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: DMA3_SECURE_ITCR  ----------------------------
// SVD Line: 1317

unsigned int DMA3_SECURE_ITCR __AT (0x50113500);



// -----------------------------  Register Item: DMA3_SECURE_ITCR  --------------------------------
// SVD Line: 1317

//  <item> SFDITEM_REG__DMA3_SECURE_ITCR
//    <name> ITCR </name>
//    <i> [Bits 31..0] RW (@ 0x50113500) Test Control Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_ITCR >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_ITCR = (DMA3_SECURE_ITCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA3_SECURE_ITOP1  ----------------------------
// SVD Line: 1322

unsigned int DMA3_SECURE_ITOP1 __AT (0x50113504);



// ----------------------------  Register Item: DMA3_SECURE_ITOP1  --------------------------------
// SVD Line: 1322

//  <item> SFDITEM_REG__DMA3_SECURE_ITOP1
//    <name> ITOP1 </name>
//    <i> [Bits 31..0] RW (@ 0x50113504) Integration Test Output Register 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_ITOP1 >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_ITOP1 = (DMA3_SECURE_ITOP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA3_SECURE_ITOP2  ----------------------------
// SVD Line: 1327

unsigned int DMA3_SECURE_ITOP2 __AT (0x50113508);



// ----------------------------  Register Item: DMA3_SECURE_ITOP2  --------------------------------
// SVD Line: 1327

//  <item> SFDITEM_REG__DMA3_SECURE_ITOP2
//    <name> ITOP2 </name>
//    <i> [Bits 31..0] RW (@ 0x50113508) Integration Test Output Register 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_ITOP2 >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_ITOP2 = (DMA3_SECURE_ITOP2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: DMA3_SECURE_ITOP3  ----------------------------
// SVD Line: 1332

unsigned int DMA3_SECURE_ITOP3 __AT (0x5011350C);



// ----------------------------  Register Item: DMA3_SECURE_ITOP3  --------------------------------
// SVD Line: 1332

//  <item> SFDITEM_REG__DMA3_SECURE_ITOP3
//    <name> ITOP3 </name>
//    <i> [Bits 31..0] RW (@ 0x5011350C) Integration Test Output Register 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA3_SECURE_ITOP3 >> 0) & 0xFFFFFFFF), ((DMA3_SECURE_ITOP3 = (DMA3_SECURE_ITOP3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Peripheral View: DMA3_SECURE  ----------------------------------
// SVD Line: 2964

//  <view> DMA3_SECURE
//    <name> DMA3_SECURE </name>
//    <item> SFDITEM_REG__DMA3_SECURE_IntStatus </item>
//    <item> SFDITEM_REG__DMA3_SECURE_IntTCStatus </item>
//    <item> SFDITEM_REG__DMA3_SECURE_IntTCClear </item>
//    <item> SFDITEM_REG__DMA3_SECURE_IntErrorStatus </item>
//    <item> SFDITEM_REG__DMA3_SECURE_IntErrClr </item>
//    <item> SFDITEM_REG__DMA3_SECURE_RawIntTCStatus </item>
//    <item> SFDITEM_REG__DMA3_SECURE_RawIntErrorStatus </item>
//    <item> SFDITEM_REG__DMA3_SECURE_EnbldChns </item>
//    <item> SFDITEM_REG__DMA3_SECURE_SoftBReq </item>
//    <item> SFDITEM_REG__DMA3_SECURE_SoftSReq </item>
//    <item> SFDITEM_REG__DMA3_SECURE_SoftLBReq </item>
//    <item> SFDITEM_REG__DMA3_SECURE_SoftLSReq </item>
//    <item> SFDITEM_REG__DMA3_SECURE_Configuration </item>
//    <item> SFDITEM_REG__DMA3_SECURE_Sync </item>
//    <item> SFDITEM_REG__DMA3_SECURE_C0SrcAddr </item>
//    <item> SFDITEM_REG__DMA3_SECURE_C0DestAddr </item>
//    <item> SFDITEM_REG__DMA3_SECURE_C0LLI </item>
//    <item> SFDITEM_REG__DMA3_SECURE_C0Control </item>
//    <item> SFDITEM_REG__DMA3_SECURE_C0Configuration </item>
//    <item> SFDITEM_REG__DMA3_SECURE_C1SrcAddr </item>
//    <item> SFDITEM_REG__DMA3_SECURE_C1DestAddr </item>
//    <item> SFDITEM_REG__DMA3_SECURE_C1LLI </item>
//    <item> SFDITEM_REG__DMA3_SECURE_C1Control </item>
//    <item> SFDITEM_REG__DMA3_SECURE_C1Configuration </item>
//    <item> SFDITEM_REG__DMA3_SECURE_ITCR </item>
//    <item> SFDITEM_REG__DMA3_SECURE_ITOP1 </item>
//    <item> SFDITEM_REG__DMA3_SECURE_ITOP2 </item>
//    <item> SFDITEM_REG__DMA3_SECURE_ITOP3 </item>
//  </view>
//  


// -------------------------  Register Item Address: SSP0_Secure_CR0  -----------------------------
// SVD Line: 1424

unsigned int SSP0_Secure_CR0 __AT (0x50205000);



// -----------------------------  Field Item: SSP0_Secure_CR0_SCR  --------------------------------
// SVD Line: 1429

//  <item> SFDITEM_FIELD__SSP0_Secure_CR0_SCR
//    <name> SCR </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x50205000) Serial clock rate </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP0_Secure_CR0 >> 8) & 0xFF), ((SSP0_Secure_CR0 = (SSP0_Secure_CR0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SSP0_Secure_CR0_SPH  --------------------------------
// SVD Line: 1433

//  <item> SFDITEM_FIELD__SSP0_Secure_CR0_SPH
//    <name> SPH </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x50205000) SSPCLKOUT phase </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_CR0 ) </loc>
//      <o.7..7> SPH
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP0_Secure_CR0_SPO  --------------------------------
// SVD Line: 1437

//  <item> SFDITEM_FIELD__SSP0_Secure_CR0_SPO
//    <name> SPO </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50205000) SSPCLKOUT polarity </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_CR0 ) </loc>
//      <o.6..6> SPO
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP0_Secure_CR0_FRF  --------------------------------
// SVD Line: 1441

//  <item> SFDITEM_FIELD__SSP0_Secure_CR0_FRF
//    <name> FRF </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x50205000) Frame format </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP0_Secure_CR0 >> 4) & 0x3), ((SSP0_Secure_CR0 = (SSP0_Secure_CR0 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SSP0_Secure_CR0_DSS  --------------------------------
// SVD Line: 1445

//  <item> SFDITEM_FIELD__SSP0_Secure_CR0_DSS
//    <name> DSS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x50205000) Data Size Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP0_Secure_CR0 >> 0) & 0xF), ((SSP0_Secure_CR0 = (SSP0_Secure_CR0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_Secure_CR0  --------------------------------
// SVD Line: 1424

//  <rtree> SFDITEM_REG__SSP0_Secure_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50205000) Control register 0 </i>
//    <loc> ( (unsigned int)((SSP0_Secure_CR0 >> 0) & 0xFFFFFFFF), ((SSP0_Secure_CR0 = (SSP0_Secure_CR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_CR0_SCR </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_CR0_SPH </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_CR0_SPO </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_CR0_FRF </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_CR0_DSS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP0_Secure_CR1  -----------------------------
// SVD Line: 1451

unsigned int SSP0_Secure_CR1 __AT (0x50205004);



// -----------------------------  Field Item: SSP0_Secure_CR1_SOD  --------------------------------
// SVD Line: 1456

//  <item> SFDITEM_FIELD__SSP0_Secure_CR1_SOD
//    <name> SOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50205004) Slave-mode output disable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_CR1 ) </loc>
//      <o.3..3> SOD
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP0_Secure_CR1_MS  ---------------------------------
// SVD Line: 1460

//  <item> SFDITEM_FIELD__SSP0_Secure_CR1_MS
//    <name> MS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50205004) Master or slave mode select </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_CR1 ) </loc>
//      <o.2..2> MS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP0_Secure_CR1_SSE  --------------------------------
// SVD Line: 1464

//  <item> SFDITEM_FIELD__SSP0_Secure_CR1_SSE
//    <name> SSE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50205004) Synchronous serial port enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_CR1 ) </loc>
//      <o.1..1> SSE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP0_Secure_CR1_LBM  --------------------------------
// SVD Line: 1468

//  <item> SFDITEM_FIELD__SSP0_Secure_CR1_LBM
//    <name> LBM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50205004) Loop back mode </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_CR1 ) </loc>
//      <o.0..0> LBM
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_Secure_CR1  --------------------------------
// SVD Line: 1451

//  <rtree> SFDITEM_REG__SSP0_Secure_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50205004) Control register 1 </i>
//    <loc> ( (unsigned int)((SSP0_Secure_CR1 >> 0) & 0xFFFFFFFF), ((SSP0_Secure_CR1 = (SSP0_Secure_CR1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_CR1_SOD </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_CR1_MS </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_CR1_SSE </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_CR1_LBM </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP0_Secure_DR  -----------------------------
// SVD Line: 1474

unsigned int SSP0_Secure_DR __AT (0x50205008);



// -----------------------------  Field Item: SSP0_Secure_DR_Data  --------------------------------
// SVD Line: 1479

//  <item> SFDITEM_FIELD__SSP0_Secure_DR_Data
//    <name> Data </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x50205008) Transmit/Receive FIFO </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP0_Secure_DR >> 0) & 0xFFFF), ((SSP0_Secure_DR = (SSP0_Secure_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_Secure_DR  ---------------------------------
// SVD Line: 1474

//  <rtree> SFDITEM_REG__SSP0_Secure_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50205008) Data register </i>
//    <loc> ( (unsigned int)((SSP0_Secure_DR >> 0) & 0xFFFFFFFF), ((SSP0_Secure_DR = (SSP0_Secure_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_DR_Data </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP0_Secure_SR  -----------------------------
// SVD Line: 1485

unsigned int SSP0_Secure_SR __AT (0x5020500C);



// -----------------------------  Field Item: SSP0_Secure_SR_BSY  ---------------------------------
// SVD Line: 1490

//  <item> SFDITEM_FIELD__SSP0_Secure_SR_BSY
//    <name> BSY </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x5020500C) PrimeCell SSP busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_SR ) </loc>
//      <o.4..4> BSY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP0_Secure_SR_RFF  ---------------------------------
// SVD Line: 1494

//  <item> SFDITEM_FIELD__SSP0_Secure_SR_RFF
//    <name> RFF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5020500C) Receive FIFO full </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_SR ) </loc>
//      <o.3..3> RFF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP0_Secure_SR_RNE  ---------------------------------
// SVD Line: 1498

//  <item> SFDITEM_FIELD__SSP0_Secure_SR_RNE
//    <name> RNE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5020500C) Receive FIFO not empty </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_SR ) </loc>
//      <o.2..2> RNE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP0_Secure_SR_TNF  ---------------------------------
// SVD Line: 1502

//  <item> SFDITEM_FIELD__SSP0_Secure_SR_TNF
//    <name> TNF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5020500C) Transmit FIFO not full </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_SR ) </loc>
//      <o.1..1> TNF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP0_Secure_SR_TFE  ---------------------------------
// SVD Line: 1506

//  <item> SFDITEM_FIELD__SSP0_Secure_SR_TFE
//    <name> TFE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5020500C) Transmit FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_SR ) </loc>
//      <o.0..0> TFE
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_Secure_SR  ---------------------------------
// SVD Line: 1485

//  <rtree> SFDITEM_REG__SSP0_Secure_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5020500C) Status register </i>
//    <loc> ( (unsigned int)((SSP0_Secure_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_SR_BSY </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_SR_RFF </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_SR_RNE </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_SR_TNF </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_SR_TFE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP0_Secure_CPSR  ----------------------------
// SVD Line: 1512

unsigned int SSP0_Secure_CPSR __AT (0x50205010);



// --------------------------  Field Item: SSP0_Secure_CPSR_CPSDVSR  ------------------------------
// SVD Line: 1517

//  <item> SFDITEM_FIELD__SSP0_Secure_CPSR_CPSDVSR
//    <name> CPSDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x50205010) Clock prescale divisor </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP0_Secure_CPSR >> 0) & 0xFF), ((SSP0_Secure_CPSR = (SSP0_Secure_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: SSP0_Secure_CPSR  --------------------------------
// SVD Line: 1512

//  <rtree> SFDITEM_REG__SSP0_Secure_CPSR
//    <name> CPSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50205010) Clock prescale register </i>
//    <loc> ( (unsigned int)((SSP0_Secure_CPSR >> 0) & 0xFFFFFFFF), ((SSP0_Secure_CPSR = (SSP0_Secure_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_CPSR_CPSDVSR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP0_Secure_IMSC  ----------------------------
// SVD Line: 1523

unsigned int SSP0_Secure_IMSC __AT (0x50205014);



// ----------------------------  Field Item: SSP0_Secure_IMSC_TXIM  -------------------------------
// SVD Line: 1528

//  <item> SFDITEM_FIELD__SSP0_Secure_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50205014) Transmit FIFO interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_IMSC ) </loc>
//      <o.3..3> TXIM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP0_Secure_IMSC_RXIM  -------------------------------
// SVD Line: 1532

//  <item> SFDITEM_FIELD__SSP0_Secure_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50205014) Receive FIFO interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_IMSC ) </loc>
//      <o.2..2> RXIM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP0_Secure_IMSC_RTIM  -------------------------------
// SVD Line: 1536

//  <item> SFDITEM_FIELD__SSP0_Secure_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50205014) Receive timeout interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_IMSC ) </loc>
//      <o.1..1> RTIM
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP0_Secure_IMSC_RORIM  -------------------------------
// SVD Line: 1540

//  <item> SFDITEM_FIELD__SSP0_Secure_IMSC_RORIM
//    <name> RORIM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50205014) Receive overrun interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_IMSC ) </loc>
//      <o.0..0> RORIM
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: SSP0_Secure_IMSC  --------------------------------
// SVD Line: 1523

//  <rtree> SFDITEM_REG__SSP0_Secure_IMSC
//    <name> IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50205014) Interrupt mask set or clear register </i>
//    <loc> ( (unsigned int)((SSP0_Secure_IMSC >> 0) & 0xFFFFFFFF), ((SSP0_Secure_IMSC = (SSP0_Secure_IMSC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_IMSC_TXIM </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_IMSC_RORIM </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP0_Secure_RIS  -----------------------------
// SVD Line: 1546

unsigned int SSP0_Secure_RIS __AT (0x50205018);



// ----------------------------  Field Item: SSP0_Secure_RIS_TXRIS  -------------------------------
// SVD Line: 1551

//  <item> SFDITEM_FIELD__SSP0_Secure_RIS_TXRIS
//    <name> TXRIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x50205018) transmit FIFOraw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_RIS ) </loc>
//      <o.3..3> TXRIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP0_Secure_RIS_RXRIS  -------------------------------
// SVD Line: 1555

//  <item> SFDITEM_FIELD__SSP0_Secure_RIS_RXRIS
//    <name> RXRIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x50205018) receive FIFO raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_RIS ) </loc>
//      <o.2..2> RXRIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP0_Secure_RIS_RTRIS  -------------------------------
// SVD Line: 1559

//  <item> SFDITEM_FIELD__SSP0_Secure_RIS_RTRIS
//    <name> RTRIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x50205018) receive timeout raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_RIS ) </loc>
//      <o.1..1> RTRIS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP0_Secure_RIS_RORRIS  -------------------------------
// SVD Line: 1563

//  <item> SFDITEM_FIELD__SSP0_Secure_RIS_RORRIS
//    <name> RORRIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x50205018) receive over run raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_RIS ) </loc>
//      <o.0..0> RORRIS
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_Secure_RIS  --------------------------------
// SVD Line: 1546

//  <rtree> SFDITEM_REG__SSP0_Secure_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50205018) Raw interrupt status register </i>
//    <loc> ( (unsigned int)((SSP0_Secure_RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_RIS_TXRIS </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_RIS_RORRIS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP0_Secure_MIS  -----------------------------
// SVD Line: 1569

unsigned int SSP0_Secure_MIS __AT (0x5020501C);



// ----------------------------  Field Item: SSP0_Secure_MIS_TXMIS  -------------------------------
// SVD Line: 1574

//  <item> SFDITEM_FIELD__SSP0_Secure_MIS_TXMIS
//    <name> TXMIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5020501C) transmit FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_MIS ) </loc>
//      <o.3..3> TXMIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP0_Secure_MIS_RXMIS  -------------------------------
// SVD Line: 1578

//  <item> SFDITEM_FIELD__SSP0_Secure_MIS_RXMIS
//    <name> RXMIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5020501C) receive FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_MIS ) </loc>
//      <o.2..2> RXMIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP0_Secure_MIS_RTMIS  -------------------------------
// SVD Line: 1582

//  <item> SFDITEM_FIELD__SSP0_Secure_MIS_RTMIS
//    <name> RTMIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5020501C) receive timeout masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_MIS ) </loc>
//      <o.1..1> RTMIS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP0_Secure_MIS_RORMIS  -------------------------------
// SVD Line: 1586

//  <item> SFDITEM_FIELD__SSP0_Secure_MIS_RORMIS
//    <name> RORMIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5020501C) receive over run masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_MIS ) </loc>
//      <o.0..0> RORMIS
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_Secure_MIS  --------------------------------
// SVD Line: 1569

//  <rtree> SFDITEM_REG__SSP0_Secure_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5020501C) Masked interrupt status register </i>
//    <loc> ( (unsigned int)((SSP0_Secure_MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_MIS_TXMIS </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_MIS_RORMIS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP0_Secure_ICR  -----------------------------
// SVD Line: 1592

unsigned int SSP0_Secure_ICR __AT (0x50205020);



// ----------------------------  Field Item: SSP0_Secure_ICR_RTIC  --------------------------------
// SVD Line: 1597

//  <item> SFDITEM_FIELD__SSP0_Secure_ICR_RTIC
//    <name> RTIC </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x50205020) Clears the SSPRTINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_ICR ) </loc>
//      <o.1..1> RTIC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP0_Secure_ICR_RORIC  -------------------------------
// SVD Line: 1601

//  <item> SFDITEM_FIELD__SSP0_Secure_ICR_RORIC
//    <name> RORIC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x50205020) Clears the SSPRORINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_ICR ) </loc>
//      <o.0..0> RORIC
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_Secure_ICR  --------------------------------
// SVD Line: 1592

//  <rtree> SFDITEM_REG__SSP0_Secure_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x50205020) Interrupt clear register </i>
//    <loc> ( (unsigned int)((SSP0_Secure_ICR >> 0) & 0xFFFFFFFF), ((SSP0_Secure_ICR = (SSP0_Secure_ICR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_ICR_RTIC </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_ICR_RORIC </item>
//  </rtree>
//  


// ------------------------  Register Item Address: SSP0_Secure_DMACR  ----------------------------
// SVD Line: 1607

unsigned int SSP0_Secure_DMACR __AT (0x50205024);



// --------------------------  Field Item: SSP0_Secure_DMACR_TXDMAE  ------------------------------
// SVD Line: 1612

//  <item> SFDITEM_FIELD__SSP0_Secure_DMACR_TXDMAE
//    <name> TXDMAE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50205024) Transmit DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_DMACR ) </loc>
//      <o.1..1> TXDMAE
//    </check>
//  </item>
//  


// --------------------------  Field Item: SSP0_Secure_DMACR_RXDMAE  ------------------------------
// SVD Line: 1616

//  <item> SFDITEM_FIELD__SSP0_Secure_DMACR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50205024) Receive DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_DMACR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: SSP0_Secure_DMACR  -------------------------------
// SVD Line: 1607

//  <rtree> SFDITEM_REG__SSP0_Secure_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50205024) DMA control register </i>
//    <loc> ( (unsigned int)((SSP0_Secure_DMACR >> 0) & 0xFFFFFFFF), ((SSP0_Secure_DMACR = (SSP0_Secure_DMACR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_DMACR_TXDMAE </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_DMACR_RXDMAE </item>
//  </rtree>
//  


// ------------------------------  Peripheral View: SSP0_Secure  ----------------------------------
// SVD Line: 2972

//  <view> SSP0_Secure
//    <name> SSP0_Secure </name>
//    <item> SFDITEM_REG__SSP0_Secure_CR0 </item>
//    <item> SFDITEM_REG__SSP0_Secure_CR1 </item>
//    <item> SFDITEM_REG__SSP0_Secure_DR </item>
//    <item> SFDITEM_REG__SSP0_Secure_SR </item>
//    <item> SFDITEM_REG__SSP0_Secure_CPSR </item>
//    <item> SFDITEM_REG__SSP0_Secure_IMSC </item>
//    <item> SFDITEM_REG__SSP0_Secure_RIS </item>
//    <item> SFDITEM_REG__SSP0_Secure_MIS </item>
//    <item> SFDITEM_REG__SSP0_Secure_ICR </item>
//    <item> SFDITEM_REG__SSP0_Secure_DMACR </item>
//  </view>
//  


// -------------------------  Register Item Address: SSP1_Secure_CR0  -----------------------------
// SVD Line: 1424

unsigned int SSP1_Secure_CR0 __AT (0x50206000);



// -----------------------------  Field Item: SSP1_Secure_CR0_SCR  --------------------------------
// SVD Line: 1429

//  <item> SFDITEM_FIELD__SSP1_Secure_CR0_SCR
//    <name> SCR </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x50206000) Serial clock rate </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP1_Secure_CR0 >> 8) & 0xFF), ((SSP1_Secure_CR0 = (SSP1_Secure_CR0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SSP1_Secure_CR0_SPH  --------------------------------
// SVD Line: 1433

//  <item> SFDITEM_FIELD__SSP1_Secure_CR0_SPH
//    <name> SPH </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x50206000) SSPCLKOUT phase </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_CR0 ) </loc>
//      <o.7..7> SPH
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP1_Secure_CR0_SPO  --------------------------------
// SVD Line: 1437

//  <item> SFDITEM_FIELD__SSP1_Secure_CR0_SPO
//    <name> SPO </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50206000) SSPCLKOUT polarity </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_CR0 ) </loc>
//      <o.6..6> SPO
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP1_Secure_CR0_FRF  --------------------------------
// SVD Line: 1441

//  <item> SFDITEM_FIELD__SSP1_Secure_CR0_FRF
//    <name> FRF </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x50206000) Frame format </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP1_Secure_CR0 >> 4) & 0x3), ((SSP1_Secure_CR0 = (SSP1_Secure_CR0 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SSP1_Secure_CR0_DSS  --------------------------------
// SVD Line: 1445

//  <item> SFDITEM_FIELD__SSP1_Secure_CR0_DSS
//    <name> DSS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x50206000) Data Size Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP1_Secure_CR0 >> 0) & 0xF), ((SSP1_Secure_CR0 = (SSP1_Secure_CR0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_Secure_CR0  --------------------------------
// SVD Line: 1424

//  <rtree> SFDITEM_REG__SSP1_Secure_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50206000) Control register 0 </i>
//    <loc> ( (unsigned int)((SSP1_Secure_CR0 >> 0) & 0xFFFFFFFF), ((SSP1_Secure_CR0 = (SSP1_Secure_CR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_CR0_SCR </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_CR0_SPH </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_CR0_SPO </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_CR0_FRF </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_CR0_DSS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP1_Secure_CR1  -----------------------------
// SVD Line: 1451

unsigned int SSP1_Secure_CR1 __AT (0x50206004);



// -----------------------------  Field Item: SSP1_Secure_CR1_SOD  --------------------------------
// SVD Line: 1456

//  <item> SFDITEM_FIELD__SSP1_Secure_CR1_SOD
//    <name> SOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50206004) Slave-mode output disable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_CR1 ) </loc>
//      <o.3..3> SOD
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP1_Secure_CR1_MS  ---------------------------------
// SVD Line: 1460

//  <item> SFDITEM_FIELD__SSP1_Secure_CR1_MS
//    <name> MS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50206004) Master or slave mode select </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_CR1 ) </loc>
//      <o.2..2> MS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP1_Secure_CR1_SSE  --------------------------------
// SVD Line: 1464

//  <item> SFDITEM_FIELD__SSP1_Secure_CR1_SSE
//    <name> SSE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50206004) Synchronous serial port enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_CR1 ) </loc>
//      <o.1..1> SSE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP1_Secure_CR1_LBM  --------------------------------
// SVD Line: 1468

//  <item> SFDITEM_FIELD__SSP1_Secure_CR1_LBM
//    <name> LBM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50206004) Loop back mode </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_CR1 ) </loc>
//      <o.0..0> LBM
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_Secure_CR1  --------------------------------
// SVD Line: 1451

//  <rtree> SFDITEM_REG__SSP1_Secure_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50206004) Control register 1 </i>
//    <loc> ( (unsigned int)((SSP1_Secure_CR1 >> 0) & 0xFFFFFFFF), ((SSP1_Secure_CR1 = (SSP1_Secure_CR1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_CR1_SOD </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_CR1_MS </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_CR1_SSE </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_CR1_LBM </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP1_Secure_DR  -----------------------------
// SVD Line: 1474

unsigned int SSP1_Secure_DR __AT (0x50206008);



// -----------------------------  Field Item: SSP1_Secure_DR_Data  --------------------------------
// SVD Line: 1479

//  <item> SFDITEM_FIELD__SSP1_Secure_DR_Data
//    <name> Data </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x50206008) Transmit/Receive FIFO </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP1_Secure_DR >> 0) & 0xFFFF), ((SSP1_Secure_DR = (SSP1_Secure_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_Secure_DR  ---------------------------------
// SVD Line: 1474

//  <rtree> SFDITEM_REG__SSP1_Secure_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50206008) Data register </i>
//    <loc> ( (unsigned int)((SSP1_Secure_DR >> 0) & 0xFFFFFFFF), ((SSP1_Secure_DR = (SSP1_Secure_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_DR_Data </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP1_Secure_SR  -----------------------------
// SVD Line: 1485

unsigned int SSP1_Secure_SR __AT (0x5020600C);



// -----------------------------  Field Item: SSP1_Secure_SR_BSY  ---------------------------------
// SVD Line: 1490

//  <item> SFDITEM_FIELD__SSP1_Secure_SR_BSY
//    <name> BSY </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x5020600C) PrimeCell SSP busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_SR ) </loc>
//      <o.4..4> BSY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP1_Secure_SR_RFF  ---------------------------------
// SVD Line: 1494

//  <item> SFDITEM_FIELD__SSP1_Secure_SR_RFF
//    <name> RFF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5020600C) Receive FIFO full </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_SR ) </loc>
//      <o.3..3> RFF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP1_Secure_SR_RNE  ---------------------------------
// SVD Line: 1498

//  <item> SFDITEM_FIELD__SSP1_Secure_SR_RNE
//    <name> RNE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5020600C) Receive FIFO not empty </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_SR ) </loc>
//      <o.2..2> RNE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP1_Secure_SR_TNF  ---------------------------------
// SVD Line: 1502

//  <item> SFDITEM_FIELD__SSP1_Secure_SR_TNF
//    <name> TNF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5020600C) Transmit FIFO not full </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_SR ) </loc>
//      <o.1..1> TNF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP1_Secure_SR_TFE  ---------------------------------
// SVD Line: 1506

//  <item> SFDITEM_FIELD__SSP1_Secure_SR_TFE
//    <name> TFE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5020600C) Transmit FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_SR ) </loc>
//      <o.0..0> TFE
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_Secure_SR  ---------------------------------
// SVD Line: 1485

//  <rtree> SFDITEM_REG__SSP1_Secure_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5020600C) Status register </i>
//    <loc> ( (unsigned int)((SSP1_Secure_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_SR_BSY </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_SR_RFF </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_SR_RNE </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_SR_TNF </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_SR_TFE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP1_Secure_CPSR  ----------------------------
// SVD Line: 1512

unsigned int SSP1_Secure_CPSR __AT (0x50206010);



// --------------------------  Field Item: SSP1_Secure_CPSR_CPSDVSR  ------------------------------
// SVD Line: 1517

//  <item> SFDITEM_FIELD__SSP1_Secure_CPSR_CPSDVSR
//    <name> CPSDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x50206010) Clock prescale divisor </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP1_Secure_CPSR >> 0) & 0xFF), ((SSP1_Secure_CPSR = (SSP1_Secure_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: SSP1_Secure_CPSR  --------------------------------
// SVD Line: 1512

//  <rtree> SFDITEM_REG__SSP1_Secure_CPSR
//    <name> CPSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50206010) Clock prescale register </i>
//    <loc> ( (unsigned int)((SSP1_Secure_CPSR >> 0) & 0xFFFFFFFF), ((SSP1_Secure_CPSR = (SSP1_Secure_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_CPSR_CPSDVSR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP1_Secure_IMSC  ----------------------------
// SVD Line: 1523

unsigned int SSP1_Secure_IMSC __AT (0x50206014);



// ----------------------------  Field Item: SSP1_Secure_IMSC_TXIM  -------------------------------
// SVD Line: 1528

//  <item> SFDITEM_FIELD__SSP1_Secure_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50206014) Transmit FIFO interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_IMSC ) </loc>
//      <o.3..3> TXIM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP1_Secure_IMSC_RXIM  -------------------------------
// SVD Line: 1532

//  <item> SFDITEM_FIELD__SSP1_Secure_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50206014) Receive FIFO interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_IMSC ) </loc>
//      <o.2..2> RXIM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP1_Secure_IMSC_RTIM  -------------------------------
// SVD Line: 1536

//  <item> SFDITEM_FIELD__SSP1_Secure_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50206014) Receive timeout interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_IMSC ) </loc>
//      <o.1..1> RTIM
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP1_Secure_IMSC_RORIM  -------------------------------
// SVD Line: 1540

//  <item> SFDITEM_FIELD__SSP1_Secure_IMSC_RORIM
//    <name> RORIM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50206014) Receive overrun interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_IMSC ) </loc>
//      <o.0..0> RORIM
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: SSP1_Secure_IMSC  --------------------------------
// SVD Line: 1523

//  <rtree> SFDITEM_REG__SSP1_Secure_IMSC
//    <name> IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50206014) Interrupt mask set or clear register </i>
//    <loc> ( (unsigned int)((SSP1_Secure_IMSC >> 0) & 0xFFFFFFFF), ((SSP1_Secure_IMSC = (SSP1_Secure_IMSC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_IMSC_TXIM </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_IMSC_RORIM </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP1_Secure_RIS  -----------------------------
// SVD Line: 1546

unsigned int SSP1_Secure_RIS __AT (0x50206018);



// ----------------------------  Field Item: SSP1_Secure_RIS_TXRIS  -------------------------------
// SVD Line: 1551

//  <item> SFDITEM_FIELD__SSP1_Secure_RIS_TXRIS
//    <name> TXRIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x50206018) transmit FIFOraw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_RIS ) </loc>
//      <o.3..3> TXRIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP1_Secure_RIS_RXRIS  -------------------------------
// SVD Line: 1555

//  <item> SFDITEM_FIELD__SSP1_Secure_RIS_RXRIS
//    <name> RXRIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x50206018) receive FIFO raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_RIS ) </loc>
//      <o.2..2> RXRIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP1_Secure_RIS_RTRIS  -------------------------------
// SVD Line: 1559

//  <item> SFDITEM_FIELD__SSP1_Secure_RIS_RTRIS
//    <name> RTRIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x50206018) receive timeout raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_RIS ) </loc>
//      <o.1..1> RTRIS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP1_Secure_RIS_RORRIS  -------------------------------
// SVD Line: 1563

//  <item> SFDITEM_FIELD__SSP1_Secure_RIS_RORRIS
//    <name> RORRIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x50206018) receive over run raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_RIS ) </loc>
//      <o.0..0> RORRIS
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_Secure_RIS  --------------------------------
// SVD Line: 1546

//  <rtree> SFDITEM_REG__SSP1_Secure_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50206018) Raw interrupt status register </i>
//    <loc> ( (unsigned int)((SSP1_Secure_RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_RIS_TXRIS </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_RIS_RORRIS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP1_Secure_MIS  -----------------------------
// SVD Line: 1569

unsigned int SSP1_Secure_MIS __AT (0x5020601C);



// ----------------------------  Field Item: SSP1_Secure_MIS_TXMIS  -------------------------------
// SVD Line: 1574

//  <item> SFDITEM_FIELD__SSP1_Secure_MIS_TXMIS
//    <name> TXMIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5020601C) transmit FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_MIS ) </loc>
//      <o.3..3> TXMIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP1_Secure_MIS_RXMIS  -------------------------------
// SVD Line: 1578

//  <item> SFDITEM_FIELD__SSP1_Secure_MIS_RXMIS
//    <name> RXMIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5020601C) receive FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_MIS ) </loc>
//      <o.2..2> RXMIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP1_Secure_MIS_RTMIS  -------------------------------
// SVD Line: 1582

//  <item> SFDITEM_FIELD__SSP1_Secure_MIS_RTMIS
//    <name> RTMIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5020601C) receive timeout masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_MIS ) </loc>
//      <o.1..1> RTMIS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP1_Secure_MIS_RORMIS  -------------------------------
// SVD Line: 1586

//  <item> SFDITEM_FIELD__SSP1_Secure_MIS_RORMIS
//    <name> RORMIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5020601C) receive over run masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_MIS ) </loc>
//      <o.0..0> RORMIS
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_Secure_MIS  --------------------------------
// SVD Line: 1569

//  <rtree> SFDITEM_REG__SSP1_Secure_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5020601C) Masked interrupt status register </i>
//    <loc> ( (unsigned int)((SSP1_Secure_MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_MIS_TXMIS </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_MIS_RORMIS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP1_Secure_ICR  -----------------------------
// SVD Line: 1592

unsigned int SSP1_Secure_ICR __AT (0x50206020);



// ----------------------------  Field Item: SSP1_Secure_ICR_RTIC  --------------------------------
// SVD Line: 1597

//  <item> SFDITEM_FIELD__SSP1_Secure_ICR_RTIC
//    <name> RTIC </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x50206020) Clears the SSPRTINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_ICR ) </loc>
//      <o.1..1> RTIC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP1_Secure_ICR_RORIC  -------------------------------
// SVD Line: 1601

//  <item> SFDITEM_FIELD__SSP1_Secure_ICR_RORIC
//    <name> RORIC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x50206020) Clears the SSPRORINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_ICR ) </loc>
//      <o.0..0> RORIC
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_Secure_ICR  --------------------------------
// SVD Line: 1592

//  <rtree> SFDITEM_REG__SSP1_Secure_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x50206020) Interrupt clear register </i>
//    <loc> ( (unsigned int)((SSP1_Secure_ICR >> 0) & 0xFFFFFFFF), ((SSP1_Secure_ICR = (SSP1_Secure_ICR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_ICR_RTIC </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_ICR_RORIC </item>
//  </rtree>
//  


// ------------------------  Register Item Address: SSP1_Secure_DMACR  ----------------------------
// SVD Line: 1607

unsigned int SSP1_Secure_DMACR __AT (0x50206024);



// --------------------------  Field Item: SSP1_Secure_DMACR_TXDMAE  ------------------------------
// SVD Line: 1612

//  <item> SFDITEM_FIELD__SSP1_Secure_DMACR_TXDMAE
//    <name> TXDMAE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50206024) Transmit DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_DMACR ) </loc>
//      <o.1..1> TXDMAE
//    </check>
//  </item>
//  


// --------------------------  Field Item: SSP1_Secure_DMACR_RXDMAE  ------------------------------
// SVD Line: 1616

//  <item> SFDITEM_FIELD__SSP1_Secure_DMACR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50206024) Receive DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_DMACR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: SSP1_Secure_DMACR  -------------------------------
// SVD Line: 1607

//  <rtree> SFDITEM_REG__SSP1_Secure_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50206024) DMA control register </i>
//    <loc> ( (unsigned int)((SSP1_Secure_DMACR >> 0) & 0xFFFFFFFF), ((SSP1_Secure_DMACR = (SSP1_Secure_DMACR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_DMACR_TXDMAE </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_DMACR_RXDMAE </item>
//  </rtree>
//  


// ------------------------------  Peripheral View: SSP1_Secure  ----------------------------------
// SVD Line: 2979

//  <view> SSP1_Secure
//    <name> SSP1_Secure </name>
//    <item> SFDITEM_REG__SSP1_Secure_CR0 </item>
//    <item> SFDITEM_REG__SSP1_Secure_CR1 </item>
//    <item> SFDITEM_REG__SSP1_Secure_DR </item>
//    <item> SFDITEM_REG__SSP1_Secure_SR </item>
//    <item> SFDITEM_REG__SSP1_Secure_CPSR </item>
//    <item> SFDITEM_REG__SSP1_Secure_IMSC </item>
//    <item> SFDITEM_REG__SSP1_Secure_RIS </item>
//    <item> SFDITEM_REG__SSP1_Secure_MIS </item>
//    <item> SFDITEM_REG__SSP1_Secure_ICR </item>
//    <item> SFDITEM_REG__SSP1_Secure_DMACR </item>
//  </view>
//  


// -------------------------  Register Item Address: SSP2_Secure_CR0  -----------------------------
// SVD Line: 1424

unsigned int SSP2_Secure_CR0 __AT (0x50209000);



// -----------------------------  Field Item: SSP2_Secure_CR0_SCR  --------------------------------
// SVD Line: 1429

//  <item> SFDITEM_FIELD__SSP2_Secure_CR0_SCR
//    <name> SCR </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x50209000) Serial clock rate </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP2_Secure_CR0 >> 8) & 0xFF), ((SSP2_Secure_CR0 = (SSP2_Secure_CR0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SSP2_Secure_CR0_SPH  --------------------------------
// SVD Line: 1433

//  <item> SFDITEM_FIELD__SSP2_Secure_CR0_SPH
//    <name> SPH </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x50209000) SSPCLKOUT phase </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_CR0 ) </loc>
//      <o.7..7> SPH
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP2_Secure_CR0_SPO  --------------------------------
// SVD Line: 1437

//  <item> SFDITEM_FIELD__SSP2_Secure_CR0_SPO
//    <name> SPO </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50209000) SSPCLKOUT polarity </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_CR0 ) </loc>
//      <o.6..6> SPO
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP2_Secure_CR0_FRF  --------------------------------
// SVD Line: 1441

//  <item> SFDITEM_FIELD__SSP2_Secure_CR0_FRF
//    <name> FRF </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x50209000) Frame format </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP2_Secure_CR0 >> 4) & 0x3), ((SSP2_Secure_CR0 = (SSP2_Secure_CR0 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SSP2_Secure_CR0_DSS  --------------------------------
// SVD Line: 1445

//  <item> SFDITEM_FIELD__SSP2_Secure_CR0_DSS
//    <name> DSS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x50209000) Data Size Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP2_Secure_CR0 >> 0) & 0xF), ((SSP2_Secure_CR0 = (SSP2_Secure_CR0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_Secure_CR0  --------------------------------
// SVD Line: 1424

//  <rtree> SFDITEM_REG__SSP2_Secure_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50209000) Control register 0 </i>
//    <loc> ( (unsigned int)((SSP2_Secure_CR0 >> 0) & 0xFFFFFFFF), ((SSP2_Secure_CR0 = (SSP2_Secure_CR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_CR0_SCR </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_CR0_SPH </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_CR0_SPO </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_CR0_FRF </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_CR0_DSS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP2_Secure_CR1  -----------------------------
// SVD Line: 1451

unsigned int SSP2_Secure_CR1 __AT (0x50209004);



// -----------------------------  Field Item: SSP2_Secure_CR1_SOD  --------------------------------
// SVD Line: 1456

//  <item> SFDITEM_FIELD__SSP2_Secure_CR1_SOD
//    <name> SOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50209004) Slave-mode output disable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_CR1 ) </loc>
//      <o.3..3> SOD
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP2_Secure_CR1_MS  ---------------------------------
// SVD Line: 1460

//  <item> SFDITEM_FIELD__SSP2_Secure_CR1_MS
//    <name> MS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50209004) Master or slave mode select </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_CR1 ) </loc>
//      <o.2..2> MS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP2_Secure_CR1_SSE  --------------------------------
// SVD Line: 1464

//  <item> SFDITEM_FIELD__SSP2_Secure_CR1_SSE
//    <name> SSE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50209004) Synchronous serial port enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_CR1 ) </loc>
//      <o.1..1> SSE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP2_Secure_CR1_LBM  --------------------------------
// SVD Line: 1468

//  <item> SFDITEM_FIELD__SSP2_Secure_CR1_LBM
//    <name> LBM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50209004) Loop back mode </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_CR1 ) </loc>
//      <o.0..0> LBM
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_Secure_CR1  --------------------------------
// SVD Line: 1451

//  <rtree> SFDITEM_REG__SSP2_Secure_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50209004) Control register 1 </i>
//    <loc> ( (unsigned int)((SSP2_Secure_CR1 >> 0) & 0xFFFFFFFF), ((SSP2_Secure_CR1 = (SSP2_Secure_CR1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_CR1_SOD </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_CR1_MS </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_CR1_SSE </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_CR1_LBM </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP2_Secure_DR  -----------------------------
// SVD Line: 1474

unsigned int SSP2_Secure_DR __AT (0x50209008);



// -----------------------------  Field Item: SSP2_Secure_DR_Data  --------------------------------
// SVD Line: 1479

//  <item> SFDITEM_FIELD__SSP2_Secure_DR_Data
//    <name> Data </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x50209008) Transmit/Receive FIFO </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP2_Secure_DR >> 0) & 0xFFFF), ((SSP2_Secure_DR = (SSP2_Secure_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_Secure_DR  ---------------------------------
// SVD Line: 1474

//  <rtree> SFDITEM_REG__SSP2_Secure_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50209008) Data register </i>
//    <loc> ( (unsigned int)((SSP2_Secure_DR >> 0) & 0xFFFFFFFF), ((SSP2_Secure_DR = (SSP2_Secure_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_DR_Data </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP2_Secure_SR  -----------------------------
// SVD Line: 1485

unsigned int SSP2_Secure_SR __AT (0x5020900C);



// -----------------------------  Field Item: SSP2_Secure_SR_BSY  ---------------------------------
// SVD Line: 1490

//  <item> SFDITEM_FIELD__SSP2_Secure_SR_BSY
//    <name> BSY </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x5020900C) PrimeCell SSP busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_SR ) </loc>
//      <o.4..4> BSY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP2_Secure_SR_RFF  ---------------------------------
// SVD Line: 1494

//  <item> SFDITEM_FIELD__SSP2_Secure_SR_RFF
//    <name> RFF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5020900C) Receive FIFO full </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_SR ) </loc>
//      <o.3..3> RFF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP2_Secure_SR_RNE  ---------------------------------
// SVD Line: 1498

//  <item> SFDITEM_FIELD__SSP2_Secure_SR_RNE
//    <name> RNE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5020900C) Receive FIFO not empty </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_SR ) </loc>
//      <o.2..2> RNE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP2_Secure_SR_TNF  ---------------------------------
// SVD Line: 1502

//  <item> SFDITEM_FIELD__SSP2_Secure_SR_TNF
//    <name> TNF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5020900C) Transmit FIFO not full </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_SR ) </loc>
//      <o.1..1> TNF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP2_Secure_SR_TFE  ---------------------------------
// SVD Line: 1506

//  <item> SFDITEM_FIELD__SSP2_Secure_SR_TFE
//    <name> TFE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5020900C) Transmit FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_SR ) </loc>
//      <o.0..0> TFE
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_Secure_SR  ---------------------------------
// SVD Line: 1485

//  <rtree> SFDITEM_REG__SSP2_Secure_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5020900C) Status register </i>
//    <loc> ( (unsigned int)((SSP2_Secure_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_SR_BSY </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_SR_RFF </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_SR_RNE </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_SR_TNF </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_SR_TFE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP2_Secure_CPSR  ----------------------------
// SVD Line: 1512

unsigned int SSP2_Secure_CPSR __AT (0x50209010);



// --------------------------  Field Item: SSP2_Secure_CPSR_CPSDVSR  ------------------------------
// SVD Line: 1517

//  <item> SFDITEM_FIELD__SSP2_Secure_CPSR_CPSDVSR
//    <name> CPSDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x50209010) Clock prescale divisor </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP2_Secure_CPSR >> 0) & 0xFF), ((SSP2_Secure_CPSR = (SSP2_Secure_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: SSP2_Secure_CPSR  --------------------------------
// SVD Line: 1512

//  <rtree> SFDITEM_REG__SSP2_Secure_CPSR
//    <name> CPSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50209010) Clock prescale register </i>
//    <loc> ( (unsigned int)((SSP2_Secure_CPSR >> 0) & 0xFFFFFFFF), ((SSP2_Secure_CPSR = (SSP2_Secure_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_CPSR_CPSDVSR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP2_Secure_IMSC  ----------------------------
// SVD Line: 1523

unsigned int SSP2_Secure_IMSC __AT (0x50209014);



// ----------------------------  Field Item: SSP2_Secure_IMSC_TXIM  -------------------------------
// SVD Line: 1528

//  <item> SFDITEM_FIELD__SSP2_Secure_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50209014) Transmit FIFO interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_IMSC ) </loc>
//      <o.3..3> TXIM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP2_Secure_IMSC_RXIM  -------------------------------
// SVD Line: 1532

//  <item> SFDITEM_FIELD__SSP2_Secure_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50209014) Receive FIFO interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_IMSC ) </loc>
//      <o.2..2> RXIM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP2_Secure_IMSC_RTIM  -------------------------------
// SVD Line: 1536

//  <item> SFDITEM_FIELD__SSP2_Secure_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50209014) Receive timeout interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_IMSC ) </loc>
//      <o.1..1> RTIM
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP2_Secure_IMSC_RORIM  -------------------------------
// SVD Line: 1540

//  <item> SFDITEM_FIELD__SSP2_Secure_IMSC_RORIM
//    <name> RORIM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50209014) Receive overrun interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_IMSC ) </loc>
//      <o.0..0> RORIM
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: SSP2_Secure_IMSC  --------------------------------
// SVD Line: 1523

//  <rtree> SFDITEM_REG__SSP2_Secure_IMSC
//    <name> IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50209014) Interrupt mask set or clear register </i>
//    <loc> ( (unsigned int)((SSP2_Secure_IMSC >> 0) & 0xFFFFFFFF), ((SSP2_Secure_IMSC = (SSP2_Secure_IMSC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_IMSC_TXIM </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_IMSC_RORIM </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP2_Secure_RIS  -----------------------------
// SVD Line: 1546

unsigned int SSP2_Secure_RIS __AT (0x50209018);



// ----------------------------  Field Item: SSP2_Secure_RIS_TXRIS  -------------------------------
// SVD Line: 1551

//  <item> SFDITEM_FIELD__SSP2_Secure_RIS_TXRIS
//    <name> TXRIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x50209018) transmit FIFOraw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_RIS ) </loc>
//      <o.3..3> TXRIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP2_Secure_RIS_RXRIS  -------------------------------
// SVD Line: 1555

//  <item> SFDITEM_FIELD__SSP2_Secure_RIS_RXRIS
//    <name> RXRIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x50209018) receive FIFO raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_RIS ) </loc>
//      <o.2..2> RXRIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP2_Secure_RIS_RTRIS  -------------------------------
// SVD Line: 1559

//  <item> SFDITEM_FIELD__SSP2_Secure_RIS_RTRIS
//    <name> RTRIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x50209018) receive timeout raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_RIS ) </loc>
//      <o.1..1> RTRIS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP2_Secure_RIS_RORRIS  -------------------------------
// SVD Line: 1563

//  <item> SFDITEM_FIELD__SSP2_Secure_RIS_RORRIS
//    <name> RORRIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x50209018) receive over run raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_RIS ) </loc>
//      <o.0..0> RORRIS
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_Secure_RIS  --------------------------------
// SVD Line: 1546

//  <rtree> SFDITEM_REG__SSP2_Secure_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50209018) Raw interrupt status register </i>
//    <loc> ( (unsigned int)((SSP2_Secure_RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_RIS_TXRIS </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_RIS_RORRIS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP2_Secure_MIS  -----------------------------
// SVD Line: 1569

unsigned int SSP2_Secure_MIS __AT (0x5020901C);



// ----------------------------  Field Item: SSP2_Secure_MIS_TXMIS  -------------------------------
// SVD Line: 1574

//  <item> SFDITEM_FIELD__SSP2_Secure_MIS_TXMIS
//    <name> TXMIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5020901C) transmit FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_MIS ) </loc>
//      <o.3..3> TXMIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP2_Secure_MIS_RXMIS  -------------------------------
// SVD Line: 1578

//  <item> SFDITEM_FIELD__SSP2_Secure_MIS_RXMIS
//    <name> RXMIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5020901C) receive FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_MIS ) </loc>
//      <o.2..2> RXMIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP2_Secure_MIS_RTMIS  -------------------------------
// SVD Line: 1582

//  <item> SFDITEM_FIELD__SSP2_Secure_MIS_RTMIS
//    <name> RTMIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5020901C) receive timeout masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_MIS ) </loc>
//      <o.1..1> RTMIS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP2_Secure_MIS_RORMIS  -------------------------------
// SVD Line: 1586

//  <item> SFDITEM_FIELD__SSP2_Secure_MIS_RORMIS
//    <name> RORMIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5020901C) receive over run masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_MIS ) </loc>
//      <o.0..0> RORMIS
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_Secure_MIS  --------------------------------
// SVD Line: 1569

//  <rtree> SFDITEM_REG__SSP2_Secure_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5020901C) Masked interrupt status register </i>
//    <loc> ( (unsigned int)((SSP2_Secure_MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_MIS_TXMIS </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_MIS_RORMIS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP2_Secure_ICR  -----------------------------
// SVD Line: 1592

unsigned int SSP2_Secure_ICR __AT (0x50209020);



// ----------------------------  Field Item: SSP2_Secure_ICR_RTIC  --------------------------------
// SVD Line: 1597

//  <item> SFDITEM_FIELD__SSP2_Secure_ICR_RTIC
//    <name> RTIC </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x50209020) Clears the SSPRTINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_ICR ) </loc>
//      <o.1..1> RTIC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP2_Secure_ICR_RORIC  -------------------------------
// SVD Line: 1601

//  <item> SFDITEM_FIELD__SSP2_Secure_ICR_RORIC
//    <name> RORIC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x50209020) Clears the SSPRORINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_ICR ) </loc>
//      <o.0..0> RORIC
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_Secure_ICR  --------------------------------
// SVD Line: 1592

//  <rtree> SFDITEM_REG__SSP2_Secure_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x50209020) Interrupt clear register </i>
//    <loc> ( (unsigned int)((SSP2_Secure_ICR >> 0) & 0xFFFFFFFF), ((SSP2_Secure_ICR = (SSP2_Secure_ICR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_ICR_RTIC </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_ICR_RORIC </item>
//  </rtree>
//  


// ------------------------  Register Item Address: SSP2_Secure_DMACR  ----------------------------
// SVD Line: 1607

unsigned int SSP2_Secure_DMACR __AT (0x50209024);



// --------------------------  Field Item: SSP2_Secure_DMACR_TXDMAE  ------------------------------
// SVD Line: 1612

//  <item> SFDITEM_FIELD__SSP2_Secure_DMACR_TXDMAE
//    <name> TXDMAE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50209024) Transmit DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_DMACR ) </loc>
//      <o.1..1> TXDMAE
//    </check>
//  </item>
//  


// --------------------------  Field Item: SSP2_Secure_DMACR_RXDMAE  ------------------------------
// SVD Line: 1616

//  <item> SFDITEM_FIELD__SSP2_Secure_DMACR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50209024) Receive DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_DMACR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: SSP2_Secure_DMACR  -------------------------------
// SVD Line: 1607

//  <rtree> SFDITEM_REG__SSP2_Secure_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50209024) DMA control register </i>
//    <loc> ( (unsigned int)((SSP2_Secure_DMACR >> 0) & 0xFFFFFFFF), ((SSP2_Secure_DMACR = (SSP2_Secure_DMACR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_DMACR_TXDMAE </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_DMACR_RXDMAE </item>
//  </rtree>
//  


// ------------------------------  Peripheral View: SSP2_Secure  ----------------------------------
// SVD Line: 2986

//  <view> SSP2_Secure
//    <name> SSP2_Secure </name>
//    <item> SFDITEM_REG__SSP2_Secure_CR0 </item>
//    <item> SFDITEM_REG__SSP2_Secure_CR1 </item>
//    <item> SFDITEM_REG__SSP2_Secure_DR </item>
//    <item> SFDITEM_REG__SSP2_Secure_SR </item>
//    <item> SFDITEM_REG__SSP2_Secure_CPSR </item>
//    <item> SFDITEM_REG__SSP2_Secure_IMSC </item>
//    <item> SFDITEM_REG__SSP2_Secure_RIS </item>
//    <item> SFDITEM_REG__SSP2_Secure_MIS </item>
//    <item> SFDITEM_REG__SSP2_Secure_ICR </item>
//    <item> SFDITEM_REG__SSP2_Secure_DMACR </item>
//  </view>
//  


// -------------------------  Register Item Address: SSP3_Secure_CR0  -----------------------------
// SVD Line: 1424

unsigned int SSP3_Secure_CR0 __AT (0x5020A000);



// -----------------------------  Field Item: SSP3_Secure_CR0_SCR  --------------------------------
// SVD Line: 1429

//  <item> SFDITEM_FIELD__SSP3_Secure_CR0_SCR
//    <name> SCR </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x5020A000) Serial clock rate </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP3_Secure_CR0 >> 8) & 0xFF), ((SSP3_Secure_CR0 = (SSP3_Secure_CR0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SSP3_Secure_CR0_SPH  --------------------------------
// SVD Line: 1433

//  <item> SFDITEM_FIELD__SSP3_Secure_CR0_SPH
//    <name> SPH </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x5020A000) SSPCLKOUT phase </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_CR0 ) </loc>
//      <o.7..7> SPH
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP3_Secure_CR0_SPO  --------------------------------
// SVD Line: 1437

//  <item> SFDITEM_FIELD__SSP3_Secure_CR0_SPO
//    <name> SPO </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x5020A000) SSPCLKOUT polarity </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_CR0 ) </loc>
//      <o.6..6> SPO
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP3_Secure_CR0_FRF  --------------------------------
// SVD Line: 1441

//  <item> SFDITEM_FIELD__SSP3_Secure_CR0_FRF
//    <name> FRF </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x5020A000) Frame format </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP3_Secure_CR0 >> 4) & 0x3), ((SSP3_Secure_CR0 = (SSP3_Secure_CR0 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SSP3_Secure_CR0_DSS  --------------------------------
// SVD Line: 1445

//  <item> SFDITEM_FIELD__SSP3_Secure_CR0_DSS
//    <name> DSS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x5020A000) Data Size Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP3_Secure_CR0 >> 0) & 0xF), ((SSP3_Secure_CR0 = (SSP3_Secure_CR0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP3_Secure_CR0  --------------------------------
// SVD Line: 1424

//  <rtree> SFDITEM_REG__SSP3_Secure_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5020A000) Control register 0 </i>
//    <loc> ( (unsigned int)((SSP3_Secure_CR0 >> 0) & 0xFFFFFFFF), ((SSP3_Secure_CR0 = (SSP3_Secure_CR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP3_Secure_CR0_SCR </item>
//    <item> SFDITEM_FIELD__SSP3_Secure_CR0_SPH </item>
//    <item> SFDITEM_FIELD__SSP3_Secure_CR0_SPO </item>
//    <item> SFDITEM_FIELD__SSP3_Secure_CR0_FRF </item>
//    <item> SFDITEM_FIELD__SSP3_Secure_CR0_DSS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP3_Secure_CR1  -----------------------------
// SVD Line: 1451

unsigned int SSP3_Secure_CR1 __AT (0x5020A004);



// -----------------------------  Field Item: SSP3_Secure_CR1_SOD  --------------------------------
// SVD Line: 1456

//  <item> SFDITEM_FIELD__SSP3_Secure_CR1_SOD
//    <name> SOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x5020A004) Slave-mode output disable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_CR1 ) </loc>
//      <o.3..3> SOD
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP3_Secure_CR1_MS  ---------------------------------
// SVD Line: 1460

//  <item> SFDITEM_FIELD__SSP3_Secure_CR1_MS
//    <name> MS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x5020A004) Master or slave mode select </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_CR1 ) </loc>
//      <o.2..2> MS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP3_Secure_CR1_SSE  --------------------------------
// SVD Line: 1464

//  <item> SFDITEM_FIELD__SSP3_Secure_CR1_SSE
//    <name> SSE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5020A004) Synchronous serial port enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_CR1 ) </loc>
//      <o.1..1> SSE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP3_Secure_CR1_LBM  --------------------------------
// SVD Line: 1468

//  <item> SFDITEM_FIELD__SSP3_Secure_CR1_LBM
//    <name> LBM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5020A004) Loop back mode </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_CR1 ) </loc>
//      <o.0..0> LBM
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP3_Secure_CR1  --------------------------------
// SVD Line: 1451

//  <rtree> SFDITEM_REG__SSP3_Secure_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5020A004) Control register 1 </i>
//    <loc> ( (unsigned int)((SSP3_Secure_CR1 >> 0) & 0xFFFFFFFF), ((SSP3_Secure_CR1 = (SSP3_Secure_CR1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP3_Secure_CR1_SOD </item>
//    <item> SFDITEM_FIELD__SSP3_Secure_CR1_MS </item>
//    <item> SFDITEM_FIELD__SSP3_Secure_CR1_SSE </item>
//    <item> SFDITEM_FIELD__SSP3_Secure_CR1_LBM </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP3_Secure_DR  -----------------------------
// SVD Line: 1474

unsigned int SSP3_Secure_DR __AT (0x5020A008);



// -----------------------------  Field Item: SSP3_Secure_DR_Data  --------------------------------
// SVD Line: 1479

//  <item> SFDITEM_FIELD__SSP3_Secure_DR_Data
//    <name> Data </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x5020A008) Transmit/Receive FIFO </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP3_Secure_DR >> 0) & 0xFFFF), ((SSP3_Secure_DR = (SSP3_Secure_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP3_Secure_DR  ---------------------------------
// SVD Line: 1474

//  <rtree> SFDITEM_REG__SSP3_Secure_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5020A008) Data register </i>
//    <loc> ( (unsigned int)((SSP3_Secure_DR >> 0) & 0xFFFFFFFF), ((SSP3_Secure_DR = (SSP3_Secure_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP3_Secure_DR_Data </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP3_Secure_SR  -----------------------------
// SVD Line: 1485

unsigned int SSP3_Secure_SR __AT (0x5020A00C);



// -----------------------------  Field Item: SSP3_Secure_SR_BSY  ---------------------------------
// SVD Line: 1490

//  <item> SFDITEM_FIELD__SSP3_Secure_SR_BSY
//    <name> BSY </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x5020A00C) PrimeCell SSP busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_SR ) </loc>
//      <o.4..4> BSY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP3_Secure_SR_RFF  ---------------------------------
// SVD Line: 1494

//  <item> SFDITEM_FIELD__SSP3_Secure_SR_RFF
//    <name> RFF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5020A00C) Receive FIFO full </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_SR ) </loc>
//      <o.3..3> RFF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP3_Secure_SR_RNE  ---------------------------------
// SVD Line: 1498

//  <item> SFDITEM_FIELD__SSP3_Secure_SR_RNE
//    <name> RNE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5020A00C) Receive FIFO not empty </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_SR ) </loc>
//      <o.2..2> RNE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP3_Secure_SR_TNF  ---------------------------------
// SVD Line: 1502

//  <item> SFDITEM_FIELD__SSP3_Secure_SR_TNF
//    <name> TNF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5020A00C) Transmit FIFO not full </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_SR ) </loc>
//      <o.1..1> TNF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP3_Secure_SR_TFE  ---------------------------------
// SVD Line: 1506

//  <item> SFDITEM_FIELD__SSP3_Secure_SR_TFE
//    <name> TFE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5020A00C) Transmit FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_SR ) </loc>
//      <o.0..0> TFE
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP3_Secure_SR  ---------------------------------
// SVD Line: 1485

//  <rtree> SFDITEM_REG__SSP3_Secure_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5020A00C) Status register </i>
//    <loc> ( (unsigned int)((SSP3_Secure_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP3_Secure_SR_BSY </item>
//    <item> SFDITEM_FIELD__SSP3_Secure_SR_RFF </item>
//    <item> SFDITEM_FIELD__SSP3_Secure_SR_RNE </item>
//    <item> SFDITEM_FIELD__SSP3_Secure_SR_TNF </item>
//    <item> SFDITEM_FIELD__SSP3_Secure_SR_TFE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP3_Secure_CPSR  ----------------------------
// SVD Line: 1512

unsigned int SSP3_Secure_CPSR __AT (0x5020A010);



// --------------------------  Field Item: SSP3_Secure_CPSR_CPSDVSR  ------------------------------
// SVD Line: 1517

//  <item> SFDITEM_FIELD__SSP3_Secure_CPSR_CPSDVSR
//    <name> CPSDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x5020A010) Clock prescale divisor </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP3_Secure_CPSR >> 0) & 0xFF), ((SSP3_Secure_CPSR = (SSP3_Secure_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: SSP3_Secure_CPSR  --------------------------------
// SVD Line: 1512

//  <rtree> SFDITEM_REG__SSP3_Secure_CPSR
//    <name> CPSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5020A010) Clock prescale register </i>
//    <loc> ( (unsigned int)((SSP3_Secure_CPSR >> 0) & 0xFFFFFFFF), ((SSP3_Secure_CPSR = (SSP3_Secure_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP3_Secure_CPSR_CPSDVSR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP3_Secure_IMSC  ----------------------------
// SVD Line: 1523

unsigned int SSP3_Secure_IMSC __AT (0x5020A014);



// ----------------------------  Field Item: SSP3_Secure_IMSC_TXIM  -------------------------------
// SVD Line: 1528

//  <item> SFDITEM_FIELD__SSP3_Secure_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x5020A014) Transmit FIFO interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_IMSC ) </loc>
//      <o.3..3> TXIM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP3_Secure_IMSC_RXIM  -------------------------------
// SVD Line: 1532

//  <item> SFDITEM_FIELD__SSP3_Secure_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x5020A014) Receive FIFO interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_IMSC ) </loc>
//      <o.2..2> RXIM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP3_Secure_IMSC_RTIM  -------------------------------
// SVD Line: 1536

//  <item> SFDITEM_FIELD__SSP3_Secure_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5020A014) Receive timeout interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_IMSC ) </loc>
//      <o.1..1> RTIM
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP3_Secure_IMSC_RORIM  -------------------------------
// SVD Line: 1540

//  <item> SFDITEM_FIELD__SSP3_Secure_IMSC_RORIM
//    <name> RORIM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5020A014) Receive overrun interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_IMSC ) </loc>
//      <o.0..0> RORIM
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: SSP3_Secure_IMSC  --------------------------------
// SVD Line: 1523

//  <rtree> SFDITEM_REG__SSP3_Secure_IMSC
//    <name> IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5020A014) Interrupt mask set or clear register </i>
//    <loc> ( (unsigned int)((SSP3_Secure_IMSC >> 0) & 0xFFFFFFFF), ((SSP3_Secure_IMSC = (SSP3_Secure_IMSC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP3_Secure_IMSC_TXIM </item>
//    <item> SFDITEM_FIELD__SSP3_Secure_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__SSP3_Secure_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__SSP3_Secure_IMSC_RORIM </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP3_Secure_RIS  -----------------------------
// SVD Line: 1546

unsigned int SSP3_Secure_RIS __AT (0x5020A018);



// ----------------------------  Field Item: SSP3_Secure_RIS_TXRIS  -------------------------------
// SVD Line: 1551

//  <item> SFDITEM_FIELD__SSP3_Secure_RIS_TXRIS
//    <name> TXRIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5020A018) transmit FIFOraw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_RIS ) </loc>
//      <o.3..3> TXRIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP3_Secure_RIS_RXRIS  -------------------------------
// SVD Line: 1555

//  <item> SFDITEM_FIELD__SSP3_Secure_RIS_RXRIS
//    <name> RXRIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5020A018) receive FIFO raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_RIS ) </loc>
//      <o.2..2> RXRIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP3_Secure_RIS_RTRIS  -------------------------------
// SVD Line: 1559

//  <item> SFDITEM_FIELD__SSP3_Secure_RIS_RTRIS
//    <name> RTRIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5020A018) receive timeout raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_RIS ) </loc>
//      <o.1..1> RTRIS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP3_Secure_RIS_RORRIS  -------------------------------
// SVD Line: 1563

//  <item> SFDITEM_FIELD__SSP3_Secure_RIS_RORRIS
//    <name> RORRIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5020A018) receive over run raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_RIS ) </loc>
//      <o.0..0> RORRIS
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP3_Secure_RIS  --------------------------------
// SVD Line: 1546

//  <rtree> SFDITEM_REG__SSP3_Secure_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5020A018) Raw interrupt status register </i>
//    <loc> ( (unsigned int)((SSP3_Secure_RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP3_Secure_RIS_TXRIS </item>
//    <item> SFDITEM_FIELD__SSP3_Secure_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__SSP3_Secure_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__SSP3_Secure_RIS_RORRIS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP3_Secure_MIS  -----------------------------
// SVD Line: 1569

unsigned int SSP3_Secure_MIS __AT (0x5020A01C);



// ----------------------------  Field Item: SSP3_Secure_MIS_TXMIS  -------------------------------
// SVD Line: 1574

//  <item> SFDITEM_FIELD__SSP3_Secure_MIS_TXMIS
//    <name> TXMIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5020A01C) transmit FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_MIS ) </loc>
//      <o.3..3> TXMIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP3_Secure_MIS_RXMIS  -------------------------------
// SVD Line: 1578

//  <item> SFDITEM_FIELD__SSP3_Secure_MIS_RXMIS
//    <name> RXMIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5020A01C) receive FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_MIS ) </loc>
//      <o.2..2> RXMIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP3_Secure_MIS_RTMIS  -------------------------------
// SVD Line: 1582

//  <item> SFDITEM_FIELD__SSP3_Secure_MIS_RTMIS
//    <name> RTMIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5020A01C) receive timeout masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_MIS ) </loc>
//      <o.1..1> RTMIS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP3_Secure_MIS_RORMIS  -------------------------------
// SVD Line: 1586

//  <item> SFDITEM_FIELD__SSP3_Secure_MIS_RORMIS
//    <name> RORMIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5020A01C) receive over run masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_MIS ) </loc>
//      <o.0..0> RORMIS
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP3_Secure_MIS  --------------------------------
// SVD Line: 1569

//  <rtree> SFDITEM_REG__SSP3_Secure_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5020A01C) Masked interrupt status register </i>
//    <loc> ( (unsigned int)((SSP3_Secure_MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP3_Secure_MIS_TXMIS </item>
//    <item> SFDITEM_FIELD__SSP3_Secure_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__SSP3_Secure_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__SSP3_Secure_MIS_RORMIS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP3_Secure_ICR  -----------------------------
// SVD Line: 1592

unsigned int SSP3_Secure_ICR __AT (0x5020A020);



// ----------------------------  Field Item: SSP3_Secure_ICR_RTIC  --------------------------------
// SVD Line: 1597

//  <item> SFDITEM_FIELD__SSP3_Secure_ICR_RTIC
//    <name> RTIC </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x5020A020) Clears the SSPRTINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_ICR ) </loc>
//      <o.1..1> RTIC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP3_Secure_ICR_RORIC  -------------------------------
// SVD Line: 1601

//  <item> SFDITEM_FIELD__SSP3_Secure_ICR_RORIC
//    <name> RORIC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x5020A020) Clears the SSPRORINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_ICR ) </loc>
//      <o.0..0> RORIC
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP3_Secure_ICR  --------------------------------
// SVD Line: 1592

//  <rtree> SFDITEM_REG__SSP3_Secure_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x5020A020) Interrupt clear register </i>
//    <loc> ( (unsigned int)((SSP3_Secure_ICR >> 0) & 0xFFFFFFFF), ((SSP3_Secure_ICR = (SSP3_Secure_ICR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP3_Secure_ICR_RTIC </item>
//    <item> SFDITEM_FIELD__SSP3_Secure_ICR_RORIC </item>
//  </rtree>
//  


// ------------------------  Register Item Address: SSP3_Secure_DMACR  ----------------------------
// SVD Line: 1607

unsigned int SSP3_Secure_DMACR __AT (0x5020A024);



// --------------------------  Field Item: SSP3_Secure_DMACR_TXDMAE  ------------------------------
// SVD Line: 1612

//  <item> SFDITEM_FIELD__SSP3_Secure_DMACR_TXDMAE
//    <name> TXDMAE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5020A024) Transmit DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_DMACR ) </loc>
//      <o.1..1> TXDMAE
//    </check>
//  </item>
//  


// --------------------------  Field Item: SSP3_Secure_DMACR_RXDMAE  ------------------------------
// SVD Line: 1616

//  <item> SFDITEM_FIELD__SSP3_Secure_DMACR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5020A024) Receive DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP3_Secure_DMACR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: SSP3_Secure_DMACR  -------------------------------
// SVD Line: 1607

//  <rtree> SFDITEM_REG__SSP3_Secure_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5020A024) DMA control register </i>
//    <loc> ( (unsigned int)((SSP3_Secure_DMACR >> 0) & 0xFFFFFFFF), ((SSP3_Secure_DMACR = (SSP3_Secure_DMACR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP3_Secure_DMACR_TXDMAE </item>
//    <item> SFDITEM_FIELD__SSP3_Secure_DMACR_RXDMAE </item>
//  </rtree>
//  


// ------------------------------  Peripheral View: SSP3_Secure  ----------------------------------
// SVD Line: 2993

//  <view> SSP3_Secure
//    <name> SSP3_Secure </name>
//    <item> SFDITEM_REG__SSP3_Secure_CR0 </item>
//    <item> SFDITEM_REG__SSP3_Secure_CR1 </item>
//    <item> SFDITEM_REG__SSP3_Secure_DR </item>
//    <item> SFDITEM_REG__SSP3_Secure_SR </item>
//    <item> SFDITEM_REG__SSP3_Secure_CPSR </item>
//    <item> SFDITEM_REG__SSP3_Secure_IMSC </item>
//    <item> SFDITEM_REG__SSP3_Secure_RIS </item>
//    <item> SFDITEM_REG__SSP3_Secure_MIS </item>
//    <item> SFDITEM_REG__SSP3_Secure_ICR </item>
//    <item> SFDITEM_REG__SSP3_Secure_DMACR </item>
//  </view>
//  


// -------------------------  Register Item Address: SSP4_Secure_CR0  -----------------------------
// SVD Line: 1424

unsigned int SSP4_Secure_CR0 __AT (0x5020B000);



// -----------------------------  Field Item: SSP4_Secure_CR0_SCR  --------------------------------
// SVD Line: 1429

//  <item> SFDITEM_FIELD__SSP4_Secure_CR0_SCR
//    <name> SCR </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x5020B000) Serial clock rate </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP4_Secure_CR0 >> 8) & 0xFF), ((SSP4_Secure_CR0 = (SSP4_Secure_CR0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SSP4_Secure_CR0_SPH  --------------------------------
// SVD Line: 1433

//  <item> SFDITEM_FIELD__SSP4_Secure_CR0_SPH
//    <name> SPH </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x5020B000) SSPCLKOUT phase </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_CR0 ) </loc>
//      <o.7..7> SPH
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP4_Secure_CR0_SPO  --------------------------------
// SVD Line: 1437

//  <item> SFDITEM_FIELD__SSP4_Secure_CR0_SPO
//    <name> SPO </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x5020B000) SSPCLKOUT polarity </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_CR0 ) </loc>
//      <o.6..6> SPO
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP4_Secure_CR0_FRF  --------------------------------
// SVD Line: 1441

//  <item> SFDITEM_FIELD__SSP4_Secure_CR0_FRF
//    <name> FRF </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x5020B000) Frame format </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP4_Secure_CR0 >> 4) & 0x3), ((SSP4_Secure_CR0 = (SSP4_Secure_CR0 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SSP4_Secure_CR0_DSS  --------------------------------
// SVD Line: 1445

//  <item> SFDITEM_FIELD__SSP4_Secure_CR0_DSS
//    <name> DSS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x5020B000) Data Size Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP4_Secure_CR0 >> 0) & 0xF), ((SSP4_Secure_CR0 = (SSP4_Secure_CR0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP4_Secure_CR0  --------------------------------
// SVD Line: 1424

//  <rtree> SFDITEM_REG__SSP4_Secure_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5020B000) Control register 0 </i>
//    <loc> ( (unsigned int)((SSP4_Secure_CR0 >> 0) & 0xFFFFFFFF), ((SSP4_Secure_CR0 = (SSP4_Secure_CR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP4_Secure_CR0_SCR </item>
//    <item> SFDITEM_FIELD__SSP4_Secure_CR0_SPH </item>
//    <item> SFDITEM_FIELD__SSP4_Secure_CR0_SPO </item>
//    <item> SFDITEM_FIELD__SSP4_Secure_CR0_FRF </item>
//    <item> SFDITEM_FIELD__SSP4_Secure_CR0_DSS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP4_Secure_CR1  -----------------------------
// SVD Line: 1451

unsigned int SSP4_Secure_CR1 __AT (0x5020B004);



// -----------------------------  Field Item: SSP4_Secure_CR1_SOD  --------------------------------
// SVD Line: 1456

//  <item> SFDITEM_FIELD__SSP4_Secure_CR1_SOD
//    <name> SOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x5020B004) Slave-mode output disable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_CR1 ) </loc>
//      <o.3..3> SOD
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP4_Secure_CR1_MS  ---------------------------------
// SVD Line: 1460

//  <item> SFDITEM_FIELD__SSP4_Secure_CR1_MS
//    <name> MS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x5020B004) Master or slave mode select </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_CR1 ) </loc>
//      <o.2..2> MS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP4_Secure_CR1_SSE  --------------------------------
// SVD Line: 1464

//  <item> SFDITEM_FIELD__SSP4_Secure_CR1_SSE
//    <name> SSE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5020B004) Synchronous serial port enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_CR1 ) </loc>
//      <o.1..1> SSE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP4_Secure_CR1_LBM  --------------------------------
// SVD Line: 1468

//  <item> SFDITEM_FIELD__SSP4_Secure_CR1_LBM
//    <name> LBM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5020B004) Loop back mode </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_CR1 ) </loc>
//      <o.0..0> LBM
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP4_Secure_CR1  --------------------------------
// SVD Line: 1451

//  <rtree> SFDITEM_REG__SSP4_Secure_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5020B004) Control register 1 </i>
//    <loc> ( (unsigned int)((SSP4_Secure_CR1 >> 0) & 0xFFFFFFFF), ((SSP4_Secure_CR1 = (SSP4_Secure_CR1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP4_Secure_CR1_SOD </item>
//    <item> SFDITEM_FIELD__SSP4_Secure_CR1_MS </item>
//    <item> SFDITEM_FIELD__SSP4_Secure_CR1_SSE </item>
//    <item> SFDITEM_FIELD__SSP4_Secure_CR1_LBM </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP4_Secure_DR  -----------------------------
// SVD Line: 1474

unsigned int SSP4_Secure_DR __AT (0x5020B008);



// -----------------------------  Field Item: SSP4_Secure_DR_Data  --------------------------------
// SVD Line: 1479

//  <item> SFDITEM_FIELD__SSP4_Secure_DR_Data
//    <name> Data </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x5020B008) Transmit/Receive FIFO </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP4_Secure_DR >> 0) & 0xFFFF), ((SSP4_Secure_DR = (SSP4_Secure_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP4_Secure_DR  ---------------------------------
// SVD Line: 1474

//  <rtree> SFDITEM_REG__SSP4_Secure_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5020B008) Data register </i>
//    <loc> ( (unsigned int)((SSP4_Secure_DR >> 0) & 0xFFFFFFFF), ((SSP4_Secure_DR = (SSP4_Secure_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP4_Secure_DR_Data </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP4_Secure_SR  -----------------------------
// SVD Line: 1485

unsigned int SSP4_Secure_SR __AT (0x5020B00C);



// -----------------------------  Field Item: SSP4_Secure_SR_BSY  ---------------------------------
// SVD Line: 1490

//  <item> SFDITEM_FIELD__SSP4_Secure_SR_BSY
//    <name> BSY </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x5020B00C) PrimeCell SSP busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_SR ) </loc>
//      <o.4..4> BSY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP4_Secure_SR_RFF  ---------------------------------
// SVD Line: 1494

//  <item> SFDITEM_FIELD__SSP4_Secure_SR_RFF
//    <name> RFF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5020B00C) Receive FIFO full </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_SR ) </loc>
//      <o.3..3> RFF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP4_Secure_SR_RNE  ---------------------------------
// SVD Line: 1498

//  <item> SFDITEM_FIELD__SSP4_Secure_SR_RNE
//    <name> RNE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5020B00C) Receive FIFO not empty </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_SR ) </loc>
//      <o.2..2> RNE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP4_Secure_SR_TNF  ---------------------------------
// SVD Line: 1502

//  <item> SFDITEM_FIELD__SSP4_Secure_SR_TNF
//    <name> TNF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5020B00C) Transmit FIFO not full </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_SR ) </loc>
//      <o.1..1> TNF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP4_Secure_SR_TFE  ---------------------------------
// SVD Line: 1506

//  <item> SFDITEM_FIELD__SSP4_Secure_SR_TFE
//    <name> TFE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5020B00C) Transmit FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_SR ) </loc>
//      <o.0..0> TFE
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP4_Secure_SR  ---------------------------------
// SVD Line: 1485

//  <rtree> SFDITEM_REG__SSP4_Secure_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5020B00C) Status register </i>
//    <loc> ( (unsigned int)((SSP4_Secure_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP4_Secure_SR_BSY </item>
//    <item> SFDITEM_FIELD__SSP4_Secure_SR_RFF </item>
//    <item> SFDITEM_FIELD__SSP4_Secure_SR_RNE </item>
//    <item> SFDITEM_FIELD__SSP4_Secure_SR_TNF </item>
//    <item> SFDITEM_FIELD__SSP4_Secure_SR_TFE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP4_Secure_CPSR  ----------------------------
// SVD Line: 1512

unsigned int SSP4_Secure_CPSR __AT (0x5020B010);



// --------------------------  Field Item: SSP4_Secure_CPSR_CPSDVSR  ------------------------------
// SVD Line: 1517

//  <item> SFDITEM_FIELD__SSP4_Secure_CPSR_CPSDVSR
//    <name> CPSDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x5020B010) Clock prescale divisor </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP4_Secure_CPSR >> 0) & 0xFF), ((SSP4_Secure_CPSR = (SSP4_Secure_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: SSP4_Secure_CPSR  --------------------------------
// SVD Line: 1512

//  <rtree> SFDITEM_REG__SSP4_Secure_CPSR
//    <name> CPSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5020B010) Clock prescale register </i>
//    <loc> ( (unsigned int)((SSP4_Secure_CPSR >> 0) & 0xFFFFFFFF), ((SSP4_Secure_CPSR = (SSP4_Secure_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP4_Secure_CPSR_CPSDVSR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP4_Secure_IMSC  ----------------------------
// SVD Line: 1523

unsigned int SSP4_Secure_IMSC __AT (0x5020B014);



// ----------------------------  Field Item: SSP4_Secure_IMSC_TXIM  -------------------------------
// SVD Line: 1528

//  <item> SFDITEM_FIELD__SSP4_Secure_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x5020B014) Transmit FIFO interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_IMSC ) </loc>
//      <o.3..3> TXIM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP4_Secure_IMSC_RXIM  -------------------------------
// SVD Line: 1532

//  <item> SFDITEM_FIELD__SSP4_Secure_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x5020B014) Receive FIFO interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_IMSC ) </loc>
//      <o.2..2> RXIM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP4_Secure_IMSC_RTIM  -------------------------------
// SVD Line: 1536

//  <item> SFDITEM_FIELD__SSP4_Secure_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5020B014) Receive timeout interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_IMSC ) </loc>
//      <o.1..1> RTIM
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP4_Secure_IMSC_RORIM  -------------------------------
// SVD Line: 1540

//  <item> SFDITEM_FIELD__SSP4_Secure_IMSC_RORIM
//    <name> RORIM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5020B014) Receive overrun interrupt mask </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_IMSC ) </loc>
//      <o.0..0> RORIM
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: SSP4_Secure_IMSC  --------------------------------
// SVD Line: 1523

//  <rtree> SFDITEM_REG__SSP4_Secure_IMSC
//    <name> IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5020B014) Interrupt mask set or clear register </i>
//    <loc> ( (unsigned int)((SSP4_Secure_IMSC >> 0) & 0xFFFFFFFF), ((SSP4_Secure_IMSC = (SSP4_Secure_IMSC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP4_Secure_IMSC_TXIM </item>
//    <item> SFDITEM_FIELD__SSP4_Secure_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__SSP4_Secure_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__SSP4_Secure_IMSC_RORIM </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP4_Secure_RIS  -----------------------------
// SVD Line: 1546

unsigned int SSP4_Secure_RIS __AT (0x5020B018);



// ----------------------------  Field Item: SSP4_Secure_RIS_TXRIS  -------------------------------
// SVD Line: 1551

//  <item> SFDITEM_FIELD__SSP4_Secure_RIS_TXRIS
//    <name> TXRIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5020B018) transmit FIFOraw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_RIS ) </loc>
//      <o.3..3> TXRIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP4_Secure_RIS_RXRIS  -------------------------------
// SVD Line: 1555

//  <item> SFDITEM_FIELD__SSP4_Secure_RIS_RXRIS
//    <name> RXRIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5020B018) receive FIFO raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_RIS ) </loc>
//      <o.2..2> RXRIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP4_Secure_RIS_RTRIS  -------------------------------
// SVD Line: 1559

//  <item> SFDITEM_FIELD__SSP4_Secure_RIS_RTRIS
//    <name> RTRIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5020B018) receive timeout raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_RIS ) </loc>
//      <o.1..1> RTRIS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP4_Secure_RIS_RORRIS  -------------------------------
// SVD Line: 1563

//  <item> SFDITEM_FIELD__SSP4_Secure_RIS_RORRIS
//    <name> RORRIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5020B018) receive over run raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_RIS ) </loc>
//      <o.0..0> RORRIS
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP4_Secure_RIS  --------------------------------
// SVD Line: 1546

//  <rtree> SFDITEM_REG__SSP4_Secure_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5020B018) Raw interrupt status register </i>
//    <loc> ( (unsigned int)((SSP4_Secure_RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP4_Secure_RIS_TXRIS </item>
//    <item> SFDITEM_FIELD__SSP4_Secure_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__SSP4_Secure_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__SSP4_Secure_RIS_RORRIS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP4_Secure_MIS  -----------------------------
// SVD Line: 1569

unsigned int SSP4_Secure_MIS __AT (0x5020B01C);



// ----------------------------  Field Item: SSP4_Secure_MIS_TXMIS  -------------------------------
// SVD Line: 1574

//  <item> SFDITEM_FIELD__SSP4_Secure_MIS_TXMIS
//    <name> TXMIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5020B01C) transmit FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_MIS ) </loc>
//      <o.3..3> TXMIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP4_Secure_MIS_RXMIS  -------------------------------
// SVD Line: 1578

//  <item> SFDITEM_FIELD__SSP4_Secure_MIS_RXMIS
//    <name> RXMIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5020B01C) receive FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_MIS ) </loc>
//      <o.2..2> RXMIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP4_Secure_MIS_RTMIS  -------------------------------
// SVD Line: 1582

//  <item> SFDITEM_FIELD__SSP4_Secure_MIS_RTMIS
//    <name> RTMIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5020B01C) receive timeout masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_MIS ) </loc>
//      <o.1..1> RTMIS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP4_Secure_MIS_RORMIS  -------------------------------
// SVD Line: 1586

//  <item> SFDITEM_FIELD__SSP4_Secure_MIS_RORMIS
//    <name> RORMIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5020B01C) receive over run masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_MIS ) </loc>
//      <o.0..0> RORMIS
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP4_Secure_MIS  --------------------------------
// SVD Line: 1569

//  <rtree> SFDITEM_REG__SSP4_Secure_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5020B01C) Masked interrupt status register </i>
//    <loc> ( (unsigned int)((SSP4_Secure_MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP4_Secure_MIS_TXMIS </item>
//    <item> SFDITEM_FIELD__SSP4_Secure_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__SSP4_Secure_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__SSP4_Secure_MIS_RORMIS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP4_Secure_ICR  -----------------------------
// SVD Line: 1592

unsigned int SSP4_Secure_ICR __AT (0x5020B020);



// ----------------------------  Field Item: SSP4_Secure_ICR_RTIC  --------------------------------
// SVD Line: 1597

//  <item> SFDITEM_FIELD__SSP4_Secure_ICR_RTIC
//    <name> RTIC </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x5020B020) Clears the SSPRTINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_ICR ) </loc>
//      <o.1..1> RTIC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP4_Secure_ICR_RORIC  -------------------------------
// SVD Line: 1601

//  <item> SFDITEM_FIELD__SSP4_Secure_ICR_RORIC
//    <name> RORIC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x5020B020) Clears the SSPRORINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_ICR ) </loc>
//      <o.0..0> RORIC
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP4_Secure_ICR  --------------------------------
// SVD Line: 1592

//  <rtree> SFDITEM_REG__SSP4_Secure_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x5020B020) Interrupt clear register </i>
//    <loc> ( (unsigned int)((SSP4_Secure_ICR >> 0) & 0xFFFFFFFF), ((SSP4_Secure_ICR = (SSP4_Secure_ICR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP4_Secure_ICR_RTIC </item>
//    <item> SFDITEM_FIELD__SSP4_Secure_ICR_RORIC </item>
//  </rtree>
//  


// ------------------------  Register Item Address: SSP4_Secure_DMACR  ----------------------------
// SVD Line: 1607

unsigned int SSP4_Secure_DMACR __AT (0x5020B024);



// --------------------------  Field Item: SSP4_Secure_DMACR_TXDMAE  ------------------------------
// SVD Line: 1612

//  <item> SFDITEM_FIELD__SSP4_Secure_DMACR_TXDMAE
//    <name> TXDMAE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5020B024) Transmit DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_DMACR ) </loc>
//      <o.1..1> TXDMAE
//    </check>
//  </item>
//  


// --------------------------  Field Item: SSP4_Secure_DMACR_RXDMAE  ------------------------------
// SVD Line: 1616

//  <item> SFDITEM_FIELD__SSP4_Secure_DMACR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5020B024) Receive DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP4_Secure_DMACR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: SSP4_Secure_DMACR  -------------------------------
// SVD Line: 1607

//  <rtree> SFDITEM_REG__SSP4_Secure_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5020B024) DMA control register </i>
//    <loc> ( (unsigned int)((SSP4_Secure_DMACR >> 0) & 0xFFFFFFFF), ((SSP4_Secure_DMACR = (SSP4_Secure_DMACR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP4_Secure_DMACR_TXDMAE </item>
//    <item> SFDITEM_FIELD__SSP4_Secure_DMACR_RXDMAE </item>
//  </rtree>
//  


// ------------------------------  Peripheral View: SSP4_Secure  ----------------------------------
// SVD Line: 3000

//  <view> SSP4_Secure
//    <name> SSP4_Secure </name>
//    <item> SFDITEM_REG__SSP4_Secure_CR0 </item>
//    <item> SFDITEM_REG__SSP4_Secure_CR1 </item>
//    <item> SFDITEM_REG__SSP4_Secure_DR </item>
//    <item> SFDITEM_REG__SSP4_Secure_SR </item>
//    <item> SFDITEM_REG__SSP4_Secure_CPSR </item>
//    <item> SFDITEM_REG__SSP4_Secure_IMSC </item>
//    <item> SFDITEM_REG__SSP4_Secure_RIS </item>
//    <item> SFDITEM_REG__SSP4_Secure_MIS </item>
//    <item> SFDITEM_REG__SSP4_Secure_ICR </item>
//    <item> SFDITEM_REG__SSP4_Secure_DMACR </item>
//  </view>
//  


// -----------------------  Register Item Address: I2C0_Secure_CONTROL  ---------------------------
// SVD Line: 1687

unsigned int I2C0_Secure_CONTROL __AT (0x50207000);



// ---------------------------  Field Item: I2C0_Secure_CONTROL_SDA  ------------------------------
// SVD Line: 1692

//  <item> SFDITEM_FIELD__I2C0_Secure_CONTROL_SDA
//    <name> SDA </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x50207000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_Secure_CONTROL ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2C0_Secure_CONTROL_SCL  ------------------------------
// SVD Line: 1696

//  <item> SFDITEM_FIELD__I2C0_Secure_CONTROL_SCL
//    <name> SCL </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x50207000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_Secure_CONTROL ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: I2C0_Secure_CONTROL  ------------------------------
// SVD Line: 1687

//  <rtree> SFDITEM_REG__I2C0_Secure_CONTROL
//    <name> CONTROL </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50207000) Control Status </i>
//    <loc> ( (unsigned int)((I2C0_Secure_CONTROL >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C0_Secure_CONTROL_SDA </item>
//    <item> SFDITEM_FIELD__I2C0_Secure_CONTROL_SCL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: I2C0_Secure_CONTROLS  --------------------------
// SVD Line: 1702

unsigned int I2C0_Secure_CONTROLS __AT (0x50207000);



// --------------------------  Field Item: I2C0_Secure_CONTROLS_SDA  ------------------------------
// SVD Line: 1708

//  <item> SFDITEM_FIELD__I2C0_Secure_CONTROLS_SDA
//    <name> SDA </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x50207000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_Secure_CONTROLS ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// --------------------------  Field Item: I2C0_Secure_CONTROLS_SCL  ------------------------------
// SVD Line: 1712

//  <item> SFDITEM_FIELD__I2C0_Secure_CONTROLS_SCL
//    <name> SCL </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x50207000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_Secure_CONTROLS ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// --------------------------  Register RTree: I2C0_Secure_CONTROLS  ------------------------------
// SVD Line: 1702

//  <rtree> SFDITEM_REG__I2C0_Secure_CONTROLS
//    <name> CONTROLS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x50207000) Control Set </i>
//    <loc> ( (unsigned int)((I2C0_Secure_CONTROLS >> 0) & 0xFFFFFFFF), ((I2C0_Secure_CONTROLS = (I2C0_Secure_CONTROLS & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_Secure_CONTROLS_SDA </item>
//    <item> SFDITEM_FIELD__I2C0_Secure_CONTROLS_SCL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: I2C0_Secure_CONTROLC  --------------------------
// SVD Line: 1718

unsigned int I2C0_Secure_CONTROLC __AT (0x50207004);



// --------------------------  Field Item: I2C0_Secure_CONTROLC_SDA  ------------------------------
// SVD Line: 1723

//  <item> SFDITEM_FIELD__I2C0_Secure_CONTROLC_SDA
//    <name> SDA </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x50207004) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_Secure_CONTROLC ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// --------------------------  Field Item: I2C0_Secure_CONTROLC_SCL  ------------------------------
// SVD Line: 1727

//  <item> SFDITEM_FIELD__I2C0_Secure_CONTROLC_SCL
//    <name> SCL </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x50207004) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_Secure_CONTROLC ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// --------------------------  Register RTree: I2C0_Secure_CONTROLC  ------------------------------
// SVD Line: 1718

//  <rtree> SFDITEM_REG__I2C0_Secure_CONTROLC
//    <name> CONTROLC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x50207004) Control Clear </i>
//    <loc> ( (unsigned int)((I2C0_Secure_CONTROLC >> 0) & 0xFFFFFFFF), ((I2C0_Secure_CONTROLC = (I2C0_Secure_CONTROLC & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_Secure_CONTROLC_SDA </item>
//    <item> SFDITEM_FIELD__I2C0_Secure_CONTROLC_SCL </item>
//  </rtree>
//  


// ------------------------------  Peripheral View: I2C0_Secure  ----------------------------------
// SVD Line: 3007

//  <view> I2C0_Secure
//    <name> I2C0_Secure </name>
//    <item> SFDITEM_REG__I2C0_Secure_CONTROL </item>
//    <item> SFDITEM_REG__I2C0_Secure_CONTROLS </item>
//    <item> SFDITEM_REG__I2C0_Secure_CONTROLC </item>
//  </view>
//  


// -----------------------  Register Item Address: I2C1_Secure_CONTROL  ---------------------------
// SVD Line: 1687

unsigned int I2C1_Secure_CONTROL __AT (0x50208000);



// ---------------------------  Field Item: I2C1_Secure_CONTROL_SDA  ------------------------------
// SVD Line: 1692

//  <item> SFDITEM_FIELD__I2C1_Secure_CONTROL_SDA
//    <name> SDA </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x50208000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_Secure_CONTROL ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2C1_Secure_CONTROL_SCL  ------------------------------
// SVD Line: 1696

//  <item> SFDITEM_FIELD__I2C1_Secure_CONTROL_SCL
//    <name> SCL </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x50208000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_Secure_CONTROL ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: I2C1_Secure_CONTROL  ------------------------------
// SVD Line: 1687

//  <rtree> SFDITEM_REG__I2C1_Secure_CONTROL
//    <name> CONTROL </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50208000) Control Status </i>
//    <loc> ( (unsigned int)((I2C1_Secure_CONTROL >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C1_Secure_CONTROL_SDA </item>
//    <item> SFDITEM_FIELD__I2C1_Secure_CONTROL_SCL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: I2C1_Secure_CONTROLS  --------------------------
// SVD Line: 1702

unsigned int I2C1_Secure_CONTROLS __AT (0x50208000);



// --------------------------  Field Item: I2C1_Secure_CONTROLS_SDA  ------------------------------
// SVD Line: 1708

//  <item> SFDITEM_FIELD__I2C1_Secure_CONTROLS_SDA
//    <name> SDA </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x50208000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_Secure_CONTROLS ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// --------------------------  Field Item: I2C1_Secure_CONTROLS_SCL  ------------------------------
// SVD Line: 1712

//  <item> SFDITEM_FIELD__I2C1_Secure_CONTROLS_SCL
//    <name> SCL </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x50208000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_Secure_CONTROLS ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// --------------------------  Register RTree: I2C1_Secure_CONTROLS  ------------------------------
// SVD Line: 1702

//  <rtree> SFDITEM_REG__I2C1_Secure_CONTROLS
//    <name> CONTROLS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x50208000) Control Set </i>
//    <loc> ( (unsigned int)((I2C1_Secure_CONTROLS >> 0) & 0xFFFFFFFF), ((I2C1_Secure_CONTROLS = (I2C1_Secure_CONTROLS & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_Secure_CONTROLS_SDA </item>
//    <item> SFDITEM_FIELD__I2C1_Secure_CONTROLS_SCL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: I2C1_Secure_CONTROLC  --------------------------
// SVD Line: 1718

unsigned int I2C1_Secure_CONTROLC __AT (0x50208004);



// --------------------------  Field Item: I2C1_Secure_CONTROLC_SDA  ------------------------------
// SVD Line: 1723

//  <item> SFDITEM_FIELD__I2C1_Secure_CONTROLC_SDA
//    <name> SDA </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x50208004) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_Secure_CONTROLC ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// --------------------------  Field Item: I2C1_Secure_CONTROLC_SCL  ------------------------------
// SVD Line: 1727

//  <item> SFDITEM_FIELD__I2C1_Secure_CONTROLC_SCL
//    <name> SCL </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x50208004) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_Secure_CONTROLC ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// --------------------------  Register RTree: I2C1_Secure_CONTROLC  ------------------------------
// SVD Line: 1718

//  <rtree> SFDITEM_REG__I2C1_Secure_CONTROLC
//    <name> CONTROLC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x50208004) Control Clear </i>
//    <loc> ( (unsigned int)((I2C1_Secure_CONTROLC >> 0) & 0xFFFFFFFF), ((I2C1_Secure_CONTROLC = (I2C1_Secure_CONTROLC & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_Secure_CONTROLC_SDA </item>
//    <item> SFDITEM_FIELD__I2C1_Secure_CONTROLC_SCL </item>
//  </rtree>
//  


// ------------------------------  Peripheral View: I2C1_Secure  ----------------------------------
// SVD Line: 3014

//  <view> I2C1_Secure
//    <name> I2C1_Secure </name>
//    <item> SFDITEM_REG__I2C1_Secure_CONTROL </item>
//    <item> SFDITEM_REG__I2C1_Secure_CONTROLS </item>
//    <item> SFDITEM_REG__I2C1_Secure_CONTROLC </item>
//  </view>
//  


// -----------------------  Register Item Address: I2C2_Secure_CONTROL  ---------------------------
// SVD Line: 1687

unsigned int I2C2_Secure_CONTROL __AT (0x5020C000);



// ---------------------------  Field Item: I2C2_Secure_CONTROL_SDA  ------------------------------
// SVD Line: 1692

//  <item> SFDITEM_FIELD__I2C2_Secure_CONTROL_SDA
//    <name> SDA </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5020C000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_Secure_CONTROL ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2C2_Secure_CONTROL_SCL  ------------------------------
// SVD Line: 1696

//  <item> SFDITEM_FIELD__I2C2_Secure_CONTROL_SCL
//    <name> SCL </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5020C000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_Secure_CONTROL ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: I2C2_Secure_CONTROL  ------------------------------
// SVD Line: 1687

//  <rtree> SFDITEM_REG__I2C2_Secure_CONTROL
//    <name> CONTROL </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5020C000) Control Status </i>
//    <loc> ( (unsigned int)((I2C2_Secure_CONTROL >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C2_Secure_CONTROL_SDA </item>
//    <item> SFDITEM_FIELD__I2C2_Secure_CONTROL_SCL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: I2C2_Secure_CONTROLS  --------------------------
// SVD Line: 1702

unsigned int I2C2_Secure_CONTROLS __AT (0x5020C000);



// --------------------------  Field Item: I2C2_Secure_CONTROLS_SDA  ------------------------------
// SVD Line: 1708

//  <item> SFDITEM_FIELD__I2C2_Secure_CONTROLS_SDA
//    <name> SDA </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x5020C000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_Secure_CONTROLS ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// --------------------------  Field Item: I2C2_Secure_CONTROLS_SCL  ------------------------------
// SVD Line: 1712

//  <item> SFDITEM_FIELD__I2C2_Secure_CONTROLS_SCL
//    <name> SCL </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x5020C000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_Secure_CONTROLS ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// --------------------------  Register RTree: I2C2_Secure_CONTROLS  ------------------------------
// SVD Line: 1702

//  <rtree> SFDITEM_REG__I2C2_Secure_CONTROLS
//    <name> CONTROLS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x5020C000) Control Set </i>
//    <loc> ( (unsigned int)((I2C2_Secure_CONTROLS >> 0) & 0xFFFFFFFF), ((I2C2_Secure_CONTROLS = (I2C2_Secure_CONTROLS & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_Secure_CONTROLS_SDA </item>
//    <item> SFDITEM_FIELD__I2C2_Secure_CONTROLS_SCL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: I2C2_Secure_CONTROLC  --------------------------
// SVD Line: 1718

unsigned int I2C2_Secure_CONTROLC __AT (0x5020C004);



// --------------------------  Field Item: I2C2_Secure_CONTROLC_SDA  ------------------------------
// SVD Line: 1723

//  <item> SFDITEM_FIELD__I2C2_Secure_CONTROLC_SDA
//    <name> SDA </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x5020C004) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_Secure_CONTROLC ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// --------------------------  Field Item: I2C2_Secure_CONTROLC_SCL  ------------------------------
// SVD Line: 1727

//  <item> SFDITEM_FIELD__I2C2_Secure_CONTROLC_SCL
//    <name> SCL </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x5020C004) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_Secure_CONTROLC ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// --------------------------  Register RTree: I2C2_Secure_CONTROLC  ------------------------------
// SVD Line: 1718

//  <rtree> SFDITEM_REG__I2C2_Secure_CONTROLC
//    <name> CONTROLC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x5020C004) Control Clear </i>
//    <loc> ( (unsigned int)((I2C2_Secure_CONTROLC >> 0) & 0xFFFFFFFF), ((I2C2_Secure_CONTROLC = (I2C2_Secure_CONTROLC & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_Secure_CONTROLC_SDA </item>
//    <item> SFDITEM_FIELD__I2C2_Secure_CONTROLC_SCL </item>
//  </rtree>
//  


// ------------------------------  Peripheral View: I2C2_Secure  ----------------------------------
// SVD Line: 3021

//  <view> I2C2_Secure
//    <name> I2C2_Secure </name>
//    <item> SFDITEM_REG__I2C2_Secure_CONTROL </item>
//    <item> SFDITEM_REG__I2C2_Secure_CONTROLS </item>
//    <item> SFDITEM_REG__I2C2_Secure_CONTROLC </item>
//  </view>
//  


// -----------------------  Register Item Address: I2C3_Secure_CONTROL  ---------------------------
// SVD Line: 1687

unsigned int I2C3_Secure_CONTROL __AT (0x5020D000);



// ---------------------------  Field Item: I2C3_Secure_CONTROL_SDA  ------------------------------
// SVD Line: 1692

//  <item> SFDITEM_FIELD__I2C3_Secure_CONTROL_SDA
//    <name> SDA </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5020D000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C3_Secure_CONTROL ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2C3_Secure_CONTROL_SCL  ------------------------------
// SVD Line: 1696

//  <item> SFDITEM_FIELD__I2C3_Secure_CONTROL_SCL
//    <name> SCL </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5020D000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C3_Secure_CONTROL ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: I2C3_Secure_CONTROL  ------------------------------
// SVD Line: 1687

//  <rtree> SFDITEM_REG__I2C3_Secure_CONTROL
//    <name> CONTROL </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5020D000) Control Status </i>
//    <loc> ( (unsigned int)((I2C3_Secure_CONTROL >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C3_Secure_CONTROL_SDA </item>
//    <item> SFDITEM_FIELD__I2C3_Secure_CONTROL_SCL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: I2C3_Secure_CONTROLS  --------------------------
// SVD Line: 1702

unsigned int I2C3_Secure_CONTROLS __AT (0x5020D000);



// --------------------------  Field Item: I2C3_Secure_CONTROLS_SDA  ------------------------------
// SVD Line: 1708

//  <item> SFDITEM_FIELD__I2C3_Secure_CONTROLS_SDA
//    <name> SDA </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x5020D000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C3_Secure_CONTROLS ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// --------------------------  Field Item: I2C3_Secure_CONTROLS_SCL  ------------------------------
// SVD Line: 1712

//  <item> SFDITEM_FIELD__I2C3_Secure_CONTROLS_SCL
//    <name> SCL </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x5020D000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C3_Secure_CONTROLS ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// --------------------------  Register RTree: I2C3_Secure_CONTROLS  ------------------------------
// SVD Line: 1702

//  <rtree> SFDITEM_REG__I2C3_Secure_CONTROLS
//    <name> CONTROLS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x5020D000) Control Set </i>
//    <loc> ( (unsigned int)((I2C3_Secure_CONTROLS >> 0) & 0xFFFFFFFF), ((I2C3_Secure_CONTROLS = (I2C3_Secure_CONTROLS & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C3_Secure_CONTROLS_SDA </item>
//    <item> SFDITEM_FIELD__I2C3_Secure_CONTROLS_SCL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: I2C3_Secure_CONTROLC  --------------------------
// SVD Line: 1718

unsigned int I2C3_Secure_CONTROLC __AT (0x5020D004);



// --------------------------  Field Item: I2C3_Secure_CONTROLC_SDA  ------------------------------
// SVD Line: 1723

//  <item> SFDITEM_FIELD__I2C3_Secure_CONTROLC_SDA
//    <name> SDA </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x5020D004) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C3_Secure_CONTROLC ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// --------------------------  Field Item: I2C3_Secure_CONTROLC_SCL  ------------------------------
// SVD Line: 1727

//  <item> SFDITEM_FIELD__I2C3_Secure_CONTROLC_SCL
//    <name> SCL </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x5020D004) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C3_Secure_CONTROLC ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// --------------------------  Register RTree: I2C3_Secure_CONTROLC  ------------------------------
// SVD Line: 1718

//  <rtree> SFDITEM_REG__I2C3_Secure_CONTROLC
//    <name> CONTROLC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x5020D004) Control Clear </i>
//    <loc> ( (unsigned int)((I2C3_Secure_CONTROLC >> 0) & 0xFFFFFFFF), ((I2C3_Secure_CONTROLC = (I2C3_Secure_CONTROLC & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C3_Secure_CONTROLC_SDA </item>
//    <item> SFDITEM_FIELD__I2C3_Secure_CONTROLC_SCL </item>
//  </rtree>
//  


// ------------------------------  Peripheral View: I2C3_Secure  ----------------------------------
// SVD Line: 3028

//  <view> I2C3_Secure
//    <name> I2C3_Secure </name>
//    <item> SFDITEM_REG__I2C3_Secure_CONTROL </item>
//    <item> SFDITEM_REG__I2C3_Secure_CONTROLS </item>
//    <item> SFDITEM_REG__I2C3_Secure_CONTROLC </item>
//  </view>
//  


// -----------------------  Register Item Address: SCC_Secure_CFG_REG0  ---------------------------
// SVD Line: 1875

unsigned int SCC_Secure_CFG_REG0 __AT (0x50300000);



// --------------------------  Field Item: SCC_Secure_CFG_REG0_REMAP  -----------------------------
// SVD Line: 1880

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG0_REMAP
//    <name> REMAP </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50300000) REMAP Block RAM to ZBT </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG0 ) </loc>
//      <o.0..0> REMAP
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: SCC_Secure_CFG_REG0  ------------------------------
// SVD Line: 1875

//  <rtree> SFDITEM_REG__SCC_Secure_CFG_REG0
//    <name> CFG_REG0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50300000) Configuration register 0 </i>
//    <loc> ( (unsigned int)((SCC_Secure_CFG_REG0 >> 0) & 0xFFFFFFFF), ((SCC_Secure_CFG_REG0 = (SCC_Secure_CFG_REG0 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG0_REMAP </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SCC_Secure_CFG_REG1  ---------------------------
// SVD Line: 1886

unsigned int SCC_Secure_CFG_REG1 __AT (0x50300004);



// ------------------------  Field Item: SCC_Secure_CFG_REG1_MCC_LED7  ----------------------------
// SVD Line: 1891

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED7
//    <name> MCC_LED7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x50300004) \nMCC LED 7\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG1 ) </loc>
//      <o.7..7> MCC_LED7
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ------------------------  Field Item: SCC_Secure_CFG_REG1_MCC_LED6  ----------------------------
// SVD Line: 1905

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED6
//    <name> MCC_LED6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50300004) \nMCC LED 6\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG1 ) </loc>
//      <o.6..6> MCC_LED6
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ------------------------  Field Item: SCC_Secure_CFG_REG1_MCC_LED5  ----------------------------
// SVD Line: 1919

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED5
//    <name> MCC_LED5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x50300004) \nMCC LED 5\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG1 ) </loc>
//      <o.5..5> MCC_LED5
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ------------------------  Field Item: SCC_Secure_CFG_REG1_MCC_LED4  ----------------------------
// SVD Line: 1933

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED4
//    <name> MCC_LED4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x50300004) \nMCC LED 4\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG1 ) </loc>
//      <o.4..4> MCC_LED4
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ------------------------  Field Item: SCC_Secure_CFG_REG1_MCC_LED3  ----------------------------
// SVD Line: 1947

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED3
//    <name> MCC_LED3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x50300004) \nMCC LED 3\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG1 ) </loc>
//      <o.3..3> MCC_LED3
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ------------------------  Field Item: SCC_Secure_CFG_REG1_MCC_LED2  ----------------------------
// SVD Line: 1961

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED2
//    <name> MCC_LED2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x50300004) \nMCC LED 2\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG1 ) </loc>
//      <o.2..2> MCC_LED2
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ------------------------  Field Item: SCC_Secure_CFG_REG1_MCC_LED1  ----------------------------
// SVD Line: 1975

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED1
//    <name> MCC_LED1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50300004) \nMCC LED 1\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG1 ) </loc>
//      <o.1..1> MCC_LED1
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ------------------------  Field Item: SCC_Secure_CFG_REG1_MCC_LED0  ----------------------------
// SVD Line: 1989

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED0
//    <name> MCC_LED0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50300004) \nMCC LED 0\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG1 ) </loc>
//      <o.0..0> MCC_LED0
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ---------------------------  Register RTree: SCC_Secure_CFG_REG1  ------------------------------
// SVD Line: 1886

//  <rtree> SFDITEM_REG__SCC_Secure_CFG_REG1
//    <name> CFG_REG1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50300004) Configuration register 1 </i>
//    <loc> ( (unsigned int)((SCC_Secure_CFG_REG1 >> 0) & 0xFFFFFFFF), ((SCC_Secure_CFG_REG1 = (SCC_Secure_CFG_REG1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED7 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED6 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED5 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED4 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED3 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED2 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED1 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED0 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SCC_Secure_CFG_REG2  ---------------------------
// SVD Line: 2005

unsigned int SCC_Secure_CFG_REG2 __AT (0x50300008);



// ---------------------------  Register Item: SCC_Secure_CFG_REG2  -------------------------------
// SVD Line: 2005

//  <item> SFDITEM_REG__SCC_Secure_CFG_REG2
//    <name> CFG_REG2 </name>
//    <i> [Bits 31..0] RO (@ 0x50300008) Configuration register 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SCC_Secure_CFG_REG2 >> 0) & 0xFFFFFFFF), ((SCC_Secure_CFG_REG2 = (SCC_Secure_CFG_REG2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SCC_Secure_CFG_REG3  ---------------------------
// SVD Line: 2010

unsigned int SCC_Secure_CFG_REG3 __AT (0x5030000C);



// -----------------------  Field Item: SCC_Secure_CFG_REG3_MCC_SWITCH7  --------------------------
// SVD Line: 2015

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH7
//    <name> MCC_SWITCH7 </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x5030000C) \nMCC switch 7\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG3 ) </loc>
//      <o.7..7> MCC_SWITCH7
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// -----------------------  Field Item: SCC_Secure_CFG_REG3_MCC_SWITCH6  --------------------------
// SVD Line: 2029

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH6
//    <name> MCC_SWITCH6 </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x5030000C) \nMCC switch 6\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG3 ) </loc>
//      <o.6..6> MCC_SWITCH6
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// -----------------------  Field Item: SCC_Secure_CFG_REG3_MCC_SWITCH5  --------------------------
// SVD Line: 2043

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH5
//    <name> MCC_SWITCH5 </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x5030000C) \nMCC switch 5\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG3 ) </loc>
//      <o.5..5> MCC_SWITCH5
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// -----------------------  Field Item: SCC_Secure_CFG_REG3_MCC_SWITCH4  --------------------------
// SVD Line: 2057

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH4
//    <name> MCC_SWITCH4 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x5030000C) \nMCC switch 4\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG3 ) </loc>
//      <o.4..4> MCC_SWITCH4
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// -----------------------  Field Item: SCC_Secure_CFG_REG3_MCC_SWITCH3  --------------------------
// SVD Line: 2071

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH3
//    <name> MCC_SWITCH3 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5030000C) \nMCC switch 3\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG3 ) </loc>
//      <o.3..3> MCC_SWITCH3
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// -----------------------  Field Item: SCC_Secure_CFG_REG3_MCC_SWITCH2  --------------------------
// SVD Line: 2085

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH2
//    <name> MCC_SWITCH2 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5030000C) \nMCC switch 2\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG3 ) </loc>
//      <o.2..2> MCC_SWITCH2
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// -----------------------  Field Item: SCC_Secure_CFG_REG3_MCC_SWITCH1  --------------------------
// SVD Line: 2099

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH1
//    <name> MCC_SWITCH1 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5030000C) \nMCC switch 1\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG3 ) </loc>
//      <o.1..1> MCC_SWITCH1
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// ----------------------  Field Item: SCC_Secure_CFG_REG3_MCC_SWITCHE0  --------------------------
// SVD Line: 2113

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCHE0
//    <name> MCC_SWITCHE0 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5030000C) \nMCC switch 0\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG3 ) </loc>
//      <o.0..0> MCC_SWITCHE0
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// ---------------------------  Register RTree: SCC_Secure_CFG_REG3  ------------------------------
// SVD Line: 2010

//  <rtree> SFDITEM_REG__SCC_Secure_CFG_REG3
//    <name> CFG_REG3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5030000C) Configuration register 3 </i>
//    <loc> ( (unsigned int)((SCC_Secure_CFG_REG3 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH7 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH6 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH5 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH4 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH3 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH2 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH1 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCHE0 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SCC_Secure_CFG_REG4  ---------------------------
// SVD Line: 2129

unsigned int SCC_Secure_CFG_REG4 __AT (0x50300010);



// -------------------------  Field Item: SCC_Secure_CFG_REG4_BRDREV  -----------------------------
// SVD Line: 2134

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG4_BRDREV
//    <name> BRDREV </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x50300010) Board Revision </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_Secure_CFG_REG4 >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: SCC_Secure_CFG_REG4  ------------------------------
// SVD Line: 2129

//  <rtree> SFDITEM_REG__SCC_Secure_CFG_REG4
//    <name> CFG_REG4 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50300010) Configuration register 4 </i>
//    <loc> ( (unsigned int)((SCC_Secure_CFG_REG4 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG4_BRDREV </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SCC_Secure_CFG_REG5  ---------------------------
// SVD Line: 2140

unsigned int SCC_Secure_CFG_REG5 __AT (0x50300014);



// --------------------------  Field Item: SCC_Secure_CFG_REG5_DEBUG  -----------------------------
// SVD Line: 2144

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG5_DEBUG
//    <name> DEBUG </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x50300014) \nDebug connection\n0 : SWD = Serial Wire Debug\n1 : JTAG = JTAG </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG5 ) </loc>
//      <o.5..5> DEBUG
//        <0=> 0: SWD = Serial Wire Debug
//        <1=> 1: JTAG = JTAG
//    </combo>
//  </item>
//  


// ---------------------------  Register RTree: SCC_Secure_CFG_REG5  ------------------------------
// SVD Line: 2140

//  <rtree> SFDITEM_REG__SCC_Secure_CFG_REG5
//    <name> CFG_REG5 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50300014) CFG_REG5 </i>
//    <loc> ( (unsigned int)((SCC_Secure_CFG_REG5 >> 0) & 0xFFFFFFFF), ((SCC_Secure_CFG_REG5 = (SCC_Secure_CFG_REG5 & ~(0x20UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x20) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG5_DEBUG </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SCC_Secure_CFG_REG6  ---------------------------
// SVD Line: 2160

unsigned int SCC_Secure_CFG_REG6 __AT (0x50300018);



// ---------------------------  Register Item: SCC_Secure_CFG_REG6  -------------------------------
// SVD Line: 2160

//  <item> SFDITEM_REG__SCC_Secure_CFG_REG6
//    <name> CFG_REG6 </name>
//    <i> [Bits 31..0] RO (@ 0x50300018) CFG_REG6 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SCC_Secure_CFG_REG6 >> 0) & 0xFFFFFFFF), ((SCC_Secure_CFG_REG6 = (SCC_Secure_CFG_REG6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SCC_Secure_CFG_REG7  ---------------------------
// SVD Line: 2164

unsigned int SCC_Secure_CFG_REG7 __AT (0x5030001C);



// ---------------------------  Register Item: SCC_Secure_CFG_REG7  -------------------------------
// SVD Line: 2164

//  <item> SFDITEM_REG__SCC_Secure_CFG_REG7
//    <name> CFG_REG7 </name>
//    <i> [Bits 31..0] RO (@ 0x5030001C) CFG_REG7 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SCC_Secure_CFG_REG7 >> 0) & 0xFFFFFFFF), ((SCC_Secure_CFG_REG7 = (SCC_Secure_CFG_REG7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: SCC_Secure_SYS_CFGDATA_RTN  -----------------------
// SVD Line: 2168

unsigned int SCC_Secure_SYS_CFGDATA_RTN __AT (0x503000A0);



// ------------------------  Register Item: SCC_Secure_SYS_CFGDATA_RTN  ---------------------------
// SVD Line: 2168

//  <item> SFDITEM_REG__SCC_Secure_SYS_CFGDATA_RTN
//    <name> SYS_CFGDATA_RTN </name>
//    <i> [Bits 31..0] RW (@ 0x503000A0) System configuration data register RTN </i>
//    <edit> 
//      <loc> ( (unsigned int)((SCC_Secure_SYS_CFGDATA_RTN >> 0) & 0xFFFFFFFF), ((SCC_Secure_SYS_CFGDATA_RTN = (SCC_Secure_SYS_CFGDATA_RTN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: SCC_Secure_SYS_CFGDATA_OUT  -----------------------
// SVD Line: 2173

unsigned int SCC_Secure_SYS_CFGDATA_OUT __AT (0x503000A4);



// ------------------------  Register Item: SCC_Secure_SYS_CFGDATA_OUT  ---------------------------
// SVD Line: 2173

//  <item> SFDITEM_REG__SCC_Secure_SYS_CFGDATA_OUT
//    <name> SYS_CFGDATA_OUT </name>
//    <i> [Bits 31..0] RW (@ 0x503000A4) System configuration data register OUT </i>
//    <edit> 
//      <loc> ( (unsigned int)((SCC_Secure_SYS_CFGDATA_OUT >> 0) & 0xFFFFFFFF), ((SCC_Secure_SYS_CFGDATA_OUT = (SCC_Secure_SYS_CFGDATA_OUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: SCC_Secure_SYS_CFGCTRL  -------------------------
// SVD Line: 2178

unsigned int SCC_Secure_SYS_CFGCTRL __AT (0x503000A8);



// ------------------------  Field Item: SCC_Secure_SYS_CFGCTRL_START  ----------------------------
// SVD Line: 2183

//  <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGCTRL_START
//    <name> START </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x503000A8) Start: generates interrupt on write to this bit </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_Secure_SYS_CFGCTRL ) </loc>
//      <o.31..31> START
//    </check>
//  </item>
//  


// ----------------------  Field Item: SCC_Secure_SYS_CFGCTRL_RW_ACCESS  --------------------------
// SVD Line: 2187

//  <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGCTRL_RW_ACCESS
//    <name> RW_ACCESS </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x503000A8) Read/Write Access </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_Secure_SYS_CFGCTRL ) </loc>
//      <o.30..30> RW_ACCESS
//    </check>
//  </item>
//  


// -----------------------  Field Item: SCC_Secure_SYS_CFGCTRL_RFUNCVAL  --------------------------
// SVD Line: 2191

//  <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGCTRL_RFUNCVAL
//    <name> RFUNCVAL </name>
//    <rw> 
//    <i> [Bits 25..20] RW (@ 0x503000A8) Function value </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_Secure_SYS_CFGCTRL >> 20) & 0x3F), ((SCC_Secure_SYS_CFGCTRL = (SCC_Secure_SYS_CFGCTRL & ~(0x3FUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: SCC_Secure_SYS_CFGCTRL_DEVICE  ---------------------------
// SVD Line: 2195

//  <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGCTRL_DEVICE
//    <name> DEVICE </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x503000A8) Device (value of 0/1/2 for supported clocks </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCC_Secure_SYS_CFGCTRL >> 0) & 0xFFF), ((SCC_Secure_SYS_CFGCTRL = (SCC_Secure_SYS_CFGCTRL & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register RTree: SCC_Secure_SYS_CFGCTRL  -----------------------------
// SVD Line: 2178

//  <rtree> SFDITEM_REG__SCC_Secure_SYS_CFGCTRL
//    <name> SYS_CFGCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x503000A8) System configuration control register </i>
//    <loc> ( (unsigned int)((SCC_Secure_SYS_CFGCTRL >> 0) & 0xFFFFFFFF), ((SCC_Secure_SYS_CFGCTRL = (SCC_Secure_SYS_CFGCTRL & ~(0xC3F00FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC3F00FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGCTRL_START </item>
//    <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGCTRL_RW_ACCESS </item>
//    <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGCTRL_RFUNCVAL </item>
//    <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGCTRL_DEVICE </item>
//  </rtree>
//  


// ----------------------  Register Item Address: SCC_Secure_SYS_CFGSTAT  -------------------------
// SVD Line: 2201

unsigned int SCC_Secure_SYS_CFGSTAT __AT (0x503000AC);



// ------------------------  Field Item: SCC_Secure_SYS_CFGSTAT_ERROR  ----------------------------
// SVD Line: 2206

//  <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGSTAT_ERROR
//    <name> ERROR </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x503000AC) Error Flag </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_Secure_SYS_CFGSTAT ) </loc>
//      <o.1..1> ERROR
//    </check>
//  </item>
//  


// -----------------------  Field Item: SCC_Secure_SYS_CFGSTAT_COMPLETE  --------------------------
// SVD Line: 2210

//  <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGSTAT_COMPLETE
//    <name> COMPLETE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x503000AC) Complete Flag </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_Secure_SYS_CFGSTAT ) </loc>
//      <o.0..0> COMPLETE
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SCC_Secure_SYS_CFGSTAT  -----------------------------
// SVD Line: 2201

//  <rtree> SFDITEM_REG__SCC_Secure_SYS_CFGSTAT
//    <name> SYS_CFGSTAT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x503000AC) System configuration status register </i>
//    <loc> ( (unsigned int)((SCC_Secure_SYS_CFGSTAT >> 0) & 0xFFFFFFFF), ((SCC_Secure_SYS_CFGSTAT = (SCC_Secure_SYS_CFGSTAT & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGSTAT_ERROR </item>
//    <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGSTAT_COMPLETE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SCC_Secure_DLL  -----------------------------
// SVD Line: 2216

unsigned int SCC_Secure_DLL __AT (0x50300100);



// ------------------------  Field Item: SCC_Secure_DLL_LOCKED_MASKED  ----------------------------
// SVD Line: 2221

//  <item> SFDITEM_FIELD__SCC_Secure_DLL_LOCKED_MASKED
//    <name> LOCKED_MASKED </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x50300100) Error Flag </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_Secure_DLL >> 24) & 0xFF), ((SCC_Secure_DLL = (SCC_Secure_DLL & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: SCC_Secure_DLL_LOCK_UNLOCK  -----------------------------
// SVD Line: 2225

//  <item> SFDITEM_FIELD__SCC_Secure_DLL_LOCK_UNLOCK
//    <name> LOCK_UNLOCK </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x50300100) Complete Flag </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_Secure_DLL >> 16) & 0xFF), ((SCC_Secure_DLL = (SCC_Secure_DLL & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: SCC_Secure_DLL_LOCKED  -------------------------------
// SVD Line: 2229

//  <item> SFDITEM_FIELD__SCC_Secure_DLL_LOCKED
//    <name> LOCKED </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50300100) Complete Flag </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_Secure_DLL ) </loc>
//      <o.0..0> LOCKED
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SCC_Secure_DLL  ---------------------------------
// SVD Line: 2216

//  <rtree> SFDITEM_REG__SCC_Secure_DLL
//    <name> DLL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50300100) DLL Lock Register </i>
//    <loc> ( (unsigned int)((SCC_Secure_DLL >> 0) & 0xFFFFFFFF), ((SCC_Secure_DLL = (SCC_Secure_DLL & ~(0xFFFF0001UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF0001) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_Secure_DLL_LOCKED_MASKED </item>
//    <item> SFDITEM_FIELD__SCC_Secure_DLL_LOCK_UNLOCK </item>
//    <item> SFDITEM_FIELD__SCC_Secure_DLL_LOCKED </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SCC_Secure_AID  -----------------------------
// SVD Line: 2235

unsigned int SCC_Secure_AID __AT (0x50300FF8);



// --------------------------  Field Item: SCC_Secure_AID_FPGA_BUILD  -----------------------------
// SVD Line: 2240

//  <item> SFDITEM_FIELD__SCC_Secure_AID_FPGA_BUILD
//    <name> FPGA_BUILD </name>
//    <r> 
//    <i> [Bits 31..24] RO (@ 0x50300FF8) FPGA Build Number </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_Secure_AID >> 24) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: SCC_Secure_AID_MPS2_REV  ------------------------------
// SVD Line: 2244

//  <item> SFDITEM_FIELD__SCC_Secure_AID_MPS2_REV
//    <name> MPS2_REV </name>
//    <r> 
//    <i> [Bits 23..20] RO (@ 0x50300FF8) \nV2M-MPS2 target Board Revision\n0 : A = Revision A\n1 : B = Revision B\n2 : C = Revision C\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_AID ) </loc>
//      <o.23..20> MPS2_REV
//        <0=> 0: A = Revision A
//        <1=> 1: B = Revision B
//        <2=> 2: C = Revision C
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------  Field Item: SCC_Secure_AID_NUM_CFG_REG  -----------------------------
// SVD Line: 2262

//  <item> SFDITEM_FIELD__SCC_Secure_AID_NUM_CFG_REG
//    <name> NUM_CFG_REG </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x50300FF8) Number of SCC configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_Secure_AID >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SCC_Secure_AID  ---------------------------------
// SVD Line: 2235

//  <rtree> SFDITEM_REG__SCC_Secure_AID
//    <name> AID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50300FF8) AID register </i>
//    <loc> ( (unsigned int)((SCC_Secure_AID >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCC_Secure_AID_FPGA_BUILD </item>
//    <item> SFDITEM_FIELD__SCC_Secure_AID_MPS2_REV </item>
//    <item> SFDITEM_FIELD__SCC_Secure_AID_NUM_CFG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SCC_Secure_ID  ------------------------------
// SVD Line: 2268

unsigned int SCC_Secure_ID __AT (0x50300FFC);



// ------------------------  Field Item: SCC_Secure_ID_IMPLEMENTER_ID  ----------------------------
// SVD Line: 2273

//  <item> SFDITEM_FIELD__SCC_Secure_ID_IMPLEMENTER_ID
//    <name> IMPLEMENTER_ID </name>
//    <r> 
//    <i> [Bits 31..24] RO (@ 0x50300FFC) Implementer ID: 0x41 = ARM </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_Secure_ID >> 24) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: SCC_Secure_ID_APP_NOTE_VAR  -----------------------------
// SVD Line: 2283

//  <item> SFDITEM_FIELD__SCC_Secure_ID_APP_NOTE_VAR
//    <name> APP_NOTE_VAR </name>
//    <r> 
//    <i> [Bits 23..20] RO (@ 0x50300FFC) Application note IP variant number </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_Secure_ID >> 20) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: SCC_Secure_ID_IP_ARCH  -------------------------------
// SVD Line: 2287

//  <item> SFDITEM_FIELD__SCC_Secure_ID_IP_ARCH
//    <name> IP_ARCH </name>
//    <r> 
//    <i> [Bits 19..16] RO (@ 0x50300FFC) \nIP Architecture\n0 : Reserved - do not use\n1 : Reserved - do not use\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : AHB = AHB\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_ID ) </loc>
//      <o.19..16> IP_ARCH
//        <0=> 0: 
//        <1=> 1: 
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: AHB = AHB
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SCC_Secure_ID_PRI_NUM  -------------------------------
// SVD Line: 2297

//  <item> SFDITEM_FIELD__SCC_Secure_ID_PRI_NUM
//    <name> PRI_NUM </name>
//    <r> 
//    <i> [Bits 11..4] RO (@ 0x50300FFC) Primary Part Number: 383 = AN383 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_Secure_ID >> 4) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: SCC_Secure_ID_APP_REV  -------------------------------
// SVD Line: 2301

//  <item> SFDITEM_FIELD__SCC_Secure_ID_APP_REV
//    <name> APP_REV </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x50300FFC) Application note IP revision number </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_Secure_ID >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: SCC_Secure_ID  ---------------------------------
// SVD Line: 2268

//  <rtree> SFDITEM_REG__SCC_Secure_ID
//    <name> ID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50300FFC) AID register </i>
//    <loc> ( (unsigned int)((SCC_Secure_ID >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCC_Secure_ID_IMPLEMENTER_ID </item>
//    <item> SFDITEM_FIELD__SCC_Secure_ID_APP_NOTE_VAR </item>
//    <item> SFDITEM_FIELD__SCC_Secure_ID_IP_ARCH </item>
//    <item> SFDITEM_FIELD__SCC_Secure_ID_PRI_NUM </item>
//    <item> SFDITEM_FIELD__SCC_Secure_ID_APP_REV </item>
//  </rtree>
//  


// -------------------------------  Peripheral View: SCC_Secure  ----------------------------------
// SVD Line: 3035

//  <view> SCC_Secure
//    <name> SCC_Secure </name>
//    <item> SFDITEM_REG__SCC_Secure_CFG_REG0 </item>
//    <item> SFDITEM_REG__SCC_Secure_CFG_REG1 </item>
//    <item> SFDITEM_REG__SCC_Secure_CFG_REG2 </item>
//    <item> SFDITEM_REG__SCC_Secure_CFG_REG3 </item>
//    <item> SFDITEM_REG__SCC_Secure_CFG_REG4 </item>
//    <item> SFDITEM_REG__SCC_Secure_CFG_REG5 </item>
//    <item> SFDITEM_REG__SCC_Secure_CFG_REG6 </item>
//    <item> SFDITEM_REG__SCC_Secure_CFG_REG7 </item>
//    <item> SFDITEM_REG__SCC_Secure_SYS_CFGDATA_RTN </item>
//    <item> SFDITEM_REG__SCC_Secure_SYS_CFGDATA_OUT </item>
//    <item> SFDITEM_REG__SCC_Secure_SYS_CFGCTRL </item>
//    <item> SFDITEM_REG__SCC_Secure_SYS_CFGSTAT </item>
//    <item> SFDITEM_REG__SCC_Secure_DLL </item>
//    <item> SFDITEM_REG__SCC_Secure_AID </item>
//    <item> SFDITEM_REG__SCC_Secure_ID </item>
//  </view>
//  


// ------------------------  Register Item Address: I2S_Secure_CONTROL  ---------------------------
// SVD Line: 2328

unsigned int I2S_Secure_CONTROL __AT (0x50301000);



// ----------------------------  Register Item: I2S_Secure_CONTROL  -------------------------------
// SVD Line: 2328

//  <item> SFDITEM_REG__I2S_Secure_CONTROL
//    <name> CONTROL </name>
//    <i> [Bits 31..0] RW (@ 0x50301000) CONTROL Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((I2S_Secure_CONTROL >> 0) & 0xFFFFFFFF), ((I2S_Secure_CONTROL = (I2S_Secure_CONTROL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: I2S_Secure_STATUS  ----------------------------
// SVD Line: 2333

unsigned int I2S_Secure_STATUS __AT (0x50301004);



// ----------------------------  Register Item: I2S_Secure_STATUS  --------------------------------
// SVD Line: 2333

//  <item> SFDITEM_REG__I2S_Secure_STATUS
//    <name> STATUS </name>
//    <i> [Bits 31..0] RO (@ 0x50301004) STATUS Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((I2S_Secure_STATUS >> 0) & 0xFFFFFFFF), ((I2S_Secure_STATUS = (I2S_Secure_STATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: I2S_Secure_ERROR  ----------------------------
// SVD Line: 2338

unsigned int I2S_Secure_ERROR __AT (0x50301008);



// -----------------------------  Register Item: I2S_Secure_ERROR  --------------------------------
// SVD Line: 2338

//  <item> SFDITEM_REG__I2S_Secure_ERROR
//    <name> ERROR </name>
//    <i> [Bits 31..0] RW (@ 0x50301008) Error Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((I2S_Secure_ERROR >> 0) & 0xFFFFFFFF), ((I2S_Secure_ERROR = (I2S_Secure_ERROR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: I2S_Secure_DIVIDE  ----------------------------
// SVD Line: 2343

unsigned int I2S_Secure_DIVIDE __AT (0x5030100C);



// ----------------------------  Register Item: I2S_Secure_DIVIDE  --------------------------------
// SVD Line: 2343

//  <item> SFDITEM_REG__I2S_Secure_DIVIDE
//    <name> DIVIDE </name>
//    <i> [Bits 31..0] RW (@ 0x5030100C) Divide ratio Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((I2S_Secure_DIVIDE >> 0) & 0xFFFFFFFF), ((I2S_Secure_DIVIDE = (I2S_Secure_DIVIDE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: I2S_Secure_TXBUF  ----------------------------
// SVD Line: 2348

unsigned int I2S_Secure_TXBUF __AT (0x50301010);



// -----------------------------  Register Item: I2S_Secure_TXBUF  --------------------------------
// SVD Line: 2348

//  <item> SFDITEM_REG__I2S_Secure_TXBUF
//    <name> TXBUF </name>
//    <i> [Bits 31..0] WO (@ 0x50301010) Transmit Buffer </i>
//    <edit> 
//      <loc> ( (unsigned int)((I2S_Secure_TXBUF >> 0) & 0xFFFFFFFF), ((I2S_Secure_TXBUF = (I2S_Secure_TXBUF & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: I2S_Secure_RXBUF  ----------------------------
// SVD Line: 2353

unsigned int I2S_Secure_RXBUF __AT (0x50301014);



// -----------------------------  Register Item: I2S_Secure_RXBUF  --------------------------------
// SVD Line: 2353

//  <item> SFDITEM_REG__I2S_Secure_RXBUF
//    <name> RXBUF </name>
//    <i> [Bits 31..0] RO (@ 0x50301014) Receive Buffer </i>
//    <edit> 
//      <loc> ( (unsigned int)((I2S_Secure_RXBUF >> 0) & 0xFFFFFFFF), ((I2S_Secure_RXBUF = (I2S_Secure_RXBUF & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: I2S_Secure_ITCR  -----------------------------
// SVD Line: 2358

unsigned int I2S_Secure_ITCR __AT (0x50301300);



// -----------------------------  Register Item: I2S_Secure_ITCR  ---------------------------------
// SVD Line: 2358

//  <item> SFDITEM_REG__I2S_Secure_ITCR
//    <name> ITCR </name>
//    <i> [Bits 31..0] RW (@ 0x50301300) Integration Test Control Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((I2S_Secure_ITCR >> 0) & 0xFFFFFFFF), ((I2S_Secure_ITCR = (I2S_Secure_ITCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: I2S_Secure_ITIP1  ----------------------------
// SVD Line: 2363

unsigned int I2S_Secure_ITIP1 __AT (0x50301304);



// -----------------------------  Register Item: I2S_Secure_ITIP1  --------------------------------
// SVD Line: 2363

//  <item> SFDITEM_REG__I2S_Secure_ITIP1
//    <name> ITIP1 </name>
//    <i> [Bits 31..0] RW (@ 0x50301304) Integration Test Input Register 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((I2S_Secure_ITIP1 >> 0) & 0xFFFFFFFF), ((I2S_Secure_ITIP1 = (I2S_Secure_ITIP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: I2S_Secure_ITOP1  ----------------------------
// SVD Line: 2368

unsigned int I2S_Secure_ITOP1 __AT (0x50301308);



// -----------------------------  Register Item: I2S_Secure_ITOP1  --------------------------------
// SVD Line: 2368

//  <item> SFDITEM_REG__I2S_Secure_ITOP1
//    <name> ITOP1 </name>
//    <i> [Bits 31..0] RW (@ 0x50301308) Integration Test Output Register 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((I2S_Secure_ITOP1 >> 0) & 0xFFFFFFFF), ((I2S_Secure_ITOP1 = (I2S_Secure_ITOP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: I2S_Secure  ----------------------------------
// SVD Line: 3042

//  <view> I2S_Secure
//    <name> I2S_Secure </name>
//    <item> SFDITEM_REG__I2S_Secure_CONTROL </item>
//    <item> SFDITEM_REG__I2S_Secure_STATUS </item>
//    <item> SFDITEM_REG__I2S_Secure_ERROR </item>
//    <item> SFDITEM_REG__I2S_Secure_DIVIDE </item>
//    <item> SFDITEM_REG__I2S_Secure_TXBUF </item>
//    <item> SFDITEM_REG__I2S_Secure_RXBUF </item>
//    <item> SFDITEM_REG__I2S_Secure_ITCR </item>
//    <item> SFDITEM_REG__I2S_Secure_ITIP1 </item>
//    <item> SFDITEM_REG__I2S_Secure_ITOP1 </item>
//  </view>
//  


// ------------------------  Register Item Address: FPGASYS_Secure_LED  ---------------------------
// SVD Line: 2389

unsigned int FPGASYS_Secure_LED __AT (0x50302000);



// ---------------------------  Field Item: FPGASYS_Secure_LED_LED0  ------------------------------
// SVD Line: 2394

//  <item> SFDITEM_FIELD__FPGASYS_Secure_LED_LED0
//    <name> LED0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50302000) \nLED0\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGASYS_Secure_LED ) </loc>
//      <o.0..0> LED0
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: FPGASYS_Secure_LED_LED1  ------------------------------
// SVD Line: 2407

//  <item> SFDITEM_FIELD__FPGASYS_Secure_LED_LED1
//    <name> LED1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50302000) \nLED1\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGASYS_Secure_LED ) </loc>
//      <o.1..1> LED1
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ---------------------------  Register RTree: FPGASYS_Secure_LED  -------------------------------
// SVD Line: 2389

//  <rtree> SFDITEM_REG__FPGASYS_Secure_LED
//    <name> LED </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50302000) LED Connections </i>
//    <loc> ( (unsigned int)((FPGASYS_Secure_LED >> 0) & 0xFFFFFFFF), ((FPGASYS_Secure_LED = (FPGASYS_Secure_LED & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FPGASYS_Secure_LED_LED0 </item>
//    <item> SFDITEM_FIELD__FPGASYS_Secure_LED_LED1 </item>
//  </rtree>
//  


// ----------------------  Register Item Address: FPGASYS_Secure_BUTTON  --------------------------
// SVD Line: 2422

unsigned int FPGASYS_Secure_BUTTON __AT (0x50302008);



// ------------------------  Field Item: FPGASYS_Secure_BUTTON_BUTTON0  ---------------------------
// SVD Line: 2427

//  <item> SFDITEM_FIELD__FPGASYS_Secure_BUTTON_BUTTON0
//    <name> BUTTON0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50302008) \nBUTTON0\n0 : Off = BUTTON is off\n1 : On = BUTTON is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGASYS_Secure_BUTTON ) </loc>
//      <o.0..0> BUTTON0
//        <0=> 0: Off = BUTTON is off
//        <1=> 1: On = BUTTON is on
//    </combo>
//  </item>
//  


// ------------------------  Field Item: FPGASYS_Secure_BUTTON_BUTTON1  ---------------------------
// SVD Line: 2440

//  <item> SFDITEM_FIELD__FPGASYS_Secure_BUTTON_BUTTON1
//    <name> BUTTON1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x50302008) \nBUTTON1\n0 : Off = BUTTON is off\n1 : On = BUTTON is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGASYS_Secure_BUTTON ) </loc>
//      <o.1..1> BUTTON1
//        <0=> 0: Off = BUTTON is off
//        <1=> 1: On = BUTTON is on
//    </combo>
//  </item>
//  


// --------------------------  Register RTree: FPGASYS_Secure_BUTTON  -----------------------------
// SVD Line: 2422

//  <rtree> SFDITEM_REG__FPGASYS_Secure_BUTTON
//    <name> BUTTON </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50302008) Button Connections </i>
//    <loc> ( (unsigned int)((FPGASYS_Secure_BUTTON >> 0) & 0xFFFFFFFF), ((FPGASYS_Secure_BUTTON = (FPGASYS_Secure_BUTTON & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FPGASYS_Secure_BUTTON_BUTTON0 </item>
//    <item> SFDITEM_FIELD__FPGASYS_Secure_BUTTON_BUTTON1 </item>
//  </rtree>
//  


// ----------------------  Register Item Address: FPGASYS_Secure_CLK1HZ  --------------------------
// SVD Line: 2455

unsigned int FPGASYS_Secure_CLK1HZ __AT (0x50302010);



// --------------------------  Register Item: FPGASYS_Secure_CLK1HZ  ------------------------------
// SVD Line: 2455

//  <item> SFDITEM_REG__FPGASYS_Secure_CLK1HZ
//    <name> CLK1HZ </name>
//    <i> [Bits 31..0] RO (@ 0x50302010) 1Hz Up Counter </i>
//    <edit> 
//      <loc> ( (unsigned int)((FPGASYS_Secure_CLK1HZ >> 0) & 0xFFFFFFFF), ((FPGASYS_Secure_CLK1HZ = (FPGASYS_Secure_CLK1HZ & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: FPGASYS_Secure_CLK100HZ  -------------------------
// SVD Line: 2460

unsigned int FPGASYS_Secure_CLK100HZ __AT (0x50302014);



// -------------------------  Register Item: FPGASYS_Secure_CLK100HZ  -----------------------------
// SVD Line: 2460

//  <item> SFDITEM_REG__FPGASYS_Secure_CLK100HZ
//    <name> CLK100HZ </name>
//    <i> [Bits 31..0] RO (@ 0x50302014) 100Hz Up Counter </i>
//    <edit> 
//      <loc> ( (unsigned int)((FPGASYS_Secure_CLK100HZ >> 0) & 0xFFFFFFFF), ((FPGASYS_Secure_CLK100HZ = (FPGASYS_Secure_CLK100HZ & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: FPGASYS_Secure_COUNTER  -------------------------
// SVD Line: 2465

unsigned int FPGASYS_Secure_COUNTER __AT (0x50302018);



// --------------------------  Register Item: FPGASYS_Secure_COUNTER  -----------------------------
// SVD Line: 2465

//  <item> SFDITEM_REG__FPGASYS_Secure_COUNTER
//    <name> COUNTER </name>
//    <i> [Bits 31..0] RW (@ 0x50302018) Cycle up counter </i>
//    <edit> 
//      <loc> ( (unsigned int)((FPGASYS_Secure_COUNTER >> 0) & 0xFFFFFFFF), ((FPGASYS_Secure_COUNTER = (FPGASYS_Secure_COUNTER & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: FPGASYS_Secure_PRESCALER  ------------------------
// SVD Line: 2470

unsigned int FPGASYS_Secure_PRESCALER __AT (0x5030201C);



// -------------------------  Register Item: FPGASYS_Secure_PRESCALER  ----------------------------
// SVD Line: 2470

//  <item> SFDITEM_REG__FPGASYS_Secure_PRESCALER
//    <name> PRESCALER </name>
//    <i> [Bits 31..0] RW (@ 0x5030201C) Reload value for prescaler counter </i>
//    <edit> 
//      <loc> ( (unsigned int)((FPGASYS_Secure_PRESCALER >> 0) & 0xFFFFFFFF), ((FPGASYS_Secure_PRESCALER = (FPGASYS_Secure_PRESCALER & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: FPGASYS_Secure_PSCNTR  --------------------------
// SVD Line: 2475

unsigned int FPGASYS_Secure_PSCNTR __AT (0x50302020);



// --------------------------  Register Item: FPGASYS_Secure_PSCNTR  ------------------------------
// SVD Line: 2475

//  <item> SFDITEM_REG__FPGASYS_Secure_PSCNTR
//    <name> PSCNTR </name>
//    <i> [Bits 31..0] RW (@ 0x50302020) Prescale Counter </i>
//    <edit> 
//      <loc> ( (unsigned int)((FPGASYS_Secure_PSCNTR >> 0) & 0xFFFFFFFF), ((FPGASYS_Secure_PSCNTR = (FPGASYS_Secure_PSCNTR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: FPGASYS_Secure_MISC  ---------------------------
// SVD Line: 2480

unsigned int FPGASYS_Secure_MISC __AT (0x5030204C);



// ---------------------  Field Item: FPGASYS_Secure_MISC_SHIELD1_SPI_nCS  ------------------------
// SVD Line: 2485

//  <item> SFDITEM_FIELD__FPGASYS_Secure_MISC_SHIELD1_SPI_nCS
//    <name> SHIELD1_SPI_nCS </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x5030204C) SHIELD1_SPI_nCS </i>
//    <check> 
//      <loc> ( (unsigned int) FPGASYS_Secure_MISC ) </loc>
//      <o.9..9> SHIELD1_SPI_nCS
//    </check>
//  </item>
//  


// ---------------------  Field Item: FPGASYS_Secure_MISC_SHIELD0_SPI_nCS  ------------------------
// SVD Line: 2488

//  <item> SFDITEM_FIELD__FPGASYS_Secure_MISC_SHIELD0_SPI_nCS
//    <name> SHIELD0_SPI_nCS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x5030204C) SHIELD0_SPI_nCS </i>
//    <check> 
//      <loc> ( (unsigned int) FPGASYS_Secure_MISC ) </loc>
//      <o.8..8> SHIELD0_SPI_nCS
//    </check>
//  </item>
//  


// -----------------------  Field Item: FPGASYS_Secure_MISC_ADC_SPI_nCS  --------------------------
// SVD Line: 2491

//  <item> SFDITEM_FIELD__FPGASYS_Secure_MISC_ADC_SPI_nCS
//    <name> ADC_SPI_nCS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x5030204C) ADC_SPI_nCS </i>
//    <check> 
//      <loc> ( (unsigned int) FPGASYS_Secure_MISC ) </loc>
//      <o.7..7> ADC_SPI_nCS
//    </check>
//  </item>
//  


// ----------------------  Field Item: FPGASYS_Secure_MISC_CLCD_BL_CTRL  --------------------------
// SVD Line: 2494

//  <item> SFDITEM_FIELD__FPGASYS_Secure_MISC_CLCD_BL_CTRL
//    <name> CLCD_BL_CTRL </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x5030204C) CLCD_BL_CTRL </i>
//    <check> 
//      <loc> ( (unsigned int) FPGASYS_Secure_MISC ) </loc>
//      <o.6..6> CLCD_BL_CTRL
//    </check>
//  </item>
//  


// -------------------------  Field Item: FPGASYS_Secure_MISC_CLCD_RD  ----------------------------
// SVD Line: 2497

//  <item> SFDITEM_FIELD__FPGASYS_Secure_MISC_CLCD_RD
//    <name> CLCD_RD </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x5030204C) CLCD_RD </i>
//    <check> 
//      <loc> ( (unsigned int) FPGASYS_Secure_MISC ) </loc>
//      <o.5..5> CLCD_RD
//    </check>
//  </item>
//  


// -------------------------  Field Item: FPGASYS_Secure_MISC_CLCD_RS  ----------------------------
// SVD Line: 2500

//  <item> SFDITEM_FIELD__FPGASYS_Secure_MISC_CLCD_RS
//    <name> CLCD_RS </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x5030204C) CLCD_RS </i>
//    <check> 
//      <loc> ( (unsigned int) FPGASYS_Secure_MISC ) </loc>
//      <o.4..4> CLCD_RS
//    </check>
//  </item>
//  


// -----------------------  Field Item: FPGASYS_Secure_MISC_CLCD_RESET  ---------------------------
// SVD Line: 2503

//  <item> SFDITEM_FIELD__FPGASYS_Secure_MISC_CLCD_RESET
//    <name> CLCD_RESET </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x5030204C) CLCD_RESET </i>
//    <check> 
//      <loc> ( (unsigned int) FPGASYS_Secure_MISC ) </loc>
//      <o.3..3> CLCD_RESET
//    </check>
//  </item>
//  


// -------------------------  Field Item: FPGASYS_Secure_MISC_SPI_nSS  ----------------------------
// SVD Line: 2506

//  <item> SFDITEM_FIELD__FPGASYS_Secure_MISC_SPI_nSS
//    <name> SPI_nSS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5030204C) SPI_nSS </i>
//    <check> 
//      <loc> ( (unsigned int) FPGASYS_Secure_MISC ) </loc>
//      <o.1..1> SPI_nSS
//    </check>
//  </item>
//  


// -------------------------  Field Item: FPGASYS_Secure_MISC_CLCD_CS  ----------------------------
// SVD Line: 2509

//  <item> SFDITEM_FIELD__FPGASYS_Secure_MISC_CLCD_CS
//    <name> CLCD_CS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5030204C) CLCD_CS </i>
//    <check> 
//      <loc> ( (unsigned int) FPGASYS_Secure_MISC ) </loc>
//      <o.0..0> CLCD_CS
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: FPGASYS_Secure_MISC  ------------------------------
// SVD Line: 2480

//  <rtree> SFDITEM_REG__FPGASYS_Secure_MISC
//    <name> MISC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5030204C) Misc. Control </i>
//    <loc> ( (unsigned int)((FPGASYS_Secure_MISC >> 0) & 0xFFFFFFFF), ((FPGASYS_Secure_MISC = (FPGASYS_Secure_MISC & ~(0x3FBUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FB) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FPGASYS_Secure_MISC_SHIELD1_SPI_nCS </item>
//    <item> SFDITEM_FIELD__FPGASYS_Secure_MISC_SHIELD0_SPI_nCS </item>
//    <item> SFDITEM_FIELD__FPGASYS_Secure_MISC_ADC_SPI_nCS </item>
//    <item> SFDITEM_FIELD__FPGASYS_Secure_MISC_CLCD_BL_CTRL </item>
//    <item> SFDITEM_FIELD__FPGASYS_Secure_MISC_CLCD_RD </item>
//    <item> SFDITEM_FIELD__FPGASYS_Secure_MISC_CLCD_RS </item>
//    <item> SFDITEM_FIELD__FPGASYS_Secure_MISC_CLCD_RESET </item>
//    <item> SFDITEM_FIELD__FPGASYS_Secure_MISC_SPI_nSS </item>
//    <item> SFDITEM_FIELD__FPGASYS_Secure_MISC_CLCD_CS </item>
//  </rtree>
//  


// -----------------------------  Peripheral View: FPGASYS_Secure  --------------------------------
// SVD Line: 3048

//  <view> FPGASYS_Secure
//    <name> FPGASYS_Secure </name>
//    <item> SFDITEM_REG__FPGASYS_Secure_LED </item>
//    <item> SFDITEM_REG__FPGASYS_Secure_BUTTON </item>
//    <item> SFDITEM_REG__FPGASYS_Secure_CLK1HZ </item>
//    <item> SFDITEM_REG__FPGASYS_Secure_CLK100HZ </item>
//    <item> SFDITEM_REG__FPGASYS_Secure_COUNTER </item>
//    <item> SFDITEM_REG__FPGASYS_Secure_PRESCALER </item>
//    <item> SFDITEM_REG__FPGASYS_Secure_PSCNTR </item>
//    <item> SFDITEM_REG__FPGASYS_Secure_MISC </item>
//  </view>
//  


// ----------------------------   IRQ Num definition: IOTKit_CM33  --------------------------------
// SVD Line: 36



// ------------------------------------------------------------------------------------------------
// -----                              Interrupt Number Definition                             -----
// ------------------------------------------------------------------------------------------------



// ------------------------  ARM Cortex-M33 Specific Interrupt Numbers  ---------------------------

//  <qitem> Reset_IRQ
//    <name> Reset </name>
//    <i> Reset Vector, invoked on Power up and warm reset </i>
//    <loc> 1 </loc>
//  </qitem>
//  
//  <qitem> NonMaskableInt_IRQ
//    <name> NonMaskableInt </name>
//    <i> Non maskable Interrupt, cannot be stopped or preempted </i>
//    <loc> 2 </loc>
//  </qitem>
//  
//  <qitem> HardFault_IRQ
//    <name> HardFault </name>
//    <i> Hard Fault, all classes of Fault </i>
//    <loc> 3 </loc>
//  </qitem>
//  
//  <qitem> MemoryManagement_IRQ
//    <name> MemoryManagement </name>
//    <i> Memory Management, MPU mismatch, including Access Violation and No Match </i>
//    <loc> 4 </loc>
//  </qitem>
//  
//  <qitem> BusFault_IRQ
//    <name> BusFault </name>
//    <i> Bus Fault, Pre-Fetch-, Memory Access Fault, other address/memory related Fault </i>
//    <loc> 5 </loc>
//  </qitem>
//  
//  <qitem> UsageFault_IRQ
//    <name> UsageFault </name>
//    <i> Usage Fault, i.e. Undef Instruction, Illegal State Transition </i>
//    <loc> 6 </loc>
//  </qitem>
//  
//  <qitem> SecureFault_IRQ
//    <name> SecureFault </name>
//    <i> Secure Fault Handler </i>
//    <loc> 7 </loc>
//  </qitem>
//  
//  <qitem> SVCall_IRQ
//    <name> SVCall </name>
//    <i> System Service Call via SVC instruction </i>
//    <loc> 11 </loc>
//  </qitem>
//  
//  <qitem> DebugMonitor_IRQ
//    <name> DebugMonitor </name>
//    <i> Debug Monitor </i>
//    <loc> 12 </loc>
//  </qitem>
//  
//  <qitem> PendSV_IRQ
//    <name> PendSV </name>
//    <i> Pendable request for system service </i>
//    <loc> 14 </loc>
//  </qitem>
//  
//  <qitem> SysTick_IRQ
//    <name> SysTick </name>
//    <i> System Tick Timer </i>
//    <loc> 15 </loc>
//  </qitem>
//  


// -------------------------  IOTKit_CM33 Specific Interrupt Numbers  -----------------------------

//  <qitem> WATCHDOG_IRQ
//    <name> WATCHDOG </name>
//    <i> Watchdog interrupt </i>
//    <loc> 16 </loc>
//  </qitem>
//  
//  <qitem> TIMER0_IRQ
//    <name> TIMER0 </name>
//    <i> Timer 0 interrupt </i>
//    <loc> 19 </loc>
//  </qitem>
//  
//  <qitem> TIMER1_IRQ
//    <name> TIMER1 </name>
//    <i> Timer 1 interrupt </i>
//    <loc> 20 </loc>
//  </qitem>
//  
//  <qitem> DUALTIMER_IRQ
//    <name> DUALTIMER </name>
//    <i> Dual Timer interrupt </i>
//    <loc> 21 </loc>
//  </qitem>
//  
//  <qitem> UART0_RX_IRQ
//    <name> UART0_RX </name>
//    <i> UART 0 RX interrupt </i>
//    <loc> 48 </loc>
//  </qitem>
//  
//  <qitem> UART0_TX_IRQ
//    <name> UART0_TX </name>
//    <i> UART 0 TX interrupt </i>
//    <loc> 49 </loc>
//  </qitem>
//  
//  <qitem> UART1_RX_IRQ
//    <name> UART1_RX </name>
//    <i> UART 1 RX interrupt </i>
//    <loc> 50 </loc>
//  </qitem>
//  
//  <qitem> UART1_TX_IRQ
//    <name> UART1_TX </name>
//    <i> UART 1 TX interrupt </i>
//    <loc> 51 </loc>
//  </qitem>
//  
//  <qitem> UART2_RX_IRQ
//    <name> UART2_RX </name>
//    <i> UART 2 RX interrupt </i>
//    <loc> 52 </loc>
//  </qitem>
//  
//  <qitem> UART2_TX_IRQ
//    <name> UART2_TX </name>
//    <i> UART 2 TX interrupt </i>
//    <loc> 53 </loc>
//  </qitem>
//  
//  <qitem> UART3_RX_IRQ
//    <name> UART3_RX </name>
//    <i> UART 3 RX interrupt </i>
//    <loc> 54 </loc>
//  </qitem>
//  
//  <qitem> UART3_TX_IRQ
//    <name> UART3_TX </name>
//    <i> UART 3 TX interrupt </i>
//    <loc> 55 </loc>
//  </qitem>
//  
//  <qitem> UART4_RX_IRQ
//    <name> UART4_RX </name>
//    <i> UART 4 RX interrupt </i>
//    <loc> 56 </loc>
//  </qitem>
//  
//  <qitem> UART4_TX_IRQ
//    <name> UART4_TX </name>
//    <i> UART 4 TX interrupt </i>
//    <loc> 57 </loc>
//  </qitem>
//  
//  <qitem> UART0_IRQ
//    <name> UART0 </name>
//    <i> UART 0 combined interrupt </i>
//    <loc> 58 </loc>
//  </qitem>
//  
//  <qitem> UART1_IRQ
//    <name> UART1 </name>
//    <i> UART 1 combined interrupt </i>
//    <loc> 59 </loc>
//  </qitem>
//  
//  <qitem> UART2_IRQ
//    <name> UART2 </name>
//    <i> UART 2 combined interrupt </i>
//    <loc> 60 </loc>
//  </qitem>
//  
//  <qitem> UART3_IRQ
//    <name> UART3 </name>
//    <i> UART 3 combined interrupt </i>
//    <loc> 61 </loc>
//  </qitem>
//  
//  <qitem> UART4_IRQ
//    <name> UART4 </name>
//    <i> UART 4 combined interrupt </i>
//    <loc> 62 </loc>
//  </qitem>
//  
//  <qitem> UART_OVF_IRQ
//    <name> UART_OVF </name>
//    <i> UART 0/1/2/3/4 overflow interrupt </i>
//    <loc> 63 </loc>
//  </qitem>
//  
//  <qitem> I2S_IRQ
//    <name> I2S </name>
//    <i> I2S interrupt </i>
//    <loc> 65 </loc>
//  </qitem>
//  
//  <qitem> SPI0_IRQ
//    <name> SPI0 </name>
//    <i> SPI 0 interrupt </i>
//    <loc> 67 </loc>
//  </qitem>
//  
//  <qitem> SPI1_IRQ
//    <name> SPI1 </name>
//    <i> SPI 1 interrupt </i>
//    <loc> 68 </loc>
//  </qitem>
//  
//  <qitem> SPI2_IRQ
//    <name> SPI2 </name>
//    <i> SPI 2 interrupt </i>
//    <loc> 69 </loc>
//  </qitem>
//  
//  <qitem> SPI3_IRQ
//    <name> SPI3 </name>
//    <i> SPI 3 interrupt </i>
//    <loc> 70 </loc>
//  </qitem>
//  
//  <qitem> SPI4_IRQ
//    <name> SPI4 </name>
//    <i> SPI 4 interrupt </i>
//    <loc> 71 </loc>
//  </qitem>
//  
//  <qitem> DMA0_ERROR_IRQ
//    <name> DMA0_ERROR </name>
//    <i> DMA 0 error interrupt </i>
//    <loc> 72 </loc>
//  </qitem>
//  
//  <qitem> DMA0_TC_IRQ
//    <name> DMA0_TC </name>
//    <i> DMA 0 terminal count interrupt </i>
//    <loc> 73 </loc>
//  </qitem>
//  
//  <qitem> DMA0_IRQ
//    <name> DMA0 </name>
//    <i> DMA 0 combined interrupt </i>
//    <loc> 74 </loc>
//  </qitem>
//  
//  <qitem> DMA1_ERROR_IRQ
//    <name> DMA1_ERROR </name>
//    <i> DMA 1 error interrupt </i>
//    <loc> 75 </loc>
//  </qitem>
//  
//  <qitem> DMA1_TC_IRQ
//    <name> DMA1_TC </name>
//    <i> DMA 1 terminal count interrupt </i>
//    <loc> 76 </loc>
//  </qitem>
//  
//  <qitem> DMA1_IRQ
//    <name> DMA1 </name>
//    <i> DMA 1 combined interrupt </i>
//    <loc> 77 </loc>
//  </qitem>
//  
//  <qitem> DMA2_ERROR_IRQ
//    <name> DMA2_ERROR </name>
//    <i> DMA 2 error interrupt </i>
//    <loc> 78 </loc>
//  </qitem>
//  
//  <qitem> DMA2_TC_IRQ
//    <name> DMA2_TC </name>
//    <i> DMA 2 terminal count interrupt </i>
//    <loc> 79 </loc>
//  </qitem>
//  
//  <qitem> DMA2_IRQ
//    <name> DMA2 </name>
//    <i> DMA 2 combined interrupt </i>
//    <loc> 80 </loc>
//  </qitem>
//  
//  <qitem> DMA3_ERROR_IRQ
//    <name> DMA3_ERROR </name>
//    <i> DMA 3 error interrupt </i>
//    <loc> 81 </loc>
//  </qitem>
//  
//  <qitem> DMA3_TC_IRQ
//    <name> DMA3_TC </name>
//    <i> DMA 3 terminal count interrupt </i>
//    <loc> 82 </loc>
//  </qitem>
//  
//  <qitem> DMA3_IRQ
//    <name> DMA3 </name>
//    <i> DMA 3 combined interrupt </i>
//    <loc> 83 </loc>
//  </qitem>
//  
//  <qitem> GPIO0_IRQ
//    <name> GPIO0 </name>
//    <i> GPIO 0 combined interrupt </i>
//    <loc> 84 </loc>
//  </qitem>
//  
//  <qitem> GPIO1_IRQ
//    <name> GPIO1 </name>
//    <i> GPIO 1 combined interrupt </i>
//    <loc> 85 </loc>
//  </qitem>
//  
//  <qitem> GPIO2_IRQ
//    <name> GPIO2 </name>
//    <i> GPIO 2 combined interrupt </i>
//    <loc> 86 </loc>
//  </qitem>
//  
//  <qitem> GPIO3_IRQ
//    <name> GPIO3 </name>
//    <i> GPIO 3 combined interrupt </i>
//    <loc> 87 </loc>
//  </qitem>
//  
//  <qitem> GPIO0_0_IRQ
//    <name> GPIO0_0 </name>
//    <i> GPIO 0 Pin 0 interrupt </i>
//    <loc> 88 </loc>
//  </qitem>
//  
//  <qitem> GPIO0_1_IRQ
//    <name> GPIO0_1 </name>
//    <i> GPIO 0 Pin 1 interrupt </i>
//    <loc> 89 </loc>
//  </qitem>
//  
//  <qitem> GPIO0_2_IRQ
//    <name> GPIO0_2 </name>
//    <i> GPIO 0 Pin 2 interrupt </i>
//    <loc> 90 </loc>
//  </qitem>
//  
//  <qitem> GPIO0_3_IRQ
//    <name> GPIO0_3 </name>
//    <i> GPIO 0 Pin 3 interrupt </i>
//    <loc> 91 </loc>
//  </qitem>
//  
//  <qitem> GPIO0_4_IRQ
//    <name> GPIO0_4 </name>
//    <i> GPIO 0 Pin 4 interrupt </i>
//    <loc> 92 </loc>
//  </qitem>
//  
//  <qitem> GPIO0_5_IRQ
//    <name> GPIO0_5 </name>
//    <i> GPIO 0 Pin 5 interrupt </i>
//    <loc> 93 </loc>
//  </qitem>
//  
//  <qitem> GPIO0_6_IRQ
//    <name> GPIO0_6 </name>
//    <i> GPIO 0 Pin 6 interrupt </i>
//    <loc> 94 </loc>
//  </qitem>
//  
//  <qitem> GPIO0_7_IRQ
//    <name> GPIO0_7 </name>
//    <i> GPIO 0 Pin 7 interrupt </i>
//    <loc> 95 </loc>
//  </qitem>
//  
//  <qitem> GPIO0_8_IRQ
//    <name> GPIO0_8 </name>
//    <i> GPIO 0 Pin 8 interrupt </i>
//    <loc> 96 </loc>
//  </qitem>
//  
//  <qitem> GPIO0_9_IRQ
//    <name> GPIO0_9 </name>
//    <i> GPIO 0 Pin 9 interrupt </i>
//    <loc> 97 </loc>
//  </qitem>
//  
//  <qitem> GPIO0_10_IRQ
//    <name> GPIO0_10 </name>
//    <i> GPIO 0 Pin 10 interrupt </i>
//    <loc> 98 </loc>
//  </qitem>
//  
//  <qitem> GPIO0_11_IRQ
//    <name> GPIO0_11 </name>
//    <i> GPIO 0 Pin 11 interrupt </i>
//    <loc> 99 </loc>
//  </qitem>
//  
//  <qitem> GPIO0_12_IRQ
//    <name> GPIO0_12 </name>
//    <i> GPIO 0 Pin 12 interrupt </i>
//    <loc> 100 </loc>
//  </qitem>
//  
//  <qitem> GPIO0_13_IRQ
//    <name> GPIO0_13 </name>
//    <i> GPIO 0 Pin 13 interrupt </i>
//    <loc> 101 </loc>
//  </qitem>
//  
//  <qitem> GPIO0_14_IRQ
//    <name> GPIO0_14 </name>
//    <i> GPIO 0 Pin 14 interrupt </i>
//    <loc> 102 </loc>
//  </qitem>
//  
//  <qitem> GPIO0_15_IRQ
//    <name> GPIO0_15 </name>
//    <i> GPIO 0 Pin 15 interrupt </i>
//    <loc> 103 </loc>
//  </qitem>
//  
//  <qitem> GPIO1_0_IRQ
//    <name> GPIO1_0 </name>
//    <i> GPIO 1 Pin 0 interrupt </i>
//    <loc> 104 </loc>
//  </qitem>
//  
//  <qitem> GPIO1_1_IRQ
//    <name> GPIO1_1 </name>
//    <i> GPIO 1 Pin 1 interrupt </i>
//    <loc> 105 </loc>
//  </qitem>
//  
//  <qitem> GPIO1_2_IRQ
//    <name> GPIO1_2 </name>
//    <i> GPIO 1 Pin 2 interrupt </i>
//    <loc> 106 </loc>
//  </qitem>
//  
//  <qitem> GPIO1_3_IRQ
//    <name> GPIO1_3 </name>
//    <i> GPIO 1 Pin 3 interrupt </i>
//    <loc> 107 </loc>
//  </qitem>
//  
//  <qitem> GPIO1_4_IRQ
//    <name> GPIO1_4 </name>
//    <i> GPIO 1 Pin 4 interrupt </i>
//    <loc> 108 </loc>
//  </qitem>
//  
//  <qitem> GPIO1_5_IRQ
//    <name> GPIO1_5 </name>
//    <i> GPIO 1 Pin 5 interrupt </i>
//    <loc> 109 </loc>
//  </qitem>
//  
//  <qitem> GPIO1_6_IRQ
//    <name> GPIO1_6 </name>
//    <i> GPIO 1 Pin 6 interrupt </i>
//    <loc> 110 </loc>
//  </qitem>
//  
//  <qitem> GPIO1_7_IRQ
//    <name> GPIO1_7 </name>
//    <i> GPIO 1 Pin 7 interrupt </i>
//    <loc> 111 </loc>
//  </qitem>
//  
//  <qitem> GPIO1_8_IRQ
//    <name> GPIO1_8 </name>
//    <i> GPIO 1 Pin 8 interrupt </i>
//    <loc> 112 </loc>
//  </qitem>
//  
//  <qitem> GPIO1_9_IRQ
//    <name> GPIO1_9 </name>
//    <i> GPIO 1 Pin 9 interrupt </i>
//    <loc> 113 </loc>
//  </qitem>
//  
//  <qitem> GPIO1_10_IRQ
//    <name> GPIO1_10 </name>
//    <i> GPIO 1 Pin 10 interrupt </i>
//    <loc> 114 </loc>
//  </qitem>
//  
//  <qitem> GPIO1_11_IRQ
//    <name> GPIO1_11 </name>
//    <i> GPIO 1 Pin 11 interrupt </i>
//    <loc> 115 </loc>
//  </qitem>
//  
//  <qitem> GPIO1_12_IRQ
//    <name> GPIO1_12 </name>
//    <i> GPIO 1 Pin 12 interrupt </i>
//    <loc> 116 </loc>
//  </qitem>
//  
//  <qitem> GPIO1_13_IRQ
//    <name> GPIO1_13 </name>
//    <i> GPIO 1 Pin 13 interrupt </i>
//    <loc> 117 </loc>
//  </qitem>
//  
//  <qitem> GPIO1_14_IRQ
//    <name> GPIO1_14 </name>
//    <i> GPIO 1 Pin 14 interrupt </i>
//    <loc> 118 </loc>
//  </qitem>
//  
//  <qitem> GPIO1_15_IRQ
//    <name> GPIO1_15 </name>
//    <i> GPIO 1 Pin 15 interrupt </i>
//    <loc> 119 </loc>
//  </qitem>
//  
//  <qitem> GPIO2_0_IRQ
//    <name> GPIO2_0 </name>
//    <i> GPIO 2 Pin 0 interrupt </i>
//    <loc> 120 </loc>
//  </qitem>
//  
//  <qitem> GPIO2_1_IRQ
//    <name> GPIO2_1 </name>
//    <i> GPIO 2 Pin 1 interrupt </i>
//    <loc> 121 </loc>
//  </qitem>
//  
//  <qitem> GPIO2_2_IRQ
//    <name> GPIO2_2 </name>
//    <i> GPIO 2 Pin 2 interrupt </i>
//    <loc> 122 </loc>
//  </qitem>
//  
//  <qitem> GPIO2_3_IRQ
//    <name> GPIO2_3 </name>
//    <i> GPIO 2 Pin 3 interrupt </i>
//    <loc> 123 </loc>
//  </qitem>
//  
//  <qitem> GPIO2_4_IRQ
//    <name> GPIO2_4 </name>
//    <i> GPIO 2 Pin 4 interrupt </i>
//    <loc> 124 </loc>
//  </qitem>
//  
//  <qitem> GPIO2_5_IRQ
//    <name> GPIO2_5 </name>
//    <i> GPIO 2 Pin 5 interrupt </i>
//    <loc> 125 </loc>
//  </qitem>
//  
//  <qitem> GPIO2_6_IRQ
//    <name> GPIO2_6 </name>
//    <i> GPIO 2 Pin 6 interrupt </i>
//    <loc> 126 </loc>
//  </qitem>
//  
//  <qitem> GPIO2_7_IRQ
//    <name> GPIO2_7 </name>
//    <i> GPIO 2 Pin 7 interrupt </i>
//    <loc> 127 </loc>
//  </qitem>
//  
//  <qitem> GPIO2_8_IRQ
//    <name> GPIO2_8 </name>
//    <i> GPIO 2 Pin 8 interrupt </i>
//    <loc> 128 </loc>
//  </qitem>
//  
//  <qitem> GPIO2_9_IRQ
//    <name> GPIO2_9 </name>
//    <i> GPIO 2 Pin 9 interrupt </i>
//    <loc> 129 </loc>
//  </qitem>
//  
//  <qitem> GPIO2_10_IRQ
//    <name> GPIO2_10 </name>
//    <i> GPIO 2 Pin 10 interrupt </i>
//    <loc> 130 </loc>
//  </qitem>
//  
//  <qitem> GPIO2_11_IRQ
//    <name> GPIO2_11 </name>
//    <i> GPIO 2 Pin 11 interrupt </i>
//    <loc> 131 </loc>
//  </qitem>
//  
//  <qitem> GPIO2_12_IRQ
//    <name> GPIO2_12 </name>
//    <i> GPIO 2 Pin 12 interrupt </i>
//    <loc> 132 </loc>
//  </qitem>
//  
//  <qitem> GPIO2_13_IRQ
//    <name> GPIO2_13 </name>
//    <i> GPIO 2 Pin 13 interrupt </i>
//    <loc> 133 </loc>
//  </qitem>
//  
//  <qitem> GPIO2_14_IRQ
//    <name> GPIO2_14 </name>
//    <i> GPIO 2 Pin 14 interrupt </i>
//    <loc> 134 </loc>
//  </qitem>
//  
//  <qitem> GPIO2_15_IRQ
//    <name> GPIO2_15 </name>
//    <i> GPIO 2 Pin 15 interrupt </i>
//    <loc> 135 </loc>
//  </qitem>
//  
//  <qitem> GPIO3_0_IRQ
//    <name> GPIO3_0 </name>
//    <i> GPIO 3 Pin 0 interrupt </i>
//    <loc> 136 </loc>
//  </qitem>
//  
//  <qitem> GPIO3_1_IRQ
//    <name> GPIO3_1 </name>
//    <i> GPIO 3 Pin 1 interrupt </i>
//    <loc> 137 </loc>
//  </qitem>
//  
//  <qitem> GPIO3_2_IRQ
//    <name> GPIO3_2 </name>
//    <i> GPIO 3 Pin 2 interrupt </i>
//    <loc> 138 </loc>
//  </qitem>
//  
//  <qitem> GPIO3_3_IRQ
//    <name> GPIO3_3 </name>
//    <i> GPIO 3 Pin 3 interrupt </i>
//    <loc> 139 </loc>
//  </qitem>
//  
//  <irqtable> IOTKit_CM33_IRQTable
//    <name> IOTKit_CM33 Interrupt Table </name>
//    <nvicPrioBits> 3 </nvicPrioBits>
//    <qitem> Reset_IRQ </qitem>
//    <qitem> NonMaskableInt_IRQ </qitem>
//    <qitem> HardFault_IRQ </qitem>
//    <qitem> MemoryManagement_IRQ </qitem>
//    <qitem> BusFault_IRQ </qitem>
//    <qitem> UsageFault_IRQ </qitem>
//    <qitem> SecureFault_IRQ </qitem>
//    <qitem> SVCall_IRQ </qitem>
//    <qitem> DebugMonitor_IRQ </qitem>
//    <qitem> PendSV_IRQ </qitem>
//    <qitem> SysTick_IRQ </qitem>
//    <qitem> WATCHDOG_IRQ </qitem>
//    <qitem> TIMER0_IRQ </qitem>
//    <qitem> TIMER1_IRQ </qitem>
//    <qitem> DUALTIMER_IRQ </qitem>
//    <qitem> UART0_RX_IRQ </qitem>
//    <qitem> UART0_TX_IRQ </qitem>
//    <qitem> UART1_RX_IRQ </qitem>
//    <qitem> UART1_TX_IRQ </qitem>
//    <qitem> UART2_RX_IRQ </qitem>
//    <qitem> UART2_TX_IRQ </qitem>
//    <qitem> UART3_RX_IRQ </qitem>
//    <qitem> UART3_TX_IRQ </qitem>
//    <qitem> UART4_RX_IRQ </qitem>
//    <qitem> UART4_TX_IRQ </qitem>
//    <qitem> UART0_IRQ </qitem>
//    <qitem> UART1_IRQ </qitem>
//    <qitem> UART2_IRQ </qitem>
//    <qitem> UART3_IRQ </qitem>
//    <qitem> UART4_IRQ </qitem>
//    <qitem> UART_OVF_IRQ </qitem>
//    <qitem> I2S_IRQ </qitem>
//    <qitem> SPI0_IRQ </qitem>
//    <qitem> SPI1_IRQ </qitem>
//    <qitem> SPI2_IRQ </qitem>
//    <qitem> SPI3_IRQ </qitem>
//    <qitem> SPI4_IRQ </qitem>
//    <qitem> DMA0_ERROR_IRQ </qitem>
//    <qitem> DMA0_TC_IRQ </qitem>
//    <qitem> DMA0_IRQ </qitem>
//    <qitem> DMA1_ERROR_IRQ </qitem>
//    <qitem> DMA1_TC_IRQ </qitem>
//    <qitem> DMA1_IRQ </qitem>
//    <qitem> DMA2_ERROR_IRQ </qitem>
//    <qitem> DMA2_TC_IRQ </qitem>
//    <qitem> DMA2_IRQ </qitem>
//    <qitem> DMA3_ERROR_IRQ </qitem>
//    <qitem> DMA3_TC_IRQ </qitem>
//    <qitem> DMA3_IRQ </qitem>
//    <qitem> GPIO0_IRQ </qitem>
//    <qitem> GPIO1_IRQ </qitem>
//    <qitem> GPIO2_IRQ </qitem>
//    <qitem> GPIO3_IRQ </qitem>
//    <qitem> GPIO0_0_IRQ </qitem>
//    <qitem> GPIO0_1_IRQ </qitem>
//    <qitem> GPIO0_2_IRQ </qitem>
//    <qitem> GPIO0_3_IRQ </qitem>
//    <qitem> GPIO0_4_IRQ </qitem>
//    <qitem> GPIO0_5_IRQ </qitem>
//    <qitem> GPIO0_6_IRQ </qitem>
//    <qitem> GPIO0_7_IRQ </qitem>
//    <qitem> GPIO0_8_IRQ </qitem>
//    <qitem> GPIO0_9_IRQ </qitem>
//    <qitem> GPIO0_10_IRQ </qitem>
//    <qitem> GPIO0_11_IRQ </qitem>
//    <qitem> GPIO0_12_IRQ </qitem>
//    <qitem> GPIO0_13_IRQ </qitem>
//    <qitem> GPIO0_14_IRQ </qitem>
//    <qitem> GPIO0_15_IRQ </qitem>
//    <qitem> GPIO1_0_IRQ </qitem>
//    <qitem> GPIO1_1_IRQ </qitem>
//    <qitem> GPIO1_2_IRQ </qitem>
//    <qitem> GPIO1_3_IRQ </qitem>
//    <qitem> GPIO1_4_IRQ </qitem>
//    <qitem> GPIO1_5_IRQ </qitem>
//    <qitem> GPIO1_6_IRQ </qitem>
//    <qitem> GPIO1_7_IRQ </qitem>
//    <qitem> GPIO1_8_IRQ </qitem>
//    <qitem> GPIO1_9_IRQ </qitem>
//    <qitem> GPIO1_10_IRQ </qitem>
//    <qitem> GPIO1_11_IRQ </qitem>
//    <qitem> GPIO1_12_IRQ </qitem>
//    <qitem> GPIO1_13_IRQ </qitem>
//    <qitem> GPIO1_14_IRQ </qitem>
//    <qitem> GPIO1_15_IRQ </qitem>
//    <qitem> GPIO2_0_IRQ </qitem>
//    <qitem> GPIO2_1_IRQ </qitem>
//    <qitem> GPIO2_2_IRQ </qitem>
//    <qitem> GPIO2_3_IRQ </qitem>
//    <qitem> GPIO2_4_IRQ </qitem>
//    <qitem> GPIO2_5_IRQ </qitem>
//    <qitem> GPIO2_6_IRQ </qitem>
//    <qitem> GPIO2_7_IRQ </qitem>
//    <qitem> GPIO2_8_IRQ </qitem>
//    <qitem> GPIO2_9_IRQ </qitem>
//    <qitem> GPIO2_10_IRQ </qitem>
//    <qitem> GPIO2_11_IRQ </qitem>
//    <qitem> GPIO2_12_IRQ </qitem>
//    <qitem> GPIO2_13_IRQ </qitem>
//    <qitem> GPIO2_14_IRQ </qitem>
//    <qitem> GPIO2_15_IRQ </qitem>
//    <qitem> GPIO3_0_IRQ </qitem>
//    <qitem> GPIO3_1_IRQ </qitem>
//    <qitem> GPIO3_2_IRQ </qitem>
//    <qitem> GPIO3_3_IRQ </qitem>
//  </irqtable>


// -----------------------------------   Menu: IOTKit_CM33  ---------------------------------------
// SVD Line: 36



// -----------------------------  Peripheral Menu: 'IOTKit_CM33'  ---------------------------------



// ------------------------------------------------------------------------------------------------
// -----                                       Main Menu                                      -----
// ------------------------------------------------------------------------------------------------

//  <b> DEBUG
//    <m> DEBUG </m>
//  </b>
//  
//  <b> DMA
//    <m> DMA0 </m>
//    <m> DMA1 </m>
//    <m> DMA2 </m>
//    <m> DMA3 </m>
//  </b>
//  
//  <b> DMA (Secure)
//    <m> DMA0_SECURE </m>
//    <m> DMA1_SECURE </m>
//    <m> DMA2_SECURE </m>
//    <m> DMA3_SECURE </m>
//  </b>
//  
//  <b> FPGASYS
//    <m> FPGASYS </m>
//  </b>
//  
//  <b> FPGASYS (Secure)
//    <m> FPGASYS_Secure </m>
//  </b>
//  
//  <b> GPIO
//    <m> GPIO0 </m>
//    <m> GPIO1 </m>
//    <m> GPIO2 </m>
//    <m> GPIO3 </m>
//  </b>
//  
//  <b> GPIO (Secure)
//    <m> GPIO0_Secure </m>
//    <m> GPIO1_Secure </m>
//    <m> GPIO2_Secure </m>
//    <m> GPIO3_Secure </m>
//  </b>
//  
//  <b> I
//    <m> I2S </m>
//  </b>
//  
//  <b> I2C
//    <m> I2C0 </m>
//    <m> I2C1 </m>
//    <m> I2C2 </m>
//    <m> I2C3 </m>
//  </b>
//  
//  <b> I2C (Secure)
//    <m> I2C0_Secure </m>
//    <m> I2C1_Secure </m>
//    <m> I2C2_Secure </m>
//    <m> I2C3_Secure </m>
//  </b>
//  
//  <b> I2S
//    <m> I2S_Secure </m>
//  </b>
//  
//  <b> MPC
//    <m> MPC_SSRAM1 </m>
//    <m> MPC_SSRAM2 </m>
//    <m> MPC_SSRAM3 </m>
//  </b>
//  
//  <b> NSPC
//    <m> NSPC </m>
//  </b>
//  
//  <b> SCC
//    <m> SCC </m>
//  </b>
//  
//  <b> SCC (Secure)
//    <m> SCC_Secure </m>
//  </b>
//  
//  <b> SPC
//    <m> SPC </m>
//  </b>
//  
//  <b> SPI
//    <m> SSP0 </m>
//    <m> SSP1 </m>
//    <m> SSP2 </m>
//    <m> SSP3 </m>
//    <m> SSP4 </m>
//  </b>
//  
//  <b> SPI (Secure)
//    <m> SSP0_Secure </m>
//    <m> SSP1_Secure </m>
//    <m> SSP2_Secure </m>
//    <m> SSP3_Secure </m>
//    <m> SSP4_Secure </m>
//  </b>
//  
//  <b> Timer
//    <m> DUALTIMER </m>
//    <m> TIMER0 </m>
//    <m> TIMER1 </m>
//  </b>
//  
//  <b> Timer (Secure)
//    <m> DUALTIMER_Secure </m>
//    <m> TIMER0_Secure </m>
//    <m> TIMER1_Secure </m>
//  </b>
//  
//  <b> UART
//    <m> UART0 </m>
//    <m> UART1 </m>
//    <m> UART2 </m>
//    <m> UART3 </m>
//    <m> UART4 </m>
//  </b>
//  
//  <b> UART (Secure)
//    <m> UART0_Secure </m>
//    <m> UART1_Secure </m>
//    <m> UART2_Secure </m>
//    <m> UART3_Secure </m>
//    <m> UART4_Secure </m>
//  </b>
//  
//  <b> WATCHDOG
//    <m> WATCHDOG </m>
//  </b>
//  
