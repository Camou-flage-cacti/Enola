/*
 * ARM Limited (ARM) is supplying this software for use with Cortex-M
 * processor based microcontroller, but can be equally used for other
 * suitable processor architectures. This file can be freely distributed.
 * Modifications to this file shall be clearly marked.
 * 
 * THIS SOFTWARE IS PROVIDED "AS IS". NO WARRANTIES, WHETHER EXPRESS, IMPLIED
 * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
 * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
 * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
 *
 * @file     SSE310.sfd
 * @brief    CMSIS-SVD SFD File
 * @version  1.0
 * @date     20. November 2023
 * @note     Generated by SVDConv V3.3.42 on Monday, 20.11.2023 11:37:46
 *           from File 'SSE310.svd',
 *           last modified on Friday, 13.10.2023 16:31:48
 */




// ----------------------  Register Item Address: SYSCOUNTER_CNTRL_CNTCR  -------------------------
// SVD Line: 101

unsigned int SYSCOUNTER_CNTRL_CNTCR __AT (0x58100000);



// --------------------------  Field Item: SYSCOUNTER_CNTRL_CNTCR_EN  -----------------------------
// SVD Line: 108

//  <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTCR_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x58100000) \nEnable Counter\n0 : Disabled = Count is not incrementing\n1 : Enabled = Count is incrementing </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCOUNTER_CNTRL_CNTCR ) </loc>
//      <o.0..0> EN
//        <0=> 0: Disabled = Count is not incrementing
//        <1=> 1: Enabled = Count is incrementing
//    </combo>
//  </item>
//  


// -------------------------  Field Item: SYSCOUNTER_CNTRL_CNTCR_HDBG  ----------------------------
// SVD Line: 126

//  <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTCR_HDBG
//    <name> HDBG </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x58100000) \nHalt on debug\n0 : Nohalt = HALTREQ signal into the Counter has no effect\n1 : Halt = HALTREQ signal into the Counter halts the Count </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCOUNTER_CNTRL_CNTCR ) </loc>
//      <o.1..1> HDBG
//        <0=> 0: Nohalt = HALTREQ signal into the Counter has no effect
//        <1=> 1: Halt = HALTREQ signal into the Counter halts the Count
//    </combo>
//  </item>
//  


// -------------------------  Field Item: SYSCOUNTER_CNTRL_CNTCR_SCEN  ----------------------------
// SVD Line: 144

//  <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTCR_SCEN
//    <name> SCEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x58100000) \nScale enable\n0 : ScaleDisabled = Scaling is not enabled\n1 : ScaleEnabled = Scaling is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCOUNTER_CNTRL_CNTCR ) </loc>
//      <o.2..2> SCEN
//        <0=> 0: ScaleDisabled = Scaling is not enabled
//        <1=> 1: ScaleEnabled = Scaling is enabled
//    </combo>
//  </item>
//  


// -----------------------  Field Item: SYSCOUNTER_CNTRL_CNTCR_INTRMASK  --------------------------
// SVD Line: 162

//  <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTCR_INTRMASK
//    <name> INTRMASK </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x58100000) \nInterrupt mask\n0 : InterruptDisabled = Interrupt output disabled\n1 : InterruptEnabled = Interrupt output enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCOUNTER_CNTRL_CNTCR ) </loc>
//      <o.3..3> INTRMASK
//        <0=> 0: InterruptDisabled = Interrupt output disabled
//        <1=> 1: InterruptEnabled = Interrupt output enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: SYSCOUNTER_CNTRL_CNTCR_PSLVERRDIS  -------------------------
// SVD Line: 180

//  <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTCR_PSLVERRDIS
//    <name> PSLVERRDIS </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x58100000) \nPSLVERR output disable\n0 : PSLVERRDisabled = PSLVERR is permanently driven to 0\n1 : PSLVERREnabled = PSLVERR output that the System Counter generates dynamically </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCOUNTER_CNTRL_CNTCR ) </loc>
//      <o.4..4> PSLVERRDIS
//        <0=> 0: PSLVERRDisabled = PSLVERR is permanently driven to 0
//        <1=> 1: PSLVERREnabled = PSLVERR output that the System Counter generates dynamically
//    </combo>
//  </item>
//  


// -----------------------  Field Item: SYSCOUNTER_CNTRL_CNTCR_INTRCLR  ---------------------------
// SVD Line: 198

//  <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTCR_INTRCLR
//    <name> INTRCLR </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x58100000) Interrupt clear bit, only writes of 0 are permitted, and writes of 1 are ignored. </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCOUNTER_CNTRL_CNTCR ) </loc>
//      <o.5..5> INTRCLR
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCOUNTER_CNTRL_CNTCR  -----------------------------
// SVD Line: 101

//  <rtree> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTCR
//    <name> CNTCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x58100000) Counter Control Register </i>
//    <loc> ( (unsigned int)((SYSCOUNTER_CNTRL_CNTCR >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_CNTRL_CNTCR = (SYSCOUNTER_CNTRL_CNTCR & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTCR_EN </item>
//    <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTCR_HDBG </item>
//    <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTCR_SCEN </item>
//    <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTCR_INTRMASK </item>
//    <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTCR_PSLVERRDIS </item>
//    <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTCR_INTRCLR </item>
//  </rtree>
//  


// ----------------------  Register Item Address: SYSCOUNTER_CNTRL_CNTSR  -------------------------
// SVD Line: 207

unsigned int SYSCOUNTER_CNTRL_CNTSR __AT (0x58100004);



// -------------------------  Field Item: SYSCOUNTER_CNTRL_CNTSR_DBGH  ----------------------------
// SVD Line: 214

//  <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTSR_DBGH
//    <name> DBGH </name>
//    <r> 
//    <i> [Bits 4..1] RO (@ 0x58100004) \nIndicates whether the counter is halted because the Halt-on-Debug signal is asserted\n0 : Nohalt = Counter is not halted\n1 : Halt = Counter is halted\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCOUNTER_CNTRL_CNTSR ) </loc>
//      <o.4..1> DBGH
//        <0=> 0: Nohalt = Counter is not halted
//        <1=> 1: Halt = Counter is halted
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: SYSCOUNTER_CNTRL_CNTSR  -----------------------------
// SVD Line: 207

//  <rtree> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTSR
//    <name> CNTSR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x58100004) Counter frequency status information </i>
//    <loc> ( (unsigned int)((SYSCOUNTER_CNTRL_CNTSR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTSR_DBGH </item>
//  </rtree>
//  


// ----------------------  Register Item Address: SYSCOUNTER_CNTRL_CNTCV  -------------------------
// SVD Line: 234

unsigned int SYSCOUNTER_CNTRL_CNTCV __AT (0x58100008);



// ----------------------  Field Item: SYSCOUNTER_CNTRL_CNTCV_Countvalue  -------------------------
// SVD Line: 241

//  <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTCV_Countvalue
//    <name> Countvalue </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x58100008) Indicates the countvalue </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_CNTRL_CNTCV >> 0) & 0x0) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register RTree: SYSCOUNTER_CNTRL_CNTCV  -----------------------------
// SVD Line: 234

//  <rtree> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTCV
//    <name> CNTCV </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x58100008) Current count value </i>
//    <loc> ( (unsigned int)((SYSCOUNTER_CNTRL_CNTCV >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTCV_Countvalue </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCOUNTER_CNTRL_CNTSCR  -------------------------
// SVD Line: 249

unsigned int SYSCOUNTER_CNTRL_CNTSCR __AT (0x58100010);



// ----------------------  Field Item: SYSCOUNTER_CNTRL_CNTSCR_ScaleVal  --------------------------
// SVD Line: 256

//  <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTSCR_ScaleVal
//    <name> ScaleVal </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x58100010) The amount added to the Counter Count Value for every period of  the counter as determined by 1/Frequency from the current  operating frequency of the system counter, the counter tick </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_CNTRL_CNTSCR >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_CNTRL_CNTSCR = (SYSCOUNTER_CNTRL_CNTSCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register RTree: SYSCOUNTER_CNTRL_CNTSCR  ----------------------------
// SVD Line: 249

//  <rtree> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTSCR
//    <name> CNTSCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x58100010) Stores the Counter Scaling value </i>
//    <loc> ( (unsigned int)((SYSCOUNTER_CNTRL_CNTSCR >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_CNTRL_CNTSCR = (SYSCOUNTER_CNTRL_CNTSCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTSCR_ScaleVal </item>
//  </rtree>
//  


// ----------------------  Register Item Address: SYSCOUNTER_CNTRL_CNTID  -------------------------
// SVD Line: 267

unsigned int SYSCOUNTER_CNTRL_CNTID __AT (0x5810001C);



// ------------------------  Field Item: SYSCOUNTER_CNTRL_CNTID_CNTSC  ----------------------------
// SVD Line: 274

//  <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTID_CNTSC
//    <name> CNTSC </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x5810001C) \nIndicates whether Counter Scaling is implemented\n0 : CNTSCNotimplemented = Counter Scaling is not implemented\n1 : CNTSCImplemented = Counter Scaling is implemented\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCOUNTER_CNTRL_CNTID ) </loc>
//      <o.3..0> CNTSC
//        <0=> 0: CNTSCNotimplemented = Counter Scaling is not implemented
//        <1=> 1: CNTSCImplemented = Counter Scaling is implemented
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------  Field Item: SYSCOUNTER_CNTRL_CNTID_CNTCS  ----------------------------
// SVD Line: 292

//  <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTID_CNTCS
//    <name> CNTCS </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x5810001C) \nIndicates whether Clock Switching is implemented\n0 : CNTCSNotimplemented = HW-based Counter Clock Switching is not implemented\n1 : CNTCSImplemented = HW-based Counter Clock Switching is implemented </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCOUNTER_CNTRL_CNTID ) </loc>
//      <o.16..16> CNTCS
//        <0=> 0: CNTCSNotimplemented = HW-based Counter Clock Switching is not implemented
//        <1=> 1: CNTCSImplemented = HW-based Counter Clock Switching is implemented
//    </combo>
//  </item>
//  


// ----------------------  Field Item: SYSCOUNTER_CNTRL_CNTID_CNTSELCLK  --------------------------
// SVD Line: 310

//  <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTID_CNTSELCLK
//    <name> CNTSELCLK </name>
//    <r> 
//    <i> [Bits 18..17] RO (@ 0x5810001C) \nIndicates the clock source that the Counter is using\n0 : Invalid0 = Invalid status, Counter not incrementing\n1 : CLK0 = CLK0 (REFCLK)\n2 : CLK1 = CLK1 (FASTCLK)\n3 : Invalid1 = Invalid status, Counter not incrementing </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCOUNTER_CNTRL_CNTID ) </loc>
//      <o.18..17> CNTSELCLK
//        <0=> 0: Invalid0 = Invalid status, Counter not incrementing
//        <1=> 1: CLK0 = CLK0 (REFCLK)
//        <2=> 2: CLK1 = CLK1 (FASTCLK)
//        <3=> 3: Invalid1 = Invalid status, Counter not incrementing
//    </combo>
//  </item>
//  


// ----------------------  Field Item: SYSCOUNTER_CNTRL_CNTID_CNTSCR_OVR  -------------------------
// SVD Line: 338

//  <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTID_CNTSCR_OVR
//    <name> CNTSCR_OVR </name>
//    <r> 
//    <i> [Bit 19] RO (@ 0x5810001C) \nOverride counter enable condition for writing to CNTSCR* registers\n0 : COND1 = CNTSCR* can be written only when CNTCR.EN=0\n1 : COND2 = CNTSCR* can be written when CNTCR.EN=0 or 1 </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCOUNTER_CNTRL_CNTID ) </loc>
//      <o.19..19> CNTSCR_OVR
//        <0=> 0: COND1 = CNTSCR* can be written only when CNTCR.EN=0
//        <1=> 1: COND2 = CNTSCR* can be written when CNTCR.EN=0 or 1
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: SYSCOUNTER_CNTRL_CNTID  -----------------------------
// SVD Line: 267

//  <rtree> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTID
//    <name> CNTID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5810001C) Indicates additional information about Counter Scaling implementation </i>
//    <loc> ( (unsigned int)((SYSCOUNTER_CNTRL_CNTID >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTID_CNTSC </item>
//    <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTID_CNTCS </item>
//    <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTID_CNTSELCLK </item>
//    <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTID_CNTSCR_OVR </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCOUNTER_CNTRL_CNTSCR0  ------------------------
// SVD Line: 358

unsigned int SYSCOUNTER_CNTRL_CNTSCR0 __AT (0x581000D0);



// ----------------------  Field Item: SYSCOUNTER_CNTRL_CNTSCR0_ScaleVal  -------------------------
// SVD Line: 365

//  <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTSCR0_ScaleVal
//    <name> ScaleVal </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x581000D0) The amount added to the Counter Count Value for every period of  the counter as determined by 1/Frequency from the current  operating frequency of the system counter, the counter tick </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_CNTRL_CNTSCR0 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_CNTRL_CNTSCR0 = (SYSCOUNTER_CNTRL_CNTSCR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register RTree: SYSCOUNTER_CNTRL_CNTSCR0  ----------------------------
// SVD Line: 358

//  <rtree> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTSCR0
//    <name> CNTSCR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x581000D0) Counter Scaling register </i>
//    <loc> ( (unsigned int)((SYSCOUNTER_CNTRL_CNTSCR0 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_CNTRL_CNTSCR0 = (SYSCOUNTER_CNTRL_CNTSCR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTSCR0_ScaleVal </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCOUNTER_CNTRL_CNTSCR1  ------------------------
// SVD Line: 376

unsigned int SYSCOUNTER_CNTRL_CNTSCR1 __AT (0x581000D4);



// ----------------------  Field Item: SYSCOUNTER_CNTRL_CNTSCR1_ScaleVal  -------------------------
// SVD Line: 383

//  <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTSCR1_ScaleVal
//    <name> ScaleVal </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x581000D4) The amount added to the Counter Count Value for every period of  the counter as determined by 1/Frequency from the current  operating frequency of the system counter, the counter tick </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_CNTRL_CNTSCR1 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_CNTRL_CNTSCR1 = (SYSCOUNTER_CNTRL_CNTSCR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register RTree: SYSCOUNTER_CNTRL_CNTSCR1  ----------------------------
// SVD Line: 376

//  <rtree> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTSCR1
//    <name> CNTSCR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x581000D4) Counter Scaling register </i>
//    <loc> ( (unsigned int)((SYSCOUNTER_CNTRL_CNTSCR1 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_CNTRL_CNTSCR1 = (SYSCOUNTER_CNTRL_CNTSCR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCOUNTER_CNTRL_CNTSCR1_ScaleVal </item>
//  </rtree>
//  


// --------------------  Register Item Address: SYSCOUNTER_CNTRL_CNTPIDR4  ------------------------
// SVD Line: 394

unsigned int SYSCOUNTER_CNTRL_CNTPIDR4 __AT (0x58100FD0);



// ------------------------  Register Item: SYSCOUNTER_CNTRL_CNTPIDR4  ----------------------------
// SVD Line: 394

//  <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTPIDR4
//    <name> CNTPIDR4 </name>
//    <i> [Bits 31..0] RO (@ 0x58100FD0) Peripheral Identification Register 4 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_CNTRL_CNTPIDR4 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_CNTRL_CNTPIDR4 = (SYSCOUNTER_CNTRL_CNTPIDR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: SYSCOUNTER_CNTRL_CNTPIDR0  ------------------------
// SVD Line: 402

unsigned int SYSCOUNTER_CNTRL_CNTPIDR0 __AT (0x58100FE0);



// ------------------------  Register Item: SYSCOUNTER_CNTRL_CNTPIDR0  ----------------------------
// SVD Line: 402

//  <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTPIDR0
//    <name> CNTPIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x58100FE0) Peripheral Identification Register 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_CNTRL_CNTPIDR0 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_CNTRL_CNTPIDR0 = (SYSCOUNTER_CNTRL_CNTPIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: SYSCOUNTER_CNTRL_CNTPIDR1  ------------------------
// SVD Line: 410

unsigned int SYSCOUNTER_CNTRL_CNTPIDR1 __AT (0x58100FE4);



// ------------------------  Register Item: SYSCOUNTER_CNTRL_CNTPIDR1  ----------------------------
// SVD Line: 410

//  <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTPIDR1
//    <name> CNTPIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x58100FE4) Peripheral Identification Register 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_CNTRL_CNTPIDR1 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_CNTRL_CNTPIDR1 = (SYSCOUNTER_CNTRL_CNTPIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: SYSCOUNTER_CNTRL_CNTPIDR2  ------------------------
// SVD Line: 418

unsigned int SYSCOUNTER_CNTRL_CNTPIDR2 __AT (0x58100FE8);



// ------------------------  Register Item: SYSCOUNTER_CNTRL_CNTPIDR2  ----------------------------
// SVD Line: 418

//  <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTPIDR2
//    <name> CNTPIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x58100FE8) Peripheral Identification Register 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_CNTRL_CNTPIDR2 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_CNTRL_CNTPIDR2 = (SYSCOUNTER_CNTRL_CNTPIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: SYSCOUNTER_CNTRL_CNTPIDR3  ------------------------
// SVD Line: 426

unsigned int SYSCOUNTER_CNTRL_CNTPIDR3 __AT (0x58100FEC);



// ------------------------  Register Item: SYSCOUNTER_CNTRL_CNTPIDR3  ----------------------------
// SVD Line: 426

//  <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTPIDR3
//    <name> CNTPIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x58100FEC) Peripheral Identification Register 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_CNTRL_CNTPIDR3 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_CNTRL_CNTPIDR3 = (SYSCOUNTER_CNTRL_CNTPIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: SYSCOUNTER_CNTRL_CNTCIDR0  ------------------------
// SVD Line: 434

unsigned int SYSCOUNTER_CNTRL_CNTCIDR0 __AT (0x58100FF0);



// ------------------------  Register Item: SYSCOUNTER_CNTRL_CNTCIDR0  ----------------------------
// SVD Line: 434

//  <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTCIDR0
//    <name> CNTCIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x58100FF0) Component Identification Register 0. </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_CNTRL_CNTCIDR0 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_CNTRL_CNTCIDR0 = (SYSCOUNTER_CNTRL_CNTCIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: SYSCOUNTER_CNTRL_CNTCIDR1  ------------------------
// SVD Line: 442

unsigned int SYSCOUNTER_CNTRL_CNTCIDR1 __AT (0x58100FF4);



// ------------------------  Register Item: SYSCOUNTER_CNTRL_CNTCIDR1  ----------------------------
// SVD Line: 442

//  <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTCIDR1
//    <name> CNTCIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x58100FF4) Component Identification Register 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_CNTRL_CNTCIDR1 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_CNTRL_CNTCIDR1 = (SYSCOUNTER_CNTRL_CNTCIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: SYSCOUNTER_CNTRL_CNTCIDR2  ------------------------
// SVD Line: 450

unsigned int SYSCOUNTER_CNTRL_CNTCIDR2 __AT (0x58100FF8);



// ------------------------  Register Item: SYSCOUNTER_CNTRL_CNTCIDR2  ----------------------------
// SVD Line: 450

//  <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTCIDR2
//    <name> CNTCIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x58100FF8) Component Identification Register 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_CNTRL_CNTCIDR2 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_CNTRL_CNTCIDR2 = (SYSCOUNTER_CNTRL_CNTCIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: SYSCOUNTER_CNTRL_CNTCIDR3  ------------------------
// SVD Line: 458

unsigned int SYSCOUNTER_CNTRL_CNTCIDR3 __AT (0x58100FFC);



// ------------------------  Register Item: SYSCOUNTER_CNTRL_CNTCIDR3  ----------------------------
// SVD Line: 458

//  <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTCIDR3
//    <name> CNTCIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x58100FFC) Component Identification Register 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_CNTRL_CNTCIDR3 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_CNTRL_CNTCIDR3 = (SYSCOUNTER_CNTRL_CNTCIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Peripheral View: SYSCOUNTER_CNTRL  -------------------------------
// SVD Line: 85

//  <view> SYSCOUNTER_CNTRL
//    <name> SYSCOUNTER_CNTRL </name>
//    <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTCR </item>
//    <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTSR </item>
//    <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTCV </item>
//    <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTSCR </item>
//    <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTID </item>
//    <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTSCR0 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTSCR1 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTPIDR4 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTPIDR0 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTPIDR1 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTPIDR2 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTPIDR3 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTCIDR0 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTCIDR1 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTCIDR2 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_CNTRL_CNTCIDR3 </item>
//  </view>
//  


// ----------------------  Register Item Address: SYSCOUNTER_READ_CNTCV  --------------------------
// SVD Line: 481

unsigned int SYSCOUNTER_READ_CNTCV __AT (0x48101000);



// ----------------------  Field Item: SYSCOUNTER_READ_CNTCV_Countvalue  --------------------------
// SVD Line: 488

//  <item> SFDITEM_FIELD__SYSCOUNTER_READ_CNTCV_Countvalue
//    <name> Countvalue </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x48101000) Indicates the countvalue </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_READ_CNTCV >> 0) & 0x0) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: SYSCOUNTER_READ_CNTCV  -----------------------------
// SVD Line: 481

//  <rtree> SFDITEM_REG__SYSCOUNTER_READ_CNTCV
//    <name> CNTCV </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x48101000) Current count value </i>
//    <loc> ( (unsigned int)((SYSCOUNTER_READ_CNTCV >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__SYSCOUNTER_READ_CNTCV_Countvalue </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SYSCOUNTER_READ_CNTPIDR4  ------------------------
// SVD Line: 496

unsigned int SYSCOUNTER_READ_CNTPIDR4 __AT (0x48101FD0);



// -------------------------  Register Item: SYSCOUNTER_READ_CNTPIDR4  ----------------------------
// SVD Line: 496

//  <item> SFDITEM_REG__SYSCOUNTER_READ_CNTPIDR4
//    <name> CNTPIDR4 </name>
//    <i> [Bits 31..0] RO (@ 0x48101FD0) Peripheral Identification Register 4 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_READ_CNTPIDR4 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_READ_CNTPIDR4 = (SYSCOUNTER_READ_CNTPIDR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: SYSCOUNTER_READ_CNTPIDR0  ------------------------
// SVD Line: 504

unsigned int SYSCOUNTER_READ_CNTPIDR0 __AT (0x48101FE0);



// -------------------------  Register Item: SYSCOUNTER_READ_CNTPIDR0  ----------------------------
// SVD Line: 504

//  <item> SFDITEM_REG__SYSCOUNTER_READ_CNTPIDR0
//    <name> CNTPIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x48101FE0) Peripheral Identification Register 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_READ_CNTPIDR0 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_READ_CNTPIDR0 = (SYSCOUNTER_READ_CNTPIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: SYSCOUNTER_READ_CNTPIDR1  ------------------------
// SVD Line: 512

unsigned int SYSCOUNTER_READ_CNTPIDR1 __AT (0x48101FE4);



// -------------------------  Register Item: SYSCOUNTER_READ_CNTPIDR1  ----------------------------
// SVD Line: 512

//  <item> SFDITEM_REG__SYSCOUNTER_READ_CNTPIDR1
//    <name> CNTPIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x48101FE4) Peripheral Identification Register 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_READ_CNTPIDR1 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_READ_CNTPIDR1 = (SYSCOUNTER_READ_CNTPIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: SYSCOUNTER_READ_CNTPIDR2  ------------------------
// SVD Line: 520

unsigned int SYSCOUNTER_READ_CNTPIDR2 __AT (0x48101FE8);



// -------------------------  Register Item: SYSCOUNTER_READ_CNTPIDR2  ----------------------------
// SVD Line: 520

//  <item> SFDITEM_REG__SYSCOUNTER_READ_CNTPIDR2
//    <name> CNTPIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x48101FE8) Peripheral Identification Register 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_READ_CNTPIDR2 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_READ_CNTPIDR2 = (SYSCOUNTER_READ_CNTPIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: SYSCOUNTER_READ_CNTPIDR3  ------------------------
// SVD Line: 528

unsigned int SYSCOUNTER_READ_CNTPIDR3 __AT (0x48101FEC);



// -------------------------  Register Item: SYSCOUNTER_READ_CNTPIDR3  ----------------------------
// SVD Line: 528

//  <item> SFDITEM_REG__SYSCOUNTER_READ_CNTPIDR3
//    <name> CNTPIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x48101FEC) Peripheral Identification Register 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_READ_CNTPIDR3 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_READ_CNTPIDR3 = (SYSCOUNTER_READ_CNTPIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: SYSCOUNTER_READ_CNTCIDR0  ------------------------
// SVD Line: 536

unsigned int SYSCOUNTER_READ_CNTCIDR0 __AT (0x48101FF0);



// -------------------------  Register Item: SYSCOUNTER_READ_CNTCIDR0  ----------------------------
// SVD Line: 536

//  <item> SFDITEM_REG__SYSCOUNTER_READ_CNTCIDR0
//    <name> CNTCIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x48101FF0) Component Identification Register 0. </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_READ_CNTCIDR0 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_READ_CNTCIDR0 = (SYSCOUNTER_READ_CNTCIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: SYSCOUNTER_READ_CNTCIDR1  ------------------------
// SVD Line: 544

unsigned int SYSCOUNTER_READ_CNTCIDR1 __AT (0x48101FF4);



// -------------------------  Register Item: SYSCOUNTER_READ_CNTCIDR1  ----------------------------
// SVD Line: 544

//  <item> SFDITEM_REG__SYSCOUNTER_READ_CNTCIDR1
//    <name> CNTCIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x48101FF4) Component Identification Register 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_READ_CNTCIDR1 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_READ_CNTCIDR1 = (SYSCOUNTER_READ_CNTCIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: SYSCOUNTER_READ_CNTCIDR2  ------------------------
// SVD Line: 552

unsigned int SYSCOUNTER_READ_CNTCIDR2 __AT (0x48101FF8);



// -------------------------  Register Item: SYSCOUNTER_READ_CNTCIDR2  ----------------------------
// SVD Line: 552

//  <item> SFDITEM_REG__SYSCOUNTER_READ_CNTCIDR2
//    <name> CNTCIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x48101FF8) Component Identification Register 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_READ_CNTCIDR2 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_READ_CNTCIDR2 = (SYSCOUNTER_READ_CNTCIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: SYSCOUNTER_READ_CNTCIDR3  ------------------------
// SVD Line: 560

unsigned int SYSCOUNTER_READ_CNTCIDR3 __AT (0x48101FFC);



// -------------------------  Register Item: SYSCOUNTER_READ_CNTCIDR3  ----------------------------
// SVD Line: 560

//  <item> SFDITEM_REG__SYSCOUNTER_READ_CNTCIDR3
//    <name> CNTCIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x48101FFC) Component Identification Register 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_READ_CNTCIDR3 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_READ_CNTCIDR3 = (SYSCOUNTER_READ_CNTCIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Peripheral View: SYSCOUNTER_READ  --------------------------------
// SVD Line: 469

//  <view> SYSCOUNTER_READ
//    <name> SYSCOUNTER_READ </name>
//    <item> SFDITEM_REG__SYSCOUNTER_READ_CNTCV </item>
//    <item> SFDITEM_REG__SYSCOUNTER_READ_CNTPIDR4 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_READ_CNTPIDR0 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_READ_CNTPIDR1 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_READ_CNTPIDR2 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_READ_CNTPIDR3 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_READ_CNTCIDR0 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_READ_CNTCIDR1 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_READ_CNTCIDR2 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_READ_CNTCIDR3 </item>
//  </view>
//  


// -------------------  Register Item Address: SYSCOUNTER_READ_Secure_CNTCV  ----------------------
// SVD Line: 481

unsigned int SYSCOUNTER_READ_Secure_CNTCV __AT (0x58101000);



// -------------------  Field Item: SYSCOUNTER_READ_Secure_CNTCV_Countvalue  ----------------------
// SVD Line: 488

//  <item> SFDITEM_FIELD__SYSCOUNTER_READ_Secure_CNTCV_Countvalue
//    <name> Countvalue </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x58101000) Indicates the countvalue </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_READ_Secure_CNTCV >> 0) & 0x0) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register RTree: SYSCOUNTER_READ_Secure_CNTCV  --------------------------
// SVD Line: 481

//  <rtree> SFDITEM_REG__SYSCOUNTER_READ_Secure_CNTCV
//    <name> CNTCV </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x58101000) Current count value </i>
//    <loc> ( (unsigned int)((SYSCOUNTER_READ_Secure_CNTCV >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__SYSCOUNTER_READ_Secure_CNTCV_Countvalue </item>
//  </rtree>
//  


// -----------------  Register Item Address: SYSCOUNTER_READ_Secure_CNTPIDR4  ---------------------
// SVD Line: 496

unsigned int SYSCOUNTER_READ_Secure_CNTPIDR4 __AT (0x58101FD0);



// ---------------------  Register Item: SYSCOUNTER_READ_Secure_CNTPIDR4  -------------------------
// SVD Line: 496

//  <item> SFDITEM_REG__SYSCOUNTER_READ_Secure_CNTPIDR4
//    <name> CNTPIDR4 </name>
//    <i> [Bits 31..0] RO (@ 0x58101FD0) Peripheral Identification Register 4 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_READ_Secure_CNTPIDR4 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_READ_Secure_CNTPIDR4 = (SYSCOUNTER_READ_Secure_CNTPIDR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------  Register Item Address: SYSCOUNTER_READ_Secure_CNTPIDR0  ---------------------
// SVD Line: 504

unsigned int SYSCOUNTER_READ_Secure_CNTPIDR0 __AT (0x58101FE0);



// ---------------------  Register Item: SYSCOUNTER_READ_Secure_CNTPIDR0  -------------------------
// SVD Line: 504

//  <item> SFDITEM_REG__SYSCOUNTER_READ_Secure_CNTPIDR0
//    <name> CNTPIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x58101FE0) Peripheral Identification Register 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_READ_Secure_CNTPIDR0 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_READ_Secure_CNTPIDR0 = (SYSCOUNTER_READ_Secure_CNTPIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------  Register Item Address: SYSCOUNTER_READ_Secure_CNTPIDR1  ---------------------
// SVD Line: 512

unsigned int SYSCOUNTER_READ_Secure_CNTPIDR1 __AT (0x58101FE4);



// ---------------------  Register Item: SYSCOUNTER_READ_Secure_CNTPIDR1  -------------------------
// SVD Line: 512

//  <item> SFDITEM_REG__SYSCOUNTER_READ_Secure_CNTPIDR1
//    <name> CNTPIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x58101FE4) Peripheral Identification Register 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_READ_Secure_CNTPIDR1 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_READ_Secure_CNTPIDR1 = (SYSCOUNTER_READ_Secure_CNTPIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------  Register Item Address: SYSCOUNTER_READ_Secure_CNTPIDR2  ---------------------
// SVD Line: 520

unsigned int SYSCOUNTER_READ_Secure_CNTPIDR2 __AT (0x58101FE8);



// ---------------------  Register Item: SYSCOUNTER_READ_Secure_CNTPIDR2  -------------------------
// SVD Line: 520

//  <item> SFDITEM_REG__SYSCOUNTER_READ_Secure_CNTPIDR2
//    <name> CNTPIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x58101FE8) Peripheral Identification Register 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_READ_Secure_CNTPIDR2 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_READ_Secure_CNTPIDR2 = (SYSCOUNTER_READ_Secure_CNTPIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------  Register Item Address: SYSCOUNTER_READ_Secure_CNTPIDR3  ---------------------
// SVD Line: 528

unsigned int SYSCOUNTER_READ_Secure_CNTPIDR3 __AT (0x58101FEC);



// ---------------------  Register Item: SYSCOUNTER_READ_Secure_CNTPIDR3  -------------------------
// SVD Line: 528

//  <item> SFDITEM_REG__SYSCOUNTER_READ_Secure_CNTPIDR3
//    <name> CNTPIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x58101FEC) Peripheral Identification Register 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_READ_Secure_CNTPIDR3 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_READ_Secure_CNTPIDR3 = (SYSCOUNTER_READ_Secure_CNTPIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------  Register Item Address: SYSCOUNTER_READ_Secure_CNTCIDR0  ---------------------
// SVD Line: 536

unsigned int SYSCOUNTER_READ_Secure_CNTCIDR0 __AT (0x58101FF0);



// ---------------------  Register Item: SYSCOUNTER_READ_Secure_CNTCIDR0  -------------------------
// SVD Line: 536

//  <item> SFDITEM_REG__SYSCOUNTER_READ_Secure_CNTCIDR0
//    <name> CNTCIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x58101FF0) Component Identification Register 0. </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_READ_Secure_CNTCIDR0 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_READ_Secure_CNTCIDR0 = (SYSCOUNTER_READ_Secure_CNTCIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------  Register Item Address: SYSCOUNTER_READ_Secure_CNTCIDR1  ---------------------
// SVD Line: 544

unsigned int SYSCOUNTER_READ_Secure_CNTCIDR1 __AT (0x58101FF4);



// ---------------------  Register Item: SYSCOUNTER_READ_Secure_CNTCIDR1  -------------------------
// SVD Line: 544

//  <item> SFDITEM_REG__SYSCOUNTER_READ_Secure_CNTCIDR1
//    <name> CNTCIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x58101FF4) Component Identification Register 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_READ_Secure_CNTCIDR1 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_READ_Secure_CNTCIDR1 = (SYSCOUNTER_READ_Secure_CNTCIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------  Register Item Address: SYSCOUNTER_READ_Secure_CNTCIDR2  ---------------------
// SVD Line: 552

unsigned int SYSCOUNTER_READ_Secure_CNTCIDR2 __AT (0x58101FF8);



// ---------------------  Register Item: SYSCOUNTER_READ_Secure_CNTCIDR2  -------------------------
// SVD Line: 552

//  <item> SFDITEM_REG__SYSCOUNTER_READ_Secure_CNTCIDR2
//    <name> CNTCIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x58101FF8) Component Identification Register 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_READ_Secure_CNTCIDR2 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_READ_Secure_CNTCIDR2 = (SYSCOUNTER_READ_Secure_CNTCIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------  Register Item Address: SYSCOUNTER_READ_Secure_CNTCIDR3  ---------------------
// SVD Line: 560

unsigned int SYSCOUNTER_READ_Secure_CNTCIDR3 __AT (0x58101FFC);



// ---------------------  Register Item: SYSCOUNTER_READ_Secure_CNTCIDR3  -------------------------
// SVD Line: 560

//  <item> SFDITEM_REG__SYSCOUNTER_READ_Secure_CNTCIDR3
//    <name> CNTCIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x58101FFC) Component Identification Register 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCOUNTER_READ_Secure_CNTCIDR3 >> 0) & 0xFFFFFFFF), ((SYSCOUNTER_READ_Secure_CNTCIDR3 = (SYSCOUNTER_READ_Secure_CNTCIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Peripheral View: SYSCOUNTER_READ_Secure  ----------------------------
// SVD Line: 571

//  <view> SYSCOUNTER_READ_Secure
//    <name> SYSCOUNTER_READ_Secure </name>
//    <item> SFDITEM_REG__SYSCOUNTER_READ_Secure_CNTCV </item>
//    <item> SFDITEM_REG__SYSCOUNTER_READ_Secure_CNTPIDR4 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_READ_Secure_CNTPIDR0 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_READ_Secure_CNTPIDR1 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_READ_Secure_CNTPIDR2 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_READ_Secure_CNTPIDR3 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_READ_Secure_CNTCIDR0 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_READ_Secure_CNTCIDR1 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_READ_Secure_CNTCIDR2 </item>
//    <item> SFDITEM_REG__SYSCOUNTER_READ_Secure_CNTCIDR3 </item>
//  </view>
//  


// -----------------------  Register Item Address: SYSINFO_SOC_IDENTITY  --------------------------
// SVD Line: 592

unsigned int SYSINFO_SOC_IDENTITY __AT (0x48020000);



// -------------------  Field Item: SYSINFO_SOC_IDENTITY_SOC_IMPLEMENTATOR  -----------------------
// SVD Line: 599

//  <item> SFDITEM_FIELD__SYSINFO_SOC_IDENTITY_SOC_IMPLEMENTATOR
//    <name> SOC_IMPLEMENTATOR </name>
//    <r> 
//    <i> [Bits 11..0] RO (@ 0x48020000) JEP106 code of the company that implemented the SoC </i>
//    <edit> 
//      <loc> ( (unsigned short)((SYSINFO_SOC_IDENTITY >> 0) & 0xFFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: SYSINFO_SOC_IDENTITY_SOC_REVISION  -------------------------
// SVD Line: 605

//  <item> SFDITEM_FIELD__SYSINFO_SOC_IDENTITY_SOC_REVISION
//    <name> SOC_REVISION </name>
//    <r> 
//    <i> [Bits 15..12] RO (@ 0x48020000) IMPL_DEF value used to distinguish minor revisions of the SoC. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSINFO_SOC_IDENTITY >> 12) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: SYSINFO_SOC_IDENTITY_SOC_VARIANT  --------------------------
// SVD Line: 611

//  <item> SFDITEM_FIELD__SYSINFO_SOC_IDENTITY_SOC_VARIANT
//    <name> SOC_VARIANT </name>
//    <r> 
//    <i> [Bits 19..16] RO (@ 0x48020000) IMPL_DEF value variant or major revision of the SoC. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSINFO_SOC_IDENTITY >> 16) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Field Item: SYSINFO_SOC_IDENTITY_SOC_PRODUCT_ID  ------------------------
// SVD Line: 617

//  <item> SFDITEM_FIELD__SYSINFO_SOC_IDENTITY_SOC_PRODUCT_ID
//    <name> SOC_PRODUCT_ID </name>
//    <r> 
//    <i> [Bits 31..20] RO (@ 0x48020000) IMPL_DEF value identifying the SoC. </i>
//    <edit> 
//      <loc> ( (unsigned short)((SYSINFO_SOC_IDENTITY >> 20) & 0xFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: SYSINFO_SOC_IDENTITY  ------------------------------
// SVD Line: 592

//  <rtree> SFDITEM_REG__SYSINFO_SOC_IDENTITY
//    <name> SOC_IDENTITY </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x48020000) System Identity Register </i>
//    <loc> ( (unsigned int)((SYSINFO_SOC_IDENTITY >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSINFO_SOC_IDENTITY_SOC_IMPLEMENTATOR </item>
//    <item> SFDITEM_FIELD__SYSINFO_SOC_IDENTITY_SOC_REVISION </item>
//    <item> SFDITEM_FIELD__SYSINFO_SOC_IDENTITY_SOC_VARIANT </item>
//    <item> SFDITEM_FIELD__SYSINFO_SOC_IDENTITY_SOC_PRODUCT_ID </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SYSINFO_SYS_CONFIG0  ---------------------------
// SVD Line: 625

unsigned int SYSINFO_SYS_CONFIG0 __AT (0x48020004);



// -----------------------  Field Item: SYSINFO_SYS_CONFIG0_NUM_VM_BANK  --------------------------
// SVD Line: 632

//  <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG0_NUM_VM_BANK
//    <name> NUM_VM_BANK </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x48020004) Number of Volatile Memory Banks. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSINFO_SYS_CONFIG0 >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: SYSINFO_SYS_CONFIG0_VM_ADDR_WIDTH  -------------------------
// SVD Line: 638

//  <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG0_VM_ADDR_WIDTH
//    <name> VM_ADDR_WIDTH </name>
//    <r> 
//    <i> [Bits 8..4] RO (@ 0x48020004) Volatile Memory Bank Address Width, where the size of each bank is equal to 2VM_ADDR_WIDTH bytes. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSINFO_SYS_CONFIG0 >> 4) & 0x1F) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: SYSINFO_SYS_CONFIG0_HAS_CRYPTO  ---------------------------
// SVD Line: 644

//  <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG0_HAS_CRYPTO
//    <name> HAS_CRYPTO </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x48020004) \nCryptoCell Included.\n0 : No = CryptoCell Not Included\n1 : Yes = CryptoCell Included </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSINFO_SYS_CONFIG0 ) </loc>
//      <o.9..9> HAS_CRYPTO
//        <0=> 0: No = CryptoCell Not Included
//        <1=> 1: Yes = CryptoCell Included
//    </combo>
//  </item>
//  


// -------------------------  Field Item: SYSINFO_SYS_CONFIG0_HAS_CSS  ----------------------------
// SVD Line: 662

//  <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG0_HAS_CSS
//    <name> HAS_CSS </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x48020004) \nInclude CoreSight SoC-600 based Debug infrastructure.\n0 : No = Not included.\n1 : Yes = Included. </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSINFO_SYS_CONFIG0 ) </loc>
//      <o.10..10> HAS_CSS
//        <0=> 0: No = Not included.
//        <1=> 1: Yes = Included.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: SYSINFO_SYS_CONFIG0_PI_LEVEL  ----------------------------
// SVD Line: 680

//  <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG0_PI_LEVEL
//    <name> PI_LEVEL </name>
//    <r> 
//    <i> [Bits 12..11] RO (@ 0x48020004) \nPower Infrastructure Level\n0 : Reserved - do not use\n1 : IntermediateLevel = Intermediate Level\n2 : Reserved - do not use\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSINFO_SYS_CONFIG0 ) </loc>
//      <o.12..11> PI_LEVEL
//        <0=> 0: 
//        <1=> 1: IntermediateLevel = Intermediate Level
//        <2=> 2: 
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ------------------------  Field Item: SYSINFO_SYS_CONFIG0_CPU0_TYPE  ---------------------------
// SVD Line: 693

//  <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG0_CPU0_TYPE
//    <name> CPU0_TYPE </name>
//    <r> 
//    <i> [Bits 18..16] RO (@ 0x48020004) \nCPU 0 Core Type\n0 : Reserved - do not use\n1 : Reserved - do not use\n2 : Reserved - do not use\n3 : CortexM55 = Cortex-M55\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSINFO_SYS_CONFIG0 ) </loc>
//      <o.18..16> CPU0_TYPE
//        <0=> 0: 
//        <1=> 1: 
//        <2=> 2: 
//        <3=> 3: CortexM55 = Cortex-M55
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: SYSINFO_SYS_CONFIG0_CPU0_HAS_SYSTCM  ------------------------
// SVD Line: 706

//  <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG0_CPU0_HAS_SYSTCM
//    <name> CPU0_HAS_SYSTCM </name>
//    <r> 
//    <i> [Bit 19] RO (@ 0x48020004) \nCPU 0 has System TCM. Note that this is not the CPU's local ITCM or DTCM, but instead are TCMs implemented at system level.\n0 : No = Not included.\n1 : Yes = Included. </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSINFO_SYS_CONFIG0 ) </loc>
//      <o.19..19> CPU0_HAS_SYSTCM
//        <0=> 0: No = Not included.
//        <1=> 1: Yes = Included.
//    </combo>
//  </item>
//  


// --------------------  Field Item: SYSINFO_SYS_CONFIG0_CPU0_TCM_BANK_NUM  -----------------------
// SVD Line: 724

//  <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG0_CPU0_TCM_BANK_NUM
//    <name> CPU0_TCM_BANK_NUM </name>
//    <r> 
//    <i> [Bits 23..20] RO (@ 0x48020004) The VM Bank that is the TCM memory for CPU 0. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSINFO_SYS_CONFIG0 >> 20) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: SYSINFO_SYS_CONFIG0_CPU1_TYPE  ---------------------------
// SVD Line: 730

//  <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG0_CPU1_TYPE
//    <name> CPU1_TYPE </name>
//    <r> 
//    <i> [Bits 26..24] RO (@ 0x48020004) \nCPU 1 Core Type\n0 : No = Does not exist.\n1 : Reserved - do not use\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSINFO_SYS_CONFIG0 ) </loc>
//      <o.26..24> CPU1_TYPE
//        <0=> 0: No = Does not exist.
//        <1=> 1: 
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: SYSINFO_SYS_CONFIG0_CPU1_HAS_SYSTCM  ------------------------
// SVD Line: 743

//  <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG0_CPU1_HAS_SYSTCM
//    <name> CPU1_HAS_SYSTCM </name>
//    <r> 
//    <i> [Bit 27] RO (@ 0x48020004) \nCPU 1 has System TCM. Note that this is not the CPU's local ITCM or DTCM, but instead are TCMs implemented at system level.\n0 : No = Not included.\n1 : Yes = Included. </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSINFO_SYS_CONFIG0 ) </loc>
//      <o.27..27> CPU1_HAS_SYSTCM
//        <0=> 0: No = Not included.
//        <1=> 1: Yes = Included.
//    </combo>
//  </item>
//  


// --------------------  Field Item: SYSINFO_SYS_CONFIG0_CPU1_TCM_BANK_NUM  -----------------------
// SVD Line: 761

//  <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG0_CPU1_TCM_BANK_NUM
//    <name> CPU1_TCM_BANK_NUM </name>
//    <r> 
//    <i> [Bits 31..28] RO (@ 0x48020004) The VM Bank that is the TCM memory for CPU 1. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSINFO_SYS_CONFIG0 >> 28) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: SYSINFO_SYS_CONFIG0  ------------------------------
// SVD Line: 625

//  <rtree> SFDITEM_REG__SYSINFO_SYS_CONFIG0
//    <name> SYS_CONFIG0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x48020004) System Hardware Configuration 0 register </i>
//    <loc> ( (unsigned int)((SYSINFO_SYS_CONFIG0 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG0_NUM_VM_BANK </item>
//    <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG0_VM_ADDR_WIDTH </item>
//    <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG0_HAS_CRYPTO </item>
//    <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG0_HAS_CSS </item>
//    <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG0_PI_LEVEL </item>
//    <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG0_CPU0_TYPE </item>
//    <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG0_CPU0_HAS_SYSTCM </item>
//    <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG0_CPU0_TCM_BANK_NUM </item>
//    <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG0_CPU1_TYPE </item>
//    <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG0_CPU1_HAS_SYSTCM </item>
//    <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG0_CPU1_TCM_BANK_NUM </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SYSINFO_SYS_CONFIG1  ---------------------------
// SVD Line: 769

unsigned int SYSINFO_SYS_CONFIG1 __AT (0x48020008);



// ------------------------  Field Item: SYSINFO_SYS_CONFIG1_CPU2_TYPE  ---------------------------
// SVD Line: 776

//  <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG1_CPU2_TYPE
//    <name> CPU2_TYPE </name>
//    <r> 
//    <i> [Bits 2..0] RO (@ 0x48020008) \nCPU 2 Core Type.\n0 : No = Does not exist.\n1 : Reserved - do not use\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSINFO_SYS_CONFIG1 ) </loc>
//      <o.2..0> CPU2_TYPE
//        <0=> 0: No = Does not exist.
//        <1=> 1: 
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: SYSINFO_SYS_CONFIG1_CPU2_HAS_SYSTCM  ------------------------
// SVD Line: 789

//  <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG1_CPU2_HAS_SYSTCM
//    <name> CPU2_HAS_SYSTCM </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x48020008) \nCPU 2 has System TCM. Note that this is not the CPU's local ITCM or DTCM, but instead are TCMs implemented at system level.\n0 : No = Not included.\n1 : Yes = Included. </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSINFO_SYS_CONFIG1 ) </loc>
//      <o.3..3> CPU2_HAS_SYSTCM
//        <0=> 0: No = Not included.
//        <1=> 1: Yes = Included.
//    </combo>
//  </item>
//  


// --------------------  Field Item: SYSINFO_SYS_CONFIG1_CPU2_TCM_BANK_NUM  -----------------------
// SVD Line: 807

//  <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG1_CPU2_TCM_BANK_NUM
//    <name> CPU2_TCM_BANK_NUM </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x48020008) The VM Bank that is the TCM memory for CPU 2. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSINFO_SYS_CONFIG1 >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: SYSINFO_SYS_CONFIG1_CPU3_TYPE  ---------------------------
// SVD Line: 813

//  <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG1_CPU3_TYPE
//    <name> CPU3_TYPE </name>
//    <r> 
//    <i> [Bits 10..8] RO (@ 0x48020008) \nCPU 3 Core Type.\n0 : No = Does not exist.\n1 : Reserved - do not use\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSINFO_SYS_CONFIG1 ) </loc>
//      <o.10..8> CPU3_TYPE
//        <0=> 0: No = Does not exist.
//        <1=> 1: 
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: SYSINFO_SYS_CONFIG1_CPU3_HAS_SYSTCM  ------------------------
// SVD Line: 826

//  <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG1_CPU3_HAS_SYSTCM
//    <name> CPU3_HAS_SYSTCM </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x48020008) \nCPU 3 has System TCM. Note that this is not the CPU's local ITCM or DTCM, but instead are TCMs implemented at system level.\n0 : No = Not included.\n1 : Yes = Included. </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSINFO_SYS_CONFIG1 ) </loc>
//      <o.11..11> CPU3_HAS_SYSTCM
//        <0=> 0: No = Not included.
//        <1=> 1: Yes = Included.
//    </combo>
//  </item>
//  


// --------------------  Field Item: SYSINFO_SYS_CONFIG1_CPU3_TCM_BANK_NUM  -----------------------
// SVD Line: 844

//  <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG1_CPU3_TCM_BANK_NUM
//    <name> CPU3_TCM_BANK_NUM </name>
//    <r> 
//    <i> [Bits 15..12] RO (@ 0x48020008) The VM Bank that is the TCM memory for CPU 3. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSINFO_SYS_CONFIG1 >> 12) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: SYSINFO_SYS_CONFIG1  ------------------------------
// SVD Line: 769

//  <rtree> SFDITEM_REG__SYSINFO_SYS_CONFIG1
//    <name> SYS_CONFIG1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x48020008) System Hardware Configuration 0 register </i>
//    <loc> ( (unsigned int)((SYSINFO_SYS_CONFIG1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG1_CPU2_TYPE </item>
//    <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG1_CPU2_HAS_SYSTCM </item>
//    <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG1_CPU2_TCM_BANK_NUM </item>
//    <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG1_CPU3_TYPE </item>
//    <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG1_CPU3_HAS_SYSTCM </item>
//    <item> SFDITEM_FIELD__SYSINFO_SYS_CONFIG1_CPU3_TCM_BANK_NUM </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SYSINFO_IIDR  ------------------------------
// SVD Line: 852

unsigned int SYSINFO_IIDR __AT (0x48020FC8);



// -----------------------  Field Item: SYSINFO_IIDR_IMP_IMPLEMENTATOR  ---------------------------
// SVD Line: 859

//  <item> SFDITEM_FIELD__SYSINFO_IIDR_IMP_IMPLEMENTATOR
//    <name> IMP_IMPLEMENTATOR </name>
//    <r> 
//    <i> [Bits 11..0] RO (@ 0x48020FC8) Contains the JEP106 code of the company that implemented the subsystem implementation. </i>
//    <edit> 
//      <loc> ( (unsigned short)((SYSINFO_IIDR >> 0) & 0xFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: SYSINFO_IIDR_IMP_REVISION  -----------------------------
// SVD Line: 865

//  <item> SFDITEM_FIELD__SYSINFO_IIDR_IMP_REVISION
//    <name> IMP_REVISION </name>
//    <r> 
//    <i> [Bits 15..12] RO (@ 0x48020FC8) IMPL_DEF value used to distinguish minor revisions of the subsystem implementation. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSINFO_IIDR >> 12) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: SYSINFO_IIDR_IMP_VARIANT  ------------------------------
// SVD Line: 871

//  <item> SFDITEM_FIELD__SYSINFO_IIDR_IMP_VARIANT
//    <name> IMP_VARIANT </name>
//    <r> 
//    <i> [Bits 19..16] RO (@ 0x48020FC8) IMPL_DEF value variant or major revision of the subsystem implementation. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSINFO_IIDR >> 16) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: SYSINFO_IIDR_IMP_PRODUCT_ID  ----------------------------
// SVD Line: 877

//  <item> SFDITEM_FIELD__SYSINFO_IIDR_IMP_PRODUCT_ID
//    <name> IMP_PRODUCT_ID </name>
//    <r> 
//    <i> [Bits 31..20] RO (@ 0x48020FC8) IMPL_DEF value identifying the subsystem implementation. </i>
//    <edit> 
//      <loc> ( (unsigned short)((SYSINFO_IIDR >> 20) & 0xFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: SYSINFO_IIDR  ----------------------------------
// SVD Line: 852

//  <rtree> SFDITEM_REG__SYSINFO_IIDR
//    <name> IIDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x48020FC8) Subsystem Implementation Identity Register. </i>
//    <loc> ( (unsigned int)((SYSINFO_IIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSINFO_IIDR_IMP_IMPLEMENTATOR </item>
//    <item> SFDITEM_FIELD__SYSINFO_IIDR_IMP_REVISION </item>
//    <item> SFDITEM_FIELD__SYSINFO_IIDR_IMP_VARIANT </item>
//    <item> SFDITEM_FIELD__SYSINFO_IIDR_IMP_PRODUCT_ID </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SYSINFO_PIDR4  ------------------------------
// SVD Line: 885

unsigned int SYSINFO_PIDR4 __AT (0x48020FD0);



// ------------------------------  Register Item: SYSINFO_PIDR4  ----------------------------------
// SVD Line: 885

//  <item> SFDITEM_REG__SYSINFO_PIDR4
//    <name> PIDR4 </name>
//    <i> [Bits 31..0] RO (@ 0x48020FD0) Peripheral ID 4 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSINFO_PIDR4 >> 0) & 0xFFFFFFFF), ((SYSINFO_PIDR4 = (SYSINFO_PIDR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: SYSINFO_PIDR0  ------------------------------
// SVD Line: 893

unsigned int SYSINFO_PIDR0 __AT (0x48020FE0);



// ------------------------------  Register Item: SYSINFO_PIDR0  ----------------------------------
// SVD Line: 893

//  <item> SFDITEM_REG__SYSINFO_PIDR0
//    <name> PIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x48020FE0) Peripheral ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSINFO_PIDR0 >> 0) & 0xFFFFFFFF), ((SYSINFO_PIDR0 = (SYSINFO_PIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: SYSINFO_PIDR1  ------------------------------
// SVD Line: 901

unsigned int SYSINFO_PIDR1 __AT (0x48020FE4);



// ------------------------------  Register Item: SYSINFO_PIDR1  ----------------------------------
// SVD Line: 901

//  <item> SFDITEM_REG__SYSINFO_PIDR1
//    <name> PIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x48020FE4) Peripheral ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSINFO_PIDR1 >> 0) & 0xFFFFFFFF), ((SYSINFO_PIDR1 = (SYSINFO_PIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: SYSINFO_PIDR2  ------------------------------
// SVD Line: 909

unsigned int SYSINFO_PIDR2 __AT (0x48020FE8);



// ------------------------------  Register Item: SYSINFO_PIDR2  ----------------------------------
// SVD Line: 909

//  <item> SFDITEM_REG__SYSINFO_PIDR2
//    <name> PIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x48020FE8) Peripheral ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSINFO_PIDR2 >> 0) & 0xFFFFFFFF), ((SYSINFO_PIDR2 = (SYSINFO_PIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: SYSINFO_PIDR3  ------------------------------
// SVD Line: 917

unsigned int SYSINFO_PIDR3 __AT (0x48020FEC);



// ------------------------------  Register Item: SYSINFO_PIDR3  ----------------------------------
// SVD Line: 917

//  <item> SFDITEM_REG__SYSINFO_PIDR3
//    <name> PIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x48020FEC) Peripheral ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSINFO_PIDR3 >> 0) & 0xFFFFFFFF), ((SYSINFO_PIDR3 = (SYSINFO_PIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: SYSINFO_CIDR0  ------------------------------
// SVD Line: 925

unsigned int SYSINFO_CIDR0 __AT (0x48020FF0);



// ------------------------------  Register Item: SYSINFO_CIDR0  ----------------------------------
// SVD Line: 925

//  <item> SFDITEM_REG__SYSINFO_CIDR0
//    <name> CIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x48020FF0) Component ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSINFO_CIDR0 >> 0) & 0xFFFFFFFF), ((SYSINFO_CIDR0 = (SYSINFO_CIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: SYSINFO_CIDR1  ------------------------------
// SVD Line: 933

unsigned int SYSINFO_CIDR1 __AT (0x48020FF4);



// ------------------------------  Register Item: SYSINFO_CIDR1  ----------------------------------
// SVD Line: 933

//  <item> SFDITEM_REG__SYSINFO_CIDR1
//    <name> CIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x48020FF4) Component ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSINFO_CIDR1 >> 0) & 0xFFFFFFFF), ((SYSINFO_CIDR1 = (SYSINFO_CIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: SYSINFO_CIDR2  ------------------------------
// SVD Line: 941

unsigned int SYSINFO_CIDR2 __AT (0x48020FF8);



// ------------------------------  Register Item: SYSINFO_CIDR2  ----------------------------------
// SVD Line: 941

//  <item> SFDITEM_REG__SYSINFO_CIDR2
//    <name> CIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x48020FF8) Component ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSINFO_CIDR2 >> 0) & 0xFFFFFFFF), ((SYSINFO_CIDR2 = (SYSINFO_CIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: SYSINFO_CIDR3  ------------------------------
// SVD Line: 949

unsigned int SYSINFO_CIDR3 __AT (0x48020FFC);



// ------------------------------  Register Item: SYSINFO_CIDR3  ----------------------------------
// SVD Line: 949

//  <item> SFDITEM_REG__SYSINFO_CIDR3
//    <name> CIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x48020FFC) Component ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSINFO_CIDR3 >> 0) & 0xFFFFFFFF), ((SYSINFO_CIDR3 = (SYSINFO_CIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Peripheral View: SYSINFO  ------------------------------------
// SVD Line: 577

//  <view> SYSINFO
//    <name> SYSINFO </name>
//    <item> SFDITEM_REG__SYSINFO_SOC_IDENTITY </item>
//    <item> SFDITEM_REG__SYSINFO_SYS_CONFIG0 </item>
//    <item> SFDITEM_REG__SYSINFO_SYS_CONFIG1 </item>
//    <item> SFDITEM_REG__SYSINFO_IIDR </item>
//    <item> SFDITEM_REG__SYSINFO_PIDR4 </item>
//    <item> SFDITEM_REG__SYSINFO_PIDR0 </item>
//    <item> SFDITEM_REG__SYSINFO_PIDR1 </item>
//    <item> SFDITEM_REG__SYSINFO_PIDR2 </item>
//    <item> SFDITEM_REG__SYSINFO_PIDR3 </item>
//    <item> SFDITEM_REG__SYSINFO_CIDR0 </item>
//    <item> SFDITEM_REG__SYSINFO_CIDR1 </item>
//    <item> SFDITEM_REG__SYSINFO_CIDR2 </item>
//    <item> SFDITEM_REG__SYSINFO_CIDR3 </item>
//  </view>
//  


// -------------------  Register Item Address: SYSINFO_Secure_SOC_IDENTITY  -----------------------
// SVD Line: 592

unsigned int SYSINFO_Secure_SOC_IDENTITY __AT (0x58020000);



// ----------------  Field Item: SYSINFO_Secure_SOC_IDENTITY_SOC_IMPLEMENTATOR  -------------------
// SVD Line: 599

//  <item> SFDITEM_FIELD__SYSINFO_Secure_SOC_IDENTITY_SOC_IMPLEMENTATOR
//    <name> SOC_IMPLEMENTATOR </name>
//    <r> 
//    <i> [Bits 11..0] RO (@ 0x58020000) JEP106 code of the company that implemented the SoC </i>
//    <edit> 
//      <loc> ( (unsigned short)((SYSINFO_Secure_SOC_IDENTITY >> 0) & 0xFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------  Field Item: SYSINFO_Secure_SOC_IDENTITY_SOC_REVISION  ----------------------
// SVD Line: 605

//  <item> SFDITEM_FIELD__SYSINFO_Secure_SOC_IDENTITY_SOC_REVISION
//    <name> SOC_REVISION </name>
//    <r> 
//    <i> [Bits 15..12] RO (@ 0x58020000) IMPL_DEF value used to distinguish minor revisions of the SoC. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSINFO_Secure_SOC_IDENTITY >> 12) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------  Field Item: SYSINFO_Secure_SOC_IDENTITY_SOC_VARIANT  ----------------------
// SVD Line: 611

//  <item> SFDITEM_FIELD__SYSINFO_Secure_SOC_IDENTITY_SOC_VARIANT
//    <name> SOC_VARIANT </name>
//    <r> 
//    <i> [Bits 19..16] RO (@ 0x58020000) IMPL_DEF value variant or major revision of the SoC. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSINFO_Secure_SOC_IDENTITY >> 16) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------  Field Item: SYSINFO_Secure_SOC_IDENTITY_SOC_PRODUCT_ID  ---------------------
// SVD Line: 617

//  <item> SFDITEM_FIELD__SYSINFO_Secure_SOC_IDENTITY_SOC_PRODUCT_ID
//    <name> SOC_PRODUCT_ID </name>
//    <r> 
//    <i> [Bits 31..20] RO (@ 0x58020000) IMPL_DEF value identifying the SoC. </i>
//    <edit> 
//      <loc> ( (unsigned short)((SYSINFO_Secure_SOC_IDENTITY >> 20) & 0xFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register RTree: SYSINFO_Secure_SOC_IDENTITY  --------------------------
// SVD Line: 592

//  <rtree> SFDITEM_REG__SYSINFO_Secure_SOC_IDENTITY
//    <name> SOC_IDENTITY </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x58020000) System Identity Register </i>
//    <loc> ( (unsigned int)((SYSINFO_Secure_SOC_IDENTITY >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_SOC_IDENTITY_SOC_IMPLEMENTATOR </item>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_SOC_IDENTITY_SOC_REVISION </item>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_SOC_IDENTITY_SOC_VARIANT </item>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_SOC_IDENTITY_SOC_PRODUCT_ID </item>
//  </rtree>
//  


// --------------------  Register Item Address: SYSINFO_Secure_SYS_CONFIG0  -----------------------
// SVD Line: 625

unsigned int SYSINFO_Secure_SYS_CONFIG0 __AT (0x58020004);



// -------------------  Field Item: SYSINFO_Secure_SYS_CONFIG0_NUM_VM_BANK  -----------------------
// SVD Line: 632

//  <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG0_NUM_VM_BANK
//    <name> NUM_VM_BANK </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x58020004) Number of Volatile Memory Banks. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSINFO_Secure_SYS_CONFIG0 >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------  Field Item: SYSINFO_Secure_SYS_CONFIG0_VM_ADDR_WIDTH  ----------------------
// SVD Line: 638

//  <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG0_VM_ADDR_WIDTH
//    <name> VM_ADDR_WIDTH </name>
//    <r> 
//    <i> [Bits 8..4] RO (@ 0x58020004) Volatile Memory Bank Address Width, where the size of each bank is equal to 2VM_ADDR_WIDTH bytes. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSINFO_Secure_SYS_CONFIG0 >> 4) & 0x1F) ) </loc>
//    </edit>
//  </item>
//  


// --------------------  Field Item: SYSINFO_Secure_SYS_CONFIG0_HAS_CRYPTO  -----------------------
// SVD Line: 644

//  <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG0_HAS_CRYPTO
//    <name> HAS_CRYPTO </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x58020004) \nCryptoCell Included.\n0 : No = CryptoCell Not Included\n1 : Yes = CryptoCell Included </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSINFO_Secure_SYS_CONFIG0 ) </loc>
//      <o.9..9> HAS_CRYPTO
//        <0=> 0: No = CryptoCell Not Included
//        <1=> 1: Yes = CryptoCell Included
//    </combo>
//  </item>
//  


// ---------------------  Field Item: SYSINFO_Secure_SYS_CONFIG0_HAS_CSS  -------------------------
// SVD Line: 662

//  <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG0_HAS_CSS
//    <name> HAS_CSS </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x58020004) \nInclude CoreSight SoC-600 based Debug infrastructure.\n0 : No = Not included.\n1 : Yes = Included. </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSINFO_Secure_SYS_CONFIG0 ) </loc>
//      <o.10..10> HAS_CSS
//        <0=> 0: No = Not included.
//        <1=> 1: Yes = Included.
//    </combo>
//  </item>
//  


// ---------------------  Field Item: SYSINFO_Secure_SYS_CONFIG0_PI_LEVEL  ------------------------
// SVD Line: 680

//  <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG0_PI_LEVEL
//    <name> PI_LEVEL </name>
//    <r> 
//    <i> [Bits 12..11] RO (@ 0x58020004) \nPower Infrastructure Level\n0 : Reserved - do not use\n1 : IntermediateLevel = Intermediate Level\n2 : Reserved - do not use\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSINFO_Secure_SYS_CONFIG0 ) </loc>
//      <o.12..11> PI_LEVEL
//        <0=> 0: 
//        <1=> 1: IntermediateLevel = Intermediate Level
//        <2=> 2: 
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: SYSINFO_Secure_SYS_CONFIG0_CPU0_TYPE  ------------------------
// SVD Line: 693

//  <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG0_CPU0_TYPE
//    <name> CPU0_TYPE </name>
//    <r> 
//    <i> [Bits 18..16] RO (@ 0x58020004) \nCPU 0 Core Type\n0 : Reserved - do not use\n1 : Reserved - do not use\n2 : Reserved - do not use\n3 : CortexM55 = Cortex-M55\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSINFO_Secure_SYS_CONFIG0 ) </loc>
//      <o.18..16> CPU0_TYPE
//        <0=> 0: 
//        <1=> 1: 
//        <2=> 2: 
//        <3=> 3: CortexM55 = Cortex-M55
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// -----------------  Field Item: SYSINFO_Secure_SYS_CONFIG0_CPU0_HAS_SYSTCM  ---------------------
// SVD Line: 706

//  <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG0_CPU0_HAS_SYSTCM
//    <name> CPU0_HAS_SYSTCM </name>
//    <r> 
//    <i> [Bit 19] RO (@ 0x58020004) \nCPU 0 has System TCM. Note that this is not the CPU's local ITCM or DTCM, but instead are TCMs implemented at system level.\n0 : No = Not included.\n1 : Yes = Included. </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSINFO_Secure_SYS_CONFIG0 ) </loc>
//      <o.19..19> CPU0_HAS_SYSTCM
//        <0=> 0: No = Not included.
//        <1=> 1: Yes = Included.
//    </combo>
//  </item>
//  


// ----------------  Field Item: SYSINFO_Secure_SYS_CONFIG0_CPU0_TCM_BANK_NUM  --------------------
// SVD Line: 724

//  <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG0_CPU0_TCM_BANK_NUM
//    <name> CPU0_TCM_BANK_NUM </name>
//    <r> 
//    <i> [Bits 23..20] RO (@ 0x58020004) The VM Bank that is the TCM memory for CPU 0. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSINFO_Secure_SYS_CONFIG0 >> 20) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------  Field Item: SYSINFO_Secure_SYS_CONFIG0_CPU1_TYPE  ------------------------
// SVD Line: 730

//  <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG0_CPU1_TYPE
//    <name> CPU1_TYPE </name>
//    <r> 
//    <i> [Bits 26..24] RO (@ 0x58020004) \nCPU 1 Core Type\n0 : No = Does not exist.\n1 : Reserved - do not use\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSINFO_Secure_SYS_CONFIG0 ) </loc>
//      <o.26..24> CPU1_TYPE
//        <0=> 0: No = Does not exist.
//        <1=> 1: 
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// -----------------  Field Item: SYSINFO_Secure_SYS_CONFIG0_CPU1_HAS_SYSTCM  ---------------------
// SVD Line: 743

//  <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG0_CPU1_HAS_SYSTCM
//    <name> CPU1_HAS_SYSTCM </name>
//    <r> 
//    <i> [Bit 27] RO (@ 0x58020004) \nCPU 1 has System TCM. Note that this is not the CPU's local ITCM or DTCM, but instead are TCMs implemented at system level.\n0 : No = Not included.\n1 : Yes = Included. </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSINFO_Secure_SYS_CONFIG0 ) </loc>
//      <o.27..27> CPU1_HAS_SYSTCM
//        <0=> 0: No = Not included.
//        <1=> 1: Yes = Included.
//    </combo>
//  </item>
//  


// ----------------  Field Item: SYSINFO_Secure_SYS_CONFIG0_CPU1_TCM_BANK_NUM  --------------------
// SVD Line: 761

//  <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG0_CPU1_TCM_BANK_NUM
//    <name> CPU1_TCM_BANK_NUM </name>
//    <r> 
//    <i> [Bits 31..28] RO (@ 0x58020004) The VM Bank that is the TCM memory for CPU 1. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSINFO_Secure_SYS_CONFIG0 >> 28) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register RTree: SYSINFO_Secure_SYS_CONFIG0  ---------------------------
// SVD Line: 625

//  <rtree> SFDITEM_REG__SYSINFO_Secure_SYS_CONFIG0
//    <name> SYS_CONFIG0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x58020004) System Hardware Configuration 0 register </i>
//    <loc> ( (unsigned int)((SYSINFO_Secure_SYS_CONFIG0 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG0_NUM_VM_BANK </item>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG0_VM_ADDR_WIDTH </item>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG0_HAS_CRYPTO </item>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG0_HAS_CSS </item>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG0_PI_LEVEL </item>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG0_CPU0_TYPE </item>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG0_CPU0_HAS_SYSTCM </item>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG0_CPU0_TCM_BANK_NUM </item>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG0_CPU1_TYPE </item>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG0_CPU1_HAS_SYSTCM </item>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG0_CPU1_TCM_BANK_NUM </item>
//  </rtree>
//  


// --------------------  Register Item Address: SYSINFO_Secure_SYS_CONFIG1  -----------------------
// SVD Line: 769

unsigned int SYSINFO_Secure_SYS_CONFIG1 __AT (0x58020008);



// --------------------  Field Item: SYSINFO_Secure_SYS_CONFIG1_CPU2_TYPE  ------------------------
// SVD Line: 776

//  <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG1_CPU2_TYPE
//    <name> CPU2_TYPE </name>
//    <r> 
//    <i> [Bits 2..0] RO (@ 0x58020008) \nCPU 2 Core Type.\n0 : No = Does not exist.\n1 : Reserved - do not use\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSINFO_Secure_SYS_CONFIG1 ) </loc>
//      <o.2..0> CPU2_TYPE
//        <0=> 0: No = Does not exist.
//        <1=> 1: 
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// -----------------  Field Item: SYSINFO_Secure_SYS_CONFIG1_CPU2_HAS_SYSTCM  ---------------------
// SVD Line: 789

//  <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG1_CPU2_HAS_SYSTCM
//    <name> CPU2_HAS_SYSTCM </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x58020008) \nCPU 2 has System TCM. Note that this is not the CPU's local ITCM or DTCM, but instead are TCMs implemented at system level.\n0 : No = Not included.\n1 : Yes = Included. </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSINFO_Secure_SYS_CONFIG1 ) </loc>
//      <o.3..3> CPU2_HAS_SYSTCM
//        <0=> 0: No = Not included.
//        <1=> 1: Yes = Included.
//    </combo>
//  </item>
//  


// ----------------  Field Item: SYSINFO_Secure_SYS_CONFIG1_CPU2_TCM_BANK_NUM  --------------------
// SVD Line: 807

//  <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG1_CPU2_TCM_BANK_NUM
//    <name> CPU2_TCM_BANK_NUM </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x58020008) The VM Bank that is the TCM memory for CPU 2. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSINFO_Secure_SYS_CONFIG1 >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------  Field Item: SYSINFO_Secure_SYS_CONFIG1_CPU3_TYPE  ------------------------
// SVD Line: 813

//  <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG1_CPU3_TYPE
//    <name> CPU3_TYPE </name>
//    <r> 
//    <i> [Bits 10..8] RO (@ 0x58020008) \nCPU 3 Core Type.\n0 : No = Does not exist.\n1 : Reserved - do not use\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSINFO_Secure_SYS_CONFIG1 ) </loc>
//      <o.10..8> CPU3_TYPE
//        <0=> 0: No = Does not exist.
//        <1=> 1: 
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// -----------------  Field Item: SYSINFO_Secure_SYS_CONFIG1_CPU3_HAS_SYSTCM  ---------------------
// SVD Line: 826

//  <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG1_CPU3_HAS_SYSTCM
//    <name> CPU3_HAS_SYSTCM </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x58020008) \nCPU 3 has System TCM. Note that this is not the CPU's local ITCM or DTCM, but instead are TCMs implemented at system level.\n0 : No = Not included.\n1 : Yes = Included. </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSINFO_Secure_SYS_CONFIG1 ) </loc>
//      <o.11..11> CPU3_HAS_SYSTCM
//        <0=> 0: No = Not included.
//        <1=> 1: Yes = Included.
//    </combo>
//  </item>
//  


// ----------------  Field Item: SYSINFO_Secure_SYS_CONFIG1_CPU3_TCM_BANK_NUM  --------------------
// SVD Line: 844

//  <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG1_CPU3_TCM_BANK_NUM
//    <name> CPU3_TCM_BANK_NUM </name>
//    <r> 
//    <i> [Bits 15..12] RO (@ 0x58020008) The VM Bank that is the TCM memory for CPU 3. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSINFO_Secure_SYS_CONFIG1 >> 12) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register RTree: SYSINFO_Secure_SYS_CONFIG1  ---------------------------
// SVD Line: 769

//  <rtree> SFDITEM_REG__SYSINFO_Secure_SYS_CONFIG1
//    <name> SYS_CONFIG1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x58020008) System Hardware Configuration 0 register </i>
//    <loc> ( (unsigned int)((SYSINFO_Secure_SYS_CONFIG1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG1_CPU2_TYPE </item>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG1_CPU2_HAS_SYSTCM </item>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG1_CPU2_TCM_BANK_NUM </item>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG1_CPU3_TYPE </item>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG1_CPU3_HAS_SYSTCM </item>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_SYS_CONFIG1_CPU3_TCM_BANK_NUM </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SYSINFO_Secure_IIDR  ---------------------------
// SVD Line: 852

unsigned int SYSINFO_Secure_IIDR __AT (0x58020FC8);



// --------------------  Field Item: SYSINFO_Secure_IIDR_IMP_IMPLEMENTATOR  -----------------------
// SVD Line: 859

//  <item> SFDITEM_FIELD__SYSINFO_Secure_IIDR_IMP_IMPLEMENTATOR
//    <name> IMP_IMPLEMENTATOR </name>
//    <r> 
//    <i> [Bits 11..0] RO (@ 0x58020FC8) Contains the JEP106 code of the company that implemented the subsystem implementation. </i>
//    <edit> 
//      <loc> ( (unsigned short)((SYSINFO_Secure_IIDR >> 0) & 0xFFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: SYSINFO_Secure_IIDR_IMP_REVISION  --------------------------
// SVD Line: 865

//  <item> SFDITEM_FIELD__SYSINFO_Secure_IIDR_IMP_REVISION
//    <name> IMP_REVISION </name>
//    <r> 
//    <i> [Bits 15..12] RO (@ 0x58020FC8) IMPL_DEF value used to distinguish minor revisions of the subsystem implementation. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSINFO_Secure_IIDR >> 12) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: SYSINFO_Secure_IIDR_IMP_VARIANT  --------------------------
// SVD Line: 871

//  <item> SFDITEM_FIELD__SYSINFO_Secure_IIDR_IMP_VARIANT
//    <name> IMP_VARIANT </name>
//    <r> 
//    <i> [Bits 19..16] RO (@ 0x58020FC8) IMPL_DEF value variant or major revision of the subsystem implementation. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSINFO_Secure_IIDR >> 16) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Field Item: SYSINFO_Secure_IIDR_IMP_PRODUCT_ID  -------------------------
// SVD Line: 877

//  <item> SFDITEM_FIELD__SYSINFO_Secure_IIDR_IMP_PRODUCT_ID
//    <name> IMP_PRODUCT_ID </name>
//    <r> 
//    <i> [Bits 31..20] RO (@ 0x58020FC8) IMPL_DEF value identifying the subsystem implementation. </i>
//    <edit> 
//      <loc> ( (unsigned short)((SYSINFO_Secure_IIDR >> 20) & 0xFFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: SYSINFO_Secure_IIDR  ------------------------------
// SVD Line: 852

//  <rtree> SFDITEM_REG__SYSINFO_Secure_IIDR
//    <name> IIDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x58020FC8) Subsystem Implementation Identity Register. </i>
//    <loc> ( (unsigned int)((SYSINFO_Secure_IIDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_IIDR_IMP_IMPLEMENTATOR </item>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_IIDR_IMP_REVISION </item>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_IIDR_IMP_VARIANT </item>
//    <item> SFDITEM_FIELD__SYSINFO_Secure_IIDR_IMP_PRODUCT_ID </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SYSINFO_Secure_PIDR4  --------------------------
// SVD Line: 885

unsigned int SYSINFO_Secure_PIDR4 __AT (0x58020FD0);



// ---------------------------  Register Item: SYSINFO_Secure_PIDR4  ------------------------------
// SVD Line: 885

//  <item> SFDITEM_REG__SYSINFO_Secure_PIDR4
//    <name> PIDR4 </name>
//    <i> [Bits 31..0] RO (@ 0x58020FD0) Peripheral ID 4 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSINFO_Secure_PIDR4 >> 0) & 0xFFFFFFFF), ((SYSINFO_Secure_PIDR4 = (SYSINFO_Secure_PIDR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SYSINFO_Secure_PIDR0  --------------------------
// SVD Line: 893

unsigned int SYSINFO_Secure_PIDR0 __AT (0x58020FE0);



// ---------------------------  Register Item: SYSINFO_Secure_PIDR0  ------------------------------
// SVD Line: 893

//  <item> SFDITEM_REG__SYSINFO_Secure_PIDR0
//    <name> PIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x58020FE0) Peripheral ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSINFO_Secure_PIDR0 >> 0) & 0xFFFFFFFF), ((SYSINFO_Secure_PIDR0 = (SYSINFO_Secure_PIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SYSINFO_Secure_PIDR1  --------------------------
// SVD Line: 901

unsigned int SYSINFO_Secure_PIDR1 __AT (0x58020FE4);



// ---------------------------  Register Item: SYSINFO_Secure_PIDR1  ------------------------------
// SVD Line: 901

//  <item> SFDITEM_REG__SYSINFO_Secure_PIDR1
//    <name> PIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x58020FE4) Peripheral ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSINFO_Secure_PIDR1 >> 0) & 0xFFFFFFFF), ((SYSINFO_Secure_PIDR1 = (SYSINFO_Secure_PIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SYSINFO_Secure_PIDR2  --------------------------
// SVD Line: 909

unsigned int SYSINFO_Secure_PIDR2 __AT (0x58020FE8);



// ---------------------------  Register Item: SYSINFO_Secure_PIDR2  ------------------------------
// SVD Line: 909

//  <item> SFDITEM_REG__SYSINFO_Secure_PIDR2
//    <name> PIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x58020FE8) Peripheral ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSINFO_Secure_PIDR2 >> 0) & 0xFFFFFFFF), ((SYSINFO_Secure_PIDR2 = (SYSINFO_Secure_PIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SYSINFO_Secure_PIDR3  --------------------------
// SVD Line: 917

unsigned int SYSINFO_Secure_PIDR3 __AT (0x58020FEC);



// ---------------------------  Register Item: SYSINFO_Secure_PIDR3  ------------------------------
// SVD Line: 917

//  <item> SFDITEM_REG__SYSINFO_Secure_PIDR3
//    <name> PIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x58020FEC) Peripheral ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSINFO_Secure_PIDR3 >> 0) & 0xFFFFFFFF), ((SYSINFO_Secure_PIDR3 = (SYSINFO_Secure_PIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SYSINFO_Secure_CIDR0  --------------------------
// SVD Line: 925

unsigned int SYSINFO_Secure_CIDR0 __AT (0x58020FF0);



// ---------------------------  Register Item: SYSINFO_Secure_CIDR0  ------------------------------
// SVD Line: 925

//  <item> SFDITEM_REG__SYSINFO_Secure_CIDR0
//    <name> CIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x58020FF0) Component ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSINFO_Secure_CIDR0 >> 0) & 0xFFFFFFFF), ((SYSINFO_Secure_CIDR0 = (SYSINFO_Secure_CIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SYSINFO_Secure_CIDR1  --------------------------
// SVD Line: 933

unsigned int SYSINFO_Secure_CIDR1 __AT (0x58020FF4);



// ---------------------------  Register Item: SYSINFO_Secure_CIDR1  ------------------------------
// SVD Line: 933

//  <item> SFDITEM_REG__SYSINFO_Secure_CIDR1
//    <name> CIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x58020FF4) Component ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSINFO_Secure_CIDR1 >> 0) & 0xFFFFFFFF), ((SYSINFO_Secure_CIDR1 = (SYSINFO_Secure_CIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SYSINFO_Secure_CIDR2  --------------------------
// SVD Line: 941

unsigned int SYSINFO_Secure_CIDR2 __AT (0x58020FF8);



// ---------------------------  Register Item: SYSINFO_Secure_CIDR2  ------------------------------
// SVD Line: 941

//  <item> SFDITEM_REG__SYSINFO_Secure_CIDR2
//    <name> CIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x58020FF8) Component ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSINFO_Secure_CIDR2 >> 0) & 0xFFFFFFFF), ((SYSINFO_Secure_CIDR2 = (SYSINFO_Secure_CIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SYSINFO_Secure_CIDR3  --------------------------
// SVD Line: 949

unsigned int SYSINFO_Secure_CIDR3 __AT (0x58020FFC);



// ---------------------------  Register Item: SYSINFO_Secure_CIDR3  ------------------------------
// SVD Line: 949

//  <item> SFDITEM_REG__SYSINFO_Secure_CIDR3
//    <name> CIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x58020FFC) Component ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSINFO_Secure_CIDR3 >> 0) & 0xFFFFFFFF), ((SYSINFO_Secure_CIDR3 = (SYSINFO_Secure_CIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Peripheral View: SYSINFO_Secure  --------------------------------
// SVD Line: 959

//  <view> SYSINFO_Secure
//    <name> SYSINFO_Secure </name>
//    <item> SFDITEM_REG__SYSINFO_Secure_SOC_IDENTITY </item>
//    <item> SFDITEM_REG__SYSINFO_Secure_SYS_CONFIG0 </item>
//    <item> SFDITEM_REG__SYSINFO_Secure_SYS_CONFIG1 </item>
//    <item> SFDITEM_REG__SYSINFO_Secure_IIDR </item>
//    <item> SFDITEM_REG__SYSINFO_Secure_PIDR4 </item>
//    <item> SFDITEM_REG__SYSINFO_Secure_PIDR0 </item>
//    <item> SFDITEM_REG__SYSINFO_Secure_PIDR1 </item>
//    <item> SFDITEM_REG__SYSINFO_Secure_PIDR2 </item>
//    <item> SFDITEM_REG__SYSINFO_Secure_PIDR3 </item>
//    <item> SFDITEM_REG__SYSINFO_Secure_CIDR0 </item>
//    <item> SFDITEM_REG__SYSINFO_Secure_CIDR1 </item>
//    <item> SFDITEM_REG__SYSINFO_Secure_CIDR2 </item>
//    <item> SFDITEM_REG__SYSINFO_Secure_CIDR3 </item>
//  </view>
//  


// ----------------------  Register Item Address: SYSCONTROL_SECDBGSTAT  --------------------------
// SVD Line: 997

unsigned int SYSCONTROL_SECDBGSTAT __AT (0x58021000);



// --------------------  Field Item: SYSCONTROL_SECDBGSTAT_DBGEN_I_STATUS  ------------------------
// SVD Line: 1005

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_DBGEN_I_STATUS
//    <name> DBGEN_I_STATUS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x58021000) \nDebug enable value\n0 : disable = debug disable\n1 : enable = debug enable </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSTAT ) </loc>
//      <o.0..0> DBGEN_I_STATUS
//        <0=> 0: disable = debug disable
//        <1=> 1: enable = debug enable
//    </combo>
//  </item>
//  


// -------------------  Field Item: SYSCONTROL_SECDBGSTAT_DBGEN_SEL_STATUS  -----------------------
// SVD Line: 1023

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_DBGEN_SEL_STATUS
//    <name> DBGEN_SEL_STATUS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x58021000) \nDebug enable selector value\n0 : disable = debug disable selector\n1 : enable = debug enable selector </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSTAT ) </loc>
//      <o.1..1> DBGEN_SEL_STATUS
//        <0=> 0: disable = debug disable selector
//        <1=> 1: enable = debug enable selector
//    </combo>
//  </item>
//  


// --------------------  Field Item: SYSCONTROL_SECDBGSTAT_NIDEN_I_STATUS  ------------------------
// SVD Line: 1041

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_NIDEN_I_STATUS
//    <name> NIDEN_I_STATUS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x58021000) \nNon-invasive debug enable value\n0 : disable = non-invasive debug disable\n1 : enable = non-invasive debug enable </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSTAT ) </loc>
//      <o.2..2> NIDEN_I_STATUS
//        <0=> 0: disable = non-invasive debug disable
//        <1=> 1: enable = non-invasive debug enable
//    </combo>
//  </item>
//  


// -------------------  Field Item: SYSCONTROL_SECDBGSTAT_NIDEN_SEL_STATUS  -----------------------
// SVD Line: 1059

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_NIDEN_SEL_STATUS
//    <name> NIDEN_SEL_STATUS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x58021000) \nNon-invasive debug enable selector value\n0 : disable = non-invasive debug disable selector\n1 : enable = non-invasive debug enable selector </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSTAT ) </loc>
//      <o.3..3> NIDEN_SEL_STATUS
//        <0=> 0: disable = non-invasive debug disable selector
//        <1=> 1: enable = non-invasive debug enable selector
//    </combo>
//  </item>
//  


// --------------------  Field Item: SYSCONTROL_SECDBGSTAT_SPIDEN_I_STATUS  -----------------------
// SVD Line: 1077

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_SPIDEN_I_STATUS
//    <name> SPIDEN_I_STATUS </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x58021000) \nSecure privilege invasive debug enable value\n0 : disable = Secure privilege invasive debug disable\n1 : enable = Secure privilege invasive debug enable </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSTAT ) </loc>
//      <o.4..4> SPIDEN_I_STATUS
//        <0=> 0: disable = Secure privilege invasive debug disable
//        <1=> 1: enable = Secure privilege invasive debug enable
//    </combo>
//  </item>
//  


// -------------------  Field Item: SYSCONTROL_SECDBGSTAT_SPIDEN_SEL_STATUS  ----------------------
// SVD Line: 1095

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_SPIDEN_SEL_STATUS
//    <name> SPIDEN_SEL_STATUS </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x58021000) \nSecure privilege invasive debug enable selector value\n0 : disable = Secure privilege invasive debug disable selector\n1 : enable = Secure privilege invasive debug enable selector </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSTAT ) </loc>
//      <o.5..5> SPIDEN_SEL_STATUS
//        <0=> 0: disable = Secure privilege invasive debug disable selector
//        <1=> 1: enable = Secure privilege invasive debug enable selector
//    </combo>
//  </item>
//  


// --------------------  Field Item: SYSCONTROL_SECDBGSTAT_SPNIDEN_STATUS  ------------------------
// SVD Line: 1113

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_SPNIDEN_STATUS
//    <name> SPNIDEN_STATUS </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x58021000) \nSecure privilege non-invasive debug enable value\n0 : disable = Secure privilege non-invasive debug disable\n1 : enable = Secure privilege non-invasive debug enable </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSTAT ) </loc>
//      <o.6..6> SPNIDEN_STATUS
//        <0=> 0: disable = Secure privilege non-invasive debug disable
//        <1=> 1: enable = Secure privilege non-invasive debug enable
//    </combo>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_SECDBGSTAT_SPNIDEN_SEL_STATUS  ----------------------
// SVD Line: 1131

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_SPNIDEN_SEL_STATUS
//    <name> SPNIDEN_SEL_STATUS </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x58021000) \nSecure privilege non-invasive debug enable selector value\n0 : disable = Secure privilege non-invasive debug disable selector\n1 : enable = Secure privilege non-invasive debug enable selector </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSTAT ) </loc>
//      <o.7..7> SPNIDEN_SEL_STATUS
//        <0=> 0: disable = Secure privilege non-invasive debug disable selector
//        <1=> 1: enable = Secure privilege non-invasive debug enable selector
//    </combo>
//  </item>
//  


// --------------------  Field Item: SYSCONTROL_SECDBGSTAT_DAPACCEN_STATUS  -----------------------
// SVD Line: 1149

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_DAPACCEN_STATUS
//    <name> DAPACCEN_STATUS </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x58021000) \nActive High DAP Access Enable Value. This bit reflects the value on the DAPACCEN pin.\n0 : disable = Secure privilege non-invasive debug disable selector\n1 : enable = Secure privilege non-invasive debug enable selector </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSTAT ) </loc>
//      <o.8..8> DAPACCEN_STATUS
//        <0=> 0: disable = Secure privilege non-invasive debug disable selector
//        <1=> 1: enable = Secure privilege non-invasive debug enable selector
//    </combo>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_SECDBGSTAT_DAPACCEN_SEL_STATUS  ---------------------
// SVD Line: 1167

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_DAPACCEN_SEL_STATUS
//    <name> DAPACCEN_SEL_STATUS </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x58021000) \nActive High DAP Access Enable Selector Value. This bit returns the DAPACCEN_SEL value. Forced to Zero if DAPACCENSELDIS = 1.\n0 : disable = Secure privilege non-invasive debug disable selector\n1 : enable = Secure privilege non-invasive debug enable selector </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSTAT ) </loc>
//      <o.9..9> DAPACCEN_SEL_STATUS
//        <0=> 0: disable = Secure privilege non-invasive debug disable selector
//        <1=> 1: enable = Secure privilege non-invasive debug enable selector
//    </combo>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_SECDBGSTAT_DAPDSSACCEN_STATUS  ----------------------
// SVD Line: 1185

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_DAPDSSACCEN_STATUS
//    <name> DAPDSSACCEN_STATUS </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x58021000) \nActive High DAP to Debug Subsystem Access Enable Value. This bit reflects the value on the DAPDSSACCEN pin.\n0 : disable = Secure privilege non-invasive debug disable selector\n1 : enable = Secure privilege non-invasive debug enable selector </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSTAT ) </loc>
//      <o.10..10> DAPDSSACCEN_STATUS
//        <0=> 0: disable = Secure privilege non-invasive debug disable selector
//        <1=> 1: enable = Secure privilege non-invasive debug enable selector
//    </combo>
//  </item>
//  


// ----------------  Field Item: SYSCONTROL_SECDBGSTAT_DAPDSSACCEN_SEL_STATUS  --------------------
// SVD Line: 1203

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_DAPDSSACCEN_SEL_STATUS
//    <name> DAPDSSACCEN_SEL_STATUS </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x58021000) \nActive High DAP to Debug Subsystem Access Enable Selector Value. This bit returns the DAPDSSACCEN_SEL value. Forced to Zero if DAPDSSACCENSELDIS = 1.\n0 : disable = Secure privilege non-invasive debug disable selector\n1 : enable = Secure privilege non-invasive debug enable selector </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSTAT ) </loc>
//      <o.11..11> DAPDSSACCEN_SEL_STATUS
//        <0=> 0: disable = Secure privilege non-invasive debug disable selector
//        <1=> 1: enable = Secure privilege non-invasive debug enable selector
//    </combo>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_SECDBGSTAT_DBGENSELDIS_STATUS  ----------------------
// SVD Line: 1221

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_DBGENSELDIS_STATUS
//    <name> DBGENSELDIS_STATUS </name>
//    <r> 
//    <i> [Bit 24] RO (@ 0x58021000) \nReturns the DBGENSELDIS configuration value when read.\n0 : disable = Secure privilege non-invasive debug disable selector\n1 : enable = Secure privilege non-invasive debug enable selector </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSTAT ) </loc>
//      <o.24..24> DBGENSELDIS_STATUS
//        <0=> 0: disable = Secure privilege non-invasive debug disable selector
//        <1=> 1: enable = Secure privilege non-invasive debug enable selector
//    </combo>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_SECDBGSTAT_NIDENSELDIS_STATUS  ----------------------
// SVD Line: 1239

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_NIDENSELDIS_STATUS
//    <name> NIDENSELDIS_STATUS </name>
//    <r> 
//    <i> [Bit 25] RO (@ 0x58021000) \nReturns the NIDENSELDIS configuration value when read.\n0 : disable = Secure privilege non-invasive debug disable selector\n1 : enable = Secure privilege non-invasive debug enable selector </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSTAT ) </loc>
//      <o.25..25> NIDENSELDIS_STATUS
//        <0=> 0: disable = Secure privilege non-invasive debug disable selector
//        <1=> 1: enable = Secure privilege non-invasive debug enable selector
//    </combo>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_SECDBGSTAT_SPIDENSELDIS_STATUS  ---------------------
// SVD Line: 1257

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_SPIDENSELDIS_STATUS
//    <name> SPIDENSELDIS_STATUS </name>
//    <r> 
//    <i> [Bit 26] RO (@ 0x58021000) \nReturns the SPIDENSELDIS configuration value when read.\n0 : disable = Secure privilege non-invasive debug disable selector\n1 : enable = Secure privilege non-invasive debug enable selector </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSTAT ) </loc>
//      <o.26..26> SPIDENSELDIS_STATUS
//        <0=> 0: disable = Secure privilege non-invasive debug disable selector
//        <1=> 1: enable = Secure privilege non-invasive debug enable selector
//    </combo>
//  </item>
//  


// -----------------  Field Item: SYSCONTROL_SECDBGSTAT_SPNIDENSELDIS_STATUS  ---------------------
// SVD Line: 1275

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_SPNIDENSELDIS_STATUS
//    <name> SPNIDENSELDIS_STATUS </name>
//    <r> 
//    <i> [Bit 27] RO (@ 0x58021000) \nReturns the SPNIDENSELDIS configuration value when read.\n0 : disable = Secure privilege non-invasive debug disable selector\n1 : enable = Secure privilege non-invasive debug enable selector </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSTAT ) </loc>
//      <o.27..27> SPNIDENSELDIS_STATUS
//        <0=> 0: disable = Secure privilege non-invasive debug disable selector
//        <1=> 1: enable = Secure privilege non-invasive debug enable selector
//    </combo>
//  </item>
//  


// -----------------  Field Item: SYSCONTROL_SECDBGSTAT_DAPACCENSELDIS_STATUS  --------------------
// SVD Line: 1293

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_DAPACCENSELDIS_STATUS
//    <name> DAPACCENSELDIS_STATUS </name>
//    <r> 
//    <i> [Bit 28] RO (@ 0x58021000) \nReturns the DAPACCENSELDIS configuration value when read.\n0 : disable = Secure privilege non-invasive debug disable selector\n1 : enable = Secure privilege non-invasive debug enable selector </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSTAT ) </loc>
//      <o.28..28> DAPACCENSELDIS_STATUS
//        <0=> 0: disable = Secure privilege non-invasive debug disable selector
//        <1=> 1: enable = Secure privilege non-invasive debug enable selector
//    </combo>
//  </item>
//  


// ---------------  Field Item: SYSCONTROL_SECDBGSTAT_DAPDSSACCENSELDIS_STATUS  -------------------
// SVD Line: 1311

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_DAPDSSACCENSELDIS_STATUS
//    <name> DAPDSSACCENSELDIS_STATUS </name>
//    <r> 
//    <i> [Bit 29] RO (@ 0x58021000) \nReturns the DAPDSSACCENSELDIS configuration value when read.\n0 : disable = Secure privilege non-invasive debug disable selector\n1 : enable = Secure privilege non-invasive debug enable selector </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSTAT ) </loc>
//      <o.29..29> DAPDSSACCENSELDIS_STATUS
//        <0=> 0: disable = Secure privilege non-invasive debug disable selector
//        <1=> 1: enable = Secure privilege non-invasive debug enable selector
//    </combo>
//  </item>
//  


// --------------------------  Register RTree: SYSCONTROL_SECDBGSTAT  -----------------------------
// SVD Line: 997

//  <rtree> SFDITEM_REG__SYSCONTROL_SECDBGSTAT
//    <name> SECDBGSTAT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x58021000) Secure Debug Configuration Status </i>
//    <loc> ( (unsigned int)((SYSCONTROL_SECDBGSTAT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_DBGEN_I_STATUS </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_DBGEN_SEL_STATUS </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_NIDEN_I_STATUS </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_NIDEN_SEL_STATUS </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_SPIDEN_I_STATUS </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_SPIDEN_SEL_STATUS </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_SPNIDEN_STATUS </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_SPNIDEN_SEL_STATUS </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_DAPACCEN_STATUS </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_DAPACCEN_SEL_STATUS </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_DAPDSSACCEN_STATUS </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_DAPDSSACCEN_SEL_STATUS </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_DBGENSELDIS_STATUS </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_NIDENSELDIS_STATUS </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_SPIDENSELDIS_STATUS </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_SPNIDENSELDIS_STATUS </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_DAPACCENSELDIS_STATUS </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSTAT_DAPDSSACCENSELDIS_STATUS </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SYSCONTROL_SECDBGSET  --------------------------
// SVD Line: 1331

unsigned int SYSCONTROL_SECDBGSET __AT (0x58021004);



// ----------------------  Field Item: SYSCONTROL_SECDBGSET_DBGEN_I_SET  --------------------------
// SVD Line: 1338

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_DBGEN_I_SET
//    <name> DBGEN_I_SET </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x58021004) High active debug enable set control </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSET ) </loc>
//      <o.0..0> DBGEN_I_SET
//    </check>
//  </item>
//  


// ---------------------  Field Item: SYSCONTROL_SECDBGSET_DBGEN_SEL_SET  -------------------------
// SVD Line: 1344

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_DBGEN_SEL_SET
//    <name> DBGEN_SEL_SET </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x58021004) \nDebug enable selector set control\n0 : disable = debug disable selector set control\n1 : enable = debug enable selector set control </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSET ) </loc>
//      <o.1..1> DBGEN_SEL_SET
//        <0=> 0: disable = debug disable selector set control
//        <1=> 1: enable = debug enable selector set control
//    </combo>
//  </item>
//  


// ----------------------  Field Item: SYSCONTROL_SECDBGSET_NIDEN_I_SET  --------------------------
// SVD Line: 1362

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_NIDEN_I_SET
//    <name> NIDEN_I_SET </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x58021004) \nNon-invasive debug enable set control\n0 : disable = non-invasive debug disable set control\n1 : enable = non-invasive debug enable set control </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSET ) </loc>
//      <o.2..2> NIDEN_I_SET
//        <0=> 0: disable = non-invasive debug disable set control
//        <1=> 1: enable = non-invasive debug enable set control
//    </combo>
//  </item>
//  


// ---------------------  Field Item: SYSCONTROL_SECDBGSET_NIDEN_SEL_SET  -------------------------
// SVD Line: 1380

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_NIDEN_SEL_SET
//    <name> NIDEN_SEL_SET </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x58021004) \nNon-invasive debug enable selector set control\n0 : disable = non-invasive debug disable selector set control\n1 : enable = non-invasive debug enable selector set control </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSET ) </loc>
//      <o.3..3> NIDEN_SEL_SET
//        <0=> 0: disable = non-invasive debug disable selector set control
//        <1=> 1: enable = non-invasive debug enable selector set control
//    </combo>
//  </item>
//  


// ----------------------  Field Item: SYSCONTROL_SECDBGSET_SPIDEN_I_SET  -------------------------
// SVD Line: 1398

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_SPIDEN_I_SET
//    <name> SPIDEN_I_SET </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x58021004) \nSecure privilege invasive debug enable set control\n0 : disable = Secure privilege invasive debug disable set control\n1 : enable = Secure privilege invasive debug enable set control </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSET ) </loc>
//      <o.4..4> SPIDEN_I_SET
//        <0=> 0: disable = Secure privilege invasive debug disable set control
//        <1=> 1: enable = Secure privilege invasive debug enable set control
//    </combo>
//  </item>
//  


// ---------------------  Field Item: SYSCONTROL_SECDBGSET_SPIDEN_SEL_SET  ------------------------
// SVD Line: 1416

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_SPIDEN_SEL_SET
//    <name> SPIDEN_SEL_SET </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x58021004) \nSecure privilege invasive debug enable selector set control\n0 : disable = Secure privilege invasive debug disable selector set control\n1 : enable = Secure privilege invasive debug enable selector set control </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSET ) </loc>
//      <o.5..5> SPIDEN_SEL_SET
//        <0=> 0: disable = Secure privilege invasive debug disable selector set control
//        <1=> 1: enable = Secure privilege invasive debug enable selector set control
//    </combo>
//  </item>
//  


// ---------------------  Field Item: SYSCONTROL_SECDBGSET_SPNIDEN_I_SET  -------------------------
// SVD Line: 1434

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_SPNIDEN_I_SET
//    <name> SPNIDEN_I_SET </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x58021004) \nSecure privilege non-invasive debug enable set control\n0 : disable = Secure privilege non-invasive debug disable set control\n1 : enable = Secure privilege non-invasive debug enable set control </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSET ) </loc>
//      <o.6..6> SPNIDEN_I_SET
//        <0=> 0: disable = Secure privilege non-invasive debug disable set control
//        <1=> 1: enable = Secure privilege non-invasive debug enable set control
//    </combo>
//  </item>
//  


// --------------------  Field Item: SYSCONTROL_SECDBGSET_SPNIDEN_SEL_SET  ------------------------
// SVD Line: 1452

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_SPNIDEN_SEL_SET
//    <name> SPNIDEN_SEL_SET </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x58021004) \nSecure privilege non-invasive debug enable selector set control\n0 : disable = Secure privilege non-invasive debug disable selector set control\n1 : enable = Secure privilege non-invasive debug enable selector set control </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSET ) </loc>
//      <o.7..7> SPNIDEN_SEL_SET
//        <0=> 0: disable = Secure privilege non-invasive debug disable selector set control
//        <1=> 1: enable = Secure privilege non-invasive debug enable selector set control
//    </combo>
//  </item>
//  


// ---------------------  Field Item: SYSCONTROL_SECDBGSET_DAPACCEN_I_SET  ------------------------
// SVD Line: 1470

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_DAPACCEN_I_SET
//    <name> DAPACCEN_I_SET </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x58021004) \nSet internal version of Active High DAP Access Enable. Write HIGH to set DAPACCEN_I. When read returns DAPACCEN_I. RAZWI if DAPACCENSELDIS = 1.\n0 : disable = Secure privilege non-invasive debug disable selector\n1 : enable = Secure privilege non-invasive debug enable selector </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSET ) </loc>
//      <o.8..8> DAPACCEN_I_SET
//        <0=> 0: disable = Secure privilege non-invasive debug disable selector
//        <1=> 1: enable = Secure privilege non-invasive debug enable selector
//    </combo>
//  </item>
//  


// --------------------  Field Item: SYSCONTROL_SECDBGSET_DAPACCEN_SEL_SET  -----------------------
// SVD Line: 1488

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_DAPACCEN_SEL_SET
//    <name> DAPACCEN_SEL_SET </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x58021004) \nSet Active High DAP Access Enable Selector. Write HIGH to set DAPACCEN_SEL. RAZWI if DAPACCENSELDIS = 1.\n0 : disable = Secure privilege non-invasive debug disable selector\n1 : enable = Secure privilege non-invasive debug enable selector </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSET ) </loc>
//      <o.9..9> DAPACCEN_SEL_SET
//        <0=> 0: disable = Secure privilege non-invasive debug disable selector
//        <1=> 1: enable = Secure privilege non-invasive debug enable selector
//    </combo>
//  </item>
//  


// -------------------  Field Item: SYSCONTROL_SECDBGSET_DAPDSSACCEN_I_SET  -----------------------
// SVD Line: 1506

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_DAPDSSACCEN_I_SET
//    <name> DAPDSSACCEN_I_SET </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x58021004) \nSet internal version of Active High DAP to Debug Subsystem Access Enable. Write HIGH to set DAPDSSACCEN_I. When read returns DAPDSSACCEN_I. RAZWI if DAPDSSACCENSELDIS = 1.\n0 : disable = Secure privilege non-invasive debug disable selector\n1 : enable = Secure privilege non-invasive debug enable selector </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSET ) </loc>
//      <o.10..10> DAPDSSACCEN_I_SET
//        <0=> 0: disable = Secure privilege non-invasive debug disable selector
//        <1=> 1: enable = Secure privilege non-invasive debug enable selector
//    </combo>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_SECDBGSET_DAPDSSACCEN_SEL_SET  ----------------------
// SVD Line: 1524

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_DAPDSSACCEN_SEL_SET
//    <name> DAPDSSACCEN_SEL_SET </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x58021004) \nSet Active High DAP to Debug Subsystem Access Enable Selector. Write HIGH to set DAPDSSACCEN_SEL. RAZWI if DAPDSSACCENSELDIS = 1.\n0 : disable = Secure privilege non-invasive debug disable selector\n1 : enable = Secure privilege non-invasive debug enable selector </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGSET ) </loc>
//      <o.11..11> DAPDSSACCEN_SEL_SET
//        <0=> 0: disable = Secure privilege non-invasive debug disable selector
//        <1=> 1: enable = Secure privilege non-invasive debug enable selector
//    </combo>
//  </item>
//  


// --------------------------  Register RTree: SYSCONTROL_SECDBGSET  ------------------------------
// SVD Line: 1331

//  <rtree> SFDITEM_REG__SYSCONTROL_SECDBGSET
//    <name> SECDBGSET </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x58021004) Secure Debug Configuration Set </i>
//    <loc> ( (unsigned int)((SYSCONTROL_SECDBGSET >> 0) & 0xFFFFFFFF), ((SYSCONTROL_SECDBGSET = (SYSCONTROL_SECDBGSET & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_DBGEN_I_SET </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_DBGEN_SEL_SET </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_NIDEN_I_SET </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_NIDEN_SEL_SET </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_SPIDEN_I_SET </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_SPIDEN_SEL_SET </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_SPNIDEN_I_SET </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_SPNIDEN_SEL_SET </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_DAPACCEN_I_SET </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_DAPACCEN_SEL_SET </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_DAPDSSACCEN_I_SET </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGSET_DAPDSSACCEN_SEL_SET </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SYSCONTROL_SECDBGCLR  --------------------------
// SVD Line: 1544

unsigned int SYSCONTROL_SECDBGCLR __AT (0x58021008);



// ----------------------  Field Item: SYSCONTROL_SECDBGCLR_DBGEN_I_CLR  --------------------------
// SVD Line: 1551

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_DBGEN_I_CLR
//    <name> DBGEN_I_CLR </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x58021008) \nDebug enable clear control\n0 : disable = debug disable clear control\n1 : enable = debug enable clear control </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGCLR ) </loc>
//      <o.0..0> DBGEN_I_CLR
//        <0=> 0: disable = debug disable clear control
//        <1=> 1: enable = debug enable clear control
//    </combo>
//  </item>
//  


// ---------------------  Field Item: SYSCONTROL_SECDBGCLR_DBGEN_SEL_CLR  -------------------------
// SVD Line: 1569

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_DBGEN_SEL_CLR
//    <name> DBGEN_SEL_CLR </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x58021008) \nDebug enable selector clear control\n0 : disable = debug disable selector clear control\n1 : enable = debug enable selector clear control </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGCLR ) </loc>
//      <o.1..1> DBGEN_SEL_CLR
//        <0=> 0: disable = debug disable selector clear control
//        <1=> 1: enable = debug enable selector clear control
//    </combo>
//  </item>
//  


// ----------------------  Field Item: SYSCONTROL_SECDBGCLR_NIDEN_I_CLR  --------------------------
// SVD Line: 1587

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_NIDEN_I_CLR
//    <name> NIDEN_I_CLR </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x58021008) \nNon-invasive debug enable clear control\n0 : disable = non-invasive debug disable clear control\n1 : enable = non-invasive debug enable clear control </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGCLR ) </loc>
//      <o.2..2> NIDEN_I_CLR
//        <0=> 0: disable = non-invasive debug disable clear control
//        <1=> 1: enable = non-invasive debug enable clear control
//    </combo>
//  </item>
//  


// ---------------------  Field Item: SYSCONTROL_SECDBGCLR_NIDEN_SEL_CLR  -------------------------
// SVD Line: 1605

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_NIDEN_SEL_CLR
//    <name> NIDEN_SEL_CLR </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x58021008) \nNon-invasive debug enable selector clear control\n0 : disable = non-invasive debug disable selector clear control\n1 : enable = non-invasive debug enable selector clear control </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGCLR ) </loc>
//      <o.3..3> NIDEN_SEL_CLR
//        <0=> 0: disable = non-invasive debug disable selector clear control
//        <1=> 1: enable = non-invasive debug enable selector clear control
//    </combo>
//  </item>
//  


// ----------------------  Field Item: SYSCONTROL_SECDBGCLR_SPIDEN_I_CLR  -------------------------
// SVD Line: 1623

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_SPIDEN_I_CLR
//    <name> SPIDEN_I_CLR </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x58021008) \nSecure privilege invasive debug enable clear control\n0 : disable = Secure privilege invasive debug disable clear control\n1 : enable = Secure privilege invasive debug enable clear control </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGCLR ) </loc>
//      <o.4..4> SPIDEN_I_CLR
//        <0=> 0: disable = Secure privilege invasive debug disable clear control
//        <1=> 1: enable = Secure privilege invasive debug enable clear control
//    </combo>
//  </item>
//  


// ---------------------  Field Item: SYSCONTROL_SECDBGCLR_SPIDEN_SEL_CLR  ------------------------
// SVD Line: 1641

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_SPIDEN_SEL_CLR
//    <name> SPIDEN_SEL_CLR </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x58021008) \nSecure privilege invasive debug enable selector clear control\n0 : disable = Secure privilege invasive debug disable selector clear control\n1 : enable = Secure privilege invasive debug enable selector clear control </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGCLR ) </loc>
//      <o.5..5> SPIDEN_SEL_CLR
//        <0=> 0: disable = Secure privilege invasive debug disable selector clear control
//        <1=> 1: enable = Secure privilege invasive debug enable selector clear control
//    </combo>
//  </item>
//  


// ---------------------  Field Item: SYSCONTROL_SECDBGCLR_SPNIDEN_I_CLR  -------------------------
// SVD Line: 1659

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_SPNIDEN_I_CLR
//    <name> SPNIDEN_I_CLR </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x58021008) \nSecure privilege non-invasive debug enable clear control\n0 : disable = Secure privilege non-invasive debug disable clear control\n1 : enable = Secure privilege non-invasive debug enable clear control </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGCLR ) </loc>
//      <o.6..6> SPNIDEN_I_CLR
//        <0=> 0: disable = Secure privilege non-invasive debug disable clear control
//        <1=> 1: enable = Secure privilege non-invasive debug enable clear control
//    </combo>
//  </item>
//  


// --------------------  Field Item: SYSCONTROL_SECDBGCLR_SPNIDEN_SEL_CLR  ------------------------
// SVD Line: 1677

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_SPNIDEN_SEL_CLR
//    <name> SPNIDEN_SEL_CLR </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x58021008) \nSecure privilege non-invasive debug enable selector clear control\n0 : disable = Secure privilege non-invasive debug disable selector clear control\n1 : enable = Secure privilege non-invasive debug enable selector clear control </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGCLR ) </loc>
//      <o.7..7> SPNIDEN_SEL_CLR
//        <0=> 0: disable = Secure privilege non-invasive debug disable selector clear control
//        <1=> 1: enable = Secure privilege non-invasive debug enable selector clear control
//    </combo>
//  </item>
//  


// ---------------------  Field Item: SYSCONTROL_SECDBGCLR_DAPACCEN_I_CLR  ------------------------
// SVD Line: 1695

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_DAPACCEN_I_CLR
//    <name> DAPACCEN_I_CLR </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x58021008) \nClear internal version of Active High DAP Access Enable. Write HIGH to clear DAPACCEN_I. When read returns DAPACCEN_I. RAZWI if DAPACCENSELDIS = 1.\n0 : disable = Secure privilege non-invasive debug disable selector\n1 : enable = Secure privilege non-invasive debug enable selector </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGCLR ) </loc>
//      <o.8..8> DAPACCEN_I_CLR
//        <0=> 0: disable = Secure privilege non-invasive debug disable selector
//        <1=> 1: enable = Secure privilege non-invasive debug enable selector
//    </combo>
//  </item>
//  


// --------------------  Field Item: SYSCONTROL_SECDBGCLR_DAPACCEN_SEL_CLR  -----------------------
// SVD Line: 1713

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_DAPACCEN_SEL_CLR
//    <name> DAPACCEN_SEL_CLR </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x58021008) \nClear Active High DAP Access Enable Selector. Write HIGH to clear DAPACCEN_SEL. RAZWI if DAPACCENSELDIS = 1.\n0 : disable = Secure privilege non-invasive debug disable selector\n1 : enable = Secure privilege non-invasive debug enable selector </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGCLR ) </loc>
//      <o.9..9> DAPACCEN_SEL_CLR
//        <0=> 0: disable = Secure privilege non-invasive debug disable selector
//        <1=> 1: enable = Secure privilege non-invasive debug enable selector
//    </combo>
//  </item>
//  


// -------------------  Field Item: SYSCONTROL_SECDBGCLR_DAPDSSACCEN_I_CLR  -----------------------
// SVD Line: 1731

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_DAPDSSACCEN_I_CLR
//    <name> DAPDSSACCEN_I_CLR </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x58021008) \nClears internal version of Active High DAP to Debug Subsystem Access Enable. Write HIGH to clear DAPDSSACCEN_I. Always RAZ. WI if DAPDSSACCENSELDIS = 1.\n0 : disable = Secure privilege non-invasive debug disable selector\n1 : enable = Secure privilege non-invasive debug enable selector </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGCLR ) </loc>
//      <o.10..10> DAPDSSACCEN_I_CLR
//        <0=> 0: disable = Secure privilege non-invasive debug disable selector
//        <1=> 1: enable = Secure privilege non-invasive debug enable selector
//    </combo>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_SECDBGCLR_DAPDSSACCEN_SEL_CLR  ----------------------
// SVD Line: 1749

//  <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_DAPDSSACCEN_SEL_CLR
//    <name> DAPDSSACCEN_SEL_CLR </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x58021008) \nClear Active High DAP to Debug Subsystem Access Enable Selector. Write HIGH to clear DAPDSSACCEN_SEL. RAZWI if DAPDSSACCENSELDIS = 1.\n0 : disable = Secure privilege non-invasive debug disable selector\n1 : enable = Secure privilege non-invasive debug enable selector </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SECDBGCLR ) </loc>
//      <o.11..11> DAPDSSACCEN_SEL_CLR
//        <0=> 0: disable = Secure privilege non-invasive debug disable selector
//        <1=> 1: enable = Secure privilege non-invasive debug enable selector
//    </combo>
//  </item>
//  


// --------------------------  Register RTree: SYSCONTROL_SECDBGCLR  ------------------------------
// SVD Line: 1544

//  <rtree> SFDITEM_REG__SYSCONTROL_SECDBGCLR
//    <name> SECDBGCLR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x58021008) Secure Debug Configuration Clear </i>
//    <loc> ( (unsigned int)((SYSCONTROL_SECDBGCLR >> 0) & 0xFFFFFFFF), ((SYSCONTROL_SECDBGCLR = (SYSCONTROL_SECDBGCLR & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_DBGEN_I_CLR </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_DBGEN_SEL_CLR </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_NIDEN_I_CLR </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_NIDEN_SEL_CLR </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_SPIDEN_I_CLR </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_SPIDEN_SEL_CLR </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_SPNIDEN_I_CLR </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_SPNIDEN_SEL_CLR </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_DAPACCEN_I_CLR </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_DAPACCEN_SEL_CLR </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_DAPDSSACCEN_I_CLR </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_SECDBGCLR_DAPDSSACCEN_SEL_CLR </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SYSCONTROL_SCSECCTRL  --------------------------
// SVD Line: 1769

unsigned int SYSCONTROL_SCSECCTRL __AT (0x5802100C);



// ----------------------  Field Item: SYSCONTROL_SCSECCTRL_SCSECCFGLOCK  -------------------------
// SVD Line: 1777

//  <item> SFDITEM_FIELD__SYSCONTROL_SCSECCTRL_SCSECCFGLOCK
//    <name> SCSECCFGLOCK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x5802100C) \nControl to disable writes to security-related control registers in this register block\n0 : enable = control to enable writes to security-related control registers in this register block\n1 : disable = control to disable writes to security-related control registers in this register block </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_SCSECCTRL ) </loc>
//      <o.2..2> SCSECCFGLOCK
//        <0=> 0: enable = control to enable writes to security-related control registers in this register block
//        <1=> 1: disable = control to disable writes to security-related control registers in this register block
//    </combo>
//  </item>
//  


// --------------------------  Register RTree: SYSCONTROL_SCSECCTRL  ------------------------------
// SVD Line: 1769

//  <rtree> SFDITEM_REG__SYSCONTROL_SCSECCTRL
//    <name> SCSECCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5802100C) System Security Control </i>
//    <loc> ( (unsigned int)((SYSCONTROL_SCSECCTRL >> 0) & 0xFFFFFFFF), ((SYSCONTROL_SCSECCTRL = (SYSCONTROL_SCSECCTRL & ~(0x4UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x4) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCONTROL_SCSECCTRL_SCSECCFGLOCK </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SYSCONTROL_CLK_CFG0  ---------------------------
// SVD Line: 1797

unsigned int SYSCONTROL_CLK_CFG0 __AT (0x58021010);



// -----------------------  Field Item: SYSCONTROL_CLK_CFG0_CPU0CLKCFG  ---------------------------
// SVD Line: 1804

//  <item> SFDITEM_FIELD__SYSCONTROL_CLK_CFG0_CPU0CLKCFG
//    <name> CPU0CLKCFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x58021010) Clock Configuration value that drives CPU0CLKCFG signals. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCONTROL_CLK_CFG0 >> 0) & 0xF), ((SYSCONTROL_CLK_CFG0 = (SYSCONTROL_CLK_CFG0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Field Item: SYSCONTROL_CLK_CFG0_CPU0CLKCFGSTATUS  ------------------------
// SVD Line: 1810

//  <item> SFDITEM_FIELD__SYSCONTROL_CLK_CFG0_CPU0CLKCFGSTATUS
//    <name> CPU0CLKCFGSTATUS </name>
//    <r> 
//    <i> [Bits 19..16] RO (@ 0x58021010) Clock Configuration Status value that reports the status of clock control for CPU0CLK. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCONTROL_CLK_CFG0 >> 16) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: SYSCONTROL_CLK_CFG0  ------------------------------
// SVD Line: 1797

//  <rtree> SFDITEM_REG__SYSCONTROL_CLK_CFG0
//    <name> CLK_CFG0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x58021010) Clock Configuration Register 0. </i>
//    <loc> ( (unsigned int)((SYSCONTROL_CLK_CFG0 >> 0) & 0xFFFFFFFF), ((SYSCONTROL_CLK_CFG0 = (SYSCONTROL_CLK_CFG0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCONTROL_CLK_CFG0_CPU0CLKCFG </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_CLK_CFG0_CPU0CLKCFGSTATUS </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SYSCONTROL_CLK_CFG1  ---------------------------
// SVD Line: 1819

unsigned int SYSCONTROL_CLK_CFG1 __AT (0x58021014);



// ------------------------  Field Item: SYSCONTROL_CLK_CFG1_SYSCLKCFG  ---------------------------
// SVD Line: 1826

//  <item> SFDITEM_FIELD__SYSCONTROL_CLK_CFG1_SYSCLKCFG
//    <name> SYSCLKCFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x58021014) Clock Configuration value that drives SYSCLKCFG signals. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCONTROL_CLK_CFG1 >> 0) & 0xF), ((SYSCONTROL_CLK_CFG1 = (SYSCONTROL_CLK_CFG1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: SYSCONTROL_CLK_CFG1_AONCLKCFG  ---------------------------
// SVD Line: 1832

//  <item> SFDITEM_FIELD__SYSCONTROL_CLK_CFG1_AONCLKCFG
//    <name> AONCLKCFG </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x58021014) Clock Configuration value that drives AONCLKCFG signals. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCONTROL_CLK_CFG1 >> 4) & 0xF), ((SYSCONTROL_CLK_CFG1 = (SYSCONTROL_CLK_CFG1 & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Field Item: SYSCONTROL_CLK_CFG1_SYSCLKCFGSTATUS  ------------------------
// SVD Line: 1838

//  <item> SFDITEM_FIELD__SYSCONTROL_CLK_CFG1_SYSCLKCFGSTATUS
//    <name> SYSCLKCFGSTATUS </name>
//    <r> 
//    <i> [Bits 19..16] RO (@ 0x58021014) Clock Configuration Status value that reports the status of clock control for SYSCLK. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCONTROL_CLK_CFG1 >> 16) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Field Item: SYSCONTROL_CLK_CFG1_AONCLKCFGSTATUS  ------------------------
// SVD Line: 1845

//  <item> SFDITEM_FIELD__SYSCONTROL_CLK_CFG1_AONCLKCFGSTATUS
//    <name> AONCLKCFGSTATUS </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x58021014) Clock Configuration Status value that reports the status of clock control for AONCLK. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCONTROL_CLK_CFG1 >> 20) & 0xF), ((SYSCONTROL_CLK_CFG1 = (SYSCONTROL_CLK_CFG1 & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: SYSCONTROL_CLK_CFG1  ------------------------------
// SVD Line: 1819

//  <rtree> SFDITEM_REG__SYSCONTROL_CLK_CFG1
//    <name> CLK_CFG1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x58021014) Clock Configuration Register 1. </i>
//    <loc> ( (unsigned int)((SYSCONTROL_CLK_CFG1 >> 0) & 0xFFFFFFFF), ((SYSCONTROL_CLK_CFG1 = (SYSCONTROL_CLK_CFG1 & ~(0xF000FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF000FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCONTROL_CLK_CFG1_SYSCLKCFG </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_CLK_CFG1_AONCLKCFG </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_CLK_CFG1_SYSCLKCFGSTATUS </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_CLK_CFG1_AONCLKCFGSTATUS </item>
//  </rtree>
//  


// ----------------------  Register Item Address: SYSCONTROL_CLOCK_FORCE  -------------------------
// SVD Line: 1853

unsigned int SYSCONTROL_CLOCK_FORCE __AT (0x58021018);



// --------------------  Field Item: SYSCONTROL_CLOCK_FORCE_MGMT_CLKFORCE  ------------------------
// SVD Line: 1860

//  <item> SFDITEM_FIELD__SYSCONTROL_CLOCK_FORCE_MGMT_CLKFORCE
//    <name> MGMT_CLKFORCE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x58021018) Set HIGH to force all clocks in PD_AON domain that runs on SYSCLK to run. </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_CLOCK_FORCE ) </loc>
//      <o.0..0> MGMT_CLKFORCE
//    </check>
//  </item>
//  


// ---------------------  Field Item: SYSCONTROL_CLOCK_FORCE_SYS_CLKFORCE  ------------------------
// SVD Line: 1866

//  <item> SFDITEM_FIELD__SYSCONTROL_CLOCK_FORCE_SYS_CLKFORCE
//    <name> SYS_CLKFORCE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x58021018) Set HIGH to force all clocks in PD_SYS to run. </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_CLOCK_FORCE ) </loc>
//      <o.1..1> SYS_CLKFORCE
//    </check>
//  </item>
//  


// --------------------  Field Item: SYSCONTROL_CLOCK_FORCE_DEBUG_CLKFORCE  -----------------------
// SVD Line: 1872

//  <item> SFDITEM_FIELD__SYSCONTROL_CLOCK_FORCE_DEBUG_CLKFORCE
//    <name> DEBUG_CLKFORCE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x58021018) Set HIGH to force all clocks in PD_DEBUG to run. </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_CLOCK_FORCE ) </loc>
//      <o.2..2> DEBUG_CLKFORCE
//    </check>
//  </item>
//  


// --------------------  Field Item: SYSCONTROL_CLOCK_FORCE_CPU0_CLKFORCE  ------------------------
// SVD Line: 1878

//  <item> SFDITEM_FIELD__SYSCONTROL_CLOCK_FORCE_CPU0_CLKFORCE
//    <name> CPU0_CLKFORCE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x58021018) Set HIGH to force PD_CPU0 Local clocks to run. </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_CLOCK_FORCE ) </loc>
//      <o.4..4> CPU0_CLKFORCE
//    </check>
//  </item>
//  


// ---------------------  Field Item: SYSCONTROL_CLOCK_FORCE_AONCLK_FORCE  ------------------------
// SVD Line: 1884

//  <item> SFDITEM_FIELD__SYSCONTROL_CLOCK_FORCE_AONCLK_FORCE
//    <name> AONCLK_FORCE </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x58021018) Set HIGH to request the input AONCLK source to stay ON. </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_CLOCK_FORCE ) </loc>
//      <o.16..16> AONCLK_FORCE
//    </check>
//  </item>
//  


// ---------------------  Field Item: SYSCONTROL_CLOCK_FORCE_SYSCLK_FORCE  ------------------------
// SVD Line: 1890

//  <item> SFDITEM_FIELD__SYSCONTROL_CLOCK_FORCE_SYSCLK_FORCE
//    <name> SYSCLK_FORCE </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x58021018) Set HIGH to request the input SYSCLK source to stay ON. </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_CLOCK_FORCE ) </loc>
//      <o.17..17> SYSCLK_FORCE
//    </check>
//  </item>
//  


// --------------------  Field Item: SYSCONTROL_CLOCK_FORCE_CPU0CLK_FORCE  ------------------------
// SVD Line: 1896

//  <item> SFDITEM_FIELD__SYSCONTROL_CLOCK_FORCE_CPU0CLK_FORCE
//    <name> CPU0CLK_FORCE </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x58021018) Set HIGH to request the input CPU0CLK source to stay ON.. </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_CLOCK_FORCE ) </loc>
//      <o.19..19> CPU0CLK_FORCE
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SYSCONTROL_CLOCK_FORCE  -----------------------------
// SVD Line: 1853

//  <rtree> SFDITEM_REG__SYSCONTROL_CLOCK_FORCE
//    <name> CLOCK_FORCE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x58021018) Clock Force </i>
//    <loc> ( (unsigned int)((SYSCONTROL_CLOCK_FORCE >> 0) & 0xFFFFFFFF), ((SYSCONTROL_CLOCK_FORCE = (SYSCONTROL_CLOCK_FORCE & ~(0xB0017UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xB0017) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCONTROL_CLOCK_FORCE_MGMT_CLKFORCE </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_CLOCK_FORCE_SYS_CLKFORCE </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_CLOCK_FORCE_DEBUG_CLKFORCE </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_CLOCK_FORCE_CPU0_CLKFORCE </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_CLOCK_FORCE_AONCLK_FORCE </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_CLOCK_FORCE_SYSCLK_FORCE </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_CLOCK_FORCE_CPU0CLK_FORCE </item>
//  </rtree>
//  


// --------------------  Register Item Address: SYSCONTROL_RESET_SYNDROME  ------------------------
// SVD Line: 1904

unsigned int SYSCONTROL_RESET_SYNDROME __AT (0x58021100);



// ------------------------  Field Item: SYSCONTROL_RESET_SYNDROME_PoR  ---------------------------
// SVD Line: 1912

//  <item> SFDITEM_FIELD__SYSCONTROL_RESET_SYNDROME_PoR
//    <name> PoR </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x58021100) Power-on </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_RESET_SYNDROME ) </loc>
//      <o.0..0> PoR
//    </check>
//  </item>
//  


// --------------------  Field Item: SYSCONTROL_RESET_SYNDROME_NSWDRSTREQ  ------------------------
// SVD Line: 1919

//  <item> SFDITEM_FIELD__SYSCONTROL_RESET_SYNDROME_NSWDRSTREQ
//    <name> NSWDRSTREQ </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x58021100) Non-Secure Watchdog Cold Reset Request. </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_RESET_SYNDROME ) </loc>
//      <o.1..1> NSWDRSTREQ
//    </check>
//  </item>
//  


// ---------------------  Field Item: SYSCONTROL_RESET_SYNDROME_SWDRSTREQ  ------------------------
// SVD Line: 1926

//  <item> SFDITEM_FIELD__SYSCONTROL_RESET_SYNDROME_SWDRSTREQ
//    <name> SWDRSTREQ </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x58021100) Secure Watchdog Cold Reset Request. </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_RESET_SYNDROME ) </loc>
//      <o.2..2> SWDRSTREQ
//    </check>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_RESET_SYNDROME_SLOWCLKWDRSTREQ  ---------------------
// SVD Line: 1933

//  <item> SFDITEM_FIELD__SYSCONTROL_RESET_SYNDROME_SLOWCLKWDRSTREQ
//    <name> SLOWCLKWDRSTREQ </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x58021100) SLOWCLK Watchdog Cold Reset Request. </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_RESET_SYNDROME ) </loc>
//      <o.3..3> SLOWCLKWDRSTREQ
//    </check>
//  </item>
//  


// ---------------------  Field Item: SYSCONTROL_RESET_SYNDROME_RESETREQ  -------------------------
// SVD Line: 1940

//  <item> SFDITEM_FIELD__SYSCONTROL_RESET_SYNDROME_RESETREQ
//    <name> RESETREQ </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x58021100) Subsystem Hardware Cold Reset Request Input. </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_RESET_SYNDROME ) </loc>
//      <o.4..4> RESETREQ
//    </check>
//  </item>
//  


// --------------------  Field Item: SYSCONTROL_RESET_SYNDROME_SWRESETREQ  ------------------------
// SVD Line: 1947

//  <item> SFDITEM_FIELD__SYSCONTROL_RESET_SYNDROME_SWRESETREQ
//    <name> SWRESETREQ </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x58021100) Software Cold Reset Request. </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_RESET_SYNDROME ) </loc>
//      <o.5..5> SWRESETREQ
//    </check>
//  </item>
//  


// -------------------  Field Item: SYSCONTROL_RESET_SYNDROME_HOSTRESETREQ  -----------------------
// SVD Line: 1954

//  <item> SFDITEM_FIELD__SYSCONTROL_RESET_SYNDROME_HOSTRESETREQ
//    <name> HOSTRESETREQ </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x58021100) Host Level Cold Reset Request Input. </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_RESET_SYNDROME ) </loc>
//      <o.7..7> HOSTRESETREQ
//    </check>
//  </item>
//  


// --------------------  Field Item: SYSCONTROL_RESET_SYNDROME_CPU0RSTREQ  ------------------------
// SVD Line: 1961

//  <item> SFDITEM_FIELD__SYSCONTROL_RESET_SYNDROME_CPU0RSTREQ
//    <name> CPU0RSTREQ </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x58021100) CPU 0 Warm Reset Request. </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_RESET_SYNDROME ) </loc>
//      <o.8..8> CPU0RSTREQ
//    </check>
//  </item>
//  


// --------------------  Field Item: SYSCONTROL_RESET_SYNDROME_CPU0LOCKUP  ------------------------
// SVD Line: 1968

//  <item> SFDITEM_FIELD__SYSCONTROL_RESET_SYNDROME_CPU0LOCKUP
//    <name> CPU0LOCKUP </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x58021100) CPU 0 Lockup Status. </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_RESET_SYNDROME ) </loc>
//      <o.12..12> CPU0LOCKUP
//    </check>
//  </item>
//  


// ------------------------  Register RTree: SYSCONTROL_RESET_SYNDROME  ---------------------------
// SVD Line: 1904

//  <rtree> SFDITEM_REG__SYSCONTROL_RESET_SYNDROME
//    <name> RESET_SYNDROME </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x58021100) Reset Syndrome </i>
//    <loc> ( (unsigned int)((SYSCONTROL_RESET_SYNDROME >> 0) & 0xFFFFFFFF), ((SYSCONTROL_RESET_SYNDROME = (SYSCONTROL_RESET_SYNDROME & ~(0x11BFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x11BF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCONTROL_RESET_SYNDROME_PoR </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_RESET_SYNDROME_NSWDRSTREQ </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_RESET_SYNDROME_SWDRSTREQ </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_RESET_SYNDROME_SLOWCLKWDRSTREQ </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_RESET_SYNDROME_RESETREQ </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_RESET_SYNDROME_SWRESETREQ </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_RESET_SYNDROME_HOSTRESETREQ </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_RESET_SYNDROME_CPU0RSTREQ </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_RESET_SYNDROME_CPU0LOCKUP </item>
//  </rtree>
//  


// ----------------------  Register Item Address: SYSCONTROL_RESET_MASK  --------------------------
// SVD Line: 1977

unsigned int SYSCONTROL_RESET_MASK __AT (0x58021104);



// ---------------------  Field Item: SYSCONTROL_RESET_MASK_NSWDRSTREQEN  -------------------------
// SVD Line: 1984

//  <item> SFDITEM_FIELD__SYSCONTROL_RESET_MASK_NSWDRSTREQEN
//    <name> NSWDRSTREQEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x58021104) \nEnable NON-SECURE WATCHDOG Reset\n0 : disabled = Disabled NON-SECURE WATCHDOG Reset\n1 : enabled = Enable NON-SECURE WATCHDOG Reset </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_RESET_MASK ) </loc>
//      <o.1..1> NSWDRSTREQEN
//        <0=> 0: disabled = Disabled NON-SECURE WATCHDOG Reset
//        <1=> 1: enabled = Enable NON-SECURE WATCHDOG Reset
//    </combo>
//  </item>
//  


// --------------------  Field Item: SYSCONTROL_RESET_MASK_CPU0RSTREQENRST  -----------------------
// SVD Line: 2003

//  <item> SFDITEM_FIELD__SYSCONTROL_RESET_MASK_CPU0RSTREQENRST
//    <name> CPU0RSTREQENRST </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x58021104) \nCPU 0 Warm Reset Request Enable.\n0 : disabled = Disabled Merging CPU 0 System Reset Request\n1 : enabled = Enable Merging CPU 0 System Reset Request </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_RESET_MASK ) </loc>
//      <o.8..8> CPU0RSTREQENRST
//        <0=> 0: disabled = Disabled Merging CPU 0 System Reset Request
//        <1=> 1: enabled = Enable Merging CPU 0 System Reset Request
//    </combo>
//  </item>
//  


// --------------------------  Register RTree: SYSCONTROL_RESET_MASK  -----------------------------
// SVD Line: 1977

//  <rtree> SFDITEM_REG__SYSCONTROL_RESET_MASK
//    <name> RESET_MASK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x58021104) Reset Mask </i>
//    <loc> ( (unsigned int)((SYSCONTROL_RESET_MASK >> 0) & 0xFFFFFFFF), ((SYSCONTROL_RESET_MASK = (SYSCONTROL_RESET_MASK & ~(0x102UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x102) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCONTROL_RESET_MASK_NSWDRSTREQEN </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_RESET_MASK_CPU0RSTREQENRST </item>
//  </rtree>
//  


// ------------------------  Register Item Address: SYSCONTROL_SWRESET  ---------------------------
// SVD Line: 2024

unsigned int SYSCONTROL_SWRESET __AT (0x58021108);



// ------------------------  Field Item: SYSCONTROL_SWRESET_SWRESETREQ  ---------------------------
// SVD Line: 2032

//  <item> SFDITEM_FIELD__SYSCONTROL_SWRESET_SWRESETREQ
//    <name> SWRESETREQ </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x58021108) High Active Software Reset Request </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_SWRESET ) </loc>
//      <o.9..9> SWRESETREQ
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: SYSCONTROL_SWRESET  -------------------------------
// SVD Line: 2024

//  <rtree> SFDITEM_REG__SYSCONTROL_SWRESET
//    <name> SWRESET </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x58021108) Software Reset </i>
//    <loc> ( (unsigned int)((SYSCONTROL_SWRESET >> 0) & 0xFFFFFFFF), ((SYSCONTROL_SWRESET = (SYSCONTROL_SWRESET & ~(0x200UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x200) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCONTROL_SWRESET_SWRESETREQ </item>
//  </rtree>
//  


// ------------------------  Register Item Address: SYSCONTROL_GRETREG  ---------------------------
// SVD Line: 2041

unsigned int SYSCONTROL_GRETREG __AT (0x5802110C);



// -------------------------  Field Item: SYSCONTROL_GRETREG_GRETREG  -----------------------------
// SVD Line: 2049

//  <item> SFDITEM_FIELD__SYSCONTROL_GRETREG_GRETREG
//    <name> GRETREG </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x5802110C) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned short)((SYSCONTROL_GRETREG >> 0) & 0xFFFF), ((SYSCONTROL_GRETREG = (SYSCONTROL_GRETREG & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: SYSCONTROL_GRETREG  -------------------------------
// SVD Line: 2041

//  <rtree> SFDITEM_REG__SYSCONTROL_GRETREG
//    <name> GRETREG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5802110C) General Purpose Retention </i>
//    <loc> ( (unsigned int)((SYSCONTROL_GRETREG >> 0) & 0xFFFFFFFF), ((SYSCONTROL_GRETREG = (SYSCONTROL_GRETREG & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCONTROL_GRETREG_GRETREG </item>
//  </rtree>
//  


// ----------------------  Register Item Address: SYSCONTROL_INITSVRTOR0  -------------------------
// SVD Line: 2058

unsigned int SYSCONTROL_INITSVRTOR0 __AT (0x58021110);



// --------------------  Field Item: SYSCONTROL_INITSVRTOR0_INITSVTOR0LOCK  -----------------------
// SVD Line: 2065

//  <item> SFDITEM_FIELD__SYSCONTROL_INITSVRTOR0_INITSVTOR0LOCK
//    <name> INITSVTOR0LOCK </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x58021110) Lock INITSVTOR0. When set to 1, will stop any further writes to INITSVTOR0 and INITSVTOR0LOCK fields. Cleared only by Warm reset. </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_INITSVRTOR0 ) </loc>
//      <o.0..0> INITSVTOR0LOCK
//    </check>
//  </item>
//  


// ----------------------  Field Item: SYSCONTROL_INITSVRTOR0_INITSVTOR0  -------------------------
// SVD Line: 2072

//  <item> SFDITEM_FIELD__SYSCONTROL_INITSVRTOR0_INITSVTOR0
//    <name> INITSVTOR0 </name>
//    <rw> 
//    <i> [Bits 31..7] RW (@ 0x58021110) Default Secure Vector table offset at reset for CPU 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCONTROL_INITSVRTOR0 >> 7) & 0x1FFFFFF), ((SYSCONTROL_INITSVRTOR0 = (SYSCONTROL_INITSVRTOR0 & ~(0x1FFFFFFUL << 7 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFFFFF) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register RTree: SYSCONTROL_INITSVRTOR0  -----------------------------
// SVD Line: 2058

//  <rtree> SFDITEM_REG__SYSCONTROL_INITSVRTOR0
//    <name> INITSVRTOR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x58021110) Initial Secure Reset Vector Register For CPU 0 </i>
//    <loc> ( (unsigned int)((SYSCONTROL_INITSVRTOR0 >> 0) & 0xFFFFFFFF), ((SYSCONTROL_INITSVRTOR0 = (SYSCONTROL_INITSVRTOR0 & ~(0xFFFFFF81UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF81) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCONTROL_INITSVRTOR0_INITSVTOR0LOCK </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_INITSVRTOR0_INITSVTOR0 </item>
//  </rtree>
//  


// ------------------------  Register Item Address: SYSCONTROL_CPUWAIT  ---------------------------
// SVD Line: 2081

unsigned int SYSCONTROL_CPUWAIT __AT (0x58021120);



// -------------------------  Field Item: SYSCONTROL_CPUWAIT_CPU0WAIT  ----------------------------
// SVD Line: 2088

//  <item> SFDITEM_FIELD__SYSCONTROL_CPUWAIT_CPU0WAIT
//    <name> CPU0WAIT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x58021120) \nCPU 0 waits at boot and whether CPU1 powers up\n0 : normally_or_powerup = CPU0 boot normally. From Power ON reset, nSRST reset or Watchdog Reset, CPU 1 powers up\n1 : wait_or_no_powerup = CPU0 wait. From Power ON reset, nSRST reset or Watchdog Reset, CPU 1 do not power up </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_CPUWAIT ) </loc>
//      <o.0..0> CPU0WAIT
//        <0=> 0: normally_or_powerup = CPU0 boot normally. From Power ON reset, nSRST reset or Watchdog Reset, CPU 1 powers up
//        <1=> 1: wait_or_no_powerup = CPU0 wait. From Power ON reset, nSRST reset or Watchdog Reset, CPU 1 do not power up
//    </combo>
//  </item>
//  


// ---------------------------  Register RTree: SYSCONTROL_CPUWAIT  -------------------------------
// SVD Line: 2081

//  <rtree> SFDITEM_REG__SYSCONTROL_CPUWAIT
//    <name> CPUWAIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x58021120) CPU Boot wait control after reset </i>
//    <loc> ( (unsigned int)((SYSCONTROL_CPUWAIT >> 0) & 0xFFFFFFFF), ((SYSCONTROL_CPUWAIT = (SYSCONTROL_CPUWAIT & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCONTROL_CPUWAIT_CPU0WAIT </item>
//  </rtree>
//  


// ----------------------  Register Item Address: SYSCONTROL_NMI_ENABLE  --------------------------
// SVD Line: 2109

unsigned int SYSCONTROL_NMI_ENABLE __AT (0x58021124);



// ------------------  Field Item: SYSCONTROL_NMI_ENABLE_CPU0_INTNMI_ENABLE  ----------------------
// SVD Line: 2116

//  <item> SFDITEM_FIELD__SYSCONTROL_NMI_ENABLE_CPU0_INTNMI_ENABLE
//    <name> CPU0_INTNMI_ENABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x58021124) \nCPU0 Internally Sourced NMI Enable\n0 : disabled = CPU0 Internally Sourced NMI Disabled\n1 : enable = CPU0 Internally Sourced NMI Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_NMI_ENABLE ) </loc>
//      <o.0..0> CPU0_INTNMI_ENABLE
//        <0=> 0: disabled = CPU0 Internally Sourced NMI Disabled
//        <1=> 1: enable = CPU0 Internally Sourced NMI Enabled
//    </combo>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_NMI_ENABLE_CPU1_INTNMI_ENABLE  ----------------------
// SVD Line: 2135

//  <item> SFDITEM_FIELD__SYSCONTROL_NMI_ENABLE_CPU1_INTNMI_ENABLE
//    <name> CPU1_INTNMI_ENABLE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x58021124) \nCPU1 Internally Sourced NMI Enable\n0 : disabled = CPU1 Internally Sourced NMI Disabled\n1 : enable = CPU1 Internally Sourced NMI Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_NMI_ENABLE ) </loc>
//      <o.1..1> CPU1_INTNMI_ENABLE
//        <0=> 0: disabled = CPU1 Internally Sourced NMI Disabled
//        <1=> 1: enable = CPU1 Internally Sourced NMI Enabled
//    </combo>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_NMI_ENABLE_CPU0_EXPNMI_ENABLE  ----------------------
// SVD Line: 2154

//  <item> SFDITEM_FIELD__SYSCONTROL_NMI_ENABLE_CPU0_EXPNMI_ENABLE
//    <name> CPU0_EXPNMI_ENABLE </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x58021124) \nCPU0 Externally Sourced NMI Enable\n0 : disabled = CPU0 Externally Sourced NMI Disabled\n1 : enable = CPU0 Externally Sourced NMI Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_NMI_ENABLE ) </loc>
//      <o.16..16> CPU0_EXPNMI_ENABLE
//        <0=> 0: disabled = CPU0 Externally Sourced NMI Disabled
//        <1=> 1: enable = CPU0 Externally Sourced NMI Enabled
//    </combo>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_NMI_ENABLE_CPU1_EXPNMI_ENABLE  ----------------------
// SVD Line: 2173

//  <item> SFDITEM_FIELD__SYSCONTROL_NMI_ENABLE_CPU1_EXPNMI_ENABLE
//    <name> CPU1_EXPNMI_ENABLE </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x58021124) \nCPU1 Externally Sourced NMI Enable\n0 : disabled = CPU1 Externally Sourced NMI Disabled\n1 : enable = CPU1 Externally Sourced NMI Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_NMI_ENABLE ) </loc>
//      <o.17..17> CPU1_EXPNMI_ENABLE
//        <0=> 0: disabled = CPU1 Externally Sourced NMI Disabled
//        <1=> 1: enable = CPU1 Externally Sourced NMI Enabled
//    </combo>
//  </item>
//  


// --------------------------  Register RTree: SYSCONTROL_NMI_ENABLE  -----------------------------
// SVD Line: 2109

//  <rtree> SFDITEM_REG__SYSCONTROL_NMI_ENABLE
//    <name> NMI_ENABLE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x58021124) NMI Enable Register </i>
//    <loc> ( (unsigned int)((SYSCONTROL_NMI_ENABLE >> 0) & 0xFFFFFFFF), ((SYSCONTROL_NMI_ENABLE = (SYSCONTROL_NMI_ENABLE & ~(0x30003UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x30003) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCONTROL_NMI_ENABLE_CPU0_INTNMI_ENABLE </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_NMI_ENABLE_CPU1_INTNMI_ENABLE </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_NMI_ENABLE_CPU0_EXPNMI_ENABLE </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_NMI_ENABLE_CPU1_EXPNMI_ENABLE </item>
//  </rtree>
//  


// ------------------------  Register Item Address: SYSCONTROL_PWRCTRL  ---------------------------
// SVD Line: 2194

unsigned int SYSCONTROL_PWRCTRL __AT (0x580211FC);



// --------------------  Field Item: SYSCONTROL_PWRCTRL_PPU_ACCESS_UNLOCK  ------------------------
// SVD Line: 2202

//  <item> SFDITEM_FIELD__SYSCONTROL_PWRCTRL_PPU_ACCESS_UNLOCK
//    <name> PPU_ACCESS_UNLOCK </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x580211FC) PPU_ACCESS_FILTER write unlock. When 1, Both PPU_ACCESS_FILTER and this register bits can be written. When set to '0' the PPU_ACCESS_FILTER and this register bit will no longer writable, and PPU_ACCESS_UNLOCK will stay '0'. </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_PWRCTRL ) </loc>
//      <o.0..0> PPU_ACCESS_UNLOCK
//    </check>
//  </item>
//  


// --------------------  Field Item: SYSCONTROL_PWRCTRL_PPU_ACCESS_FILTER  ------------------------
// SVD Line: 2209

//  <item> SFDITEM_FIELD__SYSCONTROL_PWRCTRL_PPU_ACCESS_FILTER
//    <name> PPU_ACCESS_FILTER </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x580211FC) Filter Access to PPU Registers. When set to '1' only key PPU interrupt handling registers are open to write access, and all other PPU registers are read only. When set to '0' releases all PPU register to full access. </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_PWRCTRL ) </loc>
//      <o.1..1> PPU_ACCESS_FILTER
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: SYSCONTROL_PWRCTRL  -------------------------------
// SVD Line: 2194

//  <rtree> SFDITEM_REG__SYSCONTROL_PWRCTRL
//    <name> PWRCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x580211FC) Power Configuration and Control. </i>
//    <loc> ( (unsigned int)((SYSCONTROL_PWRCTRL >> 0) & 0xFFFFFFFF), ((SYSCONTROL_PWRCTRL = (SYSCONTROL_PWRCTRL & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCONTROL_PWRCTRL_PPU_ACCESS_UNLOCK </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PWRCTRL_PPU_ACCESS_FILTER </item>
//  </rtree>
//  


// -------------------  Register Item Address: SYSCONTROL_PDCM_PD_SYS_SENSE  ----------------------
// SVD Line: 2218

unsigned int SYSCONTROL_PDCM_PD_SYS_SENSE __AT (0x58021200);



// ------------------  Field Item: SYSCONTROL_PDCM_PD_SYS_SENSE_S_PD_SYS_ON  ----------------------
// SVD Line: 2225

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_SYS_SENSE_S_PD_SYS_ON
//    <name> S_PD_SYS_ON </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x58021200) \nEnable PD_SYS ON Sensitivity\n0 : Reserved - do not use\n1 : enable = Keep PD_SYS awake after powered ON </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_SYS_SENSE ) </loc>
//      <o.0..0> S_PD_SYS_ON
//        <0=> 0: 
//        <1=> 1: enable = Keep PD_SYS awake after powered ON
//    </combo>
//  </item>
//  


// ----------------  Field Item: SYSCONTROL_PDCM_PD_SYS_SENSE_S_PD_CPU0CORE_ON  -------------------
// SVD Line: 2239

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_SYS_SENSE_S_PD_CPU0CORE_ON
//    <name> S_PD_CPU0CORE_ON </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x58021200) \nTied to HIGH\n0 : Reserved - do not use\n1 : high = PD_SYS always tries to stay ON if PD_CPU0CORE is ON </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_SYS_SENSE ) </loc>
//      <o.1..1> S_PD_CPU0CORE_ON
//        <0=> 0: 
//        <1=> 1: high = PD_SYS always tries to stay ON if PD_CPU0CORE is ON
//    </combo>
//  </item>
//  


// -----------------  Field Item: SYSCONTROL_PDCM_PD_SYS_SENSE_S_PD_DEBUG_ON  ---------------------
// SVD Line: 2253

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_SYS_SENSE_S_PD_DEBUG_ON
//    <name> S_PD_DEBUG_ON </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x58021200) Tied to LOW </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_SYS_SENSE ) </loc>
//      <o.13..13> S_PD_DEBUG_ON
//    </check>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_PDCM_PD_SYS_SENSE_S_PDCMQREQ0  ----------------------
// SVD Line: 2260

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_SYS_SENSE_S_PDCMQREQ0
//    <name> S_PDCMQREQ0 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x58021200) \nEnable PDCMQREQn[0] signal Sensitivity\n0 : disabled = Disable PDCMQREQn[0] signal Sensitivity.\n1 : enable = Enable PDCMQREQn[0] signal Sensitivity. </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_SYS_SENSE ) </loc>
//      <o.16..16> S_PDCMQREQ0
//        <0=> 0: disabled = Disable PDCMQREQn[0] signal Sensitivity.
//        <1=> 1: enable = Enable PDCMQREQn[0] signal Sensitivity.
//    </combo>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_PDCM_PD_SYS_SENSE_S_PDCMQREQ1  ----------------------
// SVD Line: 2279

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_SYS_SENSE_S_PDCMQREQ1
//    <name> S_PDCMQREQ1 </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x58021200) \nEnable PDCMQREQn[1] signal Sensitivity\n0 : disabled = Disable PDCMQREQn[1] signal Sensitivity.\n1 : enable = Enable PDCMQREQn[1] signal Sensitivity. </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_SYS_SENSE ) </loc>
//      <o.17..17> S_PDCMQREQ1
//        <0=> 0: disabled = Disable PDCMQREQn[1] signal Sensitivity.
//        <1=> 1: enable = Enable PDCMQREQn[1] signal Sensitivity.
//    </combo>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_PDCM_PD_SYS_SENSE_S_PDCMQREQ2  ----------------------
// SVD Line: 2298

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_SYS_SENSE_S_PDCMQREQ2
//    <name> S_PDCMQREQ2 </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x58021200) \nEnable PDCMQREQn[2] signal Sensitivity\n0 : disabled = Disable PDCMQREQn[2] signal Sensitivity.\n1 : enable = Enable PDCMQREQn[2] signal Sensitivity. </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_SYS_SENSE ) </loc>
//      <o.18..18> S_PDCMQREQ2
//        <0=> 0: disabled = Disable PDCMQREQn[2] signal Sensitivity.
//        <1=> 1: enable = Enable PDCMQREQn[2] signal Sensitivity.
//    </combo>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_PDCM_PD_SYS_SENSE_S_PDCMQREQ3  ----------------------
// SVD Line: 2317

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_SYS_SENSE_S_PDCMQREQ3
//    <name> S_PDCMQREQ3 </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x58021200) \nEnable PDCMQREQn[3] signal Sensitivity\n0 : disabled = Disable PDCMQREQn[3] signal Sensitivity.\n1 : enable = Enable PDCMQREQn[3] signal Sensitivity. </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_SYS_SENSE ) </loc>
//      <o.19..19> S_PDCMQREQ3
//        <0=> 0: disabled = Disable PDCMQREQn[3] signal Sensitivity.
//        <1=> 1: enable = Enable PDCMQREQn[3] signal Sensitivity.
//    </combo>
//  </item>
//  


// -----------------  Field Item: SYSCONTROL_PDCM_PD_SYS_SENSE_MIN_PWR_STATE  ---------------------
// SVD Line: 2336

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_SYS_SENSE_MIN_PWR_STATE
//    <name> MIN_PWR_STATE </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x58021200) Defines the Minimum Power State, when PD_SYS is trying to enter a lower power state. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCONTROL_PDCM_PD_SYS_SENSE >> 30) & 0x3), ((SYSCONTROL_PDCM_PD_SYS_SENSE = (SYSCONTROL_PDCM_PD_SYS_SENSE & ~(0x3UL << 30 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 30 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register RTree: SYSCONTROL_PDCM_PD_SYS_SENSE  --------------------------
// SVD Line: 2218

//  <rtree> SFDITEM_REG__SYSCONTROL_PDCM_PD_SYS_SENSE
//    <name> PDCM_PD_SYS_SENSE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x58021200) External Wakeup Control </i>
//    <loc> ( (unsigned int)((SYSCONTROL_PDCM_PD_SYS_SENSE >> 0) & 0xFFFFFFFF), ((SYSCONTROL_PDCM_PD_SYS_SENSE = (SYSCONTROL_PDCM_PD_SYS_SENSE & ~(0xC00F0001UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC00F0001) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_SYS_SENSE_S_PD_SYS_ON </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_SYS_SENSE_S_PD_CPU0CORE_ON </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_SYS_SENSE_S_PD_DEBUG_ON </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_SYS_SENSE_S_PDCMQREQ0 </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_SYS_SENSE_S_PDCMQREQ1 </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_SYS_SENSE_S_PDCMQREQ2 </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_SYS_SENSE_S_PDCMQREQ3 </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_SYS_SENSE_MIN_PWR_STATE </item>
//  </rtree>
//  


// ------------------  Register Item Address: SYSCONTROL_PDCM_PD_CPU0_SENSE  ----------------------
// SVD Line: 2345

unsigned int SYSCONTROL_PDCM_PD_CPU0_SENSE __AT (0x58021204);



// ------------------  Field Item: SYSCONTROL_PDCM_PD_CPU0_SENSE_S_PD_SYS_ON  ---------------------
// SVD Line: 2353

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_CPU0_SENSE_S_PD_SYS_ON
//    <name> S_PD_SYS_ON </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x58021204) \nEnable PD_SYS ON Sensitivity\n0 : Reserved - do not use\n1 : enable = Keep PD_SYS awake after powered ON </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_CPU0_SENSE ) </loc>
//      <o.0..0> S_PD_SYS_ON
//        <0=> 0: 
//        <1=> 1: enable = Keep PD_SYS awake after powered ON
//    </combo>
//  </item>
//  


// -----------------  Field Item: SYSCONTROL_PDCM_PD_CPU0_SENSE_S_PD_CPU0_ON  ---------------------
// SVD Line: 2367

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_CPU0_SENSE_S_PD_CPU0_ON
//    <name> S_PD_CPU0_ON </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x58021204) Tied to LOW </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_CPU0_SENSE ) </loc>
//      <o.1..1> S_PD_CPU0_ON
//    </check>
//  </item>
//  


// -----------------  Field Item: SYSCONTROL_PDCM_PD_CPU0_SENSE_S_PD_DEBUG_ON  --------------------
// SVD Line: 2374

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_CPU0_SENSE_S_PD_DEBUG_ON
//    <name> S_PD_DEBUG_ON </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x58021204) Tied to LOW </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_CPU0_SENSE ) </loc>
//      <o.13..13> S_PD_DEBUG_ON
//    </check>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_PDCM_PD_CPU0_SENSE_S_PDCMQREQ0  ---------------------
// SVD Line: 2381

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_CPU0_SENSE_S_PDCMQREQ0
//    <name> S_PDCMQREQ0 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x58021204) PDCMQREQn[0] Tied to LOW </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_CPU0_SENSE ) </loc>
//      <o.16..16> S_PDCMQREQ0
//    </check>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_PDCM_PD_CPU0_SENSE_S_PDCMQREQ1  ---------------------
// SVD Line: 2388

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_CPU0_SENSE_S_PDCMQREQ1
//    <name> S_PDCMQREQ1 </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x58021204) PDCMQREQn[1] Tied to LOW </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_CPU0_SENSE ) </loc>
//      <o.17..17> S_PDCMQREQ1
//    </check>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_PDCM_PD_CPU0_SENSE_S_PDCMQREQ2  ---------------------
// SVD Line: 2395

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_CPU0_SENSE_S_PDCMQREQ2
//    <name> S_PDCMQREQ2 </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x58021204) PDCMQREQn[2] Tied to LOW </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_CPU0_SENSE ) </loc>
//      <o.18..18> S_PDCMQREQ2
//    </check>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_PDCM_PD_CPU0_SENSE_S_PDCMQREQ3  ---------------------
// SVD Line: 2402

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_CPU0_SENSE_S_PDCMQREQ3
//    <name> S_PDCMQREQ3 </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x58021204) PDCMQREQn[3] Tied to LOW </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_CPU0_SENSE ) </loc>
//      <o.19..19> S_PDCMQREQ3
//    </check>
//  </item>
//  


// ----------------------  Register RTree: SYSCONTROL_PDCM_PD_CPU0_SENSE  -------------------------
// SVD Line: 2345

//  <rtree> SFDITEM_REG__SYSCONTROL_PDCM_PD_CPU0_SENSE
//    <name> PDCM_PD_CPU0_SENSE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x58021204) PDCM PD_CPU0 Sensitivity. </i>
//    <loc> ( (unsigned int)((SYSCONTROL_PDCM_PD_CPU0_SENSE >> 0) & 0xFFFFFFFF), ((SYSCONTROL_PDCM_PD_CPU0_SENSE = (SYSCONTROL_PDCM_PD_CPU0_SENSE & ~(0xF0001UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF0001) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_CPU0_SENSE_S_PD_SYS_ON </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_CPU0_SENSE_S_PD_CPU0_ON </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_CPU0_SENSE_S_PD_DEBUG_ON </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_CPU0_SENSE_S_PDCMQREQ0 </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_CPU0_SENSE_S_PDCMQREQ1 </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_CPU0_SENSE_S_PDCMQREQ2 </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_CPU0_SENSE_S_PDCMQREQ3 </item>
//  </rtree>
//  


// ------------------  Register Item Address: SYSCONTROL_PDCM_PD_VMR0_SENSE  ----------------------
// SVD Line: 2411

unsigned int SYSCONTROL_PDCM_PD_VMR0_SENSE __AT (0x58021214);



// ------------------  Field Item: SYSCONTROL_PDCM_PD_VMR0_SENSE_S_PD_SYS_ON  ---------------------
// SVD Line: 2419

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR0_SENSE_S_PD_SYS_ON
//    <name> S_PD_SYS_ON </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x58021214) \nEnable PD_SYS ON Sensitivity\n0 : Reserved - do not use\n1 : enable = Keep PD_SYS awake after powered ON </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_VMR0_SENSE ) </loc>
//      <o.0..0> S_PD_SYS_ON
//        <0=> 0: 
//        <1=> 1: enable = Keep PD_SYS awake after powered ON
//    </combo>
//  </item>
//  


// -----------------  Field Item: SYSCONTROL_PDCM_PD_VMR0_SENSE_S_PD_CPU0_ON  ---------------------
// SVD Line: 2433

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR0_SENSE_S_PD_CPU0_ON
//    <name> S_PD_CPU0_ON </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x58021214) \nTied to HIGH\n0 : Reserved - do not use\n1 : high = PD_SYS always tries to stay ON if PD_CPU0CORE is ON </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_VMR0_SENSE ) </loc>
//      <o.1..1> S_PD_CPU0_ON
//        <0=> 0: 
//        <1=> 1: high = PD_SYS always tries to stay ON if PD_CPU0CORE is ON
//    </combo>
//  </item>
//  


// -----------------  Field Item: SYSCONTROL_PDCM_PD_VMR0_SENSE_S_PD_DEBUG_ON  --------------------
// SVD Line: 2447

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR0_SENSE_S_PD_DEBUG_ON
//    <name> S_PD_DEBUG_ON </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x58021214) Tied to LOW </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_VMR0_SENSE ) </loc>
//      <o.13..13> S_PD_DEBUG_ON
//    </check>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_PDCM_PD_VMR0_SENSE_S_PDCMQREQ0  ---------------------
// SVD Line: 2454

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR0_SENSE_S_PDCMQREQ0
//    <name> S_PDCMQREQ0 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x58021214) \nEnable PDCMQREQn[0] signal Sensitivity\n0 : disabled = Disable PDCMQREQn[0] signal Sensitivity.\n1 : enable = Enable PDCMQREQn[0] signal Sensitivity. </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_VMR0_SENSE ) </loc>
//      <o.16..16> S_PDCMQREQ0
//        <0=> 0: disabled = Disable PDCMQREQn[0] signal Sensitivity.
//        <1=> 1: enable = Enable PDCMQREQn[0] signal Sensitivity.
//    </combo>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_PDCM_PD_VMR0_SENSE_S_PDCMQREQ1  ---------------------
// SVD Line: 2473

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR0_SENSE_S_PDCMQREQ1
//    <name> S_PDCMQREQ1 </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x58021214) \nEnable PDCMQREQn[1] signal Sensitivity\n0 : disabled = Disable PDCMQREQn[1] signal Sensitivity.\n1 : enable = Enable PDCMQREQn[1] signal Sensitivity. </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_VMR0_SENSE ) </loc>
//      <o.17..17> S_PDCMQREQ1
//        <0=> 0: disabled = Disable PDCMQREQn[1] signal Sensitivity.
//        <1=> 1: enable = Enable PDCMQREQn[1] signal Sensitivity.
//    </combo>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_PDCM_PD_VMR0_SENSE_S_PDCMQREQ2  ---------------------
// SVD Line: 2492

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR0_SENSE_S_PDCMQREQ2
//    <name> S_PDCMQREQ2 </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x58021214) \nEnable PDCMQREQn[2] signal Sensitivity\n0 : disabled = Disable PDCMQREQn[2] signal Sensitivity.\n1 : enable = Enable PDCMQREQn[2] signal Sensitivity. </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_VMR0_SENSE ) </loc>
//      <o.18..18> S_PDCMQREQ2
//        <0=> 0: disabled = Disable PDCMQREQn[2] signal Sensitivity.
//        <1=> 1: enable = Enable PDCMQREQn[2] signal Sensitivity.
//    </combo>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_PDCM_PD_VMR0_SENSE_S_PDCMQREQ3  ---------------------
// SVD Line: 2511

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR0_SENSE_S_PDCMQREQ3
//    <name> S_PDCMQREQ3 </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x58021214) \nEnable PDCMQREQn[3] signal Sensitivity\n0 : disabled = Disable PDCMQREQn[3] signal Sensitivity.\n1 : enable = Enable PDCMQREQn[3] signal Sensitivity. </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_VMR0_SENSE ) </loc>
//      <o.19..19> S_PDCMQREQ3
//        <0=> 0: disabled = Disable PDCMQREQn[3] signal Sensitivity.
//        <1=> 1: enable = Enable PDCMQREQn[3] signal Sensitivity.
//    </combo>
//  </item>
//  


// -----------------  Field Item: SYSCONTROL_PDCM_PD_VMR0_SENSE_MIN_PWR_STATE  --------------------
// SVD Line: 2530

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR0_SENSE_MIN_PWR_STATE
//    <name> MIN_PWR_STATE </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x58021214) Defines the Minimum Power State, when PD_SYS is trying to enter a lower power state. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCONTROL_PDCM_PD_VMR0_SENSE >> 30) & 0x3), ((SYSCONTROL_PDCM_PD_VMR0_SENSE = (SYSCONTROL_PDCM_PD_VMR0_SENSE & ~(0x3UL << 30 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 30 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register RTree: SYSCONTROL_PDCM_PD_VMR0_SENSE  -------------------------
// SVD Line: 2411

//  <rtree> SFDITEM_REG__SYSCONTROL_PDCM_PD_VMR0_SENSE
//    <name> PDCM_PD_VMR0_SENSE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x58021214) PDCM PD_VMR0 Sensitivity. </i>
//    <loc> ( (unsigned int)((SYSCONTROL_PDCM_PD_VMR0_SENSE >> 0) & 0xFFFFFFFF), ((SYSCONTROL_PDCM_PD_VMR0_SENSE = (SYSCONTROL_PDCM_PD_VMR0_SENSE & ~(0xC00F0001UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC00F0001) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR0_SENSE_S_PD_SYS_ON </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR0_SENSE_S_PD_CPU0_ON </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR0_SENSE_S_PD_DEBUG_ON </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR0_SENSE_S_PDCMQREQ0 </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR0_SENSE_S_PDCMQREQ1 </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR0_SENSE_S_PDCMQREQ2 </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR0_SENSE_S_PDCMQREQ3 </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR0_SENSE_MIN_PWR_STATE </item>
//  </rtree>
//  


// ------------------  Register Item Address: SYSCONTROL_PDCM_PD_VMR1_SENSE  ----------------------
// SVD Line: 2539

unsigned int SYSCONTROL_PDCM_PD_VMR1_SENSE __AT (0x58021218);



// ------------------  Field Item: SYSCONTROL_PDCM_PD_VMR1_SENSE_S_PD_SYS_ON  ---------------------
// SVD Line: 2547

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR1_SENSE_S_PD_SYS_ON
//    <name> S_PD_SYS_ON </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x58021218) \nEnable PD_SYS ON Sensitivity\n0 : Reserved - do not use\n1 : enable = Keep PD_SYS awake after powered ON </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_VMR1_SENSE ) </loc>
//      <o.0..0> S_PD_SYS_ON
//        <0=> 0: 
//        <1=> 1: enable = Keep PD_SYS awake after powered ON
//    </combo>
//  </item>
//  


// -----------------  Field Item: SYSCONTROL_PDCM_PD_VMR1_SENSE_S_PD_CPU0_ON  ---------------------
// SVD Line: 2561

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR1_SENSE_S_PD_CPU0_ON
//    <name> S_PD_CPU0_ON </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x58021218) \nTied to HIGH\n0 : Reserved - do not use\n1 : high = PD_SYS always tries to stay ON if PD_CPU0CORE is ON </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_VMR1_SENSE ) </loc>
//      <o.1..1> S_PD_CPU0_ON
//        <0=> 0: 
//        <1=> 1: high = PD_SYS always tries to stay ON if PD_CPU0CORE is ON
//    </combo>
//  </item>
//  


// -----------------  Field Item: SYSCONTROL_PDCM_PD_VMR1_SENSE_S_PD_DEBUG_ON  --------------------
// SVD Line: 2575

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR1_SENSE_S_PD_DEBUG_ON
//    <name> S_PD_DEBUG_ON </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x58021218) Tied to LOW </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_VMR1_SENSE ) </loc>
//      <o.13..13> S_PD_DEBUG_ON
//    </check>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_PDCM_PD_VMR1_SENSE_S_PDCMQREQ0  ---------------------
// SVD Line: 2582

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR1_SENSE_S_PDCMQREQ0
//    <name> S_PDCMQREQ0 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x58021218) \nEnable PDCMQREQn[0] signal Sensitivity\n0 : disabled = Disable PDCMQREQn[0] signal Sensitivity.\n1 : enable = Enable PDCMQREQn[0] signal Sensitivity. </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_VMR1_SENSE ) </loc>
//      <o.16..16> S_PDCMQREQ0
//        <0=> 0: disabled = Disable PDCMQREQn[0] signal Sensitivity.
//        <1=> 1: enable = Enable PDCMQREQn[0] signal Sensitivity.
//    </combo>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_PDCM_PD_VMR1_SENSE_S_PDCMQREQ1  ---------------------
// SVD Line: 2601

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR1_SENSE_S_PDCMQREQ1
//    <name> S_PDCMQREQ1 </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x58021218) \nEnable PDCMQREQn[1] signal Sensitivity\n0 : disabled = Disable PDCMQREQn[1] signal Sensitivity.\n1 : enable = Enable PDCMQREQn[1] signal Sensitivity. </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_VMR1_SENSE ) </loc>
//      <o.17..17> S_PDCMQREQ1
//        <0=> 0: disabled = Disable PDCMQREQn[1] signal Sensitivity.
//        <1=> 1: enable = Enable PDCMQREQn[1] signal Sensitivity.
//    </combo>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_PDCM_PD_VMR1_SENSE_S_PDCMQREQ2  ---------------------
// SVD Line: 2620

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR1_SENSE_S_PDCMQREQ2
//    <name> S_PDCMQREQ2 </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x58021218) \nEnable PDCMQREQn[2] signal Sensitivity\n0 : disabled = Disable PDCMQREQn[2] signal Sensitivity.\n1 : enable = Enable PDCMQREQn[2] signal Sensitivity. </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_VMR1_SENSE ) </loc>
//      <o.18..18> S_PDCMQREQ2
//        <0=> 0: disabled = Disable PDCMQREQn[2] signal Sensitivity.
//        <1=> 1: enable = Enable PDCMQREQn[2] signal Sensitivity.
//    </combo>
//  </item>
//  


// ------------------  Field Item: SYSCONTROL_PDCM_PD_VMR1_SENSE_S_PDCMQREQ3  ---------------------
// SVD Line: 2639

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR1_SENSE_S_PDCMQREQ3
//    <name> S_PDCMQREQ3 </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x58021218) \nEnable PDCMQREQn[3] signal Sensitivity\n0 : disabled = Disable PDCMQREQn[3] signal Sensitivity.\n1 : enable = Enable PDCMQREQn[3] signal Sensitivity. </i>
//    <combo> 
//      <loc> ( (unsigned int) SYSCONTROL_PDCM_PD_VMR1_SENSE ) </loc>
//      <o.19..19> S_PDCMQREQ3
//        <0=> 0: disabled = Disable PDCMQREQn[3] signal Sensitivity.
//        <1=> 1: enable = Enable PDCMQREQn[3] signal Sensitivity.
//    </combo>
//  </item>
//  


// -----------------  Field Item: SYSCONTROL_PDCM_PD_VMR1_SENSE_MIN_PWR_STATE  --------------------
// SVD Line: 2658

//  <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR1_SENSE_MIN_PWR_STATE
//    <name> MIN_PWR_STATE </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x58021218) Defines the Minimum Power State, when PD_SYS is trying to enter a lower power state. </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCONTROL_PDCM_PD_VMR1_SENSE >> 30) & 0x3), ((SYSCONTROL_PDCM_PD_VMR1_SENSE = (SYSCONTROL_PDCM_PD_VMR1_SENSE & ~(0x3UL << 30 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 30 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register RTree: SYSCONTROL_PDCM_PD_VMR1_SENSE  -------------------------
// SVD Line: 2539

//  <rtree> SFDITEM_REG__SYSCONTROL_PDCM_PD_VMR1_SENSE
//    <name> PDCM_PD_VMR1_SENSE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x58021218) PDCM PD_VMR1 Sensitivity. </i>
//    <loc> ( (unsigned int)((SYSCONTROL_PDCM_PD_VMR1_SENSE >> 0) & 0xFFFFFFFF), ((SYSCONTROL_PDCM_PD_VMR1_SENSE = (SYSCONTROL_PDCM_PD_VMR1_SENSE & ~(0xC00F0001UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC00F0001) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR1_SENSE_S_PD_SYS_ON </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR1_SENSE_S_PD_CPU0_ON </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR1_SENSE_S_PD_DEBUG_ON </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR1_SENSE_S_PDCMQREQ0 </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR1_SENSE_S_PDCMQREQ1 </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR1_SENSE_S_PDCMQREQ2 </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR1_SENSE_S_PDCMQREQ3 </item>
//    <item> SFDITEM_FIELD__SYSCONTROL_PDCM_PD_VMR1_SENSE_MIN_PWR_STATE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SYSCONTROL_PIDR4  ----------------------------
// SVD Line: 2667

unsigned int SYSCONTROL_PIDR4 __AT (0x58021FD0);



// -----------------------------  Register Item: SYSCONTROL_PIDR4  --------------------------------
// SVD Line: 2667

//  <item> SFDITEM_REG__SYSCONTROL_PIDR4
//    <name> PIDR4 </name>
//    <i> [Bits 31..0] RO (@ 0x58021FD0) Peripheral ID 4 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCONTROL_PIDR4 >> 0) & 0xFFFFFFFF), ((SYSCONTROL_PIDR4 = (SYSCONTROL_PIDR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SYSCONTROL_PIDR0  ----------------------------
// SVD Line: 2675

unsigned int SYSCONTROL_PIDR0 __AT (0x58021FE0);



// -----------------------------  Register Item: SYSCONTROL_PIDR0  --------------------------------
// SVD Line: 2675

//  <item> SFDITEM_REG__SYSCONTROL_PIDR0
//    <name> PIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x58021FE0) Peripheral ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCONTROL_PIDR0 >> 0) & 0xFFFFFFFF), ((SYSCONTROL_PIDR0 = (SYSCONTROL_PIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SYSCONTROL_PIDR1  ----------------------------
// SVD Line: 2683

unsigned int SYSCONTROL_PIDR1 __AT (0x58021FE4);



// -----------------------------  Register Item: SYSCONTROL_PIDR1  --------------------------------
// SVD Line: 2683

//  <item> SFDITEM_REG__SYSCONTROL_PIDR1
//    <name> PIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x58021FE4) Peripheral ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCONTROL_PIDR1 >> 0) & 0xFFFFFFFF), ((SYSCONTROL_PIDR1 = (SYSCONTROL_PIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SYSCONTROL_PIDR2  ----------------------------
// SVD Line: 2691

unsigned int SYSCONTROL_PIDR2 __AT (0x58021FE8);



// -----------------------------  Register Item: SYSCONTROL_PIDR2  --------------------------------
// SVD Line: 2691

//  <item> SFDITEM_REG__SYSCONTROL_PIDR2
//    <name> PIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x58021FE8) Peripheral ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCONTROL_PIDR2 >> 0) & 0xFFFFFFFF), ((SYSCONTROL_PIDR2 = (SYSCONTROL_PIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SYSCONTROL_PIDR3  ----------------------------
// SVD Line: 2699

unsigned int SYSCONTROL_PIDR3 __AT (0x58021FEC);



// -----------------------------  Register Item: SYSCONTROL_PIDR3  --------------------------------
// SVD Line: 2699

//  <item> SFDITEM_REG__SYSCONTROL_PIDR3
//    <name> PIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x58021FEC) Peripheral ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCONTROL_PIDR3 >> 0) & 0xFFFFFFFF), ((SYSCONTROL_PIDR3 = (SYSCONTROL_PIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SYSCONTROL_CIDR0  ----------------------------
// SVD Line: 2707

unsigned int SYSCONTROL_CIDR0 __AT (0x58021FF0);



// -----------------------------  Register Item: SYSCONTROL_CIDR0  --------------------------------
// SVD Line: 2707

//  <item> SFDITEM_REG__SYSCONTROL_CIDR0
//    <name> CIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x58021FF0) Component ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCONTROL_CIDR0 >> 0) & 0xFFFFFFFF), ((SYSCONTROL_CIDR0 = (SYSCONTROL_CIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SYSCONTROL_CIDR1  ----------------------------
// SVD Line: 2715

unsigned int SYSCONTROL_CIDR1 __AT (0x58021FF4);



// -----------------------------  Register Item: SYSCONTROL_CIDR1  --------------------------------
// SVD Line: 2715

//  <item> SFDITEM_REG__SYSCONTROL_CIDR1
//    <name> CIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x58021FF4) Component ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCONTROL_CIDR1 >> 0) & 0xFFFFFFFF), ((SYSCONTROL_CIDR1 = (SYSCONTROL_CIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SYSCONTROL_CIDR2  ----------------------------
// SVD Line: 2723

unsigned int SYSCONTROL_CIDR2 __AT (0x58021FF8);



// -----------------------------  Register Item: SYSCONTROL_CIDR2  --------------------------------
// SVD Line: 2723

//  <item> SFDITEM_REG__SYSCONTROL_CIDR2
//    <name> CIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x58021FF8) Component ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCONTROL_CIDR2 >> 0) & 0xFFFFFFFF), ((SYSCONTROL_CIDR2 = (SYSCONTROL_CIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SYSCONTROL_CIDR3  ----------------------------
// SVD Line: 2731

unsigned int SYSCONTROL_CIDR3 __AT (0x58021FFC);



// -----------------------------  Register Item: SYSCONTROL_CIDR3  --------------------------------
// SVD Line: 2731

//  <item> SFDITEM_REG__SYSCONTROL_CIDR3
//    <name> CIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x58021FFC) Component ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCONTROL_CIDR3 >> 0) & 0xFFFFFFFF), ((SYSCONTROL_CIDR3 = (SYSCONTROL_CIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: SYSCONTROL  ----------------------------------
// SVD Line: 966

//  <view> SYSCONTROL
//    <name> SYSCONTROL </name>
//    <item> SFDITEM_REG__SYSCONTROL_SECDBGSTAT </item>
//    <item> SFDITEM_REG__SYSCONTROL_SECDBGSET </item>
//    <item> SFDITEM_REG__SYSCONTROL_SECDBGCLR </item>
//    <item> SFDITEM_REG__SYSCONTROL_SCSECCTRL </item>
//    <item> SFDITEM_REG__SYSCONTROL_CLK_CFG0 </item>
//    <item> SFDITEM_REG__SYSCONTROL_CLK_CFG1 </item>
//    <item> SFDITEM_REG__SYSCONTROL_CLOCK_FORCE </item>
//    <item> SFDITEM_REG__SYSCONTROL_RESET_SYNDROME </item>
//    <item> SFDITEM_REG__SYSCONTROL_RESET_MASK </item>
//    <item> SFDITEM_REG__SYSCONTROL_SWRESET </item>
//    <item> SFDITEM_REG__SYSCONTROL_GRETREG </item>
//    <item> SFDITEM_REG__SYSCONTROL_INITSVRTOR0 </item>
//    <item> SFDITEM_REG__SYSCONTROL_CPUWAIT </item>
//    <item> SFDITEM_REG__SYSCONTROL_NMI_ENABLE </item>
//    <item> SFDITEM_REG__SYSCONTROL_PWRCTRL </item>
//    <item> SFDITEM_REG__SYSCONTROL_PDCM_PD_SYS_SENSE </item>
//    <item> SFDITEM_REG__SYSCONTROL_PDCM_PD_CPU0_SENSE </item>
//    <item> SFDITEM_REG__SYSCONTROL_PDCM_PD_VMR0_SENSE </item>
//    <item> SFDITEM_REG__SYSCONTROL_PDCM_PD_VMR1_SENSE </item>
//    <item> SFDITEM_REG__SYSCONTROL_PIDR4 </item>
//    <item> SFDITEM_REG__SYSCONTROL_PIDR0 </item>
//    <item> SFDITEM_REG__SYSCONTROL_PIDR1 </item>
//    <item> SFDITEM_REG__SYSCONTROL_PIDR2 </item>
//    <item> SFDITEM_REG__SYSCONTROL_PIDR3 </item>
//    <item> SFDITEM_REG__SYSCONTROL_CIDR0 </item>
//    <item> SFDITEM_REG__SYSCONTROL_CIDR1 </item>
//    <item> SFDITEM_REG__SYSCONTROL_CIDR2 </item>
//    <item> SFDITEM_REG__SYSCONTROL_CIDR3 </item>
//  </view>
//  


// -----------------------------  Register Item Address: SAU_CTRL  --------------------------------
// SVD Line: 2756

unsigned int SAU_CTRL __AT (0xE000EDD0);



// -------------------------------  Field Item: SAU_CTRL_ENABLE  ----------------------------------
// SVD Line: 2762

//  <item> SFDITEM_FIELD__SAU_CTRL_ENABLE
//    <name> ENABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0xE000EDD0) \nEnable\n0 : Disable = SAU is disabled\n1 : Enable = SAU is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SAU_CTRL ) </loc>
//      <o.0..0> ENABLE
//        <0=> 0: Disable = SAU is disabled
//        <1=> 1: Enable = SAU is enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: SAU_CTRL_ALLNS  -----------------------------------
// SVD Line: 2780

//  <item> SFDITEM_FIELD__SAU_CTRL_ALLNS
//    <name> ALLNS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0xE000EDD0) \nSecurity attribution if SAU disabled\n0 : Secure = Memory is marked as secure\n1 : Non_Secure = Memory is marked as non-secure </i>
//    <combo> 
//      <loc> ( (unsigned int) SAU_CTRL ) </loc>
//      <o.1..1> ALLNS
//        <0=> 0: Secure = Memory is marked as secure
//        <1=> 1: Non_Secure = Memory is marked as non-secure
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: SAU_CTRL  ------------------------------------
// SVD Line: 2756

//  <rtree> SFDITEM_REG__SAU_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000EDD0) Control Register </i>
//    <loc> ( (unsigned int)((SAU_CTRL >> 0) & 0xFFFFFFFF), ((SAU_CTRL = (SAU_CTRL & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAU_CTRL_ENABLE </item>
//    <item> SFDITEM_FIELD__SAU_CTRL_ALLNS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SAU_TYPE  --------------------------------
// SVD Line: 2800

unsigned int SAU_TYPE __AT (0xE000EDD4);



// ------------------------------  Field Item: SAU_TYPE_SREGION  ----------------------------------
// SVD Line: 2807

//  <item> SFDITEM_FIELD__SAU_TYPE_SREGION
//    <name> SREGION </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0xE000EDD4) Number of implemented SAU regions </i>
//    <edit> 
//      <loc> ( (unsigned char)((SAU_TYPE >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SAU_TYPE  ------------------------------------
// SVD Line: 2800

//  <rtree> SFDITEM_REG__SAU_TYPE
//    <name> TYPE </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0xE000EDD4) Type Register </i>
//    <loc> ( (unsigned int)((SAU_TYPE >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SAU_TYPE_SREGION </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SAU_RNR  ---------------------------------
// SVD Line: 2815

unsigned int SAU_RNR __AT (0xE000EDD8);



// -------------------------------  Field Item: SAU_RNR_REGION  -----------------------------------
// SVD Line: 2821

//  <item> SFDITEM_FIELD__SAU_RNR_REGION
//    <name> REGION </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0xE000EDD8) Currently selected SAU region </i>
//    <edit> 
//      <loc> ( (unsigned char)((SAU_RNR >> 0) & 0xFF), ((SAU_RNR = (SAU_RNR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: SAU_RNR  ------------------------------------
// SVD Line: 2815

//  <rtree> SFDITEM_REG__SAU_RNR
//    <name> RNR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000EDD8) Region Number Register </i>
//    <loc> ( (unsigned int)((SAU_RNR >> 0) & 0xFFFFFFFF), ((SAU_RNR = (SAU_RNR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAU_RNR_REGION </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SAU_RBAR  --------------------------------
// SVD Line: 2851

unsigned int SAU_RBAR __AT (0xE000EDDC);



// -------------------------------  Field Item: SAU_RBAR_BADDR  -----------------------------------
// SVD Line: 2857

//  <item> SFDITEM_FIELD__SAU_RBAR_BADDR
//    <name> BADDR </name>
//    <rw> 
//    <i> [Bits 31..5] RW (@ 0xE000EDDC) Base Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((SAU_RBAR >> 5) & 0x7FFFFFF), ((SAU_RBAR = (SAU_RBAR & ~(0x7FFFFFFUL << 5 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFFFF) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SAU_RBAR  ------------------------------------
// SVD Line: 2851

//  <rtree> SFDITEM_REG__SAU_RBAR
//    <name> RBAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000EDDC) Region Base Address Register </i>
//    <loc> ( (unsigned int)((SAU_RBAR >> 0) & 0xFFFFFFFF), ((SAU_RBAR = (SAU_RBAR & ~(0xFFFFFFE0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFE0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAU_RBAR_BADDR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SAU_RLAR  --------------------------------
// SVD Line: 2865

unsigned int SAU_RLAR __AT (0xE000EDE0);



// -------------------------------  Field Item: SAU_RLAR_LADDR  -----------------------------------
// SVD Line: 2871

//  <item> SFDITEM_FIELD__SAU_RLAR_LADDR
//    <name> LADDR </name>
//    <rw> 
//    <i> [Bits 31..5] RW (@ 0xE000EDE0) Limit Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((SAU_RLAR >> 5) & 0x7FFFFFF), ((SAU_RLAR = (SAU_RLAR & ~(0x7FFFFFFUL << 5 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFFFF) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SAU_RLAR_NSC  ------------------------------------
// SVD Line: 2877

//  <item> SFDITEM_FIELD__SAU_RLAR_NSC
//    <name> NSC </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0xE000EDE0) Non-Secure Callable </i>
//    <check> 
//      <loc> ( (unsigned int) SAU_RLAR ) </loc>
//      <o.1..1> NSC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SAU_RLAR_ENABLE  ----------------------------------
// SVD Line: 2883

//  <item> SFDITEM_FIELD__SAU_RLAR_ENABLE
//    <name> ENABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0xE000EDE0) SAU Region enabled </i>
//    <check> 
//      <loc> ( (unsigned int) SAU_RLAR ) </loc>
//      <o.0..0> ENABLE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SAU_RLAR  ------------------------------------
// SVD Line: 2865

//  <rtree> SFDITEM_REG__SAU_RLAR
//    <name> RLAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000EDE0) Region Limit Address Register </i>
//    <loc> ( (unsigned int)((SAU_RLAR >> 0) & 0xFFFFFFFF), ((SAU_RLAR = (SAU_RLAR & ~(0xFFFFFFE3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFE3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAU_RLAR_LADDR </item>
//    <item> SFDITEM_FIELD__SAU_RLAR_NSC </item>
//    <item> SFDITEM_FIELD__SAU_RLAR_ENABLE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SAU_SFSR  --------------------------------
// SVD Line: 2891

unsigned int SAU_SFSR __AT (0xE000EDE4);



// -------------------------------  Field Item: SAU_SFSR_LSERR  -----------------------------------
// SVD Line: 2897

//  <item> SFDITEM_FIELD__SAU_SFSR_LSERR
//    <name> LSERR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0xE000EDE4) Lazy state error flag </i>
//    <check> 
//      <loc> ( (unsigned int) SAU_SFSR ) </loc>
//      <o.7..7> LSERR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SAU_SFSR_SFARVALID  ---------------------------------
// SVD Line: 2903

//  <item> SFDITEM_FIELD__SAU_SFSR_SFARVALID
//    <name> SFARVALID </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0xE000EDE4) Secure fault address valid </i>
//    <check> 
//      <loc> ( (unsigned int) SAU_SFSR ) </loc>
//      <o.6..6> SFARVALID
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SAU_SFSR_LSPERR  ----------------------------------
// SVD Line: 2909

//  <item> SFDITEM_FIELD__SAU_SFSR_LSPERR
//    <name> LSPERR </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0xE000EDE4) Lazy state preservation error flag </i>
//    <check> 
//      <loc> ( (unsigned int) SAU_SFSR ) </loc>
//      <o.5..5> LSPERR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SAU_SFSR_INVTRAN  ----------------------------------
// SVD Line: 2915

//  <item> SFDITEM_FIELD__SAU_SFSR_INVTRAN
//    <name> INVTRAN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0xE000EDE4) Invalid transition flag </i>
//    <check> 
//      <loc> ( (unsigned int) SAU_SFSR ) </loc>
//      <o.4..4> INVTRAN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SAU_SFSR_AUVIOL  ----------------------------------
// SVD Line: 2921

//  <item> SFDITEM_FIELD__SAU_SFSR_AUVIOL
//    <name> AUVIOL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0xE000EDE4) Attribution unit violation flag </i>
//    <check> 
//      <loc> ( (unsigned int) SAU_SFSR ) </loc>
//      <o.3..3> AUVIOL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SAU_SFSR_INVER  -----------------------------------
// SVD Line: 2927

//  <item> SFDITEM_FIELD__SAU_SFSR_INVER
//    <name> INVER </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0xE000EDE4) Invalid exception return flag </i>
//    <check> 
//      <loc> ( (unsigned int) SAU_SFSR ) </loc>
//      <o.2..2> INVER
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SAU_SFSR_INVIS  -----------------------------------
// SVD Line: 2933

//  <item> SFDITEM_FIELD__SAU_SFSR_INVIS
//    <name> INVIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0xE000EDE4) Invalid integrity signature flag </i>
//    <check> 
//      <loc> ( (unsigned int) SAU_SFSR ) </loc>
//      <o.1..1> INVIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SAU_SFSR_INVEP  -----------------------------------
// SVD Line: 2939

//  <item> SFDITEM_FIELD__SAU_SFSR_INVEP
//    <name> INVEP </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0xE000EDE4) Invalid entry pointd </i>
//    <check> 
//      <loc> ( (unsigned int) SAU_SFSR ) </loc>
//      <o.0..0> INVEP
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SAU_SFSR  ------------------------------------
// SVD Line: 2891

//  <rtree> SFDITEM_REG__SAU_SFSR
//    <name> SFSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000EDE4) Secure Fault Status Register </i>
//    <loc> ( (unsigned int)((SAU_SFSR >> 0) & 0xFFFFFFFF), ((SAU_SFSR = (SAU_SFSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAU_SFSR_LSERR </item>
//    <item> SFDITEM_FIELD__SAU_SFSR_SFARVALID </item>
//    <item> SFDITEM_FIELD__SAU_SFSR_LSPERR </item>
//    <item> SFDITEM_FIELD__SAU_SFSR_INVTRAN </item>
//    <item> SFDITEM_FIELD__SAU_SFSR_AUVIOL </item>
//    <item> SFDITEM_FIELD__SAU_SFSR_INVER </item>
//    <item> SFDITEM_FIELD__SAU_SFSR_INVIS </item>
//    <item> SFDITEM_FIELD__SAU_SFSR_INVEP </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SAU  --------------------------------------
// SVD Line: 2741

//  <view> SAU
//    <name> SAU </name>
//    <item> SFDITEM_REG__SAU_CTRL </item>
//    <item> SFDITEM_REG__SAU_TYPE </item>
//    <item> SFDITEM_REG__SAU_RNR </item>
//    <item> SFDITEM_REG__SAU_RBAR </item>
//    <item> SFDITEM_REG__SAU_RLAR </item>
//    <item> SFDITEM_REG__SAU_SFSR </item>
//  </view>
//  


// -------------------------  Register Item Address: TIMER0_CNTPCTLOW  ----------------------------
// SVD Line: 2969

unsigned int TIMER0_CNTPCTLOW __AT (0x48000000);



// -----------------------------  Register Item: TIMER0_CNTPCTLOW  --------------------------------
// SVD Line: 2969

//  <item> SFDITEM_REG__TIMER0_CNTPCTLOW
//    <name> CNTPCTLOW </name>
//    <i> [Bits 31..0] RO (@ 0x48000000) Physical Count Register Lower Word. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_CNTPCTLOW >> 0) & 0xFFFFFFFF), ((TIMER0_CNTPCTLOW = (TIMER0_CNTPCTLOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: TIMER0_CNTPCTHIGH  ----------------------------
// SVD Line: 2977

unsigned int TIMER0_CNTPCTHIGH __AT (0x48000004);



// ----------------------------  Register Item: TIMER0_CNTPCTHIGH  --------------------------------
// SVD Line: 2977

//  <item> SFDITEM_REG__TIMER0_CNTPCTHIGH
//    <name> CNTPCTHIGH </name>
//    <i> [Bits 31..0] RO (@ 0x48000004) Physical Count Register Higher Word. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_CNTPCTHIGH >> 0) & 0xFFFFFFFF), ((TIMER0_CNTPCTHIGH = (TIMER0_CNTPCTHIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: TIMER0_CNTFRQ  ------------------------------
// SVD Line: 2985

unsigned int TIMER0_CNTFRQ __AT (0x48000010);



// ------------------------------  Register Item: TIMER0_CNTFRQ  ----------------------------------
// SVD Line: 2985

//  <item> SFDITEM_REG__TIMER0_CNTFRQ
//    <name> CNTFRQ </name>
//    <i> [Bits 31..0] RW (@ 0x48000010) Counter Frequency Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_CNTFRQ >> 0) & 0xFFFFFFFF), ((TIMER0_CNTFRQ = (TIMER0_CNTFRQ & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER0_CNTP_CVAL_LOW  --------------------------
// SVD Line: 2993

unsigned int TIMER0_CNTP_CVAL_LOW __AT (0x48000020);



// ---------------------------  Register Item: TIMER0_CNTP_CVAL_LOW  ------------------------------
// SVD Line: 2993

//  <item> SFDITEM_REG__TIMER0_CNTP_CVAL_LOW
//    <name> CNTP_CVAL_LOW </name>
//    <i> [Bits 31..0] RW (@ 0x48000020) Timer Compare Value Lower Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_CNTP_CVAL_LOW >> 0) & 0xFFFFFFFF), ((TIMER0_CNTP_CVAL_LOW = (TIMER0_CNTP_CVAL_LOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: TIMER0_CNTP_CVAL_HIGH  --------------------------
// SVD Line: 3001

unsigned int TIMER0_CNTP_CVAL_HIGH __AT (0x48000024);



// --------------------------  Register Item: TIMER0_CNTP_CVAL_HIGH  ------------------------------
// SVD Line: 3001

//  <item> SFDITEM_REG__TIMER0_CNTP_CVAL_HIGH
//    <name> CNTP_CVAL_HIGH </name>
//    <i> [Bits 31..0] RW (@ 0x48000024) Timer Compare Value Higher Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_CNTP_CVAL_HIGH >> 0) & 0xFFFFFFFF), ((TIMER0_CNTP_CVAL_HIGH = (TIMER0_CNTP_CVAL_HIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: TIMER0_CNTP_TVAL  ----------------------------
// SVD Line: 3009

unsigned int TIMER0_CNTP_TVAL __AT (0x48000028);



// -----------------------------  Register Item: TIMER0_CNTP_TVAL  --------------------------------
// SVD Line: 3009

//  <item> SFDITEM_REG__TIMER0_CNTP_TVAL
//    <name> CNTP_TVAL </name>
//    <i> [Bits 31..0] RW (@ 0x48000028) Timer Value register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_CNTP_TVAL >> 0) & 0xFFFFFFFF), ((TIMER0_CNTP_TVAL = (TIMER0_CNTP_TVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: TIMER0_CNTP_CTL  -----------------------------
// SVD Line: 3017

unsigned int TIMER0_CNTP_CTL __AT (0x4800002C);



// -----------------------------  Field Item: TIMER0_CNTP_CTL_En  ---------------------------------
// SVD Line: 3024

//  <item> SFDITEM_FIELD__TIMER0_CNTP_CTL_En
//    <name> En </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4800002C) \nEnable Counter\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CNTP_CTL ) </loc>
//      <o.0..0> En
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CNTP_CTL_IMASK  -------------------------------
// SVD Line: 3039

//  <item> SFDITEM_FIELD__TIMER0_CNTP_CTL_IMASK
//    <name> IMASK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4800002C) \nInterrupt Mask\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CNTP_CTL ) </loc>
//      <o.1..1> IMASK
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_CNTP_CTL_ISTATUS  ------------------------------
// SVD Line: 3054

//  <item> SFDITEM_FIELD__TIMER0_CNTP_CTL_ISTATUS
//    <name> ISTATUS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4800002C) \nInterrupt Status\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CNTP_CTL ) </loc>
//      <o.2..2> ISTATUS
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: TIMER0_CNTP_CTL  --------------------------------
// SVD Line: 3017

//  <rtree> SFDITEM_REG__TIMER0_CNTP_CTL
//    <name> CNTP_CTL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4800002C) Timer Control register. </i>
//    <loc> ( (unsigned int)((TIMER0_CNTP_CTL >> 0) & 0xFFFFFFFF), ((TIMER0_CNTP_CTL = (TIMER0_CNTP_CTL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CNTP_CTL_En </item>
//    <item> SFDITEM_FIELD__TIMER0_CNTP_CTL_IMASK </item>
//    <item> SFDITEM_FIELD__TIMER0_CNTP_CTL_ISTATUS </item>
//  </rtree>
//  


// ----------------------  Register Item Address: TIMER0_CNTP_AIVAL_LOW  --------------------------
// SVD Line: 3072

unsigned int TIMER0_CNTP_AIVAL_LOW __AT (0x48000040);



// --------------------------  Register Item: TIMER0_CNTP_AIVAL_LOW  ------------------------------
// SVD Line: 3072

//  <item> SFDITEM_REG__TIMER0_CNTP_AIVAL_LOW
//    <name> CNTP_AIVAL_LOW </name>
//    <i> [Bits 31..0] RO (@ 0x48000040) AutoIncrValue Lower Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_CNTP_AIVAL_LOW >> 0) & 0xFFFFFFFF), ((TIMER0_CNTP_AIVAL_LOW = (TIMER0_CNTP_AIVAL_LOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: TIMER0_CNTP_AIVAL_HIGH  -------------------------
// SVD Line: 3080

unsigned int TIMER0_CNTP_AIVAL_HIGH __AT (0x48000044);



// --------------------------  Register Item: TIMER0_CNTP_AIVAL_HIGH  -----------------------------
// SVD Line: 3080

//  <item> SFDITEM_REG__TIMER0_CNTP_AIVAL_HIGH
//    <name> CNTP_AIVAL_HIGH </name>
//    <i> [Bits 31..0] RO (@ 0x48000044) AutoIncrValue Higher Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_CNTP_AIVAL_HIGH >> 0) & 0xFFFFFFFF), ((TIMER0_CNTP_AIVAL_HIGH = (TIMER0_CNTP_AIVAL_HIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: TIMER0_CNTP_AIVAL_RELOAD  ------------------------
// SVD Line: 3088

unsigned int TIMER0_CNTP_AIVAL_RELOAD __AT (0x48000048);



// -------------------------  Register Item: TIMER0_CNTP_AIVAL_RELOAD  ----------------------------
// SVD Line: 3088

//  <item> SFDITEM_REG__TIMER0_CNTP_AIVAL_RELOAD
//    <name> CNTP_AIVAL_RELOAD </name>
//    <i> [Bits 31..0] RW (@ 0x48000048) AutoIncrValue Reload register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_CNTP_AIVAL_RELOAD >> 0) & 0xFFFFFFFF), ((TIMER0_CNTP_AIVAL_RELOAD = (TIMER0_CNTP_AIVAL_RELOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: TIMER0_CNTP_AIVAL_CTL  --------------------------
// SVD Line: 3096

unsigned int TIMER0_CNTP_AIVAL_CTL __AT (0x4800004C);



// --------------------------  Field Item: TIMER0_CNTP_AIVAL_CTL_En  ------------------------------
// SVD Line: 3103

//  <item> SFDITEM_FIELD__TIMER0_CNTP_AIVAL_CTL_En
//    <name> En </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4800004C) \nEnable AutoIncrement.\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CNTP_AIVAL_CTL ) </loc>
//      <o.0..0> En
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// ------------------------  Field Item: TIMER0_CNTP_AIVAL_CTL_IRQ_CLR  ---------------------------
// SVD Line: 3118

//  <item> SFDITEM_FIELD__TIMER0_CNTP_AIVAL_CTL_IRQ_CLR
//    <name> IRQ_CLR </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4800004C) \nInterrupt Clear\n0 : Nop = Nop\n1 : Clear = Clear </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CNTP_AIVAL_CTL ) </loc>
//      <o.1..1> IRQ_CLR
//        <0=> 0: Nop = Nop
//        <1=> 1: Clear = Clear
//    </combo>
//  </item>
//  


// --------------------------  Register RTree: TIMER0_CNTP_AIVAL_CTL  -----------------------------
// SVD Line: 3096

//  <rtree> SFDITEM_REG__TIMER0_CNTP_AIVAL_CTL
//    <name> CNTP_AIVAL_CTL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4800004C) AutoIncrValue Control register. </i>
//    <loc> ( (unsigned int)((TIMER0_CNTP_AIVAL_CTL >> 0) & 0xFFFFFFFF), ((TIMER0_CNTP_AIVAL_CTL = (TIMER0_CNTP_AIVAL_CTL & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CNTP_AIVAL_CTL_En </item>
//    <item> SFDITEM_FIELD__TIMER0_CNTP_AIVAL_CTL_IRQ_CLR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER0_CNTP_CFG  -----------------------------
// SVD Line: 3136

unsigned int TIMER0_CNTP_CFG __AT (0x48000050);



// -----------------------------  Register Item: TIMER0_CNTP_CFG  ---------------------------------
// SVD Line: 3136

//  <item> SFDITEM_REG__TIMER0_CNTP_CFG
//    <name> CNTP_CFG </name>
//    <i> [Bits 31..0] RW (@ 0x48000050) Timer Configuration register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_CNTP_CFG >> 0) & 0xFFFFFFFF), ((TIMER0_CNTP_CFG = (TIMER0_CNTP_CFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER0_PIDR4  ------------------------------
// SVD Line: 3144

unsigned int TIMER0_PIDR4 __AT (0x48000FD0);



// -------------------------------  Register Item: TIMER0_PIDR4  ----------------------------------
// SVD Line: 3144

//  <item> SFDITEM_REG__TIMER0_PIDR4
//    <name> PIDR4 </name>
//    <i> [Bits 31..0] RO (@ 0x48000FD0) Peripheral ID 4 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_PIDR4 >> 0) & 0xFFFFFFFF), ((TIMER0_PIDR4 = (TIMER0_PIDR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER0_PIDR0  ------------------------------
// SVD Line: 3152

unsigned int TIMER0_PIDR0 __AT (0x48000FE0);



// -------------------------------  Register Item: TIMER0_PIDR0  ----------------------------------
// SVD Line: 3152

//  <item> SFDITEM_REG__TIMER0_PIDR0
//    <name> PIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x48000FE0) Peripheral ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_PIDR0 >> 0) & 0xFFFFFFFF), ((TIMER0_PIDR0 = (TIMER0_PIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER0_PIDR1  ------------------------------
// SVD Line: 3160

unsigned int TIMER0_PIDR1 __AT (0x48000FE4);



// -------------------------------  Register Item: TIMER0_PIDR1  ----------------------------------
// SVD Line: 3160

//  <item> SFDITEM_REG__TIMER0_PIDR1
//    <name> PIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x48000FE4) Peripheral ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_PIDR1 >> 0) & 0xFFFFFFFF), ((TIMER0_PIDR1 = (TIMER0_PIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER0_PIDR2  ------------------------------
// SVD Line: 3168

unsigned int TIMER0_PIDR2 __AT (0x48000FE8);



// -------------------------------  Register Item: TIMER0_PIDR2  ----------------------------------
// SVD Line: 3168

//  <item> SFDITEM_REG__TIMER0_PIDR2
//    <name> PIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x48000FE8) Peripheral ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_PIDR2 >> 0) & 0xFFFFFFFF), ((TIMER0_PIDR2 = (TIMER0_PIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER0_PIDR3  ------------------------------
// SVD Line: 3176

unsigned int TIMER0_PIDR3 __AT (0x48000FEC);



// -------------------------------  Register Item: TIMER0_PIDR3  ----------------------------------
// SVD Line: 3176

//  <item> SFDITEM_REG__TIMER0_PIDR3
//    <name> PIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x48000FEC) Peripheral ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_PIDR3 >> 0) & 0xFFFFFFFF), ((TIMER0_PIDR3 = (TIMER0_PIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER0_CIDR0  ------------------------------
// SVD Line: 3184

unsigned int TIMER0_CIDR0 __AT (0x48000FF0);



// -------------------------------  Register Item: TIMER0_CIDR0  ----------------------------------
// SVD Line: 3184

//  <item> SFDITEM_REG__TIMER0_CIDR0
//    <name> CIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x48000FF0) Component ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_CIDR0 >> 0) & 0xFFFFFFFF), ((TIMER0_CIDR0 = (TIMER0_CIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER0_CIDR1  ------------------------------
// SVD Line: 3192

unsigned int TIMER0_CIDR1 __AT (0x48000FF4);



// -------------------------------  Register Item: TIMER0_CIDR1  ----------------------------------
// SVD Line: 3192

//  <item> SFDITEM_REG__TIMER0_CIDR1
//    <name> CIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x48000FF4) Component ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_CIDR1 >> 0) & 0xFFFFFFFF), ((TIMER0_CIDR1 = (TIMER0_CIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER0_CIDR2  ------------------------------
// SVD Line: 3200

unsigned int TIMER0_CIDR2 __AT (0x48000FF8);



// -------------------------------  Register Item: TIMER0_CIDR2  ----------------------------------
// SVD Line: 3200

//  <item> SFDITEM_REG__TIMER0_CIDR2
//    <name> CIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x48000FF8) Component ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_CIDR2 >> 0) & 0xFFFFFFFF), ((TIMER0_CIDR2 = (TIMER0_CIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER0_CIDR3  ------------------------------
// SVD Line: 3208

unsigned int TIMER0_CIDR3 __AT (0x48000FFC);



// -------------------------------  Register Item: TIMER0_CIDR3  ----------------------------------
// SVD Line: 3208

//  <item> SFDITEM_REG__TIMER0_CIDR3
//    <name> CIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x48000FFC) Component ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_CIDR3 >> 0) & 0xFFFFFFFF), ((TIMER0_CIDR3 = (TIMER0_CIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: TIMER0  ------------------------------------
// SVD Line: 2949

//  <view> TIMER0
//    <name> TIMER0 </name>
//    <item> SFDITEM_REG__TIMER0_CNTPCTLOW </item>
//    <item> SFDITEM_REG__TIMER0_CNTPCTHIGH </item>
//    <item> SFDITEM_REG__TIMER0_CNTFRQ </item>
//    <item> SFDITEM_REG__TIMER0_CNTP_CVAL_LOW </item>
//    <item> SFDITEM_REG__TIMER0_CNTP_CVAL_HIGH </item>
//    <item> SFDITEM_REG__TIMER0_CNTP_TVAL </item>
//    <item> SFDITEM_REG__TIMER0_CNTP_CTL </item>
//    <item> SFDITEM_REG__TIMER0_CNTP_AIVAL_LOW </item>
//    <item> SFDITEM_REG__TIMER0_CNTP_AIVAL_HIGH </item>
//    <item> SFDITEM_REG__TIMER0_CNTP_AIVAL_RELOAD </item>
//    <item> SFDITEM_REG__TIMER0_CNTP_AIVAL_CTL </item>
//    <item> SFDITEM_REG__TIMER0_CNTP_CFG </item>
//    <item> SFDITEM_REG__TIMER0_PIDR4 </item>
//    <item> SFDITEM_REG__TIMER0_PIDR0 </item>
//    <item> SFDITEM_REG__TIMER0_PIDR1 </item>
//    <item> SFDITEM_REG__TIMER0_PIDR2 </item>
//    <item> SFDITEM_REG__TIMER0_PIDR3 </item>
//    <item> SFDITEM_REG__TIMER0_CIDR0 </item>
//    <item> SFDITEM_REG__TIMER0_CIDR1 </item>
//    <item> SFDITEM_REG__TIMER0_CIDR2 </item>
//    <item> SFDITEM_REG__TIMER0_CIDR3 </item>
//  </view>
//  


// -------------------------  Register Item Address: TIMER1_CNTPCTLOW  ----------------------------
// SVD Line: 2969

unsigned int TIMER1_CNTPCTLOW __AT (0x48001000);



// -----------------------------  Register Item: TIMER1_CNTPCTLOW  --------------------------------
// SVD Line: 2969

//  <item> SFDITEM_REG__TIMER1_CNTPCTLOW
//    <name> CNTPCTLOW </name>
//    <i> [Bits 31..0] RO (@ 0x48001000) Physical Count Register Lower Word. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_CNTPCTLOW >> 0) & 0xFFFFFFFF), ((TIMER1_CNTPCTLOW = (TIMER1_CNTPCTLOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: TIMER1_CNTPCTHIGH  ----------------------------
// SVD Line: 2977

unsigned int TIMER1_CNTPCTHIGH __AT (0x48001004);



// ----------------------------  Register Item: TIMER1_CNTPCTHIGH  --------------------------------
// SVD Line: 2977

//  <item> SFDITEM_REG__TIMER1_CNTPCTHIGH
//    <name> CNTPCTHIGH </name>
//    <i> [Bits 31..0] RO (@ 0x48001004) Physical Count Register Higher Word. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_CNTPCTHIGH >> 0) & 0xFFFFFFFF), ((TIMER1_CNTPCTHIGH = (TIMER1_CNTPCTHIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: TIMER1_CNTFRQ  ------------------------------
// SVD Line: 2985

unsigned int TIMER1_CNTFRQ __AT (0x48001010);



// ------------------------------  Register Item: TIMER1_CNTFRQ  ----------------------------------
// SVD Line: 2985

//  <item> SFDITEM_REG__TIMER1_CNTFRQ
//    <name> CNTFRQ </name>
//    <i> [Bits 31..0] RW (@ 0x48001010) Counter Frequency Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_CNTFRQ >> 0) & 0xFFFFFFFF), ((TIMER1_CNTFRQ = (TIMER1_CNTFRQ & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER1_CNTP_CVAL_LOW  --------------------------
// SVD Line: 2993

unsigned int TIMER1_CNTP_CVAL_LOW __AT (0x48001020);



// ---------------------------  Register Item: TIMER1_CNTP_CVAL_LOW  ------------------------------
// SVD Line: 2993

//  <item> SFDITEM_REG__TIMER1_CNTP_CVAL_LOW
//    <name> CNTP_CVAL_LOW </name>
//    <i> [Bits 31..0] RW (@ 0x48001020) Timer Compare Value Lower Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_CNTP_CVAL_LOW >> 0) & 0xFFFFFFFF), ((TIMER1_CNTP_CVAL_LOW = (TIMER1_CNTP_CVAL_LOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: TIMER1_CNTP_CVAL_HIGH  --------------------------
// SVD Line: 3001

unsigned int TIMER1_CNTP_CVAL_HIGH __AT (0x48001024);



// --------------------------  Register Item: TIMER1_CNTP_CVAL_HIGH  ------------------------------
// SVD Line: 3001

//  <item> SFDITEM_REG__TIMER1_CNTP_CVAL_HIGH
//    <name> CNTP_CVAL_HIGH </name>
//    <i> [Bits 31..0] RW (@ 0x48001024) Timer Compare Value Higher Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_CNTP_CVAL_HIGH >> 0) & 0xFFFFFFFF), ((TIMER1_CNTP_CVAL_HIGH = (TIMER1_CNTP_CVAL_HIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: TIMER1_CNTP_TVAL  ----------------------------
// SVD Line: 3009

unsigned int TIMER1_CNTP_TVAL __AT (0x48001028);



// -----------------------------  Register Item: TIMER1_CNTP_TVAL  --------------------------------
// SVD Line: 3009

//  <item> SFDITEM_REG__TIMER1_CNTP_TVAL
//    <name> CNTP_TVAL </name>
//    <i> [Bits 31..0] RW (@ 0x48001028) Timer Value register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_CNTP_TVAL >> 0) & 0xFFFFFFFF), ((TIMER1_CNTP_TVAL = (TIMER1_CNTP_TVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: TIMER1_CNTP_CTL  -----------------------------
// SVD Line: 3017

unsigned int TIMER1_CNTP_CTL __AT (0x4800102C);



// -----------------------------  Field Item: TIMER1_CNTP_CTL_En  ---------------------------------
// SVD Line: 3024

//  <item> SFDITEM_FIELD__TIMER1_CNTP_CTL_En
//    <name> En </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4800102C) \nEnable Counter\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CNTP_CTL ) </loc>
//      <o.0..0> En
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CNTP_CTL_IMASK  -------------------------------
// SVD Line: 3039

//  <item> SFDITEM_FIELD__TIMER1_CNTP_CTL_IMASK
//    <name> IMASK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4800102C) \nInterrupt Mask\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CNTP_CTL ) </loc>
//      <o.1..1> IMASK
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_CNTP_CTL_ISTATUS  ------------------------------
// SVD Line: 3054

//  <item> SFDITEM_FIELD__TIMER1_CNTP_CTL_ISTATUS
//    <name> ISTATUS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4800102C) \nInterrupt Status\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CNTP_CTL ) </loc>
//      <o.2..2> ISTATUS
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: TIMER1_CNTP_CTL  --------------------------------
// SVD Line: 3017

//  <rtree> SFDITEM_REG__TIMER1_CNTP_CTL
//    <name> CNTP_CTL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4800102C) Timer Control register. </i>
//    <loc> ( (unsigned int)((TIMER1_CNTP_CTL >> 0) & 0xFFFFFFFF), ((TIMER1_CNTP_CTL = (TIMER1_CNTP_CTL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CNTP_CTL_En </item>
//    <item> SFDITEM_FIELD__TIMER1_CNTP_CTL_IMASK </item>
//    <item> SFDITEM_FIELD__TIMER1_CNTP_CTL_ISTATUS </item>
//  </rtree>
//  


// ----------------------  Register Item Address: TIMER1_CNTP_AIVAL_LOW  --------------------------
// SVD Line: 3072

unsigned int TIMER1_CNTP_AIVAL_LOW __AT (0x48001040);



// --------------------------  Register Item: TIMER1_CNTP_AIVAL_LOW  ------------------------------
// SVD Line: 3072

//  <item> SFDITEM_REG__TIMER1_CNTP_AIVAL_LOW
//    <name> CNTP_AIVAL_LOW </name>
//    <i> [Bits 31..0] RO (@ 0x48001040) AutoIncrValue Lower Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_CNTP_AIVAL_LOW >> 0) & 0xFFFFFFFF), ((TIMER1_CNTP_AIVAL_LOW = (TIMER1_CNTP_AIVAL_LOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: TIMER1_CNTP_AIVAL_HIGH  -------------------------
// SVD Line: 3080

unsigned int TIMER1_CNTP_AIVAL_HIGH __AT (0x48001044);



// --------------------------  Register Item: TIMER1_CNTP_AIVAL_HIGH  -----------------------------
// SVD Line: 3080

//  <item> SFDITEM_REG__TIMER1_CNTP_AIVAL_HIGH
//    <name> CNTP_AIVAL_HIGH </name>
//    <i> [Bits 31..0] RO (@ 0x48001044) AutoIncrValue Higher Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_CNTP_AIVAL_HIGH >> 0) & 0xFFFFFFFF), ((TIMER1_CNTP_AIVAL_HIGH = (TIMER1_CNTP_AIVAL_HIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: TIMER1_CNTP_AIVAL_RELOAD  ------------------------
// SVD Line: 3088

unsigned int TIMER1_CNTP_AIVAL_RELOAD __AT (0x48001048);



// -------------------------  Register Item: TIMER1_CNTP_AIVAL_RELOAD  ----------------------------
// SVD Line: 3088

//  <item> SFDITEM_REG__TIMER1_CNTP_AIVAL_RELOAD
//    <name> CNTP_AIVAL_RELOAD </name>
//    <i> [Bits 31..0] RW (@ 0x48001048) AutoIncrValue Reload register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_CNTP_AIVAL_RELOAD >> 0) & 0xFFFFFFFF), ((TIMER1_CNTP_AIVAL_RELOAD = (TIMER1_CNTP_AIVAL_RELOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: TIMER1_CNTP_AIVAL_CTL  --------------------------
// SVD Line: 3096

unsigned int TIMER1_CNTP_AIVAL_CTL __AT (0x4800104C);



// --------------------------  Field Item: TIMER1_CNTP_AIVAL_CTL_En  ------------------------------
// SVD Line: 3103

//  <item> SFDITEM_FIELD__TIMER1_CNTP_AIVAL_CTL_En
//    <name> En </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4800104C) \nEnable AutoIncrement.\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CNTP_AIVAL_CTL ) </loc>
//      <o.0..0> En
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// ------------------------  Field Item: TIMER1_CNTP_AIVAL_CTL_IRQ_CLR  ---------------------------
// SVD Line: 3118

//  <item> SFDITEM_FIELD__TIMER1_CNTP_AIVAL_CTL_IRQ_CLR
//    <name> IRQ_CLR </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4800104C) \nInterrupt Clear\n0 : Nop = Nop\n1 : Clear = Clear </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CNTP_AIVAL_CTL ) </loc>
//      <o.1..1> IRQ_CLR
//        <0=> 0: Nop = Nop
//        <1=> 1: Clear = Clear
//    </combo>
//  </item>
//  


// --------------------------  Register RTree: TIMER1_CNTP_AIVAL_CTL  -----------------------------
// SVD Line: 3096

//  <rtree> SFDITEM_REG__TIMER1_CNTP_AIVAL_CTL
//    <name> CNTP_AIVAL_CTL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4800104C) AutoIncrValue Control register. </i>
//    <loc> ( (unsigned int)((TIMER1_CNTP_AIVAL_CTL >> 0) & 0xFFFFFFFF), ((TIMER1_CNTP_AIVAL_CTL = (TIMER1_CNTP_AIVAL_CTL & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CNTP_AIVAL_CTL_En </item>
//    <item> SFDITEM_FIELD__TIMER1_CNTP_AIVAL_CTL_IRQ_CLR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER1_CNTP_CFG  -----------------------------
// SVD Line: 3136

unsigned int TIMER1_CNTP_CFG __AT (0x48001050);



// -----------------------------  Register Item: TIMER1_CNTP_CFG  ---------------------------------
// SVD Line: 3136

//  <item> SFDITEM_REG__TIMER1_CNTP_CFG
//    <name> CNTP_CFG </name>
//    <i> [Bits 31..0] RW (@ 0x48001050) Timer Configuration register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_CNTP_CFG >> 0) & 0xFFFFFFFF), ((TIMER1_CNTP_CFG = (TIMER1_CNTP_CFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER1_PIDR4  ------------------------------
// SVD Line: 3144

unsigned int TIMER1_PIDR4 __AT (0x48001FD0);



// -------------------------------  Register Item: TIMER1_PIDR4  ----------------------------------
// SVD Line: 3144

//  <item> SFDITEM_REG__TIMER1_PIDR4
//    <name> PIDR4 </name>
//    <i> [Bits 31..0] RO (@ 0x48001FD0) Peripheral ID 4 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_PIDR4 >> 0) & 0xFFFFFFFF), ((TIMER1_PIDR4 = (TIMER1_PIDR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER1_PIDR0  ------------------------------
// SVD Line: 3152

unsigned int TIMER1_PIDR0 __AT (0x48001FE0);



// -------------------------------  Register Item: TIMER1_PIDR0  ----------------------------------
// SVD Line: 3152

//  <item> SFDITEM_REG__TIMER1_PIDR0
//    <name> PIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x48001FE0) Peripheral ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_PIDR0 >> 0) & 0xFFFFFFFF), ((TIMER1_PIDR0 = (TIMER1_PIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER1_PIDR1  ------------------------------
// SVD Line: 3160

unsigned int TIMER1_PIDR1 __AT (0x48001FE4);



// -------------------------------  Register Item: TIMER1_PIDR1  ----------------------------------
// SVD Line: 3160

//  <item> SFDITEM_REG__TIMER1_PIDR1
//    <name> PIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x48001FE4) Peripheral ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_PIDR1 >> 0) & 0xFFFFFFFF), ((TIMER1_PIDR1 = (TIMER1_PIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER1_PIDR2  ------------------------------
// SVD Line: 3168

unsigned int TIMER1_PIDR2 __AT (0x48001FE8);



// -------------------------------  Register Item: TIMER1_PIDR2  ----------------------------------
// SVD Line: 3168

//  <item> SFDITEM_REG__TIMER1_PIDR2
//    <name> PIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x48001FE8) Peripheral ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_PIDR2 >> 0) & 0xFFFFFFFF), ((TIMER1_PIDR2 = (TIMER1_PIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER1_PIDR3  ------------------------------
// SVD Line: 3176

unsigned int TIMER1_PIDR3 __AT (0x48001FEC);



// -------------------------------  Register Item: TIMER1_PIDR3  ----------------------------------
// SVD Line: 3176

//  <item> SFDITEM_REG__TIMER1_PIDR3
//    <name> PIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x48001FEC) Peripheral ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_PIDR3 >> 0) & 0xFFFFFFFF), ((TIMER1_PIDR3 = (TIMER1_PIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER1_CIDR0  ------------------------------
// SVD Line: 3184

unsigned int TIMER1_CIDR0 __AT (0x48001FF0);



// -------------------------------  Register Item: TIMER1_CIDR0  ----------------------------------
// SVD Line: 3184

//  <item> SFDITEM_REG__TIMER1_CIDR0
//    <name> CIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x48001FF0) Component ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_CIDR0 >> 0) & 0xFFFFFFFF), ((TIMER1_CIDR0 = (TIMER1_CIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER1_CIDR1  ------------------------------
// SVD Line: 3192

unsigned int TIMER1_CIDR1 __AT (0x48001FF4);



// -------------------------------  Register Item: TIMER1_CIDR1  ----------------------------------
// SVD Line: 3192

//  <item> SFDITEM_REG__TIMER1_CIDR1
//    <name> CIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x48001FF4) Component ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_CIDR1 >> 0) & 0xFFFFFFFF), ((TIMER1_CIDR1 = (TIMER1_CIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER1_CIDR2  ------------------------------
// SVD Line: 3200

unsigned int TIMER1_CIDR2 __AT (0x48001FF8);



// -------------------------------  Register Item: TIMER1_CIDR2  ----------------------------------
// SVD Line: 3200

//  <item> SFDITEM_REG__TIMER1_CIDR2
//    <name> CIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x48001FF8) Component ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_CIDR2 >> 0) & 0xFFFFFFFF), ((TIMER1_CIDR2 = (TIMER1_CIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER1_CIDR3  ------------------------------
// SVD Line: 3208

unsigned int TIMER1_CIDR3 __AT (0x48001FFC);



// -------------------------------  Register Item: TIMER1_CIDR3  ----------------------------------
// SVD Line: 3208

//  <item> SFDITEM_REG__TIMER1_CIDR3
//    <name> CIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x48001FFC) Component ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_CIDR3 >> 0) & 0xFFFFFFFF), ((TIMER1_CIDR3 = (TIMER1_CIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: TIMER1  ------------------------------------
// SVD Line: 3218

//  <view> TIMER1
//    <name> TIMER1 </name>
//    <item> SFDITEM_REG__TIMER1_CNTPCTLOW </item>
//    <item> SFDITEM_REG__TIMER1_CNTPCTHIGH </item>
//    <item> SFDITEM_REG__TIMER1_CNTFRQ </item>
//    <item> SFDITEM_REG__TIMER1_CNTP_CVAL_LOW </item>
//    <item> SFDITEM_REG__TIMER1_CNTP_CVAL_HIGH </item>
//    <item> SFDITEM_REG__TIMER1_CNTP_TVAL </item>
//    <item> SFDITEM_REG__TIMER1_CNTP_CTL </item>
//    <item> SFDITEM_REG__TIMER1_CNTP_AIVAL_LOW </item>
//    <item> SFDITEM_REG__TIMER1_CNTP_AIVAL_HIGH </item>
//    <item> SFDITEM_REG__TIMER1_CNTP_AIVAL_RELOAD </item>
//    <item> SFDITEM_REG__TIMER1_CNTP_AIVAL_CTL </item>
//    <item> SFDITEM_REG__TIMER1_CNTP_CFG </item>
//    <item> SFDITEM_REG__TIMER1_PIDR4 </item>
//    <item> SFDITEM_REG__TIMER1_PIDR0 </item>
//    <item> SFDITEM_REG__TIMER1_PIDR1 </item>
//    <item> SFDITEM_REG__TIMER1_PIDR2 </item>
//    <item> SFDITEM_REG__TIMER1_PIDR3 </item>
//    <item> SFDITEM_REG__TIMER1_CIDR0 </item>
//    <item> SFDITEM_REG__TIMER1_CIDR1 </item>
//    <item> SFDITEM_REG__TIMER1_CIDR2 </item>
//    <item> SFDITEM_REG__TIMER1_CIDR3 </item>
//  </view>
//  


// -------------------------  Register Item Address: TIMER2_CNTPCTLOW  ----------------------------
// SVD Line: 2969

unsigned int TIMER2_CNTPCTLOW __AT (0x48002000);



// -----------------------------  Register Item: TIMER2_CNTPCTLOW  --------------------------------
// SVD Line: 2969

//  <item> SFDITEM_REG__TIMER2_CNTPCTLOW
//    <name> CNTPCTLOW </name>
//    <i> [Bits 31..0] RO (@ 0x48002000) Physical Count Register Lower Word. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_CNTPCTLOW >> 0) & 0xFFFFFFFF), ((TIMER2_CNTPCTLOW = (TIMER2_CNTPCTLOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: TIMER2_CNTPCTHIGH  ----------------------------
// SVD Line: 2977

unsigned int TIMER2_CNTPCTHIGH __AT (0x48002004);



// ----------------------------  Register Item: TIMER2_CNTPCTHIGH  --------------------------------
// SVD Line: 2977

//  <item> SFDITEM_REG__TIMER2_CNTPCTHIGH
//    <name> CNTPCTHIGH </name>
//    <i> [Bits 31..0] RO (@ 0x48002004) Physical Count Register Higher Word. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_CNTPCTHIGH >> 0) & 0xFFFFFFFF), ((TIMER2_CNTPCTHIGH = (TIMER2_CNTPCTHIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: TIMER2_CNTFRQ  ------------------------------
// SVD Line: 2985

unsigned int TIMER2_CNTFRQ __AT (0x48002010);



// ------------------------------  Register Item: TIMER2_CNTFRQ  ----------------------------------
// SVD Line: 2985

//  <item> SFDITEM_REG__TIMER2_CNTFRQ
//    <name> CNTFRQ </name>
//    <i> [Bits 31..0] RW (@ 0x48002010) Counter Frequency Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_CNTFRQ >> 0) & 0xFFFFFFFF), ((TIMER2_CNTFRQ = (TIMER2_CNTFRQ & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER2_CNTP_CVAL_LOW  --------------------------
// SVD Line: 2993

unsigned int TIMER2_CNTP_CVAL_LOW __AT (0x48002020);



// ---------------------------  Register Item: TIMER2_CNTP_CVAL_LOW  ------------------------------
// SVD Line: 2993

//  <item> SFDITEM_REG__TIMER2_CNTP_CVAL_LOW
//    <name> CNTP_CVAL_LOW </name>
//    <i> [Bits 31..0] RW (@ 0x48002020) Timer Compare Value Lower Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_CNTP_CVAL_LOW >> 0) & 0xFFFFFFFF), ((TIMER2_CNTP_CVAL_LOW = (TIMER2_CNTP_CVAL_LOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: TIMER2_CNTP_CVAL_HIGH  --------------------------
// SVD Line: 3001

unsigned int TIMER2_CNTP_CVAL_HIGH __AT (0x48002024);



// --------------------------  Register Item: TIMER2_CNTP_CVAL_HIGH  ------------------------------
// SVD Line: 3001

//  <item> SFDITEM_REG__TIMER2_CNTP_CVAL_HIGH
//    <name> CNTP_CVAL_HIGH </name>
//    <i> [Bits 31..0] RW (@ 0x48002024) Timer Compare Value Higher Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_CNTP_CVAL_HIGH >> 0) & 0xFFFFFFFF), ((TIMER2_CNTP_CVAL_HIGH = (TIMER2_CNTP_CVAL_HIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: TIMER2_CNTP_TVAL  ----------------------------
// SVD Line: 3009

unsigned int TIMER2_CNTP_TVAL __AT (0x48002028);



// -----------------------------  Register Item: TIMER2_CNTP_TVAL  --------------------------------
// SVD Line: 3009

//  <item> SFDITEM_REG__TIMER2_CNTP_TVAL
//    <name> CNTP_TVAL </name>
//    <i> [Bits 31..0] RW (@ 0x48002028) Timer Value register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_CNTP_TVAL >> 0) & 0xFFFFFFFF), ((TIMER2_CNTP_TVAL = (TIMER2_CNTP_TVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: TIMER2_CNTP_CTL  -----------------------------
// SVD Line: 3017

unsigned int TIMER2_CNTP_CTL __AT (0x4800202C);



// -----------------------------  Field Item: TIMER2_CNTP_CTL_En  ---------------------------------
// SVD Line: 3024

//  <item> SFDITEM_FIELD__TIMER2_CNTP_CTL_En
//    <name> En </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4800202C) \nEnable Counter\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER2_CNTP_CTL ) </loc>
//      <o.0..0> En
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER2_CNTP_CTL_IMASK  -------------------------------
// SVD Line: 3039

//  <item> SFDITEM_FIELD__TIMER2_CNTP_CTL_IMASK
//    <name> IMASK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4800202C) \nInterrupt Mask\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER2_CNTP_CTL ) </loc>
//      <o.1..1> IMASK
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER2_CNTP_CTL_ISTATUS  ------------------------------
// SVD Line: 3054

//  <item> SFDITEM_FIELD__TIMER2_CNTP_CTL_ISTATUS
//    <name> ISTATUS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4800202C) \nInterrupt Status\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER2_CNTP_CTL ) </loc>
//      <o.2..2> ISTATUS
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: TIMER2_CNTP_CTL  --------------------------------
// SVD Line: 3017

//  <rtree> SFDITEM_REG__TIMER2_CNTP_CTL
//    <name> CNTP_CTL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4800202C) Timer Control register. </i>
//    <loc> ( (unsigned int)((TIMER2_CNTP_CTL >> 0) & 0xFFFFFFFF), ((TIMER2_CNTP_CTL = (TIMER2_CNTP_CTL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_CNTP_CTL_En </item>
//    <item> SFDITEM_FIELD__TIMER2_CNTP_CTL_IMASK </item>
//    <item> SFDITEM_FIELD__TIMER2_CNTP_CTL_ISTATUS </item>
//  </rtree>
//  


// ----------------------  Register Item Address: TIMER2_CNTP_AIVAL_LOW  --------------------------
// SVD Line: 3072

unsigned int TIMER2_CNTP_AIVAL_LOW __AT (0x48002040);



// --------------------------  Register Item: TIMER2_CNTP_AIVAL_LOW  ------------------------------
// SVD Line: 3072

//  <item> SFDITEM_REG__TIMER2_CNTP_AIVAL_LOW
//    <name> CNTP_AIVAL_LOW </name>
//    <i> [Bits 31..0] RO (@ 0x48002040) AutoIncrValue Lower Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_CNTP_AIVAL_LOW >> 0) & 0xFFFFFFFF), ((TIMER2_CNTP_AIVAL_LOW = (TIMER2_CNTP_AIVAL_LOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: TIMER2_CNTP_AIVAL_HIGH  -------------------------
// SVD Line: 3080

unsigned int TIMER2_CNTP_AIVAL_HIGH __AT (0x48002044);



// --------------------------  Register Item: TIMER2_CNTP_AIVAL_HIGH  -----------------------------
// SVD Line: 3080

//  <item> SFDITEM_REG__TIMER2_CNTP_AIVAL_HIGH
//    <name> CNTP_AIVAL_HIGH </name>
//    <i> [Bits 31..0] RO (@ 0x48002044) AutoIncrValue Higher Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_CNTP_AIVAL_HIGH >> 0) & 0xFFFFFFFF), ((TIMER2_CNTP_AIVAL_HIGH = (TIMER2_CNTP_AIVAL_HIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: TIMER2_CNTP_AIVAL_RELOAD  ------------------------
// SVD Line: 3088

unsigned int TIMER2_CNTP_AIVAL_RELOAD __AT (0x48002048);



// -------------------------  Register Item: TIMER2_CNTP_AIVAL_RELOAD  ----------------------------
// SVD Line: 3088

//  <item> SFDITEM_REG__TIMER2_CNTP_AIVAL_RELOAD
//    <name> CNTP_AIVAL_RELOAD </name>
//    <i> [Bits 31..0] RW (@ 0x48002048) AutoIncrValue Reload register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_CNTP_AIVAL_RELOAD >> 0) & 0xFFFFFFFF), ((TIMER2_CNTP_AIVAL_RELOAD = (TIMER2_CNTP_AIVAL_RELOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: TIMER2_CNTP_AIVAL_CTL  --------------------------
// SVD Line: 3096

unsigned int TIMER2_CNTP_AIVAL_CTL __AT (0x4800204C);



// --------------------------  Field Item: TIMER2_CNTP_AIVAL_CTL_En  ------------------------------
// SVD Line: 3103

//  <item> SFDITEM_FIELD__TIMER2_CNTP_AIVAL_CTL_En
//    <name> En </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4800204C) \nEnable AutoIncrement.\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER2_CNTP_AIVAL_CTL ) </loc>
//      <o.0..0> En
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// ------------------------  Field Item: TIMER2_CNTP_AIVAL_CTL_IRQ_CLR  ---------------------------
// SVD Line: 3118

//  <item> SFDITEM_FIELD__TIMER2_CNTP_AIVAL_CTL_IRQ_CLR
//    <name> IRQ_CLR </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4800204C) \nInterrupt Clear\n0 : Nop = Nop\n1 : Clear = Clear </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER2_CNTP_AIVAL_CTL ) </loc>
//      <o.1..1> IRQ_CLR
//        <0=> 0: Nop = Nop
//        <1=> 1: Clear = Clear
//    </combo>
//  </item>
//  


// --------------------------  Register RTree: TIMER2_CNTP_AIVAL_CTL  -----------------------------
// SVD Line: 3096

//  <rtree> SFDITEM_REG__TIMER2_CNTP_AIVAL_CTL
//    <name> CNTP_AIVAL_CTL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4800204C) AutoIncrValue Control register. </i>
//    <loc> ( (unsigned int)((TIMER2_CNTP_AIVAL_CTL >> 0) & 0xFFFFFFFF), ((TIMER2_CNTP_AIVAL_CTL = (TIMER2_CNTP_AIVAL_CTL & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_CNTP_AIVAL_CTL_En </item>
//    <item> SFDITEM_FIELD__TIMER2_CNTP_AIVAL_CTL_IRQ_CLR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER2_CNTP_CFG  -----------------------------
// SVD Line: 3136

unsigned int TIMER2_CNTP_CFG __AT (0x48002050);



// -----------------------------  Register Item: TIMER2_CNTP_CFG  ---------------------------------
// SVD Line: 3136

//  <item> SFDITEM_REG__TIMER2_CNTP_CFG
//    <name> CNTP_CFG </name>
//    <i> [Bits 31..0] RW (@ 0x48002050) Timer Configuration register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_CNTP_CFG >> 0) & 0xFFFFFFFF), ((TIMER2_CNTP_CFG = (TIMER2_CNTP_CFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER2_PIDR4  ------------------------------
// SVD Line: 3144

unsigned int TIMER2_PIDR4 __AT (0x48002FD0);



// -------------------------------  Register Item: TIMER2_PIDR4  ----------------------------------
// SVD Line: 3144

//  <item> SFDITEM_REG__TIMER2_PIDR4
//    <name> PIDR4 </name>
//    <i> [Bits 31..0] RO (@ 0x48002FD0) Peripheral ID 4 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_PIDR4 >> 0) & 0xFFFFFFFF), ((TIMER2_PIDR4 = (TIMER2_PIDR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER2_PIDR0  ------------------------------
// SVD Line: 3152

unsigned int TIMER2_PIDR0 __AT (0x48002FE0);



// -------------------------------  Register Item: TIMER2_PIDR0  ----------------------------------
// SVD Line: 3152

//  <item> SFDITEM_REG__TIMER2_PIDR0
//    <name> PIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x48002FE0) Peripheral ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_PIDR0 >> 0) & 0xFFFFFFFF), ((TIMER2_PIDR0 = (TIMER2_PIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER2_PIDR1  ------------------------------
// SVD Line: 3160

unsigned int TIMER2_PIDR1 __AT (0x48002FE4);



// -------------------------------  Register Item: TIMER2_PIDR1  ----------------------------------
// SVD Line: 3160

//  <item> SFDITEM_REG__TIMER2_PIDR1
//    <name> PIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x48002FE4) Peripheral ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_PIDR1 >> 0) & 0xFFFFFFFF), ((TIMER2_PIDR1 = (TIMER2_PIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER2_PIDR2  ------------------------------
// SVD Line: 3168

unsigned int TIMER2_PIDR2 __AT (0x48002FE8);



// -------------------------------  Register Item: TIMER2_PIDR2  ----------------------------------
// SVD Line: 3168

//  <item> SFDITEM_REG__TIMER2_PIDR2
//    <name> PIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x48002FE8) Peripheral ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_PIDR2 >> 0) & 0xFFFFFFFF), ((TIMER2_PIDR2 = (TIMER2_PIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER2_PIDR3  ------------------------------
// SVD Line: 3176

unsigned int TIMER2_PIDR3 __AT (0x48002FEC);



// -------------------------------  Register Item: TIMER2_PIDR3  ----------------------------------
// SVD Line: 3176

//  <item> SFDITEM_REG__TIMER2_PIDR3
//    <name> PIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x48002FEC) Peripheral ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_PIDR3 >> 0) & 0xFFFFFFFF), ((TIMER2_PIDR3 = (TIMER2_PIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER2_CIDR0  ------------------------------
// SVD Line: 3184

unsigned int TIMER2_CIDR0 __AT (0x48002FF0);



// -------------------------------  Register Item: TIMER2_CIDR0  ----------------------------------
// SVD Line: 3184

//  <item> SFDITEM_REG__TIMER2_CIDR0
//    <name> CIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x48002FF0) Component ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_CIDR0 >> 0) & 0xFFFFFFFF), ((TIMER2_CIDR0 = (TIMER2_CIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER2_CIDR1  ------------------------------
// SVD Line: 3192

unsigned int TIMER2_CIDR1 __AT (0x48002FF4);



// -------------------------------  Register Item: TIMER2_CIDR1  ----------------------------------
// SVD Line: 3192

//  <item> SFDITEM_REG__TIMER2_CIDR1
//    <name> CIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x48002FF4) Component ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_CIDR1 >> 0) & 0xFFFFFFFF), ((TIMER2_CIDR1 = (TIMER2_CIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER2_CIDR2  ------------------------------
// SVD Line: 3200

unsigned int TIMER2_CIDR2 __AT (0x48002FF8);



// -------------------------------  Register Item: TIMER2_CIDR2  ----------------------------------
// SVD Line: 3200

//  <item> SFDITEM_REG__TIMER2_CIDR2
//    <name> CIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x48002FF8) Component ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_CIDR2 >> 0) & 0xFFFFFFFF), ((TIMER2_CIDR2 = (TIMER2_CIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER2_CIDR3  ------------------------------
// SVD Line: 3208

unsigned int TIMER2_CIDR3 __AT (0x48002FFC);



// -------------------------------  Register Item: TIMER2_CIDR3  ----------------------------------
// SVD Line: 3208

//  <item> SFDITEM_REG__TIMER2_CIDR3
//    <name> CIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x48002FFC) Component ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_CIDR3 >> 0) & 0xFFFFFFFF), ((TIMER2_CIDR3 = (TIMER2_CIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: TIMER2  ------------------------------------
// SVD Line: 3230

//  <view> TIMER2
//    <name> TIMER2 </name>
//    <item> SFDITEM_REG__TIMER2_CNTPCTLOW </item>
//    <item> SFDITEM_REG__TIMER2_CNTPCTHIGH </item>
//    <item> SFDITEM_REG__TIMER2_CNTFRQ </item>
//    <item> SFDITEM_REG__TIMER2_CNTP_CVAL_LOW </item>
//    <item> SFDITEM_REG__TIMER2_CNTP_CVAL_HIGH </item>
//    <item> SFDITEM_REG__TIMER2_CNTP_TVAL </item>
//    <item> SFDITEM_REG__TIMER2_CNTP_CTL </item>
//    <item> SFDITEM_REG__TIMER2_CNTP_AIVAL_LOW </item>
//    <item> SFDITEM_REG__TIMER2_CNTP_AIVAL_HIGH </item>
//    <item> SFDITEM_REG__TIMER2_CNTP_AIVAL_RELOAD </item>
//    <item> SFDITEM_REG__TIMER2_CNTP_AIVAL_CTL </item>
//    <item> SFDITEM_REG__TIMER2_CNTP_CFG </item>
//    <item> SFDITEM_REG__TIMER2_PIDR4 </item>
//    <item> SFDITEM_REG__TIMER2_PIDR0 </item>
//    <item> SFDITEM_REG__TIMER2_PIDR1 </item>
//    <item> SFDITEM_REG__TIMER2_PIDR2 </item>
//    <item> SFDITEM_REG__TIMER2_PIDR3 </item>
//    <item> SFDITEM_REG__TIMER2_CIDR0 </item>
//    <item> SFDITEM_REG__TIMER2_CIDR1 </item>
//    <item> SFDITEM_REG__TIMER2_CIDR2 </item>
//    <item> SFDITEM_REG__TIMER2_CIDR3 </item>
//  </view>
//  


// -------------------------  Register Item Address: TIMER3_CNTPCTLOW  ----------------------------
// SVD Line: 2969

unsigned int TIMER3_CNTPCTLOW __AT (0x48003000);



// -----------------------------  Register Item: TIMER3_CNTPCTLOW  --------------------------------
// SVD Line: 2969

//  <item> SFDITEM_REG__TIMER3_CNTPCTLOW
//    <name> CNTPCTLOW </name>
//    <i> [Bits 31..0] RO (@ 0x48003000) Physical Count Register Lower Word. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_CNTPCTLOW >> 0) & 0xFFFFFFFF), ((TIMER3_CNTPCTLOW = (TIMER3_CNTPCTLOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: TIMER3_CNTPCTHIGH  ----------------------------
// SVD Line: 2977

unsigned int TIMER3_CNTPCTHIGH __AT (0x48003004);



// ----------------------------  Register Item: TIMER3_CNTPCTHIGH  --------------------------------
// SVD Line: 2977

//  <item> SFDITEM_REG__TIMER3_CNTPCTHIGH
//    <name> CNTPCTHIGH </name>
//    <i> [Bits 31..0] RO (@ 0x48003004) Physical Count Register Higher Word. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_CNTPCTHIGH >> 0) & 0xFFFFFFFF), ((TIMER3_CNTPCTHIGH = (TIMER3_CNTPCTHIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: TIMER3_CNTFRQ  ------------------------------
// SVD Line: 2985

unsigned int TIMER3_CNTFRQ __AT (0x48003010);



// ------------------------------  Register Item: TIMER3_CNTFRQ  ----------------------------------
// SVD Line: 2985

//  <item> SFDITEM_REG__TIMER3_CNTFRQ
//    <name> CNTFRQ </name>
//    <i> [Bits 31..0] RW (@ 0x48003010) Counter Frequency Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_CNTFRQ >> 0) & 0xFFFFFFFF), ((TIMER3_CNTFRQ = (TIMER3_CNTFRQ & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER3_CNTP_CVAL_LOW  --------------------------
// SVD Line: 2993

unsigned int TIMER3_CNTP_CVAL_LOW __AT (0x48003020);



// ---------------------------  Register Item: TIMER3_CNTP_CVAL_LOW  ------------------------------
// SVD Line: 2993

//  <item> SFDITEM_REG__TIMER3_CNTP_CVAL_LOW
//    <name> CNTP_CVAL_LOW </name>
//    <i> [Bits 31..0] RW (@ 0x48003020) Timer Compare Value Lower Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_CNTP_CVAL_LOW >> 0) & 0xFFFFFFFF), ((TIMER3_CNTP_CVAL_LOW = (TIMER3_CNTP_CVAL_LOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: TIMER3_CNTP_CVAL_HIGH  --------------------------
// SVD Line: 3001

unsigned int TIMER3_CNTP_CVAL_HIGH __AT (0x48003024);



// --------------------------  Register Item: TIMER3_CNTP_CVAL_HIGH  ------------------------------
// SVD Line: 3001

//  <item> SFDITEM_REG__TIMER3_CNTP_CVAL_HIGH
//    <name> CNTP_CVAL_HIGH </name>
//    <i> [Bits 31..0] RW (@ 0x48003024) Timer Compare Value Higher Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_CNTP_CVAL_HIGH >> 0) & 0xFFFFFFFF), ((TIMER3_CNTP_CVAL_HIGH = (TIMER3_CNTP_CVAL_HIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: TIMER3_CNTP_TVAL  ----------------------------
// SVD Line: 3009

unsigned int TIMER3_CNTP_TVAL __AT (0x48003028);



// -----------------------------  Register Item: TIMER3_CNTP_TVAL  --------------------------------
// SVD Line: 3009

//  <item> SFDITEM_REG__TIMER3_CNTP_TVAL
//    <name> CNTP_TVAL </name>
//    <i> [Bits 31..0] RW (@ 0x48003028) Timer Value register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_CNTP_TVAL >> 0) & 0xFFFFFFFF), ((TIMER3_CNTP_TVAL = (TIMER3_CNTP_TVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: TIMER3_CNTP_CTL  -----------------------------
// SVD Line: 3017

unsigned int TIMER3_CNTP_CTL __AT (0x4800302C);



// -----------------------------  Field Item: TIMER3_CNTP_CTL_En  ---------------------------------
// SVD Line: 3024

//  <item> SFDITEM_FIELD__TIMER3_CNTP_CTL_En
//    <name> En </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4800302C) \nEnable Counter\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER3_CNTP_CTL ) </loc>
//      <o.0..0> En
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER3_CNTP_CTL_IMASK  -------------------------------
// SVD Line: 3039

//  <item> SFDITEM_FIELD__TIMER3_CNTP_CTL_IMASK
//    <name> IMASK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4800302C) \nInterrupt Mask\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER3_CNTP_CTL ) </loc>
//      <o.1..1> IMASK
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER3_CNTP_CTL_ISTATUS  ------------------------------
// SVD Line: 3054

//  <item> SFDITEM_FIELD__TIMER3_CNTP_CTL_ISTATUS
//    <name> ISTATUS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4800302C) \nInterrupt Status\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER3_CNTP_CTL ) </loc>
//      <o.2..2> ISTATUS
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: TIMER3_CNTP_CTL  --------------------------------
// SVD Line: 3017

//  <rtree> SFDITEM_REG__TIMER3_CNTP_CTL
//    <name> CNTP_CTL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4800302C) Timer Control register. </i>
//    <loc> ( (unsigned int)((TIMER3_CNTP_CTL >> 0) & 0xFFFFFFFF), ((TIMER3_CNTP_CTL = (TIMER3_CNTP_CTL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_CNTP_CTL_En </item>
//    <item> SFDITEM_FIELD__TIMER3_CNTP_CTL_IMASK </item>
//    <item> SFDITEM_FIELD__TIMER3_CNTP_CTL_ISTATUS </item>
//  </rtree>
//  


// ----------------------  Register Item Address: TIMER3_CNTP_AIVAL_LOW  --------------------------
// SVD Line: 3072

unsigned int TIMER3_CNTP_AIVAL_LOW __AT (0x48003040);



// --------------------------  Register Item: TIMER3_CNTP_AIVAL_LOW  ------------------------------
// SVD Line: 3072

//  <item> SFDITEM_REG__TIMER3_CNTP_AIVAL_LOW
//    <name> CNTP_AIVAL_LOW </name>
//    <i> [Bits 31..0] RO (@ 0x48003040) AutoIncrValue Lower Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_CNTP_AIVAL_LOW >> 0) & 0xFFFFFFFF), ((TIMER3_CNTP_AIVAL_LOW = (TIMER3_CNTP_AIVAL_LOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: TIMER3_CNTP_AIVAL_HIGH  -------------------------
// SVD Line: 3080

unsigned int TIMER3_CNTP_AIVAL_HIGH __AT (0x48003044);



// --------------------------  Register Item: TIMER3_CNTP_AIVAL_HIGH  -----------------------------
// SVD Line: 3080

//  <item> SFDITEM_REG__TIMER3_CNTP_AIVAL_HIGH
//    <name> CNTP_AIVAL_HIGH </name>
//    <i> [Bits 31..0] RO (@ 0x48003044) AutoIncrValue Higher Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_CNTP_AIVAL_HIGH >> 0) & 0xFFFFFFFF), ((TIMER3_CNTP_AIVAL_HIGH = (TIMER3_CNTP_AIVAL_HIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: TIMER3_CNTP_AIVAL_RELOAD  ------------------------
// SVD Line: 3088

unsigned int TIMER3_CNTP_AIVAL_RELOAD __AT (0x48003048);



// -------------------------  Register Item: TIMER3_CNTP_AIVAL_RELOAD  ----------------------------
// SVD Line: 3088

//  <item> SFDITEM_REG__TIMER3_CNTP_AIVAL_RELOAD
//    <name> CNTP_AIVAL_RELOAD </name>
//    <i> [Bits 31..0] RW (@ 0x48003048) AutoIncrValue Reload register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_CNTP_AIVAL_RELOAD >> 0) & 0xFFFFFFFF), ((TIMER3_CNTP_AIVAL_RELOAD = (TIMER3_CNTP_AIVAL_RELOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: TIMER3_CNTP_AIVAL_CTL  --------------------------
// SVD Line: 3096

unsigned int TIMER3_CNTP_AIVAL_CTL __AT (0x4800304C);



// --------------------------  Field Item: TIMER3_CNTP_AIVAL_CTL_En  ------------------------------
// SVD Line: 3103

//  <item> SFDITEM_FIELD__TIMER3_CNTP_AIVAL_CTL_En
//    <name> En </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4800304C) \nEnable AutoIncrement.\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER3_CNTP_AIVAL_CTL ) </loc>
//      <o.0..0> En
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// ------------------------  Field Item: TIMER3_CNTP_AIVAL_CTL_IRQ_CLR  ---------------------------
// SVD Line: 3118

//  <item> SFDITEM_FIELD__TIMER3_CNTP_AIVAL_CTL_IRQ_CLR
//    <name> IRQ_CLR </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4800304C) \nInterrupt Clear\n0 : Nop = Nop\n1 : Clear = Clear </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER3_CNTP_AIVAL_CTL ) </loc>
//      <o.1..1> IRQ_CLR
//        <0=> 0: Nop = Nop
//        <1=> 1: Clear = Clear
//    </combo>
//  </item>
//  


// --------------------------  Register RTree: TIMER3_CNTP_AIVAL_CTL  -----------------------------
// SVD Line: 3096

//  <rtree> SFDITEM_REG__TIMER3_CNTP_AIVAL_CTL
//    <name> CNTP_AIVAL_CTL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4800304C) AutoIncrValue Control register. </i>
//    <loc> ( (unsigned int)((TIMER3_CNTP_AIVAL_CTL >> 0) & 0xFFFFFFFF), ((TIMER3_CNTP_AIVAL_CTL = (TIMER3_CNTP_AIVAL_CTL & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_CNTP_AIVAL_CTL_En </item>
//    <item> SFDITEM_FIELD__TIMER3_CNTP_AIVAL_CTL_IRQ_CLR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER3_CNTP_CFG  -----------------------------
// SVD Line: 3136

unsigned int TIMER3_CNTP_CFG __AT (0x48003050);



// -----------------------------  Register Item: TIMER3_CNTP_CFG  ---------------------------------
// SVD Line: 3136

//  <item> SFDITEM_REG__TIMER3_CNTP_CFG
//    <name> CNTP_CFG </name>
//    <i> [Bits 31..0] RW (@ 0x48003050) Timer Configuration register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_CNTP_CFG >> 0) & 0xFFFFFFFF), ((TIMER3_CNTP_CFG = (TIMER3_CNTP_CFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER3_PIDR4  ------------------------------
// SVD Line: 3144

unsigned int TIMER3_PIDR4 __AT (0x48003FD0);



// -------------------------------  Register Item: TIMER3_PIDR4  ----------------------------------
// SVD Line: 3144

//  <item> SFDITEM_REG__TIMER3_PIDR4
//    <name> PIDR4 </name>
//    <i> [Bits 31..0] RO (@ 0x48003FD0) Peripheral ID 4 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_PIDR4 >> 0) & 0xFFFFFFFF), ((TIMER3_PIDR4 = (TIMER3_PIDR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER3_PIDR0  ------------------------------
// SVD Line: 3152

unsigned int TIMER3_PIDR0 __AT (0x48003FE0);



// -------------------------------  Register Item: TIMER3_PIDR0  ----------------------------------
// SVD Line: 3152

//  <item> SFDITEM_REG__TIMER3_PIDR0
//    <name> PIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x48003FE0) Peripheral ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_PIDR0 >> 0) & 0xFFFFFFFF), ((TIMER3_PIDR0 = (TIMER3_PIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER3_PIDR1  ------------------------------
// SVD Line: 3160

unsigned int TIMER3_PIDR1 __AT (0x48003FE4);



// -------------------------------  Register Item: TIMER3_PIDR1  ----------------------------------
// SVD Line: 3160

//  <item> SFDITEM_REG__TIMER3_PIDR1
//    <name> PIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x48003FE4) Peripheral ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_PIDR1 >> 0) & 0xFFFFFFFF), ((TIMER3_PIDR1 = (TIMER3_PIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER3_PIDR2  ------------------------------
// SVD Line: 3168

unsigned int TIMER3_PIDR2 __AT (0x48003FE8);



// -------------------------------  Register Item: TIMER3_PIDR2  ----------------------------------
// SVD Line: 3168

//  <item> SFDITEM_REG__TIMER3_PIDR2
//    <name> PIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x48003FE8) Peripheral ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_PIDR2 >> 0) & 0xFFFFFFFF), ((TIMER3_PIDR2 = (TIMER3_PIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER3_PIDR3  ------------------------------
// SVD Line: 3176

unsigned int TIMER3_PIDR3 __AT (0x48003FEC);



// -------------------------------  Register Item: TIMER3_PIDR3  ----------------------------------
// SVD Line: 3176

//  <item> SFDITEM_REG__TIMER3_PIDR3
//    <name> PIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x48003FEC) Peripheral ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_PIDR3 >> 0) & 0xFFFFFFFF), ((TIMER3_PIDR3 = (TIMER3_PIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER3_CIDR0  ------------------------------
// SVD Line: 3184

unsigned int TIMER3_CIDR0 __AT (0x48003FF0);



// -------------------------------  Register Item: TIMER3_CIDR0  ----------------------------------
// SVD Line: 3184

//  <item> SFDITEM_REG__TIMER3_CIDR0
//    <name> CIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x48003FF0) Component ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_CIDR0 >> 0) & 0xFFFFFFFF), ((TIMER3_CIDR0 = (TIMER3_CIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER3_CIDR1  ------------------------------
// SVD Line: 3192

unsigned int TIMER3_CIDR1 __AT (0x48003FF4);



// -------------------------------  Register Item: TIMER3_CIDR1  ----------------------------------
// SVD Line: 3192

//  <item> SFDITEM_REG__TIMER3_CIDR1
//    <name> CIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x48003FF4) Component ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_CIDR1 >> 0) & 0xFFFFFFFF), ((TIMER3_CIDR1 = (TIMER3_CIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER3_CIDR2  ------------------------------
// SVD Line: 3200

unsigned int TIMER3_CIDR2 __AT (0x48003FF8);



// -------------------------------  Register Item: TIMER3_CIDR2  ----------------------------------
// SVD Line: 3200

//  <item> SFDITEM_REG__TIMER3_CIDR2
//    <name> CIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x48003FF8) Component ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_CIDR2 >> 0) & 0xFFFFFFFF), ((TIMER3_CIDR2 = (TIMER3_CIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TIMER3_CIDR3  ------------------------------
// SVD Line: 3208

unsigned int TIMER3_CIDR3 __AT (0x48003FFC);



// -------------------------------  Register Item: TIMER3_CIDR3  ----------------------------------
// SVD Line: 3208

//  <item> SFDITEM_REG__TIMER3_CIDR3
//    <name> CIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x48003FFC) Component ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_CIDR3 >> 0) & 0xFFFFFFFF), ((TIMER3_CIDR3 = (TIMER3_CIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: TIMER3  ------------------------------------
// SVD Line: 3242

//  <view> TIMER3
//    <name> TIMER3 </name>
//    <item> SFDITEM_REG__TIMER3_CNTPCTLOW </item>
//    <item> SFDITEM_REG__TIMER3_CNTPCTHIGH </item>
//    <item> SFDITEM_REG__TIMER3_CNTFRQ </item>
//    <item> SFDITEM_REG__TIMER3_CNTP_CVAL_LOW </item>
//    <item> SFDITEM_REG__TIMER3_CNTP_CVAL_HIGH </item>
//    <item> SFDITEM_REG__TIMER3_CNTP_TVAL </item>
//    <item> SFDITEM_REG__TIMER3_CNTP_CTL </item>
//    <item> SFDITEM_REG__TIMER3_CNTP_AIVAL_LOW </item>
//    <item> SFDITEM_REG__TIMER3_CNTP_AIVAL_HIGH </item>
//    <item> SFDITEM_REG__TIMER3_CNTP_AIVAL_RELOAD </item>
//    <item> SFDITEM_REG__TIMER3_CNTP_AIVAL_CTL </item>
//    <item> SFDITEM_REG__TIMER3_CNTP_CFG </item>
//    <item> SFDITEM_REG__TIMER3_PIDR4 </item>
//    <item> SFDITEM_REG__TIMER3_PIDR0 </item>
//    <item> SFDITEM_REG__TIMER3_PIDR1 </item>
//    <item> SFDITEM_REG__TIMER3_PIDR2 </item>
//    <item> SFDITEM_REG__TIMER3_PIDR3 </item>
//    <item> SFDITEM_REG__TIMER3_CIDR0 </item>
//    <item> SFDITEM_REG__TIMER3_CIDR1 </item>
//    <item> SFDITEM_REG__TIMER3_CIDR2 </item>
//    <item> SFDITEM_REG__TIMER3_CIDR3 </item>
//  </view>
//  


// ---------------------------  Register Item Address: SLOWCLK_CTRL  ------------------------------
// SVD Line: 3270

unsigned int SLOWCLK_CTRL __AT (0x4802F000);



// -----------------------------  Field Item: SLOWCLK_CTRL_ENABLE  --------------------------------
// SVD Line: 3275

//  <item> SFDITEM_FIELD__SLOWCLK_CTRL_ENABLE
//    <name> ENABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4802F000) \nEnable\n0 : Disable = Timer is disabled\n1 : Enable = Timer is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SLOWCLK_CTRL ) </loc>
//      <o.0..0> ENABLE
//        <0=> 0: Disable = Timer is disabled
//        <1=> 1: Enable = Timer is enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SLOWCLK_CTRL_EXTIN  ---------------------------------
// SVD Line: 3292

//  <item> SFDITEM_FIELD__SLOWCLK_CTRL_EXTIN
//    <name> EXTIN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4802F000) \nExternal Input as Enable\n0 : Disable = External Input as Enable is disabled\n1 : Enable = External Input as Enable is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SLOWCLK_CTRL ) </loc>
//      <o.1..1> EXTIN
//        <0=> 0: Disable = External Input as Enable is disabled
//        <1=> 1: Enable = External Input as Enable is enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SLOWCLK_CTRL_EXTCLK  --------------------------------
// SVD Line: 3309

//  <item> SFDITEM_FIELD__SLOWCLK_CTRL_EXTCLK
//    <name> EXTCLK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4802F000) \nExternal Clock Enable\n0 : Disable = External Clock is disabled\n1 : Enable = External Clock is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SLOWCLK_CTRL ) </loc>
//      <o.2..2> EXTCLK
//        <0=> 0: Disable = External Clock is disabled
//        <1=> 1: Enable = External Clock is enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SLOWCLK_CTRL_INTEN  ---------------------------------
// SVD Line: 3326

//  <item> SFDITEM_FIELD__SLOWCLK_CTRL_INTEN
//    <name> INTEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4802F000) \nInterrupt Enable\n0 : Disable = Interrupt is disabled\n1 : Enable = Interrupt is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SLOWCLK_CTRL ) </loc>
//      <o.3..3> INTEN
//        <0=> 0: Disable = Interrupt is disabled
//        <1=> 1: Enable = Interrupt is enabled
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: SLOWCLK_CTRL  ----------------------------------
// SVD Line: 3270

//  <rtree> SFDITEM_REG__SLOWCLK_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4802F000) Control Register </i>
//    <loc> ( (unsigned int)((SLOWCLK_CTRL >> 0) & 0xFFFFFFFF), ((SLOWCLK_CTRL = (SLOWCLK_CTRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SLOWCLK_CTRL_ENABLE </item>
//    <item> SFDITEM_FIELD__SLOWCLK_CTRL_EXTIN </item>
//    <item> SFDITEM_FIELD__SLOWCLK_CTRL_EXTCLK </item>
//    <item> SFDITEM_FIELD__SLOWCLK_CTRL_INTEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SLOWCLK_VALUE  ------------------------------
// SVD Line: 3345

unsigned int SLOWCLK_VALUE __AT (0x4802F004);



// ------------------------------  Register Item: SLOWCLK_VALUE  ----------------------------------
// SVD Line: 3345

//  <item> SFDITEM_REG__SLOWCLK_VALUE
//    <name> VALUE </name>
//    <i> [Bits 31..0] RW (@ 0x4802F004) Current Timer Counter Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((SLOWCLK_VALUE >> 0) & 0xFFFFFFFF), ((SLOWCLK_VALUE = (SLOWCLK_VALUE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: SLOWCLK_RELOAD  -----------------------------
// SVD Line: 3350

unsigned int SLOWCLK_RELOAD __AT (0x4802F008);



// ------------------------------  Register Item: SLOWCLK_RELOAD  ---------------------------------
// SVD Line: 3350

//  <item> SFDITEM_REG__SLOWCLK_RELOAD
//    <name> RELOAD </name>
//    <i> [Bits 31..0] RW (@ 0x4802F008) Counter Reload Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((SLOWCLK_RELOAD >> 0) & 0xFFFFFFFF), ((SLOWCLK_RELOAD = (SLOWCLK_RELOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: SLOWCLK_INTSTATUS  ----------------------------
// SVD Line: 3355

unsigned int SLOWCLK_INTSTATUS __AT (0x4802F00C);



// ----------------------------  Register Item: SLOWCLK_INTSTATUS  --------------------------------
// SVD Line: 3355

//  <item> SFDITEM_REG__SLOWCLK_INTSTATUS
//    <name> INTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x4802F00C) Timer Interrupt status register </i>
//    <edit> 
//      <loc> ( (unsigned int)((SLOWCLK_INTSTATUS >> 0) & 0xFFFFFFFF), ((SLOWCLK_INTSTATUS = (SLOWCLK_INTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SLOWCLK_INTCLEAR  ----------------------------
// SVD Line: 3361

unsigned int SLOWCLK_INTCLEAR __AT (0x4802F00C);



// -----------------------------  Register Item: SLOWCLK_INTCLEAR  --------------------------------
// SVD Line: 3361

//  <item> SFDITEM_REG__SLOWCLK_INTCLEAR
//    <name> INTCLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x4802F00C) Timer Interrupt clear register </i>
//    <edit> 
//      <loc> ( (unsigned int)((SLOWCLK_INTCLEAR >> 0) & 0xFFFFFFFF), ((SLOWCLK_INTCLEAR = (SLOWCLK_INTCLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Peripheral View: SLOWCLK  ------------------------------------
// SVD Line: 3254

//  <view> SLOWCLK
//    <name> SLOWCLK </name>
//    <item> SFDITEM_REG__SLOWCLK_CTRL </item>
//    <item> SFDITEM_REG__SLOWCLK_VALUE </item>
//    <item> SFDITEM_REG__SLOWCLK_RELOAD </item>
//    <item> SFDITEM_REG__SLOWCLK_INTSTATUS </item>
//    <item> SFDITEM_REG__SLOWCLK_INTCLEAR </item>
//  </view>
//  


// ---------------------  Register Item Address: TIMER0_Secure_CNTPCTLOW  -------------------------
// SVD Line: 2969

unsigned int TIMER0_Secure_CNTPCTLOW __AT (0x58000000);



// -------------------------  Register Item: TIMER0_Secure_CNTPCTLOW  -----------------------------
// SVD Line: 2969

//  <item> SFDITEM_REG__TIMER0_Secure_CNTPCTLOW
//    <name> CNTPCTLOW </name>
//    <i> [Bits 31..0] RO (@ 0x58000000) Physical Count Register Lower Word. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_Secure_CNTPCTLOW >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_CNTPCTLOW = (TIMER0_Secure_CNTPCTLOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: TIMER0_Secure_CNTPCTHIGH  ------------------------
// SVD Line: 2977

unsigned int TIMER0_Secure_CNTPCTHIGH __AT (0x58000004);



// -------------------------  Register Item: TIMER0_Secure_CNTPCTHIGH  ----------------------------
// SVD Line: 2977

//  <item> SFDITEM_REG__TIMER0_Secure_CNTPCTHIGH
//    <name> CNTPCTHIGH </name>
//    <i> [Bits 31..0] RO (@ 0x58000004) Physical Count Register Higher Word. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_Secure_CNTPCTHIGH >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_CNTPCTHIGH = (TIMER0_Secure_CNTPCTHIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER0_Secure_CNTFRQ  --------------------------
// SVD Line: 2985

unsigned int TIMER0_Secure_CNTFRQ __AT (0x58000010);



// ---------------------------  Register Item: TIMER0_Secure_CNTFRQ  ------------------------------
// SVD Line: 2985

//  <item> SFDITEM_REG__TIMER0_Secure_CNTFRQ
//    <name> CNTFRQ </name>
//    <i> [Bits 31..0] RW (@ 0x58000010) Counter Frequency Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_Secure_CNTFRQ >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_CNTFRQ = (TIMER0_Secure_CNTFRQ & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: TIMER0_Secure_CNTP_CVAL_LOW  -----------------------
// SVD Line: 2993

unsigned int TIMER0_Secure_CNTP_CVAL_LOW __AT (0x58000020);



// -----------------------  Register Item: TIMER0_Secure_CNTP_CVAL_LOW  ---------------------------
// SVD Line: 2993

//  <item> SFDITEM_REG__TIMER0_Secure_CNTP_CVAL_LOW
//    <name> CNTP_CVAL_LOW </name>
//    <i> [Bits 31..0] RW (@ 0x58000020) Timer Compare Value Lower Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_Secure_CNTP_CVAL_LOW >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_CNTP_CVAL_LOW = (TIMER0_Secure_CNTP_CVAL_LOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: TIMER0_Secure_CNTP_CVAL_HIGH  ----------------------
// SVD Line: 3001

unsigned int TIMER0_Secure_CNTP_CVAL_HIGH __AT (0x58000024);



// -----------------------  Register Item: TIMER0_Secure_CNTP_CVAL_HIGH  --------------------------
// SVD Line: 3001

//  <item> SFDITEM_REG__TIMER0_Secure_CNTP_CVAL_HIGH
//    <name> CNTP_CVAL_HIGH </name>
//    <i> [Bits 31..0] RW (@ 0x58000024) Timer Compare Value Higher Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_Secure_CNTP_CVAL_HIGH >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_CNTP_CVAL_HIGH = (TIMER0_Secure_CNTP_CVAL_HIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: TIMER0_Secure_CNTP_TVAL  -------------------------
// SVD Line: 3009

unsigned int TIMER0_Secure_CNTP_TVAL __AT (0x58000028);



// -------------------------  Register Item: TIMER0_Secure_CNTP_TVAL  -----------------------------
// SVD Line: 3009

//  <item> SFDITEM_REG__TIMER0_Secure_CNTP_TVAL
//    <name> CNTP_TVAL </name>
//    <i> [Bits 31..0] RW (@ 0x58000028) Timer Value register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_Secure_CNTP_TVAL >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_CNTP_TVAL = (TIMER0_Secure_CNTP_TVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: TIMER0_Secure_CNTP_CTL  -------------------------
// SVD Line: 3017

unsigned int TIMER0_Secure_CNTP_CTL __AT (0x5800002C);



// --------------------------  Field Item: TIMER0_Secure_CNTP_CTL_En  -----------------------------
// SVD Line: 3024

//  <item> SFDITEM_FIELD__TIMER0_Secure_CNTP_CTL_En
//    <name> En </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5800002C) \nEnable Counter\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_Secure_CNTP_CTL ) </loc>
//      <o.0..0> En
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// ------------------------  Field Item: TIMER0_Secure_CNTP_CTL_IMASK  ----------------------------
// SVD Line: 3039

//  <item> SFDITEM_FIELD__TIMER0_Secure_CNTP_CTL_IMASK
//    <name> IMASK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5800002C) \nInterrupt Mask\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_Secure_CNTP_CTL ) </loc>
//      <o.1..1> IMASK
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// -----------------------  Field Item: TIMER0_Secure_CNTP_CTL_ISTATUS  ---------------------------
// SVD Line: 3054

//  <item> SFDITEM_FIELD__TIMER0_Secure_CNTP_CTL_ISTATUS
//    <name> ISTATUS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x5800002C) \nInterrupt Status\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_Secure_CNTP_CTL ) </loc>
//      <o.2..2> ISTATUS
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: TIMER0_Secure_CNTP_CTL  -----------------------------
// SVD Line: 3017

//  <rtree> SFDITEM_REG__TIMER0_Secure_CNTP_CTL
//    <name> CNTP_CTL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5800002C) Timer Control register. </i>
//    <loc> ( (unsigned int)((TIMER0_Secure_CNTP_CTL >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_CNTP_CTL = (TIMER0_Secure_CNTP_CTL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_Secure_CNTP_CTL_En </item>
//    <item> SFDITEM_FIELD__TIMER0_Secure_CNTP_CTL_IMASK </item>
//    <item> SFDITEM_FIELD__TIMER0_Secure_CNTP_CTL_ISTATUS </item>
//  </rtree>
//  


// -------------------  Register Item Address: TIMER0_Secure_CNTP_AIVAL_LOW  ----------------------
// SVD Line: 3072

unsigned int TIMER0_Secure_CNTP_AIVAL_LOW __AT (0x58000040);



// -----------------------  Register Item: TIMER0_Secure_CNTP_AIVAL_LOW  --------------------------
// SVD Line: 3072

//  <item> SFDITEM_REG__TIMER0_Secure_CNTP_AIVAL_LOW
//    <name> CNTP_AIVAL_LOW </name>
//    <i> [Bits 31..0] RO (@ 0x58000040) AutoIncrValue Lower Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_Secure_CNTP_AIVAL_LOW >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_CNTP_AIVAL_LOW = (TIMER0_Secure_CNTP_AIVAL_LOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: TIMER0_Secure_CNTP_AIVAL_HIGH  ----------------------
// SVD Line: 3080

unsigned int TIMER0_Secure_CNTP_AIVAL_HIGH __AT (0x58000044);



// ----------------------  Register Item: TIMER0_Secure_CNTP_AIVAL_HIGH  --------------------------
// SVD Line: 3080

//  <item> SFDITEM_REG__TIMER0_Secure_CNTP_AIVAL_HIGH
//    <name> CNTP_AIVAL_HIGH </name>
//    <i> [Bits 31..0] RO (@ 0x58000044) AutoIncrValue Higher Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_Secure_CNTP_AIVAL_HIGH >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_CNTP_AIVAL_HIGH = (TIMER0_Secure_CNTP_AIVAL_HIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------  Register Item Address: TIMER0_Secure_CNTP_AIVAL_RELOAD  ---------------------
// SVD Line: 3088

unsigned int TIMER0_Secure_CNTP_AIVAL_RELOAD __AT (0x58000048);



// ---------------------  Register Item: TIMER0_Secure_CNTP_AIVAL_RELOAD  -------------------------
// SVD Line: 3088

//  <item> SFDITEM_REG__TIMER0_Secure_CNTP_AIVAL_RELOAD
//    <name> CNTP_AIVAL_RELOAD </name>
//    <i> [Bits 31..0] RW (@ 0x58000048) AutoIncrValue Reload register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_Secure_CNTP_AIVAL_RELOAD >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_CNTP_AIVAL_RELOAD = (TIMER0_Secure_CNTP_AIVAL_RELOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: TIMER0_Secure_CNTP_AIVAL_CTL  ----------------------
// SVD Line: 3096

unsigned int TIMER0_Secure_CNTP_AIVAL_CTL __AT (0x5800004C);



// -----------------------  Field Item: TIMER0_Secure_CNTP_AIVAL_CTL_En  --------------------------
// SVD Line: 3103

//  <item> SFDITEM_FIELD__TIMER0_Secure_CNTP_AIVAL_CTL_En
//    <name> En </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5800004C) \nEnable AutoIncrement.\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_Secure_CNTP_AIVAL_CTL ) </loc>
//      <o.0..0> En
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// --------------------  Field Item: TIMER0_Secure_CNTP_AIVAL_CTL_IRQ_CLR  ------------------------
// SVD Line: 3118

//  <item> SFDITEM_FIELD__TIMER0_Secure_CNTP_AIVAL_CTL_IRQ_CLR
//    <name> IRQ_CLR </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5800004C) \nInterrupt Clear\n0 : Nop = Nop\n1 : Clear = Clear </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_Secure_CNTP_AIVAL_CTL ) </loc>
//      <o.1..1> IRQ_CLR
//        <0=> 0: Nop = Nop
//        <1=> 1: Clear = Clear
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: TIMER0_Secure_CNTP_AIVAL_CTL  --------------------------
// SVD Line: 3096

//  <rtree> SFDITEM_REG__TIMER0_Secure_CNTP_AIVAL_CTL
//    <name> CNTP_AIVAL_CTL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5800004C) AutoIncrValue Control register. </i>
//    <loc> ( (unsigned int)((TIMER0_Secure_CNTP_AIVAL_CTL >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_CNTP_AIVAL_CTL = (TIMER0_Secure_CNTP_AIVAL_CTL & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_Secure_CNTP_AIVAL_CTL_En </item>
//    <item> SFDITEM_FIELD__TIMER0_Secure_CNTP_AIVAL_CTL_IRQ_CLR </item>
//  </rtree>
//  


// ----------------------  Register Item Address: TIMER0_Secure_CNTP_CFG  -------------------------
// SVD Line: 3136

unsigned int TIMER0_Secure_CNTP_CFG __AT (0x58000050);



// --------------------------  Register Item: TIMER0_Secure_CNTP_CFG  -----------------------------
// SVD Line: 3136

//  <item> SFDITEM_REG__TIMER0_Secure_CNTP_CFG
//    <name> CNTP_CFG </name>
//    <i> [Bits 31..0] RW (@ 0x58000050) Timer Configuration register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_Secure_CNTP_CFG >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_CNTP_CFG = (TIMER0_Secure_CNTP_CFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER0_Secure_PIDR4  ---------------------------
// SVD Line: 3144

unsigned int TIMER0_Secure_PIDR4 __AT (0x58000FD0);



// ---------------------------  Register Item: TIMER0_Secure_PIDR4  -------------------------------
// SVD Line: 3144

//  <item> SFDITEM_REG__TIMER0_Secure_PIDR4
//    <name> PIDR4 </name>
//    <i> [Bits 31..0] RO (@ 0x58000FD0) Peripheral ID 4 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_Secure_PIDR4 >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_PIDR4 = (TIMER0_Secure_PIDR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER0_Secure_PIDR0  ---------------------------
// SVD Line: 3152

unsigned int TIMER0_Secure_PIDR0 __AT (0x58000FE0);



// ---------------------------  Register Item: TIMER0_Secure_PIDR0  -------------------------------
// SVD Line: 3152

//  <item> SFDITEM_REG__TIMER0_Secure_PIDR0
//    <name> PIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x58000FE0) Peripheral ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_Secure_PIDR0 >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_PIDR0 = (TIMER0_Secure_PIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER0_Secure_PIDR1  ---------------------------
// SVD Line: 3160

unsigned int TIMER0_Secure_PIDR1 __AT (0x58000FE4);



// ---------------------------  Register Item: TIMER0_Secure_PIDR1  -------------------------------
// SVD Line: 3160

//  <item> SFDITEM_REG__TIMER0_Secure_PIDR1
//    <name> PIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x58000FE4) Peripheral ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_Secure_PIDR1 >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_PIDR1 = (TIMER0_Secure_PIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER0_Secure_PIDR2  ---------------------------
// SVD Line: 3168

unsigned int TIMER0_Secure_PIDR2 __AT (0x58000FE8);



// ---------------------------  Register Item: TIMER0_Secure_PIDR2  -------------------------------
// SVD Line: 3168

//  <item> SFDITEM_REG__TIMER0_Secure_PIDR2
//    <name> PIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x58000FE8) Peripheral ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_Secure_PIDR2 >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_PIDR2 = (TIMER0_Secure_PIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER0_Secure_PIDR3  ---------------------------
// SVD Line: 3176

unsigned int TIMER0_Secure_PIDR3 __AT (0x58000FEC);



// ---------------------------  Register Item: TIMER0_Secure_PIDR3  -------------------------------
// SVD Line: 3176

//  <item> SFDITEM_REG__TIMER0_Secure_PIDR3
//    <name> PIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x58000FEC) Peripheral ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_Secure_PIDR3 >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_PIDR3 = (TIMER0_Secure_PIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER0_Secure_CIDR0  ---------------------------
// SVD Line: 3184

unsigned int TIMER0_Secure_CIDR0 __AT (0x58000FF0);



// ---------------------------  Register Item: TIMER0_Secure_CIDR0  -------------------------------
// SVD Line: 3184

//  <item> SFDITEM_REG__TIMER0_Secure_CIDR0
//    <name> CIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x58000FF0) Component ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_Secure_CIDR0 >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_CIDR0 = (TIMER0_Secure_CIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER0_Secure_CIDR1  ---------------------------
// SVD Line: 3192

unsigned int TIMER0_Secure_CIDR1 __AT (0x58000FF4);



// ---------------------------  Register Item: TIMER0_Secure_CIDR1  -------------------------------
// SVD Line: 3192

//  <item> SFDITEM_REG__TIMER0_Secure_CIDR1
//    <name> CIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x58000FF4) Component ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_Secure_CIDR1 >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_CIDR1 = (TIMER0_Secure_CIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER0_Secure_CIDR2  ---------------------------
// SVD Line: 3200

unsigned int TIMER0_Secure_CIDR2 __AT (0x58000FF8);



// ---------------------------  Register Item: TIMER0_Secure_CIDR2  -------------------------------
// SVD Line: 3200

//  <item> SFDITEM_REG__TIMER0_Secure_CIDR2
//    <name> CIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x58000FF8) Component ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_Secure_CIDR2 >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_CIDR2 = (TIMER0_Secure_CIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER0_Secure_CIDR3  ---------------------------
// SVD Line: 3208

unsigned int TIMER0_Secure_CIDR3 __AT (0x58000FFC);



// ---------------------------  Register Item: TIMER0_Secure_CIDR3  -------------------------------
// SVD Line: 3208

//  <item> SFDITEM_REG__TIMER0_Secure_CIDR3
//    <name> CIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x58000FFC) Component ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_Secure_CIDR3 >> 0) & 0xFFFFFFFF), ((TIMER0_Secure_CIDR3 = (TIMER0_Secure_CIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Peripheral View: TIMER0_Secure  ---------------------------------
// SVD Line: 3372

//  <view> TIMER0_Secure
//    <name> TIMER0_Secure </name>
//    <item> SFDITEM_REG__TIMER0_Secure_CNTPCTLOW </item>
//    <item> SFDITEM_REG__TIMER0_Secure_CNTPCTHIGH </item>
//    <item> SFDITEM_REG__TIMER0_Secure_CNTFRQ </item>
//    <item> SFDITEM_REG__TIMER0_Secure_CNTP_CVAL_LOW </item>
//    <item> SFDITEM_REG__TIMER0_Secure_CNTP_CVAL_HIGH </item>
//    <item> SFDITEM_REG__TIMER0_Secure_CNTP_TVAL </item>
//    <item> SFDITEM_REG__TIMER0_Secure_CNTP_CTL </item>
//    <item> SFDITEM_REG__TIMER0_Secure_CNTP_AIVAL_LOW </item>
//    <item> SFDITEM_REG__TIMER0_Secure_CNTP_AIVAL_HIGH </item>
//    <item> SFDITEM_REG__TIMER0_Secure_CNTP_AIVAL_RELOAD </item>
//    <item> SFDITEM_REG__TIMER0_Secure_CNTP_AIVAL_CTL </item>
//    <item> SFDITEM_REG__TIMER0_Secure_CNTP_CFG </item>
//    <item> SFDITEM_REG__TIMER0_Secure_PIDR4 </item>
//    <item> SFDITEM_REG__TIMER0_Secure_PIDR0 </item>
//    <item> SFDITEM_REG__TIMER0_Secure_PIDR1 </item>
//    <item> SFDITEM_REG__TIMER0_Secure_PIDR2 </item>
//    <item> SFDITEM_REG__TIMER0_Secure_PIDR3 </item>
//    <item> SFDITEM_REG__TIMER0_Secure_CIDR0 </item>
//    <item> SFDITEM_REG__TIMER0_Secure_CIDR1 </item>
//    <item> SFDITEM_REG__TIMER0_Secure_CIDR2 </item>
//    <item> SFDITEM_REG__TIMER0_Secure_CIDR3 </item>
//  </view>
//  


// ---------------------  Register Item Address: TIMER1_Secure_CNTPCTLOW  -------------------------
// SVD Line: 2969

unsigned int TIMER1_Secure_CNTPCTLOW __AT (0x58001000);



// -------------------------  Register Item: TIMER1_Secure_CNTPCTLOW  -----------------------------
// SVD Line: 2969

//  <item> SFDITEM_REG__TIMER1_Secure_CNTPCTLOW
//    <name> CNTPCTLOW </name>
//    <i> [Bits 31..0] RO (@ 0x58001000) Physical Count Register Lower Word. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_Secure_CNTPCTLOW >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_CNTPCTLOW = (TIMER1_Secure_CNTPCTLOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: TIMER1_Secure_CNTPCTHIGH  ------------------------
// SVD Line: 2977

unsigned int TIMER1_Secure_CNTPCTHIGH __AT (0x58001004);



// -------------------------  Register Item: TIMER1_Secure_CNTPCTHIGH  ----------------------------
// SVD Line: 2977

//  <item> SFDITEM_REG__TIMER1_Secure_CNTPCTHIGH
//    <name> CNTPCTHIGH </name>
//    <i> [Bits 31..0] RO (@ 0x58001004) Physical Count Register Higher Word. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_Secure_CNTPCTHIGH >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_CNTPCTHIGH = (TIMER1_Secure_CNTPCTHIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER1_Secure_CNTFRQ  --------------------------
// SVD Line: 2985

unsigned int TIMER1_Secure_CNTFRQ __AT (0x58001010);



// ---------------------------  Register Item: TIMER1_Secure_CNTFRQ  ------------------------------
// SVD Line: 2985

//  <item> SFDITEM_REG__TIMER1_Secure_CNTFRQ
//    <name> CNTFRQ </name>
//    <i> [Bits 31..0] RW (@ 0x58001010) Counter Frequency Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_Secure_CNTFRQ >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_CNTFRQ = (TIMER1_Secure_CNTFRQ & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: TIMER1_Secure_CNTP_CVAL_LOW  -----------------------
// SVD Line: 2993

unsigned int TIMER1_Secure_CNTP_CVAL_LOW __AT (0x58001020);



// -----------------------  Register Item: TIMER1_Secure_CNTP_CVAL_LOW  ---------------------------
// SVD Line: 2993

//  <item> SFDITEM_REG__TIMER1_Secure_CNTP_CVAL_LOW
//    <name> CNTP_CVAL_LOW </name>
//    <i> [Bits 31..0] RW (@ 0x58001020) Timer Compare Value Lower Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_Secure_CNTP_CVAL_LOW >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_CNTP_CVAL_LOW = (TIMER1_Secure_CNTP_CVAL_LOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: TIMER1_Secure_CNTP_CVAL_HIGH  ----------------------
// SVD Line: 3001

unsigned int TIMER1_Secure_CNTP_CVAL_HIGH __AT (0x58001024);



// -----------------------  Register Item: TIMER1_Secure_CNTP_CVAL_HIGH  --------------------------
// SVD Line: 3001

//  <item> SFDITEM_REG__TIMER1_Secure_CNTP_CVAL_HIGH
//    <name> CNTP_CVAL_HIGH </name>
//    <i> [Bits 31..0] RW (@ 0x58001024) Timer Compare Value Higher Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_Secure_CNTP_CVAL_HIGH >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_CNTP_CVAL_HIGH = (TIMER1_Secure_CNTP_CVAL_HIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: TIMER1_Secure_CNTP_TVAL  -------------------------
// SVD Line: 3009

unsigned int TIMER1_Secure_CNTP_TVAL __AT (0x58001028);



// -------------------------  Register Item: TIMER1_Secure_CNTP_TVAL  -----------------------------
// SVD Line: 3009

//  <item> SFDITEM_REG__TIMER1_Secure_CNTP_TVAL
//    <name> CNTP_TVAL </name>
//    <i> [Bits 31..0] RW (@ 0x58001028) Timer Value register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_Secure_CNTP_TVAL >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_CNTP_TVAL = (TIMER1_Secure_CNTP_TVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: TIMER1_Secure_CNTP_CTL  -------------------------
// SVD Line: 3017

unsigned int TIMER1_Secure_CNTP_CTL __AT (0x5800102C);



// --------------------------  Field Item: TIMER1_Secure_CNTP_CTL_En  -----------------------------
// SVD Line: 3024

//  <item> SFDITEM_FIELD__TIMER1_Secure_CNTP_CTL_En
//    <name> En </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5800102C) \nEnable Counter\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_Secure_CNTP_CTL ) </loc>
//      <o.0..0> En
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// ------------------------  Field Item: TIMER1_Secure_CNTP_CTL_IMASK  ----------------------------
// SVD Line: 3039

//  <item> SFDITEM_FIELD__TIMER1_Secure_CNTP_CTL_IMASK
//    <name> IMASK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5800102C) \nInterrupt Mask\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_Secure_CNTP_CTL ) </loc>
//      <o.1..1> IMASK
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// -----------------------  Field Item: TIMER1_Secure_CNTP_CTL_ISTATUS  ---------------------------
// SVD Line: 3054

//  <item> SFDITEM_FIELD__TIMER1_Secure_CNTP_CTL_ISTATUS
//    <name> ISTATUS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x5800102C) \nInterrupt Status\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_Secure_CNTP_CTL ) </loc>
//      <o.2..2> ISTATUS
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: TIMER1_Secure_CNTP_CTL  -----------------------------
// SVD Line: 3017

//  <rtree> SFDITEM_REG__TIMER1_Secure_CNTP_CTL
//    <name> CNTP_CTL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5800102C) Timer Control register. </i>
//    <loc> ( (unsigned int)((TIMER1_Secure_CNTP_CTL >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_CNTP_CTL = (TIMER1_Secure_CNTP_CTL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_Secure_CNTP_CTL_En </item>
//    <item> SFDITEM_FIELD__TIMER1_Secure_CNTP_CTL_IMASK </item>
//    <item> SFDITEM_FIELD__TIMER1_Secure_CNTP_CTL_ISTATUS </item>
//  </rtree>
//  


// -------------------  Register Item Address: TIMER1_Secure_CNTP_AIVAL_LOW  ----------------------
// SVD Line: 3072

unsigned int TIMER1_Secure_CNTP_AIVAL_LOW __AT (0x58001040);



// -----------------------  Register Item: TIMER1_Secure_CNTP_AIVAL_LOW  --------------------------
// SVD Line: 3072

//  <item> SFDITEM_REG__TIMER1_Secure_CNTP_AIVAL_LOW
//    <name> CNTP_AIVAL_LOW </name>
//    <i> [Bits 31..0] RO (@ 0x58001040) AutoIncrValue Lower Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_Secure_CNTP_AIVAL_LOW >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_CNTP_AIVAL_LOW = (TIMER1_Secure_CNTP_AIVAL_LOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: TIMER1_Secure_CNTP_AIVAL_HIGH  ----------------------
// SVD Line: 3080

unsigned int TIMER1_Secure_CNTP_AIVAL_HIGH __AT (0x58001044);



// ----------------------  Register Item: TIMER1_Secure_CNTP_AIVAL_HIGH  --------------------------
// SVD Line: 3080

//  <item> SFDITEM_REG__TIMER1_Secure_CNTP_AIVAL_HIGH
//    <name> CNTP_AIVAL_HIGH </name>
//    <i> [Bits 31..0] RO (@ 0x58001044) AutoIncrValue Higher Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_Secure_CNTP_AIVAL_HIGH >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_CNTP_AIVAL_HIGH = (TIMER1_Secure_CNTP_AIVAL_HIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------  Register Item Address: TIMER1_Secure_CNTP_AIVAL_RELOAD  ---------------------
// SVD Line: 3088

unsigned int TIMER1_Secure_CNTP_AIVAL_RELOAD __AT (0x58001048);



// ---------------------  Register Item: TIMER1_Secure_CNTP_AIVAL_RELOAD  -------------------------
// SVD Line: 3088

//  <item> SFDITEM_REG__TIMER1_Secure_CNTP_AIVAL_RELOAD
//    <name> CNTP_AIVAL_RELOAD </name>
//    <i> [Bits 31..0] RW (@ 0x58001048) AutoIncrValue Reload register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_Secure_CNTP_AIVAL_RELOAD >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_CNTP_AIVAL_RELOAD = (TIMER1_Secure_CNTP_AIVAL_RELOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: TIMER1_Secure_CNTP_AIVAL_CTL  ----------------------
// SVD Line: 3096

unsigned int TIMER1_Secure_CNTP_AIVAL_CTL __AT (0x5800104C);



// -----------------------  Field Item: TIMER1_Secure_CNTP_AIVAL_CTL_En  --------------------------
// SVD Line: 3103

//  <item> SFDITEM_FIELD__TIMER1_Secure_CNTP_AIVAL_CTL_En
//    <name> En </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5800104C) \nEnable AutoIncrement.\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_Secure_CNTP_AIVAL_CTL ) </loc>
//      <o.0..0> En
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// --------------------  Field Item: TIMER1_Secure_CNTP_AIVAL_CTL_IRQ_CLR  ------------------------
// SVD Line: 3118

//  <item> SFDITEM_FIELD__TIMER1_Secure_CNTP_AIVAL_CTL_IRQ_CLR
//    <name> IRQ_CLR </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5800104C) \nInterrupt Clear\n0 : Nop = Nop\n1 : Clear = Clear </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_Secure_CNTP_AIVAL_CTL ) </loc>
//      <o.1..1> IRQ_CLR
//        <0=> 0: Nop = Nop
//        <1=> 1: Clear = Clear
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: TIMER1_Secure_CNTP_AIVAL_CTL  --------------------------
// SVD Line: 3096

//  <rtree> SFDITEM_REG__TIMER1_Secure_CNTP_AIVAL_CTL
//    <name> CNTP_AIVAL_CTL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5800104C) AutoIncrValue Control register. </i>
//    <loc> ( (unsigned int)((TIMER1_Secure_CNTP_AIVAL_CTL >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_CNTP_AIVAL_CTL = (TIMER1_Secure_CNTP_AIVAL_CTL & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_Secure_CNTP_AIVAL_CTL_En </item>
//    <item> SFDITEM_FIELD__TIMER1_Secure_CNTP_AIVAL_CTL_IRQ_CLR </item>
//  </rtree>
//  


// ----------------------  Register Item Address: TIMER1_Secure_CNTP_CFG  -------------------------
// SVD Line: 3136

unsigned int TIMER1_Secure_CNTP_CFG __AT (0x58001050);



// --------------------------  Register Item: TIMER1_Secure_CNTP_CFG  -----------------------------
// SVD Line: 3136

//  <item> SFDITEM_REG__TIMER1_Secure_CNTP_CFG
//    <name> CNTP_CFG </name>
//    <i> [Bits 31..0] RW (@ 0x58001050) Timer Configuration register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_Secure_CNTP_CFG >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_CNTP_CFG = (TIMER1_Secure_CNTP_CFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER1_Secure_PIDR4  ---------------------------
// SVD Line: 3144

unsigned int TIMER1_Secure_PIDR4 __AT (0x58001FD0);



// ---------------------------  Register Item: TIMER1_Secure_PIDR4  -------------------------------
// SVD Line: 3144

//  <item> SFDITEM_REG__TIMER1_Secure_PIDR4
//    <name> PIDR4 </name>
//    <i> [Bits 31..0] RO (@ 0x58001FD0) Peripheral ID 4 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_Secure_PIDR4 >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_PIDR4 = (TIMER1_Secure_PIDR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER1_Secure_PIDR0  ---------------------------
// SVD Line: 3152

unsigned int TIMER1_Secure_PIDR0 __AT (0x58001FE0);



// ---------------------------  Register Item: TIMER1_Secure_PIDR0  -------------------------------
// SVD Line: 3152

//  <item> SFDITEM_REG__TIMER1_Secure_PIDR0
//    <name> PIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x58001FE0) Peripheral ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_Secure_PIDR0 >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_PIDR0 = (TIMER1_Secure_PIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER1_Secure_PIDR1  ---------------------------
// SVD Line: 3160

unsigned int TIMER1_Secure_PIDR1 __AT (0x58001FE4);



// ---------------------------  Register Item: TIMER1_Secure_PIDR1  -------------------------------
// SVD Line: 3160

//  <item> SFDITEM_REG__TIMER1_Secure_PIDR1
//    <name> PIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x58001FE4) Peripheral ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_Secure_PIDR1 >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_PIDR1 = (TIMER1_Secure_PIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER1_Secure_PIDR2  ---------------------------
// SVD Line: 3168

unsigned int TIMER1_Secure_PIDR2 __AT (0x58001FE8);



// ---------------------------  Register Item: TIMER1_Secure_PIDR2  -------------------------------
// SVD Line: 3168

//  <item> SFDITEM_REG__TIMER1_Secure_PIDR2
//    <name> PIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x58001FE8) Peripheral ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_Secure_PIDR2 >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_PIDR2 = (TIMER1_Secure_PIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER1_Secure_PIDR3  ---------------------------
// SVD Line: 3176

unsigned int TIMER1_Secure_PIDR3 __AT (0x58001FEC);



// ---------------------------  Register Item: TIMER1_Secure_PIDR3  -------------------------------
// SVD Line: 3176

//  <item> SFDITEM_REG__TIMER1_Secure_PIDR3
//    <name> PIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x58001FEC) Peripheral ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_Secure_PIDR3 >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_PIDR3 = (TIMER1_Secure_PIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER1_Secure_CIDR0  ---------------------------
// SVD Line: 3184

unsigned int TIMER1_Secure_CIDR0 __AT (0x58001FF0);



// ---------------------------  Register Item: TIMER1_Secure_CIDR0  -------------------------------
// SVD Line: 3184

//  <item> SFDITEM_REG__TIMER1_Secure_CIDR0
//    <name> CIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x58001FF0) Component ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_Secure_CIDR0 >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_CIDR0 = (TIMER1_Secure_CIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER1_Secure_CIDR1  ---------------------------
// SVD Line: 3192

unsigned int TIMER1_Secure_CIDR1 __AT (0x58001FF4);



// ---------------------------  Register Item: TIMER1_Secure_CIDR1  -------------------------------
// SVD Line: 3192

//  <item> SFDITEM_REG__TIMER1_Secure_CIDR1
//    <name> CIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x58001FF4) Component ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_Secure_CIDR1 >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_CIDR1 = (TIMER1_Secure_CIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER1_Secure_CIDR2  ---------------------------
// SVD Line: 3200

unsigned int TIMER1_Secure_CIDR2 __AT (0x58001FF8);



// ---------------------------  Register Item: TIMER1_Secure_CIDR2  -------------------------------
// SVD Line: 3200

//  <item> SFDITEM_REG__TIMER1_Secure_CIDR2
//    <name> CIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x58001FF8) Component ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_Secure_CIDR2 >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_CIDR2 = (TIMER1_Secure_CIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER1_Secure_CIDR3  ---------------------------
// SVD Line: 3208

unsigned int TIMER1_Secure_CIDR3 __AT (0x58001FFC);



// ---------------------------  Register Item: TIMER1_Secure_CIDR3  -------------------------------
// SVD Line: 3208

//  <item> SFDITEM_REG__TIMER1_Secure_CIDR3
//    <name> CIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x58001FFC) Component ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_Secure_CIDR3 >> 0) & 0xFFFFFFFF), ((TIMER1_Secure_CIDR3 = (TIMER1_Secure_CIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Peripheral View: TIMER1_Secure  ---------------------------------
// SVD Line: 3379

//  <view> TIMER1_Secure
//    <name> TIMER1_Secure </name>
//    <item> SFDITEM_REG__TIMER1_Secure_CNTPCTLOW </item>
//    <item> SFDITEM_REG__TIMER1_Secure_CNTPCTHIGH </item>
//    <item> SFDITEM_REG__TIMER1_Secure_CNTFRQ </item>
//    <item> SFDITEM_REG__TIMER1_Secure_CNTP_CVAL_LOW </item>
//    <item> SFDITEM_REG__TIMER1_Secure_CNTP_CVAL_HIGH </item>
//    <item> SFDITEM_REG__TIMER1_Secure_CNTP_TVAL </item>
//    <item> SFDITEM_REG__TIMER1_Secure_CNTP_CTL </item>
//    <item> SFDITEM_REG__TIMER1_Secure_CNTP_AIVAL_LOW </item>
//    <item> SFDITEM_REG__TIMER1_Secure_CNTP_AIVAL_HIGH </item>
//    <item> SFDITEM_REG__TIMER1_Secure_CNTP_AIVAL_RELOAD </item>
//    <item> SFDITEM_REG__TIMER1_Secure_CNTP_AIVAL_CTL </item>
//    <item> SFDITEM_REG__TIMER1_Secure_CNTP_CFG </item>
//    <item> SFDITEM_REG__TIMER1_Secure_PIDR4 </item>
//    <item> SFDITEM_REG__TIMER1_Secure_PIDR0 </item>
//    <item> SFDITEM_REG__TIMER1_Secure_PIDR1 </item>
//    <item> SFDITEM_REG__TIMER1_Secure_PIDR2 </item>
//    <item> SFDITEM_REG__TIMER1_Secure_PIDR3 </item>
//    <item> SFDITEM_REG__TIMER1_Secure_CIDR0 </item>
//    <item> SFDITEM_REG__TIMER1_Secure_CIDR1 </item>
//    <item> SFDITEM_REG__TIMER1_Secure_CIDR2 </item>
//    <item> SFDITEM_REG__TIMER1_Secure_CIDR3 </item>
//  </view>
//  


// ---------------------  Register Item Address: TIMER2_Secure_CNTPCTLOW  -------------------------
// SVD Line: 2969

unsigned int TIMER2_Secure_CNTPCTLOW __AT (0x58002000);



// -------------------------  Register Item: TIMER2_Secure_CNTPCTLOW  -----------------------------
// SVD Line: 2969

//  <item> SFDITEM_REG__TIMER2_Secure_CNTPCTLOW
//    <name> CNTPCTLOW </name>
//    <i> [Bits 31..0] RO (@ 0x58002000) Physical Count Register Lower Word. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_Secure_CNTPCTLOW >> 0) & 0xFFFFFFFF), ((TIMER2_Secure_CNTPCTLOW = (TIMER2_Secure_CNTPCTLOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: TIMER2_Secure_CNTPCTHIGH  ------------------------
// SVD Line: 2977

unsigned int TIMER2_Secure_CNTPCTHIGH __AT (0x58002004);



// -------------------------  Register Item: TIMER2_Secure_CNTPCTHIGH  ----------------------------
// SVD Line: 2977

//  <item> SFDITEM_REG__TIMER2_Secure_CNTPCTHIGH
//    <name> CNTPCTHIGH </name>
//    <i> [Bits 31..0] RO (@ 0x58002004) Physical Count Register Higher Word. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_Secure_CNTPCTHIGH >> 0) & 0xFFFFFFFF), ((TIMER2_Secure_CNTPCTHIGH = (TIMER2_Secure_CNTPCTHIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER2_Secure_CNTFRQ  --------------------------
// SVD Line: 2985

unsigned int TIMER2_Secure_CNTFRQ __AT (0x58002010);



// ---------------------------  Register Item: TIMER2_Secure_CNTFRQ  ------------------------------
// SVD Line: 2985

//  <item> SFDITEM_REG__TIMER2_Secure_CNTFRQ
//    <name> CNTFRQ </name>
//    <i> [Bits 31..0] RW (@ 0x58002010) Counter Frequency Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_Secure_CNTFRQ >> 0) & 0xFFFFFFFF), ((TIMER2_Secure_CNTFRQ = (TIMER2_Secure_CNTFRQ & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: TIMER2_Secure_CNTP_CVAL_LOW  -----------------------
// SVD Line: 2993

unsigned int TIMER2_Secure_CNTP_CVAL_LOW __AT (0x58002020);



// -----------------------  Register Item: TIMER2_Secure_CNTP_CVAL_LOW  ---------------------------
// SVD Line: 2993

//  <item> SFDITEM_REG__TIMER2_Secure_CNTP_CVAL_LOW
//    <name> CNTP_CVAL_LOW </name>
//    <i> [Bits 31..0] RW (@ 0x58002020) Timer Compare Value Lower Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_Secure_CNTP_CVAL_LOW >> 0) & 0xFFFFFFFF), ((TIMER2_Secure_CNTP_CVAL_LOW = (TIMER2_Secure_CNTP_CVAL_LOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: TIMER2_Secure_CNTP_CVAL_HIGH  ----------------------
// SVD Line: 3001

unsigned int TIMER2_Secure_CNTP_CVAL_HIGH __AT (0x58002024);



// -----------------------  Register Item: TIMER2_Secure_CNTP_CVAL_HIGH  --------------------------
// SVD Line: 3001

//  <item> SFDITEM_REG__TIMER2_Secure_CNTP_CVAL_HIGH
//    <name> CNTP_CVAL_HIGH </name>
//    <i> [Bits 31..0] RW (@ 0x58002024) Timer Compare Value Higher Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_Secure_CNTP_CVAL_HIGH >> 0) & 0xFFFFFFFF), ((TIMER2_Secure_CNTP_CVAL_HIGH = (TIMER2_Secure_CNTP_CVAL_HIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: TIMER2_Secure_CNTP_TVAL  -------------------------
// SVD Line: 3009

unsigned int TIMER2_Secure_CNTP_TVAL __AT (0x58002028);



// -------------------------  Register Item: TIMER2_Secure_CNTP_TVAL  -----------------------------
// SVD Line: 3009

//  <item> SFDITEM_REG__TIMER2_Secure_CNTP_TVAL
//    <name> CNTP_TVAL </name>
//    <i> [Bits 31..0] RW (@ 0x58002028) Timer Value register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_Secure_CNTP_TVAL >> 0) & 0xFFFFFFFF), ((TIMER2_Secure_CNTP_TVAL = (TIMER2_Secure_CNTP_TVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: TIMER2_Secure_CNTP_CTL  -------------------------
// SVD Line: 3017

unsigned int TIMER2_Secure_CNTP_CTL __AT (0x5800202C);



// --------------------------  Field Item: TIMER2_Secure_CNTP_CTL_En  -----------------------------
// SVD Line: 3024

//  <item> SFDITEM_FIELD__TIMER2_Secure_CNTP_CTL_En
//    <name> En </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5800202C) \nEnable Counter\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER2_Secure_CNTP_CTL ) </loc>
//      <o.0..0> En
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// ------------------------  Field Item: TIMER2_Secure_CNTP_CTL_IMASK  ----------------------------
// SVD Line: 3039

//  <item> SFDITEM_FIELD__TIMER2_Secure_CNTP_CTL_IMASK
//    <name> IMASK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5800202C) \nInterrupt Mask\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER2_Secure_CNTP_CTL ) </loc>
//      <o.1..1> IMASK
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// -----------------------  Field Item: TIMER2_Secure_CNTP_CTL_ISTATUS  ---------------------------
// SVD Line: 3054

//  <item> SFDITEM_FIELD__TIMER2_Secure_CNTP_CTL_ISTATUS
//    <name> ISTATUS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x5800202C) \nInterrupt Status\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER2_Secure_CNTP_CTL ) </loc>
//      <o.2..2> ISTATUS
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: TIMER2_Secure_CNTP_CTL  -----------------------------
// SVD Line: 3017

//  <rtree> SFDITEM_REG__TIMER2_Secure_CNTP_CTL
//    <name> CNTP_CTL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5800202C) Timer Control register. </i>
//    <loc> ( (unsigned int)((TIMER2_Secure_CNTP_CTL >> 0) & 0xFFFFFFFF), ((TIMER2_Secure_CNTP_CTL = (TIMER2_Secure_CNTP_CTL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_Secure_CNTP_CTL_En </item>
//    <item> SFDITEM_FIELD__TIMER2_Secure_CNTP_CTL_IMASK </item>
//    <item> SFDITEM_FIELD__TIMER2_Secure_CNTP_CTL_ISTATUS </item>
//  </rtree>
//  


// -------------------  Register Item Address: TIMER2_Secure_CNTP_AIVAL_LOW  ----------------------
// SVD Line: 3072

unsigned int TIMER2_Secure_CNTP_AIVAL_LOW __AT (0x58002040);



// -----------------------  Register Item: TIMER2_Secure_CNTP_AIVAL_LOW  --------------------------
// SVD Line: 3072

//  <item> SFDITEM_REG__TIMER2_Secure_CNTP_AIVAL_LOW
//    <name> CNTP_AIVAL_LOW </name>
//    <i> [Bits 31..0] RO (@ 0x58002040) AutoIncrValue Lower Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_Secure_CNTP_AIVAL_LOW >> 0) & 0xFFFFFFFF), ((TIMER2_Secure_CNTP_AIVAL_LOW = (TIMER2_Secure_CNTP_AIVAL_LOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: TIMER2_Secure_CNTP_AIVAL_HIGH  ----------------------
// SVD Line: 3080

unsigned int TIMER2_Secure_CNTP_AIVAL_HIGH __AT (0x58002044);



// ----------------------  Register Item: TIMER2_Secure_CNTP_AIVAL_HIGH  --------------------------
// SVD Line: 3080

//  <item> SFDITEM_REG__TIMER2_Secure_CNTP_AIVAL_HIGH
//    <name> CNTP_AIVAL_HIGH </name>
//    <i> [Bits 31..0] RO (@ 0x58002044) AutoIncrValue Higher Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_Secure_CNTP_AIVAL_HIGH >> 0) & 0xFFFFFFFF), ((TIMER2_Secure_CNTP_AIVAL_HIGH = (TIMER2_Secure_CNTP_AIVAL_HIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------  Register Item Address: TIMER2_Secure_CNTP_AIVAL_RELOAD  ---------------------
// SVD Line: 3088

unsigned int TIMER2_Secure_CNTP_AIVAL_RELOAD __AT (0x58002048);



// ---------------------  Register Item: TIMER2_Secure_CNTP_AIVAL_RELOAD  -------------------------
// SVD Line: 3088

//  <item> SFDITEM_REG__TIMER2_Secure_CNTP_AIVAL_RELOAD
//    <name> CNTP_AIVAL_RELOAD </name>
//    <i> [Bits 31..0] RW (@ 0x58002048) AutoIncrValue Reload register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_Secure_CNTP_AIVAL_RELOAD >> 0) & 0xFFFFFFFF), ((TIMER2_Secure_CNTP_AIVAL_RELOAD = (TIMER2_Secure_CNTP_AIVAL_RELOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: TIMER2_Secure_CNTP_AIVAL_CTL  ----------------------
// SVD Line: 3096

unsigned int TIMER2_Secure_CNTP_AIVAL_CTL __AT (0x5800204C);



// -----------------------  Field Item: TIMER2_Secure_CNTP_AIVAL_CTL_En  --------------------------
// SVD Line: 3103

//  <item> SFDITEM_FIELD__TIMER2_Secure_CNTP_AIVAL_CTL_En
//    <name> En </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5800204C) \nEnable AutoIncrement.\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER2_Secure_CNTP_AIVAL_CTL ) </loc>
//      <o.0..0> En
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// --------------------  Field Item: TIMER2_Secure_CNTP_AIVAL_CTL_IRQ_CLR  ------------------------
// SVD Line: 3118

//  <item> SFDITEM_FIELD__TIMER2_Secure_CNTP_AIVAL_CTL_IRQ_CLR
//    <name> IRQ_CLR </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5800204C) \nInterrupt Clear\n0 : Nop = Nop\n1 : Clear = Clear </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER2_Secure_CNTP_AIVAL_CTL ) </loc>
//      <o.1..1> IRQ_CLR
//        <0=> 0: Nop = Nop
//        <1=> 1: Clear = Clear
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: TIMER2_Secure_CNTP_AIVAL_CTL  --------------------------
// SVD Line: 3096

//  <rtree> SFDITEM_REG__TIMER2_Secure_CNTP_AIVAL_CTL
//    <name> CNTP_AIVAL_CTL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5800204C) AutoIncrValue Control register. </i>
//    <loc> ( (unsigned int)((TIMER2_Secure_CNTP_AIVAL_CTL >> 0) & 0xFFFFFFFF), ((TIMER2_Secure_CNTP_AIVAL_CTL = (TIMER2_Secure_CNTP_AIVAL_CTL & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_Secure_CNTP_AIVAL_CTL_En </item>
//    <item> SFDITEM_FIELD__TIMER2_Secure_CNTP_AIVAL_CTL_IRQ_CLR </item>
//  </rtree>
//  


// ----------------------  Register Item Address: TIMER2_Secure_CNTP_CFG  -------------------------
// SVD Line: 3136

unsigned int TIMER2_Secure_CNTP_CFG __AT (0x58002050);



// --------------------------  Register Item: TIMER2_Secure_CNTP_CFG  -----------------------------
// SVD Line: 3136

//  <item> SFDITEM_REG__TIMER2_Secure_CNTP_CFG
//    <name> CNTP_CFG </name>
//    <i> [Bits 31..0] RW (@ 0x58002050) Timer Configuration register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_Secure_CNTP_CFG >> 0) & 0xFFFFFFFF), ((TIMER2_Secure_CNTP_CFG = (TIMER2_Secure_CNTP_CFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER2_Secure_PIDR4  ---------------------------
// SVD Line: 3144

unsigned int TIMER2_Secure_PIDR4 __AT (0x58002FD0);



// ---------------------------  Register Item: TIMER2_Secure_PIDR4  -------------------------------
// SVD Line: 3144

//  <item> SFDITEM_REG__TIMER2_Secure_PIDR4
//    <name> PIDR4 </name>
//    <i> [Bits 31..0] RO (@ 0x58002FD0) Peripheral ID 4 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_Secure_PIDR4 >> 0) & 0xFFFFFFFF), ((TIMER2_Secure_PIDR4 = (TIMER2_Secure_PIDR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER2_Secure_PIDR0  ---------------------------
// SVD Line: 3152

unsigned int TIMER2_Secure_PIDR0 __AT (0x58002FE0);



// ---------------------------  Register Item: TIMER2_Secure_PIDR0  -------------------------------
// SVD Line: 3152

//  <item> SFDITEM_REG__TIMER2_Secure_PIDR0
//    <name> PIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x58002FE0) Peripheral ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_Secure_PIDR0 >> 0) & 0xFFFFFFFF), ((TIMER2_Secure_PIDR0 = (TIMER2_Secure_PIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER2_Secure_PIDR1  ---------------------------
// SVD Line: 3160

unsigned int TIMER2_Secure_PIDR1 __AT (0x58002FE4);



// ---------------------------  Register Item: TIMER2_Secure_PIDR1  -------------------------------
// SVD Line: 3160

//  <item> SFDITEM_REG__TIMER2_Secure_PIDR1
//    <name> PIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x58002FE4) Peripheral ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_Secure_PIDR1 >> 0) & 0xFFFFFFFF), ((TIMER2_Secure_PIDR1 = (TIMER2_Secure_PIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER2_Secure_PIDR2  ---------------------------
// SVD Line: 3168

unsigned int TIMER2_Secure_PIDR2 __AT (0x58002FE8);



// ---------------------------  Register Item: TIMER2_Secure_PIDR2  -------------------------------
// SVD Line: 3168

//  <item> SFDITEM_REG__TIMER2_Secure_PIDR2
//    <name> PIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x58002FE8) Peripheral ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_Secure_PIDR2 >> 0) & 0xFFFFFFFF), ((TIMER2_Secure_PIDR2 = (TIMER2_Secure_PIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER2_Secure_PIDR3  ---------------------------
// SVD Line: 3176

unsigned int TIMER2_Secure_PIDR3 __AT (0x58002FEC);



// ---------------------------  Register Item: TIMER2_Secure_PIDR3  -------------------------------
// SVD Line: 3176

//  <item> SFDITEM_REG__TIMER2_Secure_PIDR3
//    <name> PIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x58002FEC) Peripheral ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_Secure_PIDR3 >> 0) & 0xFFFFFFFF), ((TIMER2_Secure_PIDR3 = (TIMER2_Secure_PIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER2_Secure_CIDR0  ---------------------------
// SVD Line: 3184

unsigned int TIMER2_Secure_CIDR0 __AT (0x58002FF0);



// ---------------------------  Register Item: TIMER2_Secure_CIDR0  -------------------------------
// SVD Line: 3184

//  <item> SFDITEM_REG__TIMER2_Secure_CIDR0
//    <name> CIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x58002FF0) Component ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_Secure_CIDR0 >> 0) & 0xFFFFFFFF), ((TIMER2_Secure_CIDR0 = (TIMER2_Secure_CIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER2_Secure_CIDR1  ---------------------------
// SVD Line: 3192

unsigned int TIMER2_Secure_CIDR1 __AT (0x58002FF4);



// ---------------------------  Register Item: TIMER2_Secure_CIDR1  -------------------------------
// SVD Line: 3192

//  <item> SFDITEM_REG__TIMER2_Secure_CIDR1
//    <name> CIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x58002FF4) Component ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_Secure_CIDR1 >> 0) & 0xFFFFFFFF), ((TIMER2_Secure_CIDR1 = (TIMER2_Secure_CIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER2_Secure_CIDR2  ---------------------------
// SVD Line: 3200

unsigned int TIMER2_Secure_CIDR2 __AT (0x58002FF8);



// ---------------------------  Register Item: TIMER2_Secure_CIDR2  -------------------------------
// SVD Line: 3200

//  <item> SFDITEM_REG__TIMER2_Secure_CIDR2
//    <name> CIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x58002FF8) Component ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_Secure_CIDR2 >> 0) & 0xFFFFFFFF), ((TIMER2_Secure_CIDR2 = (TIMER2_Secure_CIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER2_Secure_CIDR3  ---------------------------
// SVD Line: 3208

unsigned int TIMER2_Secure_CIDR3 __AT (0x58002FFC);



// ---------------------------  Register Item: TIMER2_Secure_CIDR3  -------------------------------
// SVD Line: 3208

//  <item> SFDITEM_REG__TIMER2_Secure_CIDR3
//    <name> CIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x58002FFC) Component ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_Secure_CIDR3 >> 0) & 0xFFFFFFFF), ((TIMER2_Secure_CIDR3 = (TIMER2_Secure_CIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Peripheral View: TIMER2_Secure  ---------------------------------
// SVD Line: 3386

//  <view> TIMER2_Secure
//    <name> TIMER2_Secure </name>
//    <item> SFDITEM_REG__TIMER2_Secure_CNTPCTLOW </item>
//    <item> SFDITEM_REG__TIMER2_Secure_CNTPCTHIGH </item>
//    <item> SFDITEM_REG__TIMER2_Secure_CNTFRQ </item>
//    <item> SFDITEM_REG__TIMER2_Secure_CNTP_CVAL_LOW </item>
//    <item> SFDITEM_REG__TIMER2_Secure_CNTP_CVAL_HIGH </item>
//    <item> SFDITEM_REG__TIMER2_Secure_CNTP_TVAL </item>
//    <item> SFDITEM_REG__TIMER2_Secure_CNTP_CTL </item>
//    <item> SFDITEM_REG__TIMER2_Secure_CNTP_AIVAL_LOW </item>
//    <item> SFDITEM_REG__TIMER2_Secure_CNTP_AIVAL_HIGH </item>
//    <item> SFDITEM_REG__TIMER2_Secure_CNTP_AIVAL_RELOAD </item>
//    <item> SFDITEM_REG__TIMER2_Secure_CNTP_AIVAL_CTL </item>
//    <item> SFDITEM_REG__TIMER2_Secure_CNTP_CFG </item>
//    <item> SFDITEM_REG__TIMER2_Secure_PIDR4 </item>
//    <item> SFDITEM_REG__TIMER2_Secure_PIDR0 </item>
//    <item> SFDITEM_REG__TIMER2_Secure_PIDR1 </item>
//    <item> SFDITEM_REG__TIMER2_Secure_PIDR2 </item>
//    <item> SFDITEM_REG__TIMER2_Secure_PIDR3 </item>
//    <item> SFDITEM_REG__TIMER2_Secure_CIDR0 </item>
//    <item> SFDITEM_REG__TIMER2_Secure_CIDR1 </item>
//    <item> SFDITEM_REG__TIMER2_Secure_CIDR2 </item>
//    <item> SFDITEM_REG__TIMER2_Secure_CIDR3 </item>
//  </view>
//  


// ---------------------  Register Item Address: TIMER3_Secure_CNTPCTLOW  -------------------------
// SVD Line: 2969

unsigned int TIMER3_Secure_CNTPCTLOW __AT (0x58003000);



// -------------------------  Register Item: TIMER3_Secure_CNTPCTLOW  -----------------------------
// SVD Line: 2969

//  <item> SFDITEM_REG__TIMER3_Secure_CNTPCTLOW
//    <name> CNTPCTLOW </name>
//    <i> [Bits 31..0] RO (@ 0x58003000) Physical Count Register Lower Word. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_Secure_CNTPCTLOW >> 0) & 0xFFFFFFFF), ((TIMER3_Secure_CNTPCTLOW = (TIMER3_Secure_CNTPCTLOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: TIMER3_Secure_CNTPCTHIGH  ------------------------
// SVD Line: 2977

unsigned int TIMER3_Secure_CNTPCTHIGH __AT (0x58003004);



// -------------------------  Register Item: TIMER3_Secure_CNTPCTHIGH  ----------------------------
// SVD Line: 2977

//  <item> SFDITEM_REG__TIMER3_Secure_CNTPCTHIGH
//    <name> CNTPCTHIGH </name>
//    <i> [Bits 31..0] RO (@ 0x58003004) Physical Count Register Higher Word. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_Secure_CNTPCTHIGH >> 0) & 0xFFFFFFFF), ((TIMER3_Secure_CNTPCTHIGH = (TIMER3_Secure_CNTPCTHIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER3_Secure_CNTFRQ  --------------------------
// SVD Line: 2985

unsigned int TIMER3_Secure_CNTFRQ __AT (0x58003010);



// ---------------------------  Register Item: TIMER3_Secure_CNTFRQ  ------------------------------
// SVD Line: 2985

//  <item> SFDITEM_REG__TIMER3_Secure_CNTFRQ
//    <name> CNTFRQ </name>
//    <i> [Bits 31..0] RW (@ 0x58003010) Counter Frequency Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_Secure_CNTFRQ >> 0) & 0xFFFFFFFF), ((TIMER3_Secure_CNTFRQ = (TIMER3_Secure_CNTFRQ & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: TIMER3_Secure_CNTP_CVAL_LOW  -----------------------
// SVD Line: 2993

unsigned int TIMER3_Secure_CNTP_CVAL_LOW __AT (0x58003020);



// -----------------------  Register Item: TIMER3_Secure_CNTP_CVAL_LOW  ---------------------------
// SVD Line: 2993

//  <item> SFDITEM_REG__TIMER3_Secure_CNTP_CVAL_LOW
//    <name> CNTP_CVAL_LOW </name>
//    <i> [Bits 31..0] RW (@ 0x58003020) Timer Compare Value Lower Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_Secure_CNTP_CVAL_LOW >> 0) & 0xFFFFFFFF), ((TIMER3_Secure_CNTP_CVAL_LOW = (TIMER3_Secure_CNTP_CVAL_LOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: TIMER3_Secure_CNTP_CVAL_HIGH  ----------------------
// SVD Line: 3001

unsigned int TIMER3_Secure_CNTP_CVAL_HIGH __AT (0x58003024);



// -----------------------  Register Item: TIMER3_Secure_CNTP_CVAL_HIGH  --------------------------
// SVD Line: 3001

//  <item> SFDITEM_REG__TIMER3_Secure_CNTP_CVAL_HIGH
//    <name> CNTP_CVAL_HIGH </name>
//    <i> [Bits 31..0] RW (@ 0x58003024) Timer Compare Value Higher Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_Secure_CNTP_CVAL_HIGH >> 0) & 0xFFFFFFFF), ((TIMER3_Secure_CNTP_CVAL_HIGH = (TIMER3_Secure_CNTP_CVAL_HIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: TIMER3_Secure_CNTP_TVAL  -------------------------
// SVD Line: 3009

unsigned int TIMER3_Secure_CNTP_TVAL __AT (0x58003028);



// -------------------------  Register Item: TIMER3_Secure_CNTP_TVAL  -----------------------------
// SVD Line: 3009

//  <item> SFDITEM_REG__TIMER3_Secure_CNTP_TVAL
//    <name> CNTP_TVAL </name>
//    <i> [Bits 31..0] RW (@ 0x58003028) Timer Value register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_Secure_CNTP_TVAL >> 0) & 0xFFFFFFFF), ((TIMER3_Secure_CNTP_TVAL = (TIMER3_Secure_CNTP_TVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: TIMER3_Secure_CNTP_CTL  -------------------------
// SVD Line: 3017

unsigned int TIMER3_Secure_CNTP_CTL __AT (0x5800302C);



// --------------------------  Field Item: TIMER3_Secure_CNTP_CTL_En  -----------------------------
// SVD Line: 3024

//  <item> SFDITEM_FIELD__TIMER3_Secure_CNTP_CTL_En
//    <name> En </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5800302C) \nEnable Counter\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER3_Secure_CNTP_CTL ) </loc>
//      <o.0..0> En
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// ------------------------  Field Item: TIMER3_Secure_CNTP_CTL_IMASK  ----------------------------
// SVD Line: 3039

//  <item> SFDITEM_FIELD__TIMER3_Secure_CNTP_CTL_IMASK
//    <name> IMASK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5800302C) \nInterrupt Mask\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER3_Secure_CNTP_CTL ) </loc>
//      <o.1..1> IMASK
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// -----------------------  Field Item: TIMER3_Secure_CNTP_CTL_ISTATUS  ---------------------------
// SVD Line: 3054

//  <item> SFDITEM_FIELD__TIMER3_Secure_CNTP_CTL_ISTATUS
//    <name> ISTATUS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x5800302C) \nInterrupt Status\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER3_Secure_CNTP_CTL ) </loc>
//      <o.2..2> ISTATUS
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: TIMER3_Secure_CNTP_CTL  -----------------------------
// SVD Line: 3017

//  <rtree> SFDITEM_REG__TIMER3_Secure_CNTP_CTL
//    <name> CNTP_CTL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5800302C) Timer Control register. </i>
//    <loc> ( (unsigned int)((TIMER3_Secure_CNTP_CTL >> 0) & 0xFFFFFFFF), ((TIMER3_Secure_CNTP_CTL = (TIMER3_Secure_CNTP_CTL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_Secure_CNTP_CTL_En </item>
//    <item> SFDITEM_FIELD__TIMER3_Secure_CNTP_CTL_IMASK </item>
//    <item> SFDITEM_FIELD__TIMER3_Secure_CNTP_CTL_ISTATUS </item>
//  </rtree>
//  


// -------------------  Register Item Address: TIMER3_Secure_CNTP_AIVAL_LOW  ----------------------
// SVD Line: 3072

unsigned int TIMER3_Secure_CNTP_AIVAL_LOW __AT (0x58003040);



// -----------------------  Register Item: TIMER3_Secure_CNTP_AIVAL_LOW  --------------------------
// SVD Line: 3072

//  <item> SFDITEM_REG__TIMER3_Secure_CNTP_AIVAL_LOW
//    <name> CNTP_AIVAL_LOW </name>
//    <i> [Bits 31..0] RO (@ 0x58003040) AutoIncrValue Lower Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_Secure_CNTP_AIVAL_LOW >> 0) & 0xFFFFFFFF), ((TIMER3_Secure_CNTP_AIVAL_LOW = (TIMER3_Secure_CNTP_AIVAL_LOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: TIMER3_Secure_CNTP_AIVAL_HIGH  ----------------------
// SVD Line: 3080

unsigned int TIMER3_Secure_CNTP_AIVAL_HIGH __AT (0x58003044);



// ----------------------  Register Item: TIMER3_Secure_CNTP_AIVAL_HIGH  --------------------------
// SVD Line: 3080

//  <item> SFDITEM_REG__TIMER3_Secure_CNTP_AIVAL_HIGH
//    <name> CNTP_AIVAL_HIGH </name>
//    <i> [Bits 31..0] RO (@ 0x58003044) AutoIncrValue Higher Word Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_Secure_CNTP_AIVAL_HIGH >> 0) & 0xFFFFFFFF), ((TIMER3_Secure_CNTP_AIVAL_HIGH = (TIMER3_Secure_CNTP_AIVAL_HIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------  Register Item Address: TIMER3_Secure_CNTP_AIVAL_RELOAD  ---------------------
// SVD Line: 3088

unsigned int TIMER3_Secure_CNTP_AIVAL_RELOAD __AT (0x58003048);



// ---------------------  Register Item: TIMER3_Secure_CNTP_AIVAL_RELOAD  -------------------------
// SVD Line: 3088

//  <item> SFDITEM_REG__TIMER3_Secure_CNTP_AIVAL_RELOAD
//    <name> CNTP_AIVAL_RELOAD </name>
//    <i> [Bits 31..0] RW (@ 0x58003048) AutoIncrValue Reload register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_Secure_CNTP_AIVAL_RELOAD >> 0) & 0xFFFFFFFF), ((TIMER3_Secure_CNTP_AIVAL_RELOAD = (TIMER3_Secure_CNTP_AIVAL_RELOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: TIMER3_Secure_CNTP_AIVAL_CTL  ----------------------
// SVD Line: 3096

unsigned int TIMER3_Secure_CNTP_AIVAL_CTL __AT (0x5800304C);



// -----------------------  Field Item: TIMER3_Secure_CNTP_AIVAL_CTL_En  --------------------------
// SVD Line: 3103

//  <item> SFDITEM_FIELD__TIMER3_Secure_CNTP_AIVAL_CTL_En
//    <name> En </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5800304C) \nEnable AutoIncrement.\n0 : Off = Off\n1 : On = On </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER3_Secure_CNTP_AIVAL_CTL ) </loc>
//      <o.0..0> En
//        <0=> 0: Off = Off
//        <1=> 1: On = On
//    </combo>
//  </item>
//  


// --------------------  Field Item: TIMER3_Secure_CNTP_AIVAL_CTL_IRQ_CLR  ------------------------
// SVD Line: 3118

//  <item> SFDITEM_FIELD__TIMER3_Secure_CNTP_AIVAL_CTL_IRQ_CLR
//    <name> IRQ_CLR </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5800304C) \nInterrupt Clear\n0 : Nop = Nop\n1 : Clear = Clear </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER3_Secure_CNTP_AIVAL_CTL ) </loc>
//      <o.1..1> IRQ_CLR
//        <0=> 0: Nop = Nop
//        <1=> 1: Clear = Clear
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: TIMER3_Secure_CNTP_AIVAL_CTL  --------------------------
// SVD Line: 3096

//  <rtree> SFDITEM_REG__TIMER3_Secure_CNTP_AIVAL_CTL
//    <name> CNTP_AIVAL_CTL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5800304C) AutoIncrValue Control register. </i>
//    <loc> ( (unsigned int)((TIMER3_Secure_CNTP_AIVAL_CTL >> 0) & 0xFFFFFFFF), ((TIMER3_Secure_CNTP_AIVAL_CTL = (TIMER3_Secure_CNTP_AIVAL_CTL & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_Secure_CNTP_AIVAL_CTL_En </item>
//    <item> SFDITEM_FIELD__TIMER3_Secure_CNTP_AIVAL_CTL_IRQ_CLR </item>
//  </rtree>
//  


// ----------------------  Register Item Address: TIMER3_Secure_CNTP_CFG  -------------------------
// SVD Line: 3136

unsigned int TIMER3_Secure_CNTP_CFG __AT (0x58003050);



// --------------------------  Register Item: TIMER3_Secure_CNTP_CFG  -----------------------------
// SVD Line: 3136

//  <item> SFDITEM_REG__TIMER3_Secure_CNTP_CFG
//    <name> CNTP_CFG </name>
//    <i> [Bits 31..0] RW (@ 0x58003050) Timer Configuration register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_Secure_CNTP_CFG >> 0) & 0xFFFFFFFF), ((TIMER3_Secure_CNTP_CFG = (TIMER3_Secure_CNTP_CFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER3_Secure_PIDR4  ---------------------------
// SVD Line: 3144

unsigned int TIMER3_Secure_PIDR4 __AT (0x58003FD0);



// ---------------------------  Register Item: TIMER3_Secure_PIDR4  -------------------------------
// SVD Line: 3144

//  <item> SFDITEM_REG__TIMER3_Secure_PIDR4
//    <name> PIDR4 </name>
//    <i> [Bits 31..0] RO (@ 0x58003FD0) Peripheral ID 4 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_Secure_PIDR4 >> 0) & 0xFFFFFFFF), ((TIMER3_Secure_PIDR4 = (TIMER3_Secure_PIDR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER3_Secure_PIDR0  ---------------------------
// SVD Line: 3152

unsigned int TIMER3_Secure_PIDR0 __AT (0x58003FE0);



// ---------------------------  Register Item: TIMER3_Secure_PIDR0  -------------------------------
// SVD Line: 3152

//  <item> SFDITEM_REG__TIMER3_Secure_PIDR0
//    <name> PIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x58003FE0) Peripheral ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_Secure_PIDR0 >> 0) & 0xFFFFFFFF), ((TIMER3_Secure_PIDR0 = (TIMER3_Secure_PIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER3_Secure_PIDR1  ---------------------------
// SVD Line: 3160

unsigned int TIMER3_Secure_PIDR1 __AT (0x58003FE4);



// ---------------------------  Register Item: TIMER3_Secure_PIDR1  -------------------------------
// SVD Line: 3160

//  <item> SFDITEM_REG__TIMER3_Secure_PIDR1
//    <name> PIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x58003FE4) Peripheral ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_Secure_PIDR1 >> 0) & 0xFFFFFFFF), ((TIMER3_Secure_PIDR1 = (TIMER3_Secure_PIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER3_Secure_PIDR2  ---------------------------
// SVD Line: 3168

unsigned int TIMER3_Secure_PIDR2 __AT (0x58003FE8);



// ---------------------------  Register Item: TIMER3_Secure_PIDR2  -------------------------------
// SVD Line: 3168

//  <item> SFDITEM_REG__TIMER3_Secure_PIDR2
//    <name> PIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x58003FE8) Peripheral ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_Secure_PIDR2 >> 0) & 0xFFFFFFFF), ((TIMER3_Secure_PIDR2 = (TIMER3_Secure_PIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER3_Secure_PIDR3  ---------------------------
// SVD Line: 3176

unsigned int TIMER3_Secure_PIDR3 __AT (0x58003FEC);



// ---------------------------  Register Item: TIMER3_Secure_PIDR3  -------------------------------
// SVD Line: 3176

//  <item> SFDITEM_REG__TIMER3_Secure_PIDR3
//    <name> PIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x58003FEC) Peripheral ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_Secure_PIDR3 >> 0) & 0xFFFFFFFF), ((TIMER3_Secure_PIDR3 = (TIMER3_Secure_PIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER3_Secure_CIDR0  ---------------------------
// SVD Line: 3184

unsigned int TIMER3_Secure_CIDR0 __AT (0x58003FF0);



// ---------------------------  Register Item: TIMER3_Secure_CIDR0  -------------------------------
// SVD Line: 3184

//  <item> SFDITEM_REG__TIMER3_Secure_CIDR0
//    <name> CIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x58003FF0) Component ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_Secure_CIDR0 >> 0) & 0xFFFFFFFF), ((TIMER3_Secure_CIDR0 = (TIMER3_Secure_CIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER3_Secure_CIDR1  ---------------------------
// SVD Line: 3192

unsigned int TIMER3_Secure_CIDR1 __AT (0x58003FF4);



// ---------------------------  Register Item: TIMER3_Secure_CIDR1  -------------------------------
// SVD Line: 3192

//  <item> SFDITEM_REG__TIMER3_Secure_CIDR1
//    <name> CIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x58003FF4) Component ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_Secure_CIDR1 >> 0) & 0xFFFFFFFF), ((TIMER3_Secure_CIDR1 = (TIMER3_Secure_CIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER3_Secure_CIDR2  ---------------------------
// SVD Line: 3200

unsigned int TIMER3_Secure_CIDR2 __AT (0x58003FF8);



// ---------------------------  Register Item: TIMER3_Secure_CIDR2  -------------------------------
// SVD Line: 3200

//  <item> SFDITEM_REG__TIMER3_Secure_CIDR2
//    <name> CIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x58003FF8) Component ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_Secure_CIDR2 >> 0) & 0xFFFFFFFF), ((TIMER3_Secure_CIDR2 = (TIMER3_Secure_CIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TIMER3_Secure_CIDR3  ---------------------------
// SVD Line: 3208

unsigned int TIMER3_Secure_CIDR3 __AT (0x58003FFC);



// ---------------------------  Register Item: TIMER3_Secure_CIDR3  -------------------------------
// SVD Line: 3208

//  <item> SFDITEM_REG__TIMER3_Secure_CIDR3
//    <name> CIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x58003FFC) Component ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_Secure_CIDR3 >> 0) & 0xFFFFFFFF), ((TIMER3_Secure_CIDR3 = (TIMER3_Secure_CIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Peripheral View: TIMER3_Secure  ---------------------------------
// SVD Line: 3393

//  <view> TIMER3_Secure
//    <name> TIMER3_Secure </name>
//    <item> SFDITEM_REG__TIMER3_Secure_CNTPCTLOW </item>
//    <item> SFDITEM_REG__TIMER3_Secure_CNTPCTHIGH </item>
//    <item> SFDITEM_REG__TIMER3_Secure_CNTFRQ </item>
//    <item> SFDITEM_REG__TIMER3_Secure_CNTP_CVAL_LOW </item>
//    <item> SFDITEM_REG__TIMER3_Secure_CNTP_CVAL_HIGH </item>
//    <item> SFDITEM_REG__TIMER3_Secure_CNTP_TVAL </item>
//    <item> SFDITEM_REG__TIMER3_Secure_CNTP_CTL </item>
//    <item> SFDITEM_REG__TIMER3_Secure_CNTP_AIVAL_LOW </item>
//    <item> SFDITEM_REG__TIMER3_Secure_CNTP_AIVAL_HIGH </item>
//    <item> SFDITEM_REG__TIMER3_Secure_CNTP_AIVAL_RELOAD </item>
//    <item> SFDITEM_REG__TIMER3_Secure_CNTP_AIVAL_CTL </item>
//    <item> SFDITEM_REG__TIMER3_Secure_CNTP_CFG </item>
//    <item> SFDITEM_REG__TIMER3_Secure_PIDR4 </item>
//    <item> SFDITEM_REG__TIMER3_Secure_PIDR0 </item>
//    <item> SFDITEM_REG__TIMER3_Secure_PIDR1 </item>
//    <item> SFDITEM_REG__TIMER3_Secure_PIDR2 </item>
//    <item> SFDITEM_REG__TIMER3_Secure_PIDR3 </item>
//    <item> SFDITEM_REG__TIMER3_Secure_CIDR0 </item>
//    <item> SFDITEM_REG__TIMER3_Secure_CIDR1 </item>
//    <item> SFDITEM_REG__TIMER3_Secure_CIDR2 </item>
//    <item> SFDITEM_REG__TIMER3_Secure_CIDR3 </item>
//  </view>
//  


// -----------------------  Register Item Address: SLOWCLK_Secure_CTRL  ---------------------------
// SVD Line: 3270

unsigned int SLOWCLK_Secure_CTRL __AT (0x5802F000);



// -------------------------  Field Item: SLOWCLK_Secure_CTRL_ENABLE  -----------------------------
// SVD Line: 3275

//  <item> SFDITEM_FIELD__SLOWCLK_Secure_CTRL_ENABLE
//    <name> ENABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5802F000) \nEnable\n0 : Disable = Timer is disabled\n1 : Enable = Timer is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SLOWCLK_Secure_CTRL ) </loc>
//      <o.0..0> ENABLE
//        <0=> 0: Disable = Timer is disabled
//        <1=> 1: Enable = Timer is enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: SLOWCLK_Secure_CTRL_EXTIN  -----------------------------
// SVD Line: 3292

//  <item> SFDITEM_FIELD__SLOWCLK_Secure_CTRL_EXTIN
//    <name> EXTIN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5802F000) \nExternal Input as Enable\n0 : Disable = External Input as Enable is disabled\n1 : Enable = External Input as Enable is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SLOWCLK_Secure_CTRL ) </loc>
//      <o.1..1> EXTIN
//        <0=> 0: Disable = External Input as Enable is disabled
//        <1=> 1: Enable = External Input as Enable is enabled
//    </combo>
//  </item>
//  


// -------------------------  Field Item: SLOWCLK_Secure_CTRL_EXTCLK  -----------------------------
// SVD Line: 3309

//  <item> SFDITEM_FIELD__SLOWCLK_Secure_CTRL_EXTCLK
//    <name> EXTCLK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x5802F000) \nExternal Clock Enable\n0 : Disable = External Clock is disabled\n1 : Enable = External Clock is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SLOWCLK_Secure_CTRL ) </loc>
//      <o.2..2> EXTCLK
//        <0=> 0: Disable = External Clock is disabled
//        <1=> 1: Enable = External Clock is enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: SLOWCLK_Secure_CTRL_INTEN  -----------------------------
// SVD Line: 3326

//  <item> SFDITEM_FIELD__SLOWCLK_Secure_CTRL_INTEN
//    <name> INTEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x5802F000) \nInterrupt Enable\n0 : Disable = Interrupt is disabled\n1 : Enable = Interrupt is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SLOWCLK_Secure_CTRL ) </loc>
//      <o.3..3> INTEN
//        <0=> 0: Disable = Interrupt is disabled
//        <1=> 1: Enable = Interrupt is enabled
//    </combo>
//  </item>
//  


// ---------------------------  Register RTree: SLOWCLK_Secure_CTRL  ------------------------------
// SVD Line: 3270

//  <rtree> SFDITEM_REG__SLOWCLK_Secure_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5802F000) Control Register </i>
//    <loc> ( (unsigned int)((SLOWCLK_Secure_CTRL >> 0) & 0xFFFFFFFF), ((SLOWCLK_Secure_CTRL = (SLOWCLK_Secure_CTRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SLOWCLK_Secure_CTRL_ENABLE </item>
//    <item> SFDITEM_FIELD__SLOWCLK_Secure_CTRL_EXTIN </item>
//    <item> SFDITEM_FIELD__SLOWCLK_Secure_CTRL_EXTCLK </item>
//    <item> SFDITEM_FIELD__SLOWCLK_Secure_CTRL_INTEN </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SLOWCLK_Secure_VALUE  --------------------------
// SVD Line: 3345

unsigned int SLOWCLK_Secure_VALUE __AT (0x5802F004);



// ---------------------------  Register Item: SLOWCLK_Secure_VALUE  ------------------------------
// SVD Line: 3345

//  <item> SFDITEM_REG__SLOWCLK_Secure_VALUE
//    <name> VALUE </name>
//    <i> [Bits 31..0] RW (@ 0x5802F004) Current Timer Counter Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((SLOWCLK_Secure_VALUE >> 0) & 0xFFFFFFFF), ((SLOWCLK_Secure_VALUE = (SLOWCLK_Secure_VALUE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: SLOWCLK_Secure_RELOAD  --------------------------
// SVD Line: 3350

unsigned int SLOWCLK_Secure_RELOAD __AT (0x5802F008);



// --------------------------  Register Item: SLOWCLK_Secure_RELOAD  ------------------------------
// SVD Line: 3350

//  <item> SFDITEM_REG__SLOWCLK_Secure_RELOAD
//    <name> RELOAD </name>
//    <i> [Bits 31..0] RW (@ 0x5802F008) Counter Reload Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((SLOWCLK_Secure_RELOAD >> 0) & 0xFFFFFFFF), ((SLOWCLK_Secure_RELOAD = (SLOWCLK_Secure_RELOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: SLOWCLK_Secure_INTSTATUS  ------------------------
// SVD Line: 3355

unsigned int SLOWCLK_Secure_INTSTATUS __AT (0x5802F00C);



// -------------------------  Register Item: SLOWCLK_Secure_INTSTATUS  ----------------------------
// SVD Line: 3355

//  <item> SFDITEM_REG__SLOWCLK_Secure_INTSTATUS
//    <name> INTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x5802F00C) Timer Interrupt status register </i>
//    <edit> 
//      <loc> ( (unsigned int)((SLOWCLK_Secure_INTSTATUS >> 0) & 0xFFFFFFFF), ((SLOWCLK_Secure_INTSTATUS = (SLOWCLK_Secure_INTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: SLOWCLK_Secure_INTCLEAR  -------------------------
// SVD Line: 3361

unsigned int SLOWCLK_Secure_INTCLEAR __AT (0x5802F00C);



// -------------------------  Register Item: SLOWCLK_Secure_INTCLEAR  -----------------------------
// SVD Line: 3361

//  <item> SFDITEM_REG__SLOWCLK_Secure_INTCLEAR
//    <name> INTCLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x5802F00C) Timer Interrupt clear register </i>
//    <edit> 
//      <loc> ( (unsigned int)((SLOWCLK_Secure_INTCLEAR >> 0) & 0xFFFFFFFF), ((SLOWCLK_Secure_INTCLEAR = (SLOWCLK_Secure_INTCLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Peripheral View: SLOWCLK_Secure  --------------------------------
// SVD Line: 3400

//  <view> SLOWCLK_Secure
//    <name> SLOWCLK_Secure </name>
//    <item> SFDITEM_REG__SLOWCLK_Secure_CTRL </item>
//    <item> SFDITEM_REG__SLOWCLK_Secure_VALUE </item>
//    <item> SFDITEM_REG__SLOWCLK_Secure_RELOAD </item>
//    <item> SFDITEM_REG__SLOWCLK_Secure_INTSTATUS </item>
//    <item> SFDITEM_REG__SLOWCLK_Secure_INTCLEAR </item>
//  </view>
//  


// ----------------------------  Register Item Address: GPIO0_DATA  -------------------------------
// SVD Line: 3426

unsigned int GPIO0_DATA __AT (0x41100000);



// --------------------------------  Register Item: GPIO0_DATA  -----------------------------------
// SVD Line: 3426

//  <item> SFDITEM_REG__GPIO0_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x41100000) Data Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_DATA >> 0) & 0xFFFFFFFF), ((GPIO0_DATA = (GPIO0_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO0_DATAOUT  ------------------------------
// SVD Line: 3431

unsigned int GPIO0_DATAOUT __AT (0x41100004);



// ------------------------------  Register Item: GPIO0_DATAOUT  ----------------------------------
// SVD Line: 3431

//  <item> SFDITEM_REG__GPIO0_DATAOUT
//    <name> DATAOUT </name>
//    <i> [Bits 31..0] RW (@ 0x41100004) Data Output Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_DATAOUT >> 0) & 0xFFFFFFFF), ((GPIO0_DATAOUT = (GPIO0_DATAOUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO0_OUTENSET  -----------------------------
// SVD Line: 3436

unsigned int GPIO0_OUTENSET __AT (0x41100010);



// ------------------------------  Register Item: GPIO0_OUTENSET  ---------------------------------
// SVD Line: 3436

//  <item> SFDITEM_REG__GPIO0_OUTENSET
//    <name> OUTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x41100010) Ouptut enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_OUTENSET >> 0) & 0xFFFFFFFF), ((GPIO0_OUTENSET = (GPIO0_OUTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO0_OUTENCLR  -----------------------------
// SVD Line: 3441

unsigned int GPIO0_OUTENCLR __AT (0x41100014);



// ------------------------------  Register Item: GPIO0_OUTENCLR  ---------------------------------
// SVD Line: 3441

//  <item> SFDITEM_REG__GPIO0_OUTENCLR
//    <name> OUTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x41100014) Ouptut enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_OUTENCLR >> 0) & 0xFFFFFFFF), ((GPIO0_OUTENCLR = (GPIO0_OUTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO0_ALTFUNCSET  ----------------------------
// SVD Line: 3446

unsigned int GPIO0_ALTFUNCSET __AT (0x41100018);



// -----------------------------  Register Item: GPIO0_ALTFUNCSET  --------------------------------
// SVD Line: 3446

//  <item> SFDITEM_REG__GPIO0_ALTFUNCSET
//    <name> ALTFUNCSET </name>
//    <i> [Bits 31..0] RW (@ 0x41100018) Alternate function set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_ALTFUNCSET >> 0) & 0xFFFFFFFF), ((GPIO0_ALTFUNCSET = (GPIO0_ALTFUNCSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO0_ALTFUNCCLR  ----------------------------
// SVD Line: 3451

unsigned int GPIO0_ALTFUNCCLR __AT (0x4110001C);



// -----------------------------  Register Item: GPIO0_ALTFUNCCLR  --------------------------------
// SVD Line: 3451

//  <item> SFDITEM_REG__GPIO0_ALTFUNCCLR
//    <name> ALTFUNCCLR </name>
//    <i> [Bits 31..0] RW (@ 0x4110001C) Alternate function clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_ALTFUNCCLR >> 0) & 0xFFFFFFFF), ((GPIO0_ALTFUNCCLR = (GPIO0_ALTFUNCCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO0_INTENSET  -----------------------------
// SVD Line: 3456

unsigned int GPIO0_INTENSET __AT (0x41100020);



// ------------------------------  Register Item: GPIO0_INTENSET  ---------------------------------
// SVD Line: 3456

//  <item> SFDITEM_REG__GPIO0_INTENSET
//    <name> INTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x41100020) Interrupt enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_INTENSET >> 0) & 0xFFFFFFFF), ((GPIO0_INTENSET = (GPIO0_INTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO0_INTENCLR  -----------------------------
// SVD Line: 3461

unsigned int GPIO0_INTENCLR __AT (0x41100024);



// ------------------------------  Register Item: GPIO0_INTENCLR  ---------------------------------
// SVD Line: 3461

//  <item> SFDITEM_REG__GPIO0_INTENCLR
//    <name> INTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x41100024) Interrupt enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_INTENCLR >> 0) & 0xFFFFFFFF), ((GPIO0_INTENCLR = (GPIO0_INTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO0_INTTYPESET  ----------------------------
// SVD Line: 3466

unsigned int GPIO0_INTTYPESET __AT (0x41100028);



// -----------------------------  Register Item: GPIO0_INTTYPESET  --------------------------------
// SVD Line: 3466

//  <item> SFDITEM_REG__GPIO0_INTTYPESET
//    <name> INTTYPESET </name>
//    <i> [Bits 31..0] RW (@ 0x41100028) Interrupt type set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_INTTYPESET >> 0) & 0xFFFFFFFF), ((GPIO0_INTTYPESET = (GPIO0_INTTYPESET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO0_INTTYPECLR  ----------------------------
// SVD Line: 3471

unsigned int GPIO0_INTTYPECLR __AT (0x4110002C);



// -----------------------------  Register Item: GPIO0_INTTYPECLR  --------------------------------
// SVD Line: 3471

//  <item> SFDITEM_REG__GPIO0_INTTYPECLR
//    <name> INTTYPECLR </name>
//    <i> [Bits 31..0] RW (@ 0x4110002C) Interrupt type clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_INTTYPECLR >> 0) & 0xFFFFFFFF), ((GPIO0_INTTYPECLR = (GPIO0_INTTYPECLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO0_INTPOLSET  -----------------------------
// SVD Line: 3476

unsigned int GPIO0_INTPOLSET __AT (0x41100030);



// -----------------------------  Register Item: GPIO0_INTPOLSET  ---------------------------------
// SVD Line: 3476

//  <item> SFDITEM_REG__GPIO0_INTPOLSET
//    <name> INTPOLSET </name>
//    <i> [Bits 31..0] RW (@ 0x41100030) Polarity-level, edge interrupt configuration set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_INTPOLSET >> 0) & 0xFFFFFFFF), ((GPIO0_INTPOLSET = (GPIO0_INTPOLSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO0_INTPOLCLR  -----------------------------
// SVD Line: 3481

unsigned int GPIO0_INTPOLCLR __AT (0x41100034);



// -----------------------------  Register Item: GPIO0_INTPOLCLR  ---------------------------------
// SVD Line: 3481

//  <item> SFDITEM_REG__GPIO0_INTPOLCLR
//    <name> INTPOLCLR </name>
//    <i> [Bits 31..0] RW (@ 0x41100034) Polarity-level, edge interrupt configuration clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_INTPOLCLR >> 0) & 0xFFFFFFFF), ((GPIO0_INTPOLCLR = (GPIO0_INTPOLCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO0_INTSTATUS  -----------------------------
// SVD Line: 3486

unsigned int GPIO0_INTSTATUS __AT (0x41100038);



// -----------------------------  Register Item: GPIO0_INTSTATUS  ---------------------------------
// SVD Line: 3486

//  <item> SFDITEM_REG__GPIO0_INTSTATUS
//    <name> INTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x41100038) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_INTSTATUS >> 0) & 0xFFFFFFFF), ((GPIO0_INTSTATUS = (GPIO0_INTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO0_INTCLEAR  -----------------------------
// SVD Line: 3492

unsigned int GPIO0_INTCLEAR __AT (0x41100038);



// ------------------------------  Register Item: GPIO0_INTCLEAR  ---------------------------------
// SVD Line: 3492

//  <item> SFDITEM_REG__GPIO0_INTCLEAR
//    <name> INTCLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x41100038) Interrupt CLEAR Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_INTCLEAR >> 0) & 0xFFFFFFFF), ((GPIO0_INTCLEAR = (GPIO0_INTCLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: GPIO0  -------------------------------------
// SVD Line: 3407

//  <view> GPIO0
//    <name> GPIO0 </name>
//    <item> SFDITEM_REG__GPIO0_DATA </item>
//    <item> SFDITEM_REG__GPIO0_DATAOUT </item>
//    <item> SFDITEM_REG__GPIO0_OUTENSET </item>
//    <item> SFDITEM_REG__GPIO0_OUTENCLR </item>
//    <item> SFDITEM_REG__GPIO0_ALTFUNCSET </item>
//    <item> SFDITEM_REG__GPIO0_ALTFUNCCLR </item>
//    <item> SFDITEM_REG__GPIO0_INTENSET </item>
//    <item> SFDITEM_REG__GPIO0_INTENCLR </item>
//    <item> SFDITEM_REG__GPIO0_INTTYPESET </item>
//    <item> SFDITEM_REG__GPIO0_INTTYPECLR </item>
//    <item> SFDITEM_REG__GPIO0_INTPOLSET </item>
//    <item> SFDITEM_REG__GPIO0_INTPOLCLR </item>
//    <item> SFDITEM_REG__GPIO0_INTSTATUS </item>
//    <item> SFDITEM_REG__GPIO0_INTCLEAR </item>
//  </view>
//  


// ----------------------------  Register Item Address: GPIO1_DATA  -------------------------------
// SVD Line: 3426

unsigned int GPIO1_DATA __AT (0x41101000);



// --------------------------------  Register Item: GPIO1_DATA  -----------------------------------
// SVD Line: 3426

//  <item> SFDITEM_REG__GPIO1_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x41101000) Data Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_DATA >> 0) & 0xFFFFFFFF), ((GPIO1_DATA = (GPIO1_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO1_DATAOUT  ------------------------------
// SVD Line: 3431

unsigned int GPIO1_DATAOUT __AT (0x41101004);



// ------------------------------  Register Item: GPIO1_DATAOUT  ----------------------------------
// SVD Line: 3431

//  <item> SFDITEM_REG__GPIO1_DATAOUT
//    <name> DATAOUT </name>
//    <i> [Bits 31..0] RW (@ 0x41101004) Data Output Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_DATAOUT >> 0) & 0xFFFFFFFF), ((GPIO1_DATAOUT = (GPIO1_DATAOUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO1_OUTENSET  -----------------------------
// SVD Line: 3436

unsigned int GPIO1_OUTENSET __AT (0x41101010);



// ------------------------------  Register Item: GPIO1_OUTENSET  ---------------------------------
// SVD Line: 3436

//  <item> SFDITEM_REG__GPIO1_OUTENSET
//    <name> OUTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x41101010) Ouptut enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_OUTENSET >> 0) & 0xFFFFFFFF), ((GPIO1_OUTENSET = (GPIO1_OUTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO1_OUTENCLR  -----------------------------
// SVD Line: 3441

unsigned int GPIO1_OUTENCLR __AT (0x41101014);



// ------------------------------  Register Item: GPIO1_OUTENCLR  ---------------------------------
// SVD Line: 3441

//  <item> SFDITEM_REG__GPIO1_OUTENCLR
//    <name> OUTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x41101014) Ouptut enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_OUTENCLR >> 0) & 0xFFFFFFFF), ((GPIO1_OUTENCLR = (GPIO1_OUTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO1_ALTFUNCSET  ----------------------------
// SVD Line: 3446

unsigned int GPIO1_ALTFUNCSET __AT (0x41101018);



// -----------------------------  Register Item: GPIO1_ALTFUNCSET  --------------------------------
// SVD Line: 3446

//  <item> SFDITEM_REG__GPIO1_ALTFUNCSET
//    <name> ALTFUNCSET </name>
//    <i> [Bits 31..0] RW (@ 0x41101018) Alternate function set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_ALTFUNCSET >> 0) & 0xFFFFFFFF), ((GPIO1_ALTFUNCSET = (GPIO1_ALTFUNCSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO1_ALTFUNCCLR  ----------------------------
// SVD Line: 3451

unsigned int GPIO1_ALTFUNCCLR __AT (0x4110101C);



// -----------------------------  Register Item: GPIO1_ALTFUNCCLR  --------------------------------
// SVD Line: 3451

//  <item> SFDITEM_REG__GPIO1_ALTFUNCCLR
//    <name> ALTFUNCCLR </name>
//    <i> [Bits 31..0] RW (@ 0x4110101C) Alternate function clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_ALTFUNCCLR >> 0) & 0xFFFFFFFF), ((GPIO1_ALTFUNCCLR = (GPIO1_ALTFUNCCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO1_INTENSET  -----------------------------
// SVD Line: 3456

unsigned int GPIO1_INTENSET __AT (0x41101020);



// ------------------------------  Register Item: GPIO1_INTENSET  ---------------------------------
// SVD Line: 3456

//  <item> SFDITEM_REG__GPIO1_INTENSET
//    <name> INTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x41101020) Interrupt enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_INTENSET >> 0) & 0xFFFFFFFF), ((GPIO1_INTENSET = (GPIO1_INTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO1_INTENCLR  -----------------------------
// SVD Line: 3461

unsigned int GPIO1_INTENCLR __AT (0x41101024);



// ------------------------------  Register Item: GPIO1_INTENCLR  ---------------------------------
// SVD Line: 3461

//  <item> SFDITEM_REG__GPIO1_INTENCLR
//    <name> INTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x41101024) Interrupt enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_INTENCLR >> 0) & 0xFFFFFFFF), ((GPIO1_INTENCLR = (GPIO1_INTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO1_INTTYPESET  ----------------------------
// SVD Line: 3466

unsigned int GPIO1_INTTYPESET __AT (0x41101028);



// -----------------------------  Register Item: GPIO1_INTTYPESET  --------------------------------
// SVD Line: 3466

//  <item> SFDITEM_REG__GPIO1_INTTYPESET
//    <name> INTTYPESET </name>
//    <i> [Bits 31..0] RW (@ 0x41101028) Interrupt type set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_INTTYPESET >> 0) & 0xFFFFFFFF), ((GPIO1_INTTYPESET = (GPIO1_INTTYPESET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO1_INTTYPECLR  ----------------------------
// SVD Line: 3471

unsigned int GPIO1_INTTYPECLR __AT (0x4110102C);



// -----------------------------  Register Item: GPIO1_INTTYPECLR  --------------------------------
// SVD Line: 3471

//  <item> SFDITEM_REG__GPIO1_INTTYPECLR
//    <name> INTTYPECLR </name>
//    <i> [Bits 31..0] RW (@ 0x4110102C) Interrupt type clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_INTTYPECLR >> 0) & 0xFFFFFFFF), ((GPIO1_INTTYPECLR = (GPIO1_INTTYPECLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO1_INTPOLSET  -----------------------------
// SVD Line: 3476

unsigned int GPIO1_INTPOLSET __AT (0x41101030);



// -----------------------------  Register Item: GPIO1_INTPOLSET  ---------------------------------
// SVD Line: 3476

//  <item> SFDITEM_REG__GPIO1_INTPOLSET
//    <name> INTPOLSET </name>
//    <i> [Bits 31..0] RW (@ 0x41101030) Polarity-level, edge interrupt configuration set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_INTPOLSET >> 0) & 0xFFFFFFFF), ((GPIO1_INTPOLSET = (GPIO1_INTPOLSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO1_INTPOLCLR  -----------------------------
// SVD Line: 3481

unsigned int GPIO1_INTPOLCLR __AT (0x41101034);



// -----------------------------  Register Item: GPIO1_INTPOLCLR  ---------------------------------
// SVD Line: 3481

//  <item> SFDITEM_REG__GPIO1_INTPOLCLR
//    <name> INTPOLCLR </name>
//    <i> [Bits 31..0] RW (@ 0x41101034) Polarity-level, edge interrupt configuration clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_INTPOLCLR >> 0) & 0xFFFFFFFF), ((GPIO1_INTPOLCLR = (GPIO1_INTPOLCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO1_INTSTATUS  -----------------------------
// SVD Line: 3486

unsigned int GPIO1_INTSTATUS __AT (0x41101038);



// -----------------------------  Register Item: GPIO1_INTSTATUS  ---------------------------------
// SVD Line: 3486

//  <item> SFDITEM_REG__GPIO1_INTSTATUS
//    <name> INTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x41101038) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_INTSTATUS >> 0) & 0xFFFFFFFF), ((GPIO1_INTSTATUS = (GPIO1_INTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO1_INTCLEAR  -----------------------------
// SVD Line: 3492

unsigned int GPIO1_INTCLEAR __AT (0x41101038);



// ------------------------------  Register Item: GPIO1_INTCLEAR  ---------------------------------
// SVD Line: 3492

//  <item> SFDITEM_REG__GPIO1_INTCLEAR
//    <name> INTCLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x41101038) Interrupt CLEAR Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_INTCLEAR >> 0) & 0xFFFFFFFF), ((GPIO1_INTCLEAR = (GPIO1_INTCLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: GPIO1  -------------------------------------
// SVD Line: 3503

//  <view> GPIO1
//    <name> GPIO1 </name>
//    <item> SFDITEM_REG__GPIO1_DATA </item>
//    <item> SFDITEM_REG__GPIO1_DATAOUT </item>
//    <item> SFDITEM_REG__GPIO1_OUTENSET </item>
//    <item> SFDITEM_REG__GPIO1_OUTENCLR </item>
//    <item> SFDITEM_REG__GPIO1_ALTFUNCSET </item>
//    <item> SFDITEM_REG__GPIO1_ALTFUNCCLR </item>
//    <item> SFDITEM_REG__GPIO1_INTENSET </item>
//    <item> SFDITEM_REG__GPIO1_INTENCLR </item>
//    <item> SFDITEM_REG__GPIO1_INTTYPESET </item>
//    <item> SFDITEM_REG__GPIO1_INTTYPECLR </item>
//    <item> SFDITEM_REG__GPIO1_INTPOLSET </item>
//    <item> SFDITEM_REG__GPIO1_INTPOLCLR </item>
//    <item> SFDITEM_REG__GPIO1_INTSTATUS </item>
//    <item> SFDITEM_REG__GPIO1_INTCLEAR </item>
//  </view>
//  


// ----------------------------  Register Item Address: GPIO2_DATA  -------------------------------
// SVD Line: 3426

unsigned int GPIO2_DATA __AT (0x41102000);



// --------------------------------  Register Item: GPIO2_DATA  -----------------------------------
// SVD Line: 3426

//  <item> SFDITEM_REG__GPIO2_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x41102000) Data Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_DATA >> 0) & 0xFFFFFFFF), ((GPIO2_DATA = (GPIO2_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO2_DATAOUT  ------------------------------
// SVD Line: 3431

unsigned int GPIO2_DATAOUT __AT (0x41102004);



// ------------------------------  Register Item: GPIO2_DATAOUT  ----------------------------------
// SVD Line: 3431

//  <item> SFDITEM_REG__GPIO2_DATAOUT
//    <name> DATAOUT </name>
//    <i> [Bits 31..0] RW (@ 0x41102004) Data Output Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_DATAOUT >> 0) & 0xFFFFFFFF), ((GPIO2_DATAOUT = (GPIO2_DATAOUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO2_OUTENSET  -----------------------------
// SVD Line: 3436

unsigned int GPIO2_OUTENSET __AT (0x41102010);



// ------------------------------  Register Item: GPIO2_OUTENSET  ---------------------------------
// SVD Line: 3436

//  <item> SFDITEM_REG__GPIO2_OUTENSET
//    <name> OUTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x41102010) Ouptut enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_OUTENSET >> 0) & 0xFFFFFFFF), ((GPIO2_OUTENSET = (GPIO2_OUTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO2_OUTENCLR  -----------------------------
// SVD Line: 3441

unsigned int GPIO2_OUTENCLR __AT (0x41102014);



// ------------------------------  Register Item: GPIO2_OUTENCLR  ---------------------------------
// SVD Line: 3441

//  <item> SFDITEM_REG__GPIO2_OUTENCLR
//    <name> OUTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x41102014) Ouptut enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_OUTENCLR >> 0) & 0xFFFFFFFF), ((GPIO2_OUTENCLR = (GPIO2_OUTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO2_ALTFUNCSET  ----------------------------
// SVD Line: 3446

unsigned int GPIO2_ALTFUNCSET __AT (0x41102018);



// -----------------------------  Register Item: GPIO2_ALTFUNCSET  --------------------------------
// SVD Line: 3446

//  <item> SFDITEM_REG__GPIO2_ALTFUNCSET
//    <name> ALTFUNCSET </name>
//    <i> [Bits 31..0] RW (@ 0x41102018) Alternate function set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_ALTFUNCSET >> 0) & 0xFFFFFFFF), ((GPIO2_ALTFUNCSET = (GPIO2_ALTFUNCSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO2_ALTFUNCCLR  ----------------------------
// SVD Line: 3451

unsigned int GPIO2_ALTFUNCCLR __AT (0x4110201C);



// -----------------------------  Register Item: GPIO2_ALTFUNCCLR  --------------------------------
// SVD Line: 3451

//  <item> SFDITEM_REG__GPIO2_ALTFUNCCLR
//    <name> ALTFUNCCLR </name>
//    <i> [Bits 31..0] RW (@ 0x4110201C) Alternate function clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_ALTFUNCCLR >> 0) & 0xFFFFFFFF), ((GPIO2_ALTFUNCCLR = (GPIO2_ALTFUNCCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO2_INTENSET  -----------------------------
// SVD Line: 3456

unsigned int GPIO2_INTENSET __AT (0x41102020);



// ------------------------------  Register Item: GPIO2_INTENSET  ---------------------------------
// SVD Line: 3456

//  <item> SFDITEM_REG__GPIO2_INTENSET
//    <name> INTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x41102020) Interrupt enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_INTENSET >> 0) & 0xFFFFFFFF), ((GPIO2_INTENSET = (GPIO2_INTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO2_INTENCLR  -----------------------------
// SVD Line: 3461

unsigned int GPIO2_INTENCLR __AT (0x41102024);



// ------------------------------  Register Item: GPIO2_INTENCLR  ---------------------------------
// SVD Line: 3461

//  <item> SFDITEM_REG__GPIO2_INTENCLR
//    <name> INTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x41102024) Interrupt enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_INTENCLR >> 0) & 0xFFFFFFFF), ((GPIO2_INTENCLR = (GPIO2_INTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO2_INTTYPESET  ----------------------------
// SVD Line: 3466

unsigned int GPIO2_INTTYPESET __AT (0x41102028);



// -----------------------------  Register Item: GPIO2_INTTYPESET  --------------------------------
// SVD Line: 3466

//  <item> SFDITEM_REG__GPIO2_INTTYPESET
//    <name> INTTYPESET </name>
//    <i> [Bits 31..0] RW (@ 0x41102028) Interrupt type set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_INTTYPESET >> 0) & 0xFFFFFFFF), ((GPIO2_INTTYPESET = (GPIO2_INTTYPESET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO2_INTTYPECLR  ----------------------------
// SVD Line: 3471

unsigned int GPIO2_INTTYPECLR __AT (0x4110202C);



// -----------------------------  Register Item: GPIO2_INTTYPECLR  --------------------------------
// SVD Line: 3471

//  <item> SFDITEM_REG__GPIO2_INTTYPECLR
//    <name> INTTYPECLR </name>
//    <i> [Bits 31..0] RW (@ 0x4110202C) Interrupt type clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_INTTYPECLR >> 0) & 0xFFFFFFFF), ((GPIO2_INTTYPECLR = (GPIO2_INTTYPECLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO2_INTPOLSET  -----------------------------
// SVD Line: 3476

unsigned int GPIO2_INTPOLSET __AT (0x41102030);



// -----------------------------  Register Item: GPIO2_INTPOLSET  ---------------------------------
// SVD Line: 3476

//  <item> SFDITEM_REG__GPIO2_INTPOLSET
//    <name> INTPOLSET </name>
//    <i> [Bits 31..0] RW (@ 0x41102030) Polarity-level, edge interrupt configuration set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_INTPOLSET >> 0) & 0xFFFFFFFF), ((GPIO2_INTPOLSET = (GPIO2_INTPOLSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO2_INTPOLCLR  -----------------------------
// SVD Line: 3481

unsigned int GPIO2_INTPOLCLR __AT (0x41102034);



// -----------------------------  Register Item: GPIO2_INTPOLCLR  ---------------------------------
// SVD Line: 3481

//  <item> SFDITEM_REG__GPIO2_INTPOLCLR
//    <name> INTPOLCLR </name>
//    <i> [Bits 31..0] RW (@ 0x41102034) Polarity-level, edge interrupt configuration clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_INTPOLCLR >> 0) & 0xFFFFFFFF), ((GPIO2_INTPOLCLR = (GPIO2_INTPOLCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO2_INTSTATUS  -----------------------------
// SVD Line: 3486

unsigned int GPIO2_INTSTATUS __AT (0x41102038);



// -----------------------------  Register Item: GPIO2_INTSTATUS  ---------------------------------
// SVD Line: 3486

//  <item> SFDITEM_REG__GPIO2_INTSTATUS
//    <name> INTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x41102038) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_INTSTATUS >> 0) & 0xFFFFFFFF), ((GPIO2_INTSTATUS = (GPIO2_INTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO2_INTCLEAR  -----------------------------
// SVD Line: 3492

unsigned int GPIO2_INTCLEAR __AT (0x41102038);



// ------------------------------  Register Item: GPIO2_INTCLEAR  ---------------------------------
// SVD Line: 3492

//  <item> SFDITEM_REG__GPIO2_INTCLEAR
//    <name> INTCLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x41102038) Interrupt CLEAR Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_INTCLEAR >> 0) & 0xFFFFFFFF), ((GPIO2_INTCLEAR = (GPIO2_INTCLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: GPIO2  -------------------------------------
// SVD Line: 3518

//  <view> GPIO2
//    <name> GPIO2 </name>
//    <item> SFDITEM_REG__GPIO2_DATA </item>
//    <item> SFDITEM_REG__GPIO2_DATAOUT </item>
//    <item> SFDITEM_REG__GPIO2_OUTENSET </item>
//    <item> SFDITEM_REG__GPIO2_OUTENCLR </item>
//    <item> SFDITEM_REG__GPIO2_ALTFUNCSET </item>
//    <item> SFDITEM_REG__GPIO2_ALTFUNCCLR </item>
//    <item> SFDITEM_REG__GPIO2_INTENSET </item>
//    <item> SFDITEM_REG__GPIO2_INTENCLR </item>
//    <item> SFDITEM_REG__GPIO2_INTTYPESET </item>
//    <item> SFDITEM_REG__GPIO2_INTTYPECLR </item>
//    <item> SFDITEM_REG__GPIO2_INTPOLSET </item>
//    <item> SFDITEM_REG__GPIO2_INTPOLCLR </item>
//    <item> SFDITEM_REG__GPIO2_INTSTATUS </item>
//    <item> SFDITEM_REG__GPIO2_INTCLEAR </item>
//  </view>
//  


// ----------------------------  Register Item Address: GPIO3_DATA  -------------------------------
// SVD Line: 3426

unsigned int GPIO3_DATA __AT (0x41103000);



// --------------------------------  Register Item: GPIO3_DATA  -----------------------------------
// SVD Line: 3426

//  <item> SFDITEM_REG__GPIO3_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x41103000) Data Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_DATA >> 0) & 0xFFFFFFFF), ((GPIO3_DATA = (GPIO3_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO3_DATAOUT  ------------------------------
// SVD Line: 3431

unsigned int GPIO3_DATAOUT __AT (0x41103004);



// ------------------------------  Register Item: GPIO3_DATAOUT  ----------------------------------
// SVD Line: 3431

//  <item> SFDITEM_REG__GPIO3_DATAOUT
//    <name> DATAOUT </name>
//    <i> [Bits 31..0] RW (@ 0x41103004) Data Output Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_DATAOUT >> 0) & 0xFFFFFFFF), ((GPIO3_DATAOUT = (GPIO3_DATAOUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO3_OUTENSET  -----------------------------
// SVD Line: 3436

unsigned int GPIO3_OUTENSET __AT (0x41103010);



// ------------------------------  Register Item: GPIO3_OUTENSET  ---------------------------------
// SVD Line: 3436

//  <item> SFDITEM_REG__GPIO3_OUTENSET
//    <name> OUTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x41103010) Ouptut enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_OUTENSET >> 0) & 0xFFFFFFFF), ((GPIO3_OUTENSET = (GPIO3_OUTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO3_OUTENCLR  -----------------------------
// SVD Line: 3441

unsigned int GPIO3_OUTENCLR __AT (0x41103014);



// ------------------------------  Register Item: GPIO3_OUTENCLR  ---------------------------------
// SVD Line: 3441

//  <item> SFDITEM_REG__GPIO3_OUTENCLR
//    <name> OUTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x41103014) Ouptut enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_OUTENCLR >> 0) & 0xFFFFFFFF), ((GPIO3_OUTENCLR = (GPIO3_OUTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO3_ALTFUNCSET  ----------------------------
// SVD Line: 3446

unsigned int GPIO3_ALTFUNCSET __AT (0x41103018);



// -----------------------------  Register Item: GPIO3_ALTFUNCSET  --------------------------------
// SVD Line: 3446

//  <item> SFDITEM_REG__GPIO3_ALTFUNCSET
//    <name> ALTFUNCSET </name>
//    <i> [Bits 31..0] RW (@ 0x41103018) Alternate function set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_ALTFUNCSET >> 0) & 0xFFFFFFFF), ((GPIO3_ALTFUNCSET = (GPIO3_ALTFUNCSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO3_ALTFUNCCLR  ----------------------------
// SVD Line: 3451

unsigned int GPIO3_ALTFUNCCLR __AT (0x4110301C);



// -----------------------------  Register Item: GPIO3_ALTFUNCCLR  --------------------------------
// SVD Line: 3451

//  <item> SFDITEM_REG__GPIO3_ALTFUNCCLR
//    <name> ALTFUNCCLR </name>
//    <i> [Bits 31..0] RW (@ 0x4110301C) Alternate function clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_ALTFUNCCLR >> 0) & 0xFFFFFFFF), ((GPIO3_ALTFUNCCLR = (GPIO3_ALTFUNCCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO3_INTENSET  -----------------------------
// SVD Line: 3456

unsigned int GPIO3_INTENSET __AT (0x41103020);



// ------------------------------  Register Item: GPIO3_INTENSET  ---------------------------------
// SVD Line: 3456

//  <item> SFDITEM_REG__GPIO3_INTENSET
//    <name> INTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x41103020) Interrupt enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_INTENSET >> 0) & 0xFFFFFFFF), ((GPIO3_INTENSET = (GPIO3_INTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO3_INTENCLR  -----------------------------
// SVD Line: 3461

unsigned int GPIO3_INTENCLR __AT (0x41103024);



// ------------------------------  Register Item: GPIO3_INTENCLR  ---------------------------------
// SVD Line: 3461

//  <item> SFDITEM_REG__GPIO3_INTENCLR
//    <name> INTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x41103024) Interrupt enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_INTENCLR >> 0) & 0xFFFFFFFF), ((GPIO3_INTENCLR = (GPIO3_INTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO3_INTTYPESET  ----------------------------
// SVD Line: 3466

unsigned int GPIO3_INTTYPESET __AT (0x41103028);



// -----------------------------  Register Item: GPIO3_INTTYPESET  --------------------------------
// SVD Line: 3466

//  <item> SFDITEM_REG__GPIO3_INTTYPESET
//    <name> INTTYPESET </name>
//    <i> [Bits 31..0] RW (@ 0x41103028) Interrupt type set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_INTTYPESET >> 0) & 0xFFFFFFFF), ((GPIO3_INTTYPESET = (GPIO3_INTTYPESET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO3_INTTYPECLR  ----------------------------
// SVD Line: 3471

unsigned int GPIO3_INTTYPECLR __AT (0x4110302C);



// -----------------------------  Register Item: GPIO3_INTTYPECLR  --------------------------------
// SVD Line: 3471

//  <item> SFDITEM_REG__GPIO3_INTTYPECLR
//    <name> INTTYPECLR </name>
//    <i> [Bits 31..0] RW (@ 0x4110302C) Interrupt type clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_INTTYPECLR >> 0) & 0xFFFFFFFF), ((GPIO3_INTTYPECLR = (GPIO3_INTTYPECLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO3_INTPOLSET  -----------------------------
// SVD Line: 3476

unsigned int GPIO3_INTPOLSET __AT (0x41103030);



// -----------------------------  Register Item: GPIO3_INTPOLSET  ---------------------------------
// SVD Line: 3476

//  <item> SFDITEM_REG__GPIO3_INTPOLSET
//    <name> INTPOLSET </name>
//    <i> [Bits 31..0] RW (@ 0x41103030) Polarity-level, edge interrupt configuration set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_INTPOLSET >> 0) & 0xFFFFFFFF), ((GPIO3_INTPOLSET = (GPIO3_INTPOLSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO3_INTPOLCLR  -----------------------------
// SVD Line: 3481

unsigned int GPIO3_INTPOLCLR __AT (0x41103034);



// -----------------------------  Register Item: GPIO3_INTPOLCLR  ---------------------------------
// SVD Line: 3481

//  <item> SFDITEM_REG__GPIO3_INTPOLCLR
//    <name> INTPOLCLR </name>
//    <i> [Bits 31..0] RW (@ 0x41103034) Polarity-level, edge interrupt configuration clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_INTPOLCLR >> 0) & 0xFFFFFFFF), ((GPIO3_INTPOLCLR = (GPIO3_INTPOLCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: GPIO3_INTSTATUS  -----------------------------
// SVD Line: 3486

unsigned int GPIO3_INTSTATUS __AT (0x41103038);



// -----------------------------  Register Item: GPIO3_INTSTATUS  ---------------------------------
// SVD Line: 3486

//  <item> SFDITEM_REG__GPIO3_INTSTATUS
//    <name> INTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x41103038) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_INTSTATUS >> 0) & 0xFFFFFFFF), ((GPIO3_INTSTATUS = (GPIO3_INTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: GPIO3_INTCLEAR  -----------------------------
// SVD Line: 3492

unsigned int GPIO3_INTCLEAR __AT (0x41103038);



// ------------------------------  Register Item: GPIO3_INTCLEAR  ---------------------------------
// SVD Line: 3492

//  <item> SFDITEM_REG__GPIO3_INTCLEAR
//    <name> INTCLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x41103038) Interrupt CLEAR Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_INTCLEAR >> 0) & 0xFFFFFFFF), ((GPIO3_INTCLEAR = (GPIO3_INTCLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: GPIO3  -------------------------------------
// SVD Line: 3533

//  <view> GPIO3
//    <name> GPIO3 </name>
//    <item> SFDITEM_REG__GPIO3_DATA </item>
//    <item> SFDITEM_REG__GPIO3_DATAOUT </item>
//    <item> SFDITEM_REG__GPIO3_OUTENSET </item>
//    <item> SFDITEM_REG__GPIO3_OUTENCLR </item>
//    <item> SFDITEM_REG__GPIO3_ALTFUNCSET </item>
//    <item> SFDITEM_REG__GPIO3_ALTFUNCCLR </item>
//    <item> SFDITEM_REG__GPIO3_INTENSET </item>
//    <item> SFDITEM_REG__GPIO3_INTENCLR </item>
//    <item> SFDITEM_REG__GPIO3_INTTYPESET </item>
//    <item> SFDITEM_REG__GPIO3_INTTYPECLR </item>
//    <item> SFDITEM_REG__GPIO3_INTPOLSET </item>
//    <item> SFDITEM_REG__GPIO3_INTPOLCLR </item>
//    <item> SFDITEM_REG__GPIO3_INTSTATUS </item>
//    <item> SFDITEM_REG__GPIO3_INTCLEAR </item>
//  </view>
//  


// ------------------------  Register Item Address: GPIO0_Secure_DATA  ----------------------------
// SVD Line: 3426

unsigned int GPIO0_Secure_DATA __AT (0x50100000);



// ----------------------------  Register Item: GPIO0_Secure_DATA  --------------------------------
// SVD Line: 3426

//  <item> SFDITEM_REG__GPIO0_Secure_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x50100000) Data Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_DATA >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_DATA = (GPIO0_Secure_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: GPIO0_Secure_DATAOUT  --------------------------
// SVD Line: 3431

unsigned int GPIO0_Secure_DATAOUT __AT (0x50100004);



// ---------------------------  Register Item: GPIO0_Secure_DATAOUT  ------------------------------
// SVD Line: 3431

//  <item> SFDITEM_REG__GPIO0_Secure_DATAOUT
//    <name> DATAOUT </name>
//    <i> [Bits 31..0] RW (@ 0x50100004) Data Output Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_DATAOUT >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_DATAOUT = (GPIO0_Secure_DATAOUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO0_Secure_OUTENSET  --------------------------
// SVD Line: 3436

unsigned int GPIO0_Secure_OUTENSET __AT (0x50100010);



// --------------------------  Register Item: GPIO0_Secure_OUTENSET  ------------------------------
// SVD Line: 3436

//  <item> SFDITEM_REG__GPIO0_Secure_OUTENSET
//    <name> OUTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x50100010) Ouptut enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_OUTENSET >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_OUTENSET = (GPIO0_Secure_OUTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO0_Secure_OUTENCLR  --------------------------
// SVD Line: 3441

unsigned int GPIO0_Secure_OUTENCLR __AT (0x50100014);



// --------------------------  Register Item: GPIO0_Secure_OUTENCLR  ------------------------------
// SVD Line: 3441

//  <item> SFDITEM_REG__GPIO0_Secure_OUTENCLR
//    <name> OUTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50100014) Ouptut enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_OUTENCLR >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_OUTENCLR = (GPIO0_Secure_OUTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO0_Secure_ALTFUNCSET  -------------------------
// SVD Line: 3446

unsigned int GPIO0_Secure_ALTFUNCSET __AT (0x50100018);



// -------------------------  Register Item: GPIO0_Secure_ALTFUNCSET  -----------------------------
// SVD Line: 3446

//  <item> SFDITEM_REG__GPIO0_Secure_ALTFUNCSET
//    <name> ALTFUNCSET </name>
//    <i> [Bits 31..0] RW (@ 0x50100018) Alternate function set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_ALTFUNCSET >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_ALTFUNCSET = (GPIO0_Secure_ALTFUNCSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO0_Secure_ALTFUNCCLR  -------------------------
// SVD Line: 3451

unsigned int GPIO0_Secure_ALTFUNCCLR __AT (0x5010001C);



// -------------------------  Register Item: GPIO0_Secure_ALTFUNCCLR  -----------------------------
// SVD Line: 3451

//  <item> SFDITEM_REG__GPIO0_Secure_ALTFUNCCLR
//    <name> ALTFUNCCLR </name>
//    <i> [Bits 31..0] RW (@ 0x5010001C) Alternate function clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_ALTFUNCCLR >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_ALTFUNCCLR = (GPIO0_Secure_ALTFUNCCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO0_Secure_INTENSET  --------------------------
// SVD Line: 3456

unsigned int GPIO0_Secure_INTENSET __AT (0x50100020);



// --------------------------  Register Item: GPIO0_Secure_INTENSET  ------------------------------
// SVD Line: 3456

//  <item> SFDITEM_REG__GPIO0_Secure_INTENSET
//    <name> INTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x50100020) Interrupt enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_INTENSET >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_INTENSET = (GPIO0_Secure_INTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO0_Secure_INTENCLR  --------------------------
// SVD Line: 3461

unsigned int GPIO0_Secure_INTENCLR __AT (0x50100024);



// --------------------------  Register Item: GPIO0_Secure_INTENCLR  ------------------------------
// SVD Line: 3461

//  <item> SFDITEM_REG__GPIO0_Secure_INTENCLR
//    <name> INTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50100024) Interrupt enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_INTENCLR >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_INTENCLR = (GPIO0_Secure_INTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO0_Secure_INTTYPESET  -------------------------
// SVD Line: 3466

unsigned int GPIO0_Secure_INTTYPESET __AT (0x50100028);



// -------------------------  Register Item: GPIO0_Secure_INTTYPESET  -----------------------------
// SVD Line: 3466

//  <item> SFDITEM_REG__GPIO0_Secure_INTTYPESET
//    <name> INTTYPESET </name>
//    <i> [Bits 31..0] RW (@ 0x50100028) Interrupt type set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_INTTYPESET >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_INTTYPESET = (GPIO0_Secure_INTTYPESET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO0_Secure_INTTYPECLR  -------------------------
// SVD Line: 3471

unsigned int GPIO0_Secure_INTTYPECLR __AT (0x5010002C);



// -------------------------  Register Item: GPIO0_Secure_INTTYPECLR  -----------------------------
// SVD Line: 3471

//  <item> SFDITEM_REG__GPIO0_Secure_INTTYPECLR
//    <name> INTTYPECLR </name>
//    <i> [Bits 31..0] RW (@ 0x5010002C) Interrupt type clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_INTTYPECLR >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_INTTYPECLR = (GPIO0_Secure_INTTYPECLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO0_Secure_INTPOLSET  -------------------------
// SVD Line: 3476

unsigned int GPIO0_Secure_INTPOLSET __AT (0x50100030);



// --------------------------  Register Item: GPIO0_Secure_INTPOLSET  -----------------------------
// SVD Line: 3476

//  <item> SFDITEM_REG__GPIO0_Secure_INTPOLSET
//    <name> INTPOLSET </name>
//    <i> [Bits 31..0] RW (@ 0x50100030) Polarity-level, edge interrupt configuration set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_INTPOLSET >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_INTPOLSET = (GPIO0_Secure_INTPOLSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO0_Secure_INTPOLCLR  -------------------------
// SVD Line: 3481

unsigned int GPIO0_Secure_INTPOLCLR __AT (0x50100034);



// --------------------------  Register Item: GPIO0_Secure_INTPOLCLR  -----------------------------
// SVD Line: 3481

//  <item> SFDITEM_REG__GPIO0_Secure_INTPOLCLR
//    <name> INTPOLCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50100034) Polarity-level, edge interrupt configuration clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_INTPOLCLR >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_INTPOLCLR = (GPIO0_Secure_INTPOLCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO0_Secure_INTSTATUS  -------------------------
// SVD Line: 3486

unsigned int GPIO0_Secure_INTSTATUS __AT (0x50100038);



// --------------------------  Register Item: GPIO0_Secure_INTSTATUS  -----------------------------
// SVD Line: 3486

//  <item> SFDITEM_REG__GPIO0_Secure_INTSTATUS
//    <name> INTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x50100038) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_INTSTATUS >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_INTSTATUS = (GPIO0_Secure_INTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO0_Secure_INTCLEAR  --------------------------
// SVD Line: 3492

unsigned int GPIO0_Secure_INTCLEAR __AT (0x50100038);



// --------------------------  Register Item: GPIO0_Secure_INTCLEAR  ------------------------------
// SVD Line: 3492

//  <item> SFDITEM_REG__GPIO0_Secure_INTCLEAR
//    <name> INTCLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x50100038) Interrupt CLEAR Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO0_Secure_INTCLEAR >> 0) & 0xFFFFFFFF), ((GPIO0_Secure_INTCLEAR = (GPIO0_Secure_INTCLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Peripheral View: GPIO0_Secure  ---------------------------------
// SVD Line: 3548

//  <view> GPIO0_Secure
//    <name> GPIO0_Secure </name>
//    <item> SFDITEM_REG__GPIO0_Secure_DATA </item>
//    <item> SFDITEM_REG__GPIO0_Secure_DATAOUT </item>
//    <item> SFDITEM_REG__GPIO0_Secure_OUTENSET </item>
//    <item> SFDITEM_REG__GPIO0_Secure_OUTENCLR </item>
//    <item> SFDITEM_REG__GPIO0_Secure_ALTFUNCSET </item>
//    <item> SFDITEM_REG__GPIO0_Secure_ALTFUNCCLR </item>
//    <item> SFDITEM_REG__GPIO0_Secure_INTENSET </item>
//    <item> SFDITEM_REG__GPIO0_Secure_INTENCLR </item>
//    <item> SFDITEM_REG__GPIO0_Secure_INTTYPESET </item>
//    <item> SFDITEM_REG__GPIO0_Secure_INTTYPECLR </item>
//    <item> SFDITEM_REG__GPIO0_Secure_INTPOLSET </item>
//    <item> SFDITEM_REG__GPIO0_Secure_INTPOLCLR </item>
//    <item> SFDITEM_REG__GPIO0_Secure_INTSTATUS </item>
//    <item> SFDITEM_REG__GPIO0_Secure_INTCLEAR </item>
//  </view>
//  


// ------------------------  Register Item Address: GPIO1_Secure_DATA  ----------------------------
// SVD Line: 3426

unsigned int GPIO1_Secure_DATA __AT (0x50101000);



// ----------------------------  Register Item: GPIO1_Secure_DATA  --------------------------------
// SVD Line: 3426

//  <item> SFDITEM_REG__GPIO1_Secure_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x50101000) Data Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_DATA >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_DATA = (GPIO1_Secure_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: GPIO1_Secure_DATAOUT  --------------------------
// SVD Line: 3431

unsigned int GPIO1_Secure_DATAOUT __AT (0x50101004);



// ---------------------------  Register Item: GPIO1_Secure_DATAOUT  ------------------------------
// SVD Line: 3431

//  <item> SFDITEM_REG__GPIO1_Secure_DATAOUT
//    <name> DATAOUT </name>
//    <i> [Bits 31..0] RW (@ 0x50101004) Data Output Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_DATAOUT >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_DATAOUT = (GPIO1_Secure_DATAOUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO1_Secure_OUTENSET  --------------------------
// SVD Line: 3436

unsigned int GPIO1_Secure_OUTENSET __AT (0x50101010);



// --------------------------  Register Item: GPIO1_Secure_OUTENSET  ------------------------------
// SVD Line: 3436

//  <item> SFDITEM_REG__GPIO1_Secure_OUTENSET
//    <name> OUTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x50101010) Ouptut enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_OUTENSET >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_OUTENSET = (GPIO1_Secure_OUTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO1_Secure_OUTENCLR  --------------------------
// SVD Line: 3441

unsigned int GPIO1_Secure_OUTENCLR __AT (0x50101014);



// --------------------------  Register Item: GPIO1_Secure_OUTENCLR  ------------------------------
// SVD Line: 3441

//  <item> SFDITEM_REG__GPIO1_Secure_OUTENCLR
//    <name> OUTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50101014) Ouptut enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_OUTENCLR >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_OUTENCLR = (GPIO1_Secure_OUTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO1_Secure_ALTFUNCSET  -------------------------
// SVD Line: 3446

unsigned int GPIO1_Secure_ALTFUNCSET __AT (0x50101018);



// -------------------------  Register Item: GPIO1_Secure_ALTFUNCSET  -----------------------------
// SVD Line: 3446

//  <item> SFDITEM_REG__GPIO1_Secure_ALTFUNCSET
//    <name> ALTFUNCSET </name>
//    <i> [Bits 31..0] RW (@ 0x50101018) Alternate function set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_ALTFUNCSET >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_ALTFUNCSET = (GPIO1_Secure_ALTFUNCSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO1_Secure_ALTFUNCCLR  -------------------------
// SVD Line: 3451

unsigned int GPIO1_Secure_ALTFUNCCLR __AT (0x5010101C);



// -------------------------  Register Item: GPIO1_Secure_ALTFUNCCLR  -----------------------------
// SVD Line: 3451

//  <item> SFDITEM_REG__GPIO1_Secure_ALTFUNCCLR
//    <name> ALTFUNCCLR </name>
//    <i> [Bits 31..0] RW (@ 0x5010101C) Alternate function clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_ALTFUNCCLR >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_ALTFUNCCLR = (GPIO1_Secure_ALTFUNCCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO1_Secure_INTENSET  --------------------------
// SVD Line: 3456

unsigned int GPIO1_Secure_INTENSET __AT (0x50101020);



// --------------------------  Register Item: GPIO1_Secure_INTENSET  ------------------------------
// SVD Line: 3456

//  <item> SFDITEM_REG__GPIO1_Secure_INTENSET
//    <name> INTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x50101020) Interrupt enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_INTENSET >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_INTENSET = (GPIO1_Secure_INTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO1_Secure_INTENCLR  --------------------------
// SVD Line: 3461

unsigned int GPIO1_Secure_INTENCLR __AT (0x50101024);



// --------------------------  Register Item: GPIO1_Secure_INTENCLR  ------------------------------
// SVD Line: 3461

//  <item> SFDITEM_REG__GPIO1_Secure_INTENCLR
//    <name> INTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50101024) Interrupt enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_INTENCLR >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_INTENCLR = (GPIO1_Secure_INTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO1_Secure_INTTYPESET  -------------------------
// SVD Line: 3466

unsigned int GPIO1_Secure_INTTYPESET __AT (0x50101028);



// -------------------------  Register Item: GPIO1_Secure_INTTYPESET  -----------------------------
// SVD Line: 3466

//  <item> SFDITEM_REG__GPIO1_Secure_INTTYPESET
//    <name> INTTYPESET </name>
//    <i> [Bits 31..0] RW (@ 0x50101028) Interrupt type set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_INTTYPESET >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_INTTYPESET = (GPIO1_Secure_INTTYPESET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO1_Secure_INTTYPECLR  -------------------------
// SVD Line: 3471

unsigned int GPIO1_Secure_INTTYPECLR __AT (0x5010102C);



// -------------------------  Register Item: GPIO1_Secure_INTTYPECLR  -----------------------------
// SVD Line: 3471

//  <item> SFDITEM_REG__GPIO1_Secure_INTTYPECLR
//    <name> INTTYPECLR </name>
//    <i> [Bits 31..0] RW (@ 0x5010102C) Interrupt type clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_INTTYPECLR >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_INTTYPECLR = (GPIO1_Secure_INTTYPECLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO1_Secure_INTPOLSET  -------------------------
// SVD Line: 3476

unsigned int GPIO1_Secure_INTPOLSET __AT (0x50101030);



// --------------------------  Register Item: GPIO1_Secure_INTPOLSET  -----------------------------
// SVD Line: 3476

//  <item> SFDITEM_REG__GPIO1_Secure_INTPOLSET
//    <name> INTPOLSET </name>
//    <i> [Bits 31..0] RW (@ 0x50101030) Polarity-level, edge interrupt configuration set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_INTPOLSET >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_INTPOLSET = (GPIO1_Secure_INTPOLSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO1_Secure_INTPOLCLR  -------------------------
// SVD Line: 3481

unsigned int GPIO1_Secure_INTPOLCLR __AT (0x50101034);



// --------------------------  Register Item: GPIO1_Secure_INTPOLCLR  -----------------------------
// SVD Line: 3481

//  <item> SFDITEM_REG__GPIO1_Secure_INTPOLCLR
//    <name> INTPOLCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50101034) Polarity-level, edge interrupt configuration clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_INTPOLCLR >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_INTPOLCLR = (GPIO1_Secure_INTPOLCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO1_Secure_INTSTATUS  -------------------------
// SVD Line: 3486

unsigned int GPIO1_Secure_INTSTATUS __AT (0x50101038);



// --------------------------  Register Item: GPIO1_Secure_INTSTATUS  -----------------------------
// SVD Line: 3486

//  <item> SFDITEM_REG__GPIO1_Secure_INTSTATUS
//    <name> INTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x50101038) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_INTSTATUS >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_INTSTATUS = (GPIO1_Secure_INTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO1_Secure_INTCLEAR  --------------------------
// SVD Line: 3492

unsigned int GPIO1_Secure_INTCLEAR __AT (0x50101038);



// --------------------------  Register Item: GPIO1_Secure_INTCLEAR  ------------------------------
// SVD Line: 3492

//  <item> SFDITEM_REG__GPIO1_Secure_INTCLEAR
//    <name> INTCLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x50101038) Interrupt CLEAR Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO1_Secure_INTCLEAR >> 0) & 0xFFFFFFFF), ((GPIO1_Secure_INTCLEAR = (GPIO1_Secure_INTCLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Peripheral View: GPIO1_Secure  ---------------------------------
// SVD Line: 3555

//  <view> GPIO1_Secure
//    <name> GPIO1_Secure </name>
//    <item> SFDITEM_REG__GPIO1_Secure_DATA </item>
//    <item> SFDITEM_REG__GPIO1_Secure_DATAOUT </item>
//    <item> SFDITEM_REG__GPIO1_Secure_OUTENSET </item>
//    <item> SFDITEM_REG__GPIO1_Secure_OUTENCLR </item>
//    <item> SFDITEM_REG__GPIO1_Secure_ALTFUNCSET </item>
//    <item> SFDITEM_REG__GPIO1_Secure_ALTFUNCCLR </item>
//    <item> SFDITEM_REG__GPIO1_Secure_INTENSET </item>
//    <item> SFDITEM_REG__GPIO1_Secure_INTENCLR </item>
//    <item> SFDITEM_REG__GPIO1_Secure_INTTYPESET </item>
//    <item> SFDITEM_REG__GPIO1_Secure_INTTYPECLR </item>
//    <item> SFDITEM_REG__GPIO1_Secure_INTPOLSET </item>
//    <item> SFDITEM_REG__GPIO1_Secure_INTPOLCLR </item>
//    <item> SFDITEM_REG__GPIO1_Secure_INTSTATUS </item>
//    <item> SFDITEM_REG__GPIO1_Secure_INTCLEAR </item>
//  </view>
//  


// ------------------------  Register Item Address: GPIO2_Secure_DATA  ----------------------------
// SVD Line: 3426

unsigned int GPIO2_Secure_DATA __AT (0x50102000);



// ----------------------------  Register Item: GPIO2_Secure_DATA  --------------------------------
// SVD Line: 3426

//  <item> SFDITEM_REG__GPIO2_Secure_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x50102000) Data Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_DATA >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_DATA = (GPIO2_Secure_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: GPIO2_Secure_DATAOUT  --------------------------
// SVD Line: 3431

unsigned int GPIO2_Secure_DATAOUT __AT (0x50102004);



// ---------------------------  Register Item: GPIO2_Secure_DATAOUT  ------------------------------
// SVD Line: 3431

//  <item> SFDITEM_REG__GPIO2_Secure_DATAOUT
//    <name> DATAOUT </name>
//    <i> [Bits 31..0] RW (@ 0x50102004) Data Output Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_DATAOUT >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_DATAOUT = (GPIO2_Secure_DATAOUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO2_Secure_OUTENSET  --------------------------
// SVD Line: 3436

unsigned int GPIO2_Secure_OUTENSET __AT (0x50102010);



// --------------------------  Register Item: GPIO2_Secure_OUTENSET  ------------------------------
// SVD Line: 3436

//  <item> SFDITEM_REG__GPIO2_Secure_OUTENSET
//    <name> OUTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x50102010) Ouptut enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_OUTENSET >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_OUTENSET = (GPIO2_Secure_OUTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO2_Secure_OUTENCLR  --------------------------
// SVD Line: 3441

unsigned int GPIO2_Secure_OUTENCLR __AT (0x50102014);



// --------------------------  Register Item: GPIO2_Secure_OUTENCLR  ------------------------------
// SVD Line: 3441

//  <item> SFDITEM_REG__GPIO2_Secure_OUTENCLR
//    <name> OUTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50102014) Ouptut enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_OUTENCLR >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_OUTENCLR = (GPIO2_Secure_OUTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO2_Secure_ALTFUNCSET  -------------------------
// SVD Line: 3446

unsigned int GPIO2_Secure_ALTFUNCSET __AT (0x50102018);



// -------------------------  Register Item: GPIO2_Secure_ALTFUNCSET  -----------------------------
// SVD Line: 3446

//  <item> SFDITEM_REG__GPIO2_Secure_ALTFUNCSET
//    <name> ALTFUNCSET </name>
//    <i> [Bits 31..0] RW (@ 0x50102018) Alternate function set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_ALTFUNCSET >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_ALTFUNCSET = (GPIO2_Secure_ALTFUNCSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO2_Secure_ALTFUNCCLR  -------------------------
// SVD Line: 3451

unsigned int GPIO2_Secure_ALTFUNCCLR __AT (0x5010201C);



// -------------------------  Register Item: GPIO2_Secure_ALTFUNCCLR  -----------------------------
// SVD Line: 3451

//  <item> SFDITEM_REG__GPIO2_Secure_ALTFUNCCLR
//    <name> ALTFUNCCLR </name>
//    <i> [Bits 31..0] RW (@ 0x5010201C) Alternate function clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_ALTFUNCCLR >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_ALTFUNCCLR = (GPIO2_Secure_ALTFUNCCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO2_Secure_INTENSET  --------------------------
// SVD Line: 3456

unsigned int GPIO2_Secure_INTENSET __AT (0x50102020);



// --------------------------  Register Item: GPIO2_Secure_INTENSET  ------------------------------
// SVD Line: 3456

//  <item> SFDITEM_REG__GPIO2_Secure_INTENSET
//    <name> INTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x50102020) Interrupt enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_INTENSET >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_INTENSET = (GPIO2_Secure_INTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO2_Secure_INTENCLR  --------------------------
// SVD Line: 3461

unsigned int GPIO2_Secure_INTENCLR __AT (0x50102024);



// --------------------------  Register Item: GPIO2_Secure_INTENCLR  ------------------------------
// SVD Line: 3461

//  <item> SFDITEM_REG__GPIO2_Secure_INTENCLR
//    <name> INTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50102024) Interrupt enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_INTENCLR >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_INTENCLR = (GPIO2_Secure_INTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO2_Secure_INTTYPESET  -------------------------
// SVD Line: 3466

unsigned int GPIO2_Secure_INTTYPESET __AT (0x50102028);



// -------------------------  Register Item: GPIO2_Secure_INTTYPESET  -----------------------------
// SVD Line: 3466

//  <item> SFDITEM_REG__GPIO2_Secure_INTTYPESET
//    <name> INTTYPESET </name>
//    <i> [Bits 31..0] RW (@ 0x50102028) Interrupt type set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_INTTYPESET >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_INTTYPESET = (GPIO2_Secure_INTTYPESET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO2_Secure_INTTYPECLR  -------------------------
// SVD Line: 3471

unsigned int GPIO2_Secure_INTTYPECLR __AT (0x5010202C);



// -------------------------  Register Item: GPIO2_Secure_INTTYPECLR  -----------------------------
// SVD Line: 3471

//  <item> SFDITEM_REG__GPIO2_Secure_INTTYPECLR
//    <name> INTTYPECLR </name>
//    <i> [Bits 31..0] RW (@ 0x5010202C) Interrupt type clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_INTTYPECLR >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_INTTYPECLR = (GPIO2_Secure_INTTYPECLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO2_Secure_INTPOLSET  -------------------------
// SVD Line: 3476

unsigned int GPIO2_Secure_INTPOLSET __AT (0x50102030);



// --------------------------  Register Item: GPIO2_Secure_INTPOLSET  -----------------------------
// SVD Line: 3476

//  <item> SFDITEM_REG__GPIO2_Secure_INTPOLSET
//    <name> INTPOLSET </name>
//    <i> [Bits 31..0] RW (@ 0x50102030) Polarity-level, edge interrupt configuration set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_INTPOLSET >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_INTPOLSET = (GPIO2_Secure_INTPOLSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO2_Secure_INTPOLCLR  -------------------------
// SVD Line: 3481

unsigned int GPIO2_Secure_INTPOLCLR __AT (0x50102034);



// --------------------------  Register Item: GPIO2_Secure_INTPOLCLR  -----------------------------
// SVD Line: 3481

//  <item> SFDITEM_REG__GPIO2_Secure_INTPOLCLR
//    <name> INTPOLCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50102034) Polarity-level, edge interrupt configuration clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_INTPOLCLR >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_INTPOLCLR = (GPIO2_Secure_INTPOLCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO2_Secure_INTSTATUS  -------------------------
// SVD Line: 3486

unsigned int GPIO2_Secure_INTSTATUS __AT (0x50102038);



// --------------------------  Register Item: GPIO2_Secure_INTSTATUS  -----------------------------
// SVD Line: 3486

//  <item> SFDITEM_REG__GPIO2_Secure_INTSTATUS
//    <name> INTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x50102038) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_INTSTATUS >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_INTSTATUS = (GPIO2_Secure_INTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO2_Secure_INTCLEAR  --------------------------
// SVD Line: 3492

unsigned int GPIO2_Secure_INTCLEAR __AT (0x50102038);



// --------------------------  Register Item: GPIO2_Secure_INTCLEAR  ------------------------------
// SVD Line: 3492

//  <item> SFDITEM_REG__GPIO2_Secure_INTCLEAR
//    <name> INTCLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x50102038) Interrupt CLEAR Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO2_Secure_INTCLEAR >> 0) & 0xFFFFFFFF), ((GPIO2_Secure_INTCLEAR = (GPIO2_Secure_INTCLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Peripheral View: GPIO2_Secure  ---------------------------------
// SVD Line: 3562

//  <view> GPIO2_Secure
//    <name> GPIO2_Secure </name>
//    <item> SFDITEM_REG__GPIO2_Secure_DATA </item>
//    <item> SFDITEM_REG__GPIO2_Secure_DATAOUT </item>
//    <item> SFDITEM_REG__GPIO2_Secure_OUTENSET </item>
//    <item> SFDITEM_REG__GPIO2_Secure_OUTENCLR </item>
//    <item> SFDITEM_REG__GPIO2_Secure_ALTFUNCSET </item>
//    <item> SFDITEM_REG__GPIO2_Secure_ALTFUNCCLR </item>
//    <item> SFDITEM_REG__GPIO2_Secure_INTENSET </item>
//    <item> SFDITEM_REG__GPIO2_Secure_INTENCLR </item>
//    <item> SFDITEM_REG__GPIO2_Secure_INTTYPESET </item>
//    <item> SFDITEM_REG__GPIO2_Secure_INTTYPECLR </item>
//    <item> SFDITEM_REG__GPIO2_Secure_INTPOLSET </item>
//    <item> SFDITEM_REG__GPIO2_Secure_INTPOLCLR </item>
//    <item> SFDITEM_REG__GPIO2_Secure_INTSTATUS </item>
//    <item> SFDITEM_REG__GPIO2_Secure_INTCLEAR </item>
//  </view>
//  


// ------------------------  Register Item Address: GPIO3_Secure_DATA  ----------------------------
// SVD Line: 3426

unsigned int GPIO3_Secure_DATA __AT (0x50103000);



// ----------------------------  Register Item: GPIO3_Secure_DATA  --------------------------------
// SVD Line: 3426

//  <item> SFDITEM_REG__GPIO3_Secure_DATA
//    <name> DATA </name>
//    <i> [Bits 31..0] RW (@ 0x50103000) Data Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_DATA >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_DATA = (GPIO3_Secure_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: GPIO3_Secure_DATAOUT  --------------------------
// SVD Line: 3431

unsigned int GPIO3_Secure_DATAOUT __AT (0x50103004);



// ---------------------------  Register Item: GPIO3_Secure_DATAOUT  ------------------------------
// SVD Line: 3431

//  <item> SFDITEM_REG__GPIO3_Secure_DATAOUT
//    <name> DATAOUT </name>
//    <i> [Bits 31..0] RW (@ 0x50103004) Data Output Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_DATAOUT >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_DATAOUT = (GPIO3_Secure_DATAOUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO3_Secure_OUTENSET  --------------------------
// SVD Line: 3436

unsigned int GPIO3_Secure_OUTENSET __AT (0x50103010);



// --------------------------  Register Item: GPIO3_Secure_OUTENSET  ------------------------------
// SVD Line: 3436

//  <item> SFDITEM_REG__GPIO3_Secure_OUTENSET
//    <name> OUTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x50103010) Ouptut enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_OUTENSET >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_OUTENSET = (GPIO3_Secure_OUTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO3_Secure_OUTENCLR  --------------------------
// SVD Line: 3441

unsigned int GPIO3_Secure_OUTENCLR __AT (0x50103014);



// --------------------------  Register Item: GPIO3_Secure_OUTENCLR  ------------------------------
// SVD Line: 3441

//  <item> SFDITEM_REG__GPIO3_Secure_OUTENCLR
//    <name> OUTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50103014) Ouptut enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_OUTENCLR >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_OUTENCLR = (GPIO3_Secure_OUTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO3_Secure_ALTFUNCSET  -------------------------
// SVD Line: 3446

unsigned int GPIO3_Secure_ALTFUNCSET __AT (0x50103018);



// -------------------------  Register Item: GPIO3_Secure_ALTFUNCSET  -----------------------------
// SVD Line: 3446

//  <item> SFDITEM_REG__GPIO3_Secure_ALTFUNCSET
//    <name> ALTFUNCSET </name>
//    <i> [Bits 31..0] RW (@ 0x50103018) Alternate function set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_ALTFUNCSET >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_ALTFUNCSET = (GPIO3_Secure_ALTFUNCSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO3_Secure_ALTFUNCCLR  -------------------------
// SVD Line: 3451

unsigned int GPIO3_Secure_ALTFUNCCLR __AT (0x5010301C);



// -------------------------  Register Item: GPIO3_Secure_ALTFUNCCLR  -----------------------------
// SVD Line: 3451

//  <item> SFDITEM_REG__GPIO3_Secure_ALTFUNCCLR
//    <name> ALTFUNCCLR </name>
//    <i> [Bits 31..0] RW (@ 0x5010301C) Alternate function clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_ALTFUNCCLR >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_ALTFUNCCLR = (GPIO3_Secure_ALTFUNCCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO3_Secure_INTENSET  --------------------------
// SVD Line: 3456

unsigned int GPIO3_Secure_INTENSET __AT (0x50103020);



// --------------------------  Register Item: GPIO3_Secure_INTENSET  ------------------------------
// SVD Line: 3456

//  <item> SFDITEM_REG__GPIO3_Secure_INTENSET
//    <name> INTENSET </name>
//    <i> [Bits 31..0] RW (@ 0x50103020) Interrupt enable set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_INTENSET >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_INTENSET = (GPIO3_Secure_INTENSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO3_Secure_INTENCLR  --------------------------
// SVD Line: 3461

unsigned int GPIO3_Secure_INTENCLR __AT (0x50103024);



// --------------------------  Register Item: GPIO3_Secure_INTENCLR  ------------------------------
// SVD Line: 3461

//  <item> SFDITEM_REG__GPIO3_Secure_INTENCLR
//    <name> INTENCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50103024) Interrupt enable clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_INTENCLR >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_INTENCLR = (GPIO3_Secure_INTENCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO3_Secure_INTTYPESET  -------------------------
// SVD Line: 3466

unsigned int GPIO3_Secure_INTTYPESET __AT (0x50103028);



// -------------------------  Register Item: GPIO3_Secure_INTTYPESET  -----------------------------
// SVD Line: 3466

//  <item> SFDITEM_REG__GPIO3_Secure_INTTYPESET
//    <name> INTTYPESET </name>
//    <i> [Bits 31..0] RW (@ 0x50103028) Interrupt type set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_INTTYPESET >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_INTTYPESET = (GPIO3_Secure_INTTYPESET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: GPIO3_Secure_INTTYPECLR  -------------------------
// SVD Line: 3471

unsigned int GPIO3_Secure_INTTYPECLR __AT (0x5010302C);



// -------------------------  Register Item: GPIO3_Secure_INTTYPECLR  -----------------------------
// SVD Line: 3471

//  <item> SFDITEM_REG__GPIO3_Secure_INTTYPECLR
//    <name> INTTYPECLR </name>
//    <i> [Bits 31..0] RW (@ 0x5010302C) Interrupt type clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_INTTYPECLR >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_INTTYPECLR = (GPIO3_Secure_INTTYPECLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO3_Secure_INTPOLSET  -------------------------
// SVD Line: 3476

unsigned int GPIO3_Secure_INTPOLSET __AT (0x50103030);



// --------------------------  Register Item: GPIO3_Secure_INTPOLSET  -----------------------------
// SVD Line: 3476

//  <item> SFDITEM_REG__GPIO3_Secure_INTPOLSET
//    <name> INTPOLSET </name>
//    <i> [Bits 31..0] RW (@ 0x50103030) Polarity-level, edge interrupt configuration set Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_INTPOLSET >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_INTPOLSET = (GPIO3_Secure_INTPOLSET & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO3_Secure_INTPOLCLR  -------------------------
// SVD Line: 3481

unsigned int GPIO3_Secure_INTPOLCLR __AT (0x50103034);



// --------------------------  Register Item: GPIO3_Secure_INTPOLCLR  -----------------------------
// SVD Line: 3481

//  <item> SFDITEM_REG__GPIO3_Secure_INTPOLCLR
//    <name> INTPOLCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50103034) Polarity-level, edge interrupt configuration clear Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_INTPOLCLR >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_INTPOLCLR = (GPIO3_Secure_INTPOLCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO3_Secure_INTSTATUS  -------------------------
// SVD Line: 3486

unsigned int GPIO3_Secure_INTSTATUS __AT (0x50103038);



// --------------------------  Register Item: GPIO3_Secure_INTSTATUS  -----------------------------
// SVD Line: 3486

//  <item> SFDITEM_REG__GPIO3_Secure_INTSTATUS
//    <name> INTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x50103038) Interrupt Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_INTSTATUS >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_INTSTATUS = (GPIO3_Secure_INTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: GPIO3_Secure_INTCLEAR  --------------------------
// SVD Line: 3492

unsigned int GPIO3_Secure_INTCLEAR __AT (0x50103038);



// --------------------------  Register Item: GPIO3_Secure_INTCLEAR  ------------------------------
// SVD Line: 3492

//  <item> SFDITEM_REG__GPIO3_Secure_INTCLEAR
//    <name> INTCLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x50103038) Interrupt CLEAR Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIO3_Secure_INTCLEAR >> 0) & 0xFFFFFFFF), ((GPIO3_Secure_INTCLEAR = (GPIO3_Secure_INTCLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Peripheral View: GPIO3_Secure  ---------------------------------
// SVD Line: 3569

//  <view> GPIO3_Secure
//    <name> GPIO3_Secure </name>
//    <item> SFDITEM_REG__GPIO3_Secure_DATA </item>
//    <item> SFDITEM_REG__GPIO3_Secure_DATAOUT </item>
//    <item> SFDITEM_REG__GPIO3_Secure_OUTENSET </item>
//    <item> SFDITEM_REG__GPIO3_Secure_OUTENCLR </item>
//    <item> SFDITEM_REG__GPIO3_Secure_ALTFUNCSET </item>
//    <item> SFDITEM_REG__GPIO3_Secure_ALTFUNCCLR </item>
//    <item> SFDITEM_REG__GPIO3_Secure_INTENSET </item>
//    <item> SFDITEM_REG__GPIO3_Secure_INTENCLR </item>
//    <item> SFDITEM_REG__GPIO3_Secure_INTTYPESET </item>
//    <item> SFDITEM_REG__GPIO3_Secure_INTTYPECLR </item>
//    <item> SFDITEM_REG__GPIO3_Secure_INTPOLSET </item>
//    <item> SFDITEM_REG__GPIO3_Secure_INTPOLCLR </item>
//    <item> SFDITEM_REG__GPIO3_Secure_INTSTATUS </item>
//    <item> SFDITEM_REG__GPIO3_Secure_INTCLEAR </item>
//  </view>
//  


// ----------------------------  Register Item Address: UART0_DATA  -------------------------------
// SVD Line: 3605

unsigned char UART0_DATA __AT (0x49303000);



// --------------------------------  Register Item: UART0_DATA  -----------------------------------
// SVD Line: 3605

//  <item> SFDITEM_REG__UART0_DATA
//    <name> DATA </name>
//    <i> [Bits 7..0] RW (@ 0x49303000) Receive and Transmit Data Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART0_DATA >> 0) & 0xFFFFFFFF), ((UART0_DATA = (UART0_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: UART0_STATE  -------------------------------
// SVD Line: 3611

unsigned int UART0_STATE __AT (0x49303004);



// ------------------------------  Field Item: UART0_STATE_RXOV  ----------------------------------
// SVD Line: 3616

//  <item> SFDITEM_FIELD__UART0_STATE_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49303004) RX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_STATE ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART0_STATE_TXOV  ----------------------------------
// SVD Line: 3622

//  <item> SFDITEM_FIELD__UART0_STATE_TXOV
//    <name> TXOV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49303004) TX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_STATE ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART0_STATE_RXBF  ----------------------------------
// SVD Line: 3628

//  <item> SFDITEM_FIELD__UART0_STATE_RXBF
//    <name> RXBF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x49303004) RX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_STATE ) </loc>
//      <o.1..1> RXBF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART0_STATE_TXBF  ----------------------------------
// SVD Line: 3634

//  <item> SFDITEM_FIELD__UART0_STATE_TXBF
//    <name> TXBF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x49303004) TX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_STATE ) </loc>
//      <o.0..0> TXBF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART0_STATE  ----------------------------------
// SVD Line: 3611

//  <rtree> SFDITEM_REG__UART0_STATE
//    <name> STATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49303004) UART Status Register </i>
//    <loc> ( (unsigned int)((UART0_STATE >> 0) & 0xFFFFFFFF), ((UART0_STATE = (UART0_STATE & ~(0xCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART0_STATE_RXOV </item>
//    <item> SFDITEM_FIELD__UART0_STATE_TXOV </item>
//    <item> SFDITEM_FIELD__UART0_STATE_RXBF </item>
//    <item> SFDITEM_FIELD__UART0_STATE_TXBF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART0_CTRL  -------------------------------
// SVD Line: 3642

unsigned int UART0_CTRL __AT (0x49303008);



// -------------------------------  Field Item: UART0_CTRL_HSTX  ----------------------------------
// SVD Line: 3647

//  <item> SFDITEM_FIELD__UART0_CTRL_HSTX
//    <name> HSTX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x49303008) \nHigh Speed Test Mode for TX only\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_CTRL ) </loc>
//      <o.6..6> HSTX
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: UART0_CTRL_RVOVINT  ---------------------------------
// SVD Line: 3664

//  <item> SFDITEM_FIELD__UART0_CTRL_RVOVINT
//    <name> RVOVINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x49303008) \nRX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_CTRL ) </loc>
//      <o.5..5> RVOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: UART0_CTRL_TXOVINT  ---------------------------------
// SVD Line: 3681

//  <item> SFDITEM_FIELD__UART0_CTRL_TXOVINT
//    <name> TXOVINT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x49303008) \nTX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_CTRL ) </loc>
//      <o.4..4> TXOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: UART0_CTRL_RXINT  ----------------------------------
// SVD Line: 3698

//  <item> SFDITEM_FIELD__UART0_CTRL_RXINT
//    <name> RXINT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49303008) \nRX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_CTRL ) </loc>
//      <o.3..3> RXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: UART0_CTRL_TXINT  ----------------------------------
// SVD Line: 3715

//  <item> SFDITEM_FIELD__UART0_CTRL_TXINT
//    <name> TXINT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49303008) \nTX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_CTRL ) </loc>
//      <o.2..2> TXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: UART0_CTRL_RXEN  ----------------------------------
// SVD Line: 3732

//  <item> SFDITEM_FIELD__UART0_CTRL_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49303008) \nRX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_CTRL ) </loc>
//      <o.1..1> RXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: UART0_CTRL_TXEN  ----------------------------------
// SVD Line: 3749

//  <item> SFDITEM_FIELD__UART0_CTRL_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49303008) \nTX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_CTRL ) </loc>
//      <o.0..0> TXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: UART0_CTRL  -----------------------------------
// SVD Line: 3642

//  <rtree> SFDITEM_REG__UART0_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49303008) UART Control Register </i>
//    <loc> ( (unsigned int)((UART0_CTRL >> 0) & 0xFFFFFFFF), ((UART0_CTRL = (UART0_CTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART0_CTRL_HSTX </item>
//    <item> SFDITEM_FIELD__UART0_CTRL_RVOVINT </item>
//    <item> SFDITEM_FIELD__UART0_CTRL_TXOVINT </item>
//    <item> SFDITEM_FIELD__UART0_CTRL_RXINT </item>
//    <item> SFDITEM_FIELD__UART0_CTRL_TXINT </item>
//    <item> SFDITEM_FIELD__UART0_CTRL_RXEN </item>
//    <item> SFDITEM_FIELD__UART0_CTRL_TXEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART0_INTSTATUS  -----------------------------
// SVD Line: 3768

unsigned int UART0_INTSTATUS __AT (0x4930300C);



// ----------------------------  Field Item: UART0_INTSTATUS_RXOV  --------------------------------
// SVD Line: 3774

//  <item> SFDITEM_FIELD__UART0_INTSTATUS_RXOV
//    <name> RXOV </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4930300C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_INTSTATUS ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART0_INTSTATUS_TXOV  --------------------------------
// SVD Line: 3779

//  <item> SFDITEM_FIELD__UART0_INTSTATUS_TXOV
//    <name> TXOV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4930300C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_INTSTATUS ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART0_INTSTATUS_RXINT  -------------------------------
// SVD Line: 3784

//  <item> SFDITEM_FIELD__UART0_INTSTATUS_RXINT
//    <name> RXINT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4930300C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_INTSTATUS ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART0_INTSTATUS_TXINT  -------------------------------
// SVD Line: 3789

//  <item> SFDITEM_FIELD__UART0_INTSTATUS_TXINT
//    <name> TXINT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4930300C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_INTSTATUS ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART0_INTSTATUS  --------------------------------
// SVD Line: 3768

//  <rtree> SFDITEM_REG__UART0_INTSTATUS
//    <name> INTSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4930300C) UART Interrupt Status Register </i>
//    <loc> ( (unsigned int)((UART0_INTSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART0_INTSTATUS_RXOV </item>
//    <item> SFDITEM_FIELD__UART0_INTSTATUS_TXOV </item>
//    <item> SFDITEM_FIELD__UART0_INTSTATUS_RXINT </item>
//    <item> SFDITEM_FIELD__UART0_INTSTATUS_TXINT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART0_INTCLEAR  -----------------------------
// SVD Line: 3796

unsigned int UART0_INTCLEAR __AT (0x4930300C);



// -----------------------------  Field Item: UART0_INTCLEAR_RXOV  --------------------------------
// SVD Line: 3803

//  <item> SFDITEM_FIELD__UART0_INTCLEAR_RXOV
//    <name> RXOV </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4930300C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_INTCLEAR ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UART0_INTCLEAR_TXOV  --------------------------------
// SVD Line: 3809

//  <item> SFDITEM_FIELD__UART0_INTCLEAR_TXOV
//    <name> TXOV </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4930300C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_INTCLEAR ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART0_INTCLEAR_RXINT  --------------------------------
// SVD Line: 3815

//  <item> SFDITEM_FIELD__UART0_INTCLEAR_RXINT
//    <name> RXINT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4930300C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_INTCLEAR ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART0_INTCLEAR_TXINT  --------------------------------
// SVD Line: 3821

//  <item> SFDITEM_FIELD__UART0_INTCLEAR_TXINT
//    <name> TXINT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4930300C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_INTCLEAR ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART0_INTCLEAR  ---------------------------------
// SVD Line: 3796

//  <rtree> SFDITEM_REG__UART0_INTCLEAR
//    <name> INTCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4930300C) UART Interrupt CLEAR Register </i>
//    <loc> ( (unsigned int)((UART0_INTCLEAR >> 0) & 0xFFFFFFFF), ((UART0_INTCLEAR = (UART0_INTCLEAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART0_INTCLEAR_RXOV </item>
//    <item> SFDITEM_FIELD__UART0_INTCLEAR_TXOV </item>
//    <item> SFDITEM_FIELD__UART0_INTCLEAR_RXINT </item>
//    <item> SFDITEM_FIELD__UART0_INTCLEAR_TXINT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART0_BAUDDIV  ------------------------------
// SVD Line: 3829

unsigned int UART0_BAUDDIV __AT (0x49303010);



// ------------------------------  Register Item: UART0_BAUDDIV  ----------------------------------
// SVD Line: 3829

//  <item> SFDITEM_REG__UART0_BAUDDIV
//    <name> BAUDDIV </name>
//    <i> [Bits 31..0] RW (@ 0x49303010) Baudrate Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART0_BAUDDIV >> 0) & 0xFFFFFFFF), ((UART0_BAUDDIV = (UART0_BAUDDIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: UART0  -------------------------------------
// SVD Line: 3576

//  <view> UART0
//    <name> UART0 </name>
//    <item> SFDITEM_REG__UART0_DATA </item>
//    <item> SFDITEM_REG__UART0_STATE </item>
//    <item> SFDITEM_REG__UART0_CTRL </item>
//    <item> SFDITEM_REG__UART0_INTSTATUS </item>
//    <item> SFDITEM_REG__UART0_INTCLEAR </item>
//    <item> SFDITEM_REG__UART0_BAUDDIV </item>
//  </view>
//  


// ----------------------------  Register Item Address: UART1_DATA  -------------------------------
// SVD Line: 3605

unsigned char UART1_DATA __AT (0x49304000);



// --------------------------------  Register Item: UART1_DATA  -----------------------------------
// SVD Line: 3605

//  <item> SFDITEM_REG__UART1_DATA
//    <name> DATA </name>
//    <i> [Bits 7..0] RW (@ 0x49304000) Receive and Transmit Data Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART1_DATA >> 0) & 0xFFFFFFFF), ((UART1_DATA = (UART1_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: UART1_STATE  -------------------------------
// SVD Line: 3611

unsigned int UART1_STATE __AT (0x49304004);



// ------------------------------  Field Item: UART1_STATE_RXOV  ----------------------------------
// SVD Line: 3616

//  <item> SFDITEM_FIELD__UART1_STATE_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49304004) RX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_STATE ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART1_STATE_TXOV  ----------------------------------
// SVD Line: 3622

//  <item> SFDITEM_FIELD__UART1_STATE_TXOV
//    <name> TXOV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49304004) TX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_STATE ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART1_STATE_RXBF  ----------------------------------
// SVD Line: 3628

//  <item> SFDITEM_FIELD__UART1_STATE_RXBF
//    <name> RXBF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x49304004) RX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_STATE ) </loc>
//      <o.1..1> RXBF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART1_STATE_TXBF  ----------------------------------
// SVD Line: 3634

//  <item> SFDITEM_FIELD__UART1_STATE_TXBF
//    <name> TXBF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x49304004) TX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_STATE ) </loc>
//      <o.0..0> TXBF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART1_STATE  ----------------------------------
// SVD Line: 3611

//  <rtree> SFDITEM_REG__UART1_STATE
//    <name> STATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49304004) UART Status Register </i>
//    <loc> ( (unsigned int)((UART1_STATE >> 0) & 0xFFFFFFFF), ((UART1_STATE = (UART1_STATE & ~(0xCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART1_STATE_RXOV </item>
//    <item> SFDITEM_FIELD__UART1_STATE_TXOV </item>
//    <item> SFDITEM_FIELD__UART1_STATE_RXBF </item>
//    <item> SFDITEM_FIELD__UART1_STATE_TXBF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART1_CTRL  -------------------------------
// SVD Line: 3642

unsigned int UART1_CTRL __AT (0x49304008);



// -------------------------------  Field Item: UART1_CTRL_HSTX  ----------------------------------
// SVD Line: 3647

//  <item> SFDITEM_FIELD__UART1_CTRL_HSTX
//    <name> HSTX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x49304008) \nHigh Speed Test Mode for TX only\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_CTRL ) </loc>
//      <o.6..6> HSTX
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: UART1_CTRL_RVOVINT  ---------------------------------
// SVD Line: 3664

//  <item> SFDITEM_FIELD__UART1_CTRL_RVOVINT
//    <name> RVOVINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x49304008) \nRX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_CTRL ) </loc>
//      <o.5..5> RVOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: UART1_CTRL_TXOVINT  ---------------------------------
// SVD Line: 3681

//  <item> SFDITEM_FIELD__UART1_CTRL_TXOVINT
//    <name> TXOVINT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x49304008) \nTX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_CTRL ) </loc>
//      <o.4..4> TXOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: UART1_CTRL_RXINT  ----------------------------------
// SVD Line: 3698

//  <item> SFDITEM_FIELD__UART1_CTRL_RXINT
//    <name> RXINT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49304008) \nRX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_CTRL ) </loc>
//      <o.3..3> RXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: UART1_CTRL_TXINT  ----------------------------------
// SVD Line: 3715

//  <item> SFDITEM_FIELD__UART1_CTRL_TXINT
//    <name> TXINT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49304008) \nTX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_CTRL ) </loc>
//      <o.2..2> TXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: UART1_CTRL_RXEN  ----------------------------------
// SVD Line: 3732

//  <item> SFDITEM_FIELD__UART1_CTRL_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49304008) \nRX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_CTRL ) </loc>
//      <o.1..1> RXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: UART1_CTRL_TXEN  ----------------------------------
// SVD Line: 3749

//  <item> SFDITEM_FIELD__UART1_CTRL_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49304008) \nTX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_CTRL ) </loc>
//      <o.0..0> TXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: UART1_CTRL  -----------------------------------
// SVD Line: 3642

//  <rtree> SFDITEM_REG__UART1_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49304008) UART Control Register </i>
//    <loc> ( (unsigned int)((UART1_CTRL >> 0) & 0xFFFFFFFF), ((UART1_CTRL = (UART1_CTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART1_CTRL_HSTX </item>
//    <item> SFDITEM_FIELD__UART1_CTRL_RVOVINT </item>
//    <item> SFDITEM_FIELD__UART1_CTRL_TXOVINT </item>
//    <item> SFDITEM_FIELD__UART1_CTRL_RXINT </item>
//    <item> SFDITEM_FIELD__UART1_CTRL_TXINT </item>
//    <item> SFDITEM_FIELD__UART1_CTRL_RXEN </item>
//    <item> SFDITEM_FIELD__UART1_CTRL_TXEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART1_INTSTATUS  -----------------------------
// SVD Line: 3768

unsigned int UART1_INTSTATUS __AT (0x4930400C);



// ----------------------------  Field Item: UART1_INTSTATUS_RXOV  --------------------------------
// SVD Line: 3774

//  <item> SFDITEM_FIELD__UART1_INTSTATUS_RXOV
//    <name> RXOV </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4930400C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_INTSTATUS ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART1_INTSTATUS_TXOV  --------------------------------
// SVD Line: 3779

//  <item> SFDITEM_FIELD__UART1_INTSTATUS_TXOV
//    <name> TXOV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4930400C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_INTSTATUS ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART1_INTSTATUS_RXINT  -------------------------------
// SVD Line: 3784

//  <item> SFDITEM_FIELD__UART1_INTSTATUS_RXINT
//    <name> RXINT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4930400C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_INTSTATUS ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART1_INTSTATUS_TXINT  -------------------------------
// SVD Line: 3789

//  <item> SFDITEM_FIELD__UART1_INTSTATUS_TXINT
//    <name> TXINT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4930400C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_INTSTATUS ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART1_INTSTATUS  --------------------------------
// SVD Line: 3768

//  <rtree> SFDITEM_REG__UART1_INTSTATUS
//    <name> INTSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4930400C) UART Interrupt Status Register </i>
//    <loc> ( (unsigned int)((UART1_INTSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART1_INTSTATUS_RXOV </item>
//    <item> SFDITEM_FIELD__UART1_INTSTATUS_TXOV </item>
//    <item> SFDITEM_FIELD__UART1_INTSTATUS_RXINT </item>
//    <item> SFDITEM_FIELD__UART1_INTSTATUS_TXINT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART1_INTCLEAR  -----------------------------
// SVD Line: 3796

unsigned int UART1_INTCLEAR __AT (0x4930400C);



// -----------------------------  Field Item: UART1_INTCLEAR_RXOV  --------------------------------
// SVD Line: 3803

//  <item> SFDITEM_FIELD__UART1_INTCLEAR_RXOV
//    <name> RXOV </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4930400C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_INTCLEAR ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UART1_INTCLEAR_TXOV  --------------------------------
// SVD Line: 3809

//  <item> SFDITEM_FIELD__UART1_INTCLEAR_TXOV
//    <name> TXOV </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4930400C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_INTCLEAR ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART1_INTCLEAR_RXINT  --------------------------------
// SVD Line: 3815

//  <item> SFDITEM_FIELD__UART1_INTCLEAR_RXINT
//    <name> RXINT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4930400C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_INTCLEAR ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART1_INTCLEAR_TXINT  --------------------------------
// SVD Line: 3821

//  <item> SFDITEM_FIELD__UART1_INTCLEAR_TXINT
//    <name> TXINT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4930400C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_INTCLEAR ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART1_INTCLEAR  ---------------------------------
// SVD Line: 3796

//  <rtree> SFDITEM_REG__UART1_INTCLEAR
//    <name> INTCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4930400C) UART Interrupt CLEAR Register </i>
//    <loc> ( (unsigned int)((UART1_INTCLEAR >> 0) & 0xFFFFFFFF), ((UART1_INTCLEAR = (UART1_INTCLEAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART1_INTCLEAR_RXOV </item>
//    <item> SFDITEM_FIELD__UART1_INTCLEAR_TXOV </item>
//    <item> SFDITEM_FIELD__UART1_INTCLEAR_RXINT </item>
//    <item> SFDITEM_FIELD__UART1_INTCLEAR_TXINT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART1_BAUDDIV  ------------------------------
// SVD Line: 3829

unsigned int UART1_BAUDDIV __AT (0x49304010);



// ------------------------------  Register Item: UART1_BAUDDIV  ----------------------------------
// SVD Line: 3829

//  <item> SFDITEM_REG__UART1_BAUDDIV
//    <name> BAUDDIV </name>
//    <i> [Bits 31..0] RW (@ 0x49304010) Baudrate Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART1_BAUDDIV >> 0) & 0xFFFFFFFF), ((UART1_BAUDDIV = (UART1_BAUDDIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: UART1  -------------------------------------
// SVD Line: 3837

//  <view> UART1
//    <name> UART1 </name>
//    <item> SFDITEM_REG__UART1_DATA </item>
//    <item> SFDITEM_REG__UART1_STATE </item>
//    <item> SFDITEM_REG__UART1_CTRL </item>
//    <item> SFDITEM_REG__UART1_INTSTATUS </item>
//    <item> SFDITEM_REG__UART1_INTCLEAR </item>
//    <item> SFDITEM_REG__UART1_BAUDDIV </item>
//  </view>
//  


// ----------------------------  Register Item Address: UART2_DATA  -------------------------------
// SVD Line: 3605

unsigned char UART2_DATA __AT (0x49305000);



// --------------------------------  Register Item: UART2_DATA  -----------------------------------
// SVD Line: 3605

//  <item> SFDITEM_REG__UART2_DATA
//    <name> DATA </name>
//    <i> [Bits 7..0] RW (@ 0x49305000) Receive and Transmit Data Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_DATA >> 0) & 0xFFFFFFFF), ((UART2_DATA = (UART2_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: UART2_STATE  -------------------------------
// SVD Line: 3611

unsigned int UART2_STATE __AT (0x49305004);



// ------------------------------  Field Item: UART2_STATE_RXOV  ----------------------------------
// SVD Line: 3616

//  <item> SFDITEM_FIELD__UART2_STATE_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49305004) RX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_STATE ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART2_STATE_TXOV  ----------------------------------
// SVD Line: 3622

//  <item> SFDITEM_FIELD__UART2_STATE_TXOV
//    <name> TXOV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49305004) TX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_STATE ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART2_STATE_RXBF  ----------------------------------
// SVD Line: 3628

//  <item> SFDITEM_FIELD__UART2_STATE_RXBF
//    <name> RXBF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x49305004) RX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_STATE ) </loc>
//      <o.1..1> RXBF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART2_STATE_TXBF  ----------------------------------
// SVD Line: 3634

//  <item> SFDITEM_FIELD__UART2_STATE_TXBF
//    <name> TXBF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x49305004) TX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_STATE ) </loc>
//      <o.0..0> TXBF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART2_STATE  ----------------------------------
// SVD Line: 3611

//  <rtree> SFDITEM_REG__UART2_STATE
//    <name> STATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49305004) UART Status Register </i>
//    <loc> ( (unsigned int)((UART2_STATE >> 0) & 0xFFFFFFFF), ((UART2_STATE = (UART2_STATE & ~(0xCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_STATE_RXOV </item>
//    <item> SFDITEM_FIELD__UART2_STATE_TXOV </item>
//    <item> SFDITEM_FIELD__UART2_STATE_RXBF </item>
//    <item> SFDITEM_FIELD__UART2_STATE_TXBF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART2_CTRL  -------------------------------
// SVD Line: 3642

unsigned int UART2_CTRL __AT (0x49305008);



// -------------------------------  Field Item: UART2_CTRL_HSTX  ----------------------------------
// SVD Line: 3647

//  <item> SFDITEM_FIELD__UART2_CTRL_HSTX
//    <name> HSTX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x49305008) \nHigh Speed Test Mode for TX only\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_CTRL ) </loc>
//      <o.6..6> HSTX
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: UART2_CTRL_RVOVINT  ---------------------------------
// SVD Line: 3664

//  <item> SFDITEM_FIELD__UART2_CTRL_RVOVINT
//    <name> RVOVINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x49305008) \nRX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_CTRL ) </loc>
//      <o.5..5> RVOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: UART2_CTRL_TXOVINT  ---------------------------------
// SVD Line: 3681

//  <item> SFDITEM_FIELD__UART2_CTRL_TXOVINT
//    <name> TXOVINT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x49305008) \nTX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_CTRL ) </loc>
//      <o.4..4> TXOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: UART2_CTRL_RXINT  ----------------------------------
// SVD Line: 3698

//  <item> SFDITEM_FIELD__UART2_CTRL_RXINT
//    <name> RXINT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49305008) \nRX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_CTRL ) </loc>
//      <o.3..3> RXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: UART2_CTRL_TXINT  ----------------------------------
// SVD Line: 3715

//  <item> SFDITEM_FIELD__UART2_CTRL_TXINT
//    <name> TXINT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49305008) \nTX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_CTRL ) </loc>
//      <o.2..2> TXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: UART2_CTRL_RXEN  ----------------------------------
// SVD Line: 3732

//  <item> SFDITEM_FIELD__UART2_CTRL_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49305008) \nRX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_CTRL ) </loc>
//      <o.1..1> RXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: UART2_CTRL_TXEN  ----------------------------------
// SVD Line: 3749

//  <item> SFDITEM_FIELD__UART2_CTRL_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49305008) \nTX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_CTRL ) </loc>
//      <o.0..0> TXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: UART2_CTRL  -----------------------------------
// SVD Line: 3642

//  <rtree> SFDITEM_REG__UART2_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49305008) UART Control Register </i>
//    <loc> ( (unsigned int)((UART2_CTRL >> 0) & 0xFFFFFFFF), ((UART2_CTRL = (UART2_CTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_CTRL_HSTX </item>
//    <item> SFDITEM_FIELD__UART2_CTRL_RVOVINT </item>
//    <item> SFDITEM_FIELD__UART2_CTRL_TXOVINT </item>
//    <item> SFDITEM_FIELD__UART2_CTRL_RXINT </item>
//    <item> SFDITEM_FIELD__UART2_CTRL_TXINT </item>
//    <item> SFDITEM_FIELD__UART2_CTRL_RXEN </item>
//    <item> SFDITEM_FIELD__UART2_CTRL_TXEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART2_INTSTATUS  -----------------------------
// SVD Line: 3768

unsigned int UART2_INTSTATUS __AT (0x4930500C);



// ----------------------------  Field Item: UART2_INTSTATUS_RXOV  --------------------------------
// SVD Line: 3774

//  <item> SFDITEM_FIELD__UART2_INTSTATUS_RXOV
//    <name> RXOV </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4930500C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_INTSTATUS ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART2_INTSTATUS_TXOV  --------------------------------
// SVD Line: 3779

//  <item> SFDITEM_FIELD__UART2_INTSTATUS_TXOV
//    <name> TXOV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4930500C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_INTSTATUS ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART2_INTSTATUS_RXINT  -------------------------------
// SVD Line: 3784

//  <item> SFDITEM_FIELD__UART2_INTSTATUS_RXINT
//    <name> RXINT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4930500C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_INTSTATUS ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART2_INTSTATUS_TXINT  -------------------------------
// SVD Line: 3789

//  <item> SFDITEM_FIELD__UART2_INTSTATUS_TXINT
//    <name> TXINT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4930500C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_INTSTATUS ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART2_INTSTATUS  --------------------------------
// SVD Line: 3768

//  <rtree> SFDITEM_REG__UART2_INTSTATUS
//    <name> INTSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4930500C) UART Interrupt Status Register </i>
//    <loc> ( (unsigned int)((UART2_INTSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART2_INTSTATUS_RXOV </item>
//    <item> SFDITEM_FIELD__UART2_INTSTATUS_TXOV </item>
//    <item> SFDITEM_FIELD__UART2_INTSTATUS_RXINT </item>
//    <item> SFDITEM_FIELD__UART2_INTSTATUS_TXINT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART2_INTCLEAR  -----------------------------
// SVD Line: 3796

unsigned int UART2_INTCLEAR __AT (0x4930500C);



// -----------------------------  Field Item: UART2_INTCLEAR_RXOV  --------------------------------
// SVD Line: 3803

//  <item> SFDITEM_FIELD__UART2_INTCLEAR_RXOV
//    <name> RXOV </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4930500C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_INTCLEAR ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UART2_INTCLEAR_TXOV  --------------------------------
// SVD Line: 3809

//  <item> SFDITEM_FIELD__UART2_INTCLEAR_TXOV
//    <name> TXOV </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4930500C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_INTCLEAR ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART2_INTCLEAR_RXINT  --------------------------------
// SVD Line: 3815

//  <item> SFDITEM_FIELD__UART2_INTCLEAR_RXINT
//    <name> RXINT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4930500C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_INTCLEAR ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART2_INTCLEAR_TXINT  --------------------------------
// SVD Line: 3821

//  <item> SFDITEM_FIELD__UART2_INTCLEAR_TXINT
//    <name> TXINT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4930500C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_INTCLEAR ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART2_INTCLEAR  ---------------------------------
// SVD Line: 3796

//  <rtree> SFDITEM_REG__UART2_INTCLEAR
//    <name> INTCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4930500C) UART Interrupt CLEAR Register </i>
//    <loc> ( (unsigned int)((UART2_INTCLEAR >> 0) & 0xFFFFFFFF), ((UART2_INTCLEAR = (UART2_INTCLEAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_INTCLEAR_RXOV </item>
//    <item> SFDITEM_FIELD__UART2_INTCLEAR_TXOV </item>
//    <item> SFDITEM_FIELD__UART2_INTCLEAR_RXINT </item>
//    <item> SFDITEM_FIELD__UART2_INTCLEAR_TXINT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART2_BAUDDIV  ------------------------------
// SVD Line: 3829

unsigned int UART2_BAUDDIV __AT (0x49305010);



// ------------------------------  Register Item: UART2_BAUDDIV  ----------------------------------
// SVD Line: 3829

//  <item> SFDITEM_REG__UART2_BAUDDIV
//    <name> BAUDDIV </name>
//    <i> [Bits 31..0] RW (@ 0x49305010) Baudrate Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART2_BAUDDIV >> 0) & 0xFFFFFFFF), ((UART2_BAUDDIV = (UART2_BAUDDIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: UART2  -------------------------------------
// SVD Line: 3859

//  <view> UART2
//    <name> UART2 </name>
//    <item> SFDITEM_REG__UART2_DATA </item>
//    <item> SFDITEM_REG__UART2_STATE </item>
//    <item> SFDITEM_REG__UART2_CTRL </item>
//    <item> SFDITEM_REG__UART2_INTSTATUS </item>
//    <item> SFDITEM_REG__UART2_INTCLEAR </item>
//    <item> SFDITEM_REG__UART2_BAUDDIV </item>
//  </view>
//  


// ----------------------------  Register Item Address: UART3_DATA  -------------------------------
// SVD Line: 3605

unsigned char UART3_DATA __AT (0x49306000);



// --------------------------------  Register Item: UART3_DATA  -----------------------------------
// SVD Line: 3605

//  <item> SFDITEM_REG__UART3_DATA
//    <name> DATA </name>
//    <i> [Bits 7..0] RW (@ 0x49306000) Receive and Transmit Data Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_DATA >> 0) & 0xFFFFFFFF), ((UART3_DATA = (UART3_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: UART3_STATE  -------------------------------
// SVD Line: 3611

unsigned int UART3_STATE __AT (0x49306004);



// ------------------------------  Field Item: UART3_STATE_RXOV  ----------------------------------
// SVD Line: 3616

//  <item> SFDITEM_FIELD__UART3_STATE_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49306004) RX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_STATE ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART3_STATE_TXOV  ----------------------------------
// SVD Line: 3622

//  <item> SFDITEM_FIELD__UART3_STATE_TXOV
//    <name> TXOV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49306004) TX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_STATE ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART3_STATE_RXBF  ----------------------------------
// SVD Line: 3628

//  <item> SFDITEM_FIELD__UART3_STATE_RXBF
//    <name> RXBF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x49306004) RX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_STATE ) </loc>
//      <o.1..1> RXBF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART3_STATE_TXBF  ----------------------------------
// SVD Line: 3634

//  <item> SFDITEM_FIELD__UART3_STATE_TXBF
//    <name> TXBF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x49306004) TX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_STATE ) </loc>
//      <o.0..0> TXBF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART3_STATE  ----------------------------------
// SVD Line: 3611

//  <rtree> SFDITEM_REG__UART3_STATE
//    <name> STATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49306004) UART Status Register </i>
//    <loc> ( (unsigned int)((UART3_STATE >> 0) & 0xFFFFFFFF), ((UART3_STATE = (UART3_STATE & ~(0xCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_STATE_RXOV </item>
//    <item> SFDITEM_FIELD__UART3_STATE_TXOV </item>
//    <item> SFDITEM_FIELD__UART3_STATE_RXBF </item>
//    <item> SFDITEM_FIELD__UART3_STATE_TXBF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART3_CTRL  -------------------------------
// SVD Line: 3642

unsigned int UART3_CTRL __AT (0x49306008);



// -------------------------------  Field Item: UART3_CTRL_HSTX  ----------------------------------
// SVD Line: 3647

//  <item> SFDITEM_FIELD__UART3_CTRL_HSTX
//    <name> HSTX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x49306008) \nHigh Speed Test Mode for TX only\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_CTRL ) </loc>
//      <o.6..6> HSTX
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: UART3_CTRL_RVOVINT  ---------------------------------
// SVD Line: 3664

//  <item> SFDITEM_FIELD__UART3_CTRL_RVOVINT
//    <name> RVOVINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x49306008) \nRX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_CTRL ) </loc>
//      <o.5..5> RVOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: UART3_CTRL_TXOVINT  ---------------------------------
// SVD Line: 3681

//  <item> SFDITEM_FIELD__UART3_CTRL_TXOVINT
//    <name> TXOVINT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x49306008) \nTX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_CTRL ) </loc>
//      <o.4..4> TXOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: UART3_CTRL_RXINT  ----------------------------------
// SVD Line: 3698

//  <item> SFDITEM_FIELD__UART3_CTRL_RXINT
//    <name> RXINT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49306008) \nRX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_CTRL ) </loc>
//      <o.3..3> RXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: UART3_CTRL_TXINT  ----------------------------------
// SVD Line: 3715

//  <item> SFDITEM_FIELD__UART3_CTRL_TXINT
//    <name> TXINT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49306008) \nTX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_CTRL ) </loc>
//      <o.2..2> TXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: UART3_CTRL_RXEN  ----------------------------------
// SVD Line: 3732

//  <item> SFDITEM_FIELD__UART3_CTRL_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49306008) \nRX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_CTRL ) </loc>
//      <o.1..1> RXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: UART3_CTRL_TXEN  ----------------------------------
// SVD Line: 3749

//  <item> SFDITEM_FIELD__UART3_CTRL_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49306008) \nTX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_CTRL ) </loc>
//      <o.0..0> TXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: UART3_CTRL  -----------------------------------
// SVD Line: 3642

//  <rtree> SFDITEM_REG__UART3_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49306008) UART Control Register </i>
//    <loc> ( (unsigned int)((UART3_CTRL >> 0) & 0xFFFFFFFF), ((UART3_CTRL = (UART3_CTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_CTRL_HSTX </item>
//    <item> SFDITEM_FIELD__UART3_CTRL_RVOVINT </item>
//    <item> SFDITEM_FIELD__UART3_CTRL_TXOVINT </item>
//    <item> SFDITEM_FIELD__UART3_CTRL_RXINT </item>
//    <item> SFDITEM_FIELD__UART3_CTRL_TXINT </item>
//    <item> SFDITEM_FIELD__UART3_CTRL_RXEN </item>
//    <item> SFDITEM_FIELD__UART3_CTRL_TXEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART3_INTSTATUS  -----------------------------
// SVD Line: 3768

unsigned int UART3_INTSTATUS __AT (0x4930600C);



// ----------------------------  Field Item: UART3_INTSTATUS_RXOV  --------------------------------
// SVD Line: 3774

//  <item> SFDITEM_FIELD__UART3_INTSTATUS_RXOV
//    <name> RXOV </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4930600C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_INTSTATUS ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART3_INTSTATUS_TXOV  --------------------------------
// SVD Line: 3779

//  <item> SFDITEM_FIELD__UART3_INTSTATUS_TXOV
//    <name> TXOV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4930600C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_INTSTATUS ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART3_INTSTATUS_RXINT  -------------------------------
// SVD Line: 3784

//  <item> SFDITEM_FIELD__UART3_INTSTATUS_RXINT
//    <name> RXINT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4930600C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_INTSTATUS ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART3_INTSTATUS_TXINT  -------------------------------
// SVD Line: 3789

//  <item> SFDITEM_FIELD__UART3_INTSTATUS_TXINT
//    <name> TXINT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4930600C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_INTSTATUS ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART3_INTSTATUS  --------------------------------
// SVD Line: 3768

//  <rtree> SFDITEM_REG__UART3_INTSTATUS
//    <name> INTSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4930600C) UART Interrupt Status Register </i>
//    <loc> ( (unsigned int)((UART3_INTSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART3_INTSTATUS_RXOV </item>
//    <item> SFDITEM_FIELD__UART3_INTSTATUS_TXOV </item>
//    <item> SFDITEM_FIELD__UART3_INTSTATUS_RXINT </item>
//    <item> SFDITEM_FIELD__UART3_INTSTATUS_TXINT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART3_INTCLEAR  -----------------------------
// SVD Line: 3796

unsigned int UART3_INTCLEAR __AT (0x4930600C);



// -----------------------------  Field Item: UART3_INTCLEAR_RXOV  --------------------------------
// SVD Line: 3803

//  <item> SFDITEM_FIELD__UART3_INTCLEAR_RXOV
//    <name> RXOV </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4930600C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_INTCLEAR ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UART3_INTCLEAR_TXOV  --------------------------------
// SVD Line: 3809

//  <item> SFDITEM_FIELD__UART3_INTCLEAR_TXOV
//    <name> TXOV </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4930600C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_INTCLEAR ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART3_INTCLEAR_RXINT  --------------------------------
// SVD Line: 3815

//  <item> SFDITEM_FIELD__UART3_INTCLEAR_RXINT
//    <name> RXINT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4930600C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_INTCLEAR ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART3_INTCLEAR_TXINT  --------------------------------
// SVD Line: 3821

//  <item> SFDITEM_FIELD__UART3_INTCLEAR_TXINT
//    <name> TXINT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4930600C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_INTCLEAR ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART3_INTCLEAR  ---------------------------------
// SVD Line: 3796

//  <rtree> SFDITEM_REG__UART3_INTCLEAR
//    <name> INTCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4930600C) UART Interrupt CLEAR Register </i>
//    <loc> ( (unsigned int)((UART3_INTCLEAR >> 0) & 0xFFFFFFFF), ((UART3_INTCLEAR = (UART3_INTCLEAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_INTCLEAR_RXOV </item>
//    <item> SFDITEM_FIELD__UART3_INTCLEAR_TXOV </item>
//    <item> SFDITEM_FIELD__UART3_INTCLEAR_RXINT </item>
//    <item> SFDITEM_FIELD__UART3_INTCLEAR_TXINT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART3_BAUDDIV  ------------------------------
// SVD Line: 3829

unsigned int UART3_BAUDDIV __AT (0x49306010);



// ------------------------------  Register Item: UART3_BAUDDIV  ----------------------------------
// SVD Line: 3829

//  <item> SFDITEM_REG__UART3_BAUDDIV
//    <name> BAUDDIV </name>
//    <i> [Bits 31..0] RW (@ 0x49306010) Baudrate Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART3_BAUDDIV >> 0) & 0xFFFFFFFF), ((UART3_BAUDDIV = (UART3_BAUDDIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: UART3  -------------------------------------
// SVD Line: 3881

//  <view> UART3
//    <name> UART3 </name>
//    <item> SFDITEM_REG__UART3_DATA </item>
//    <item> SFDITEM_REG__UART3_STATE </item>
//    <item> SFDITEM_REG__UART3_CTRL </item>
//    <item> SFDITEM_REG__UART3_INTSTATUS </item>
//    <item> SFDITEM_REG__UART3_INTCLEAR </item>
//    <item> SFDITEM_REG__UART3_BAUDDIV </item>
//  </view>
//  


// ----------------------------  Register Item Address: UART4_DATA  -------------------------------
// SVD Line: 3605

unsigned char UART4_DATA __AT (0x49307000);



// --------------------------------  Register Item: UART4_DATA  -----------------------------------
// SVD Line: 3605

//  <item> SFDITEM_REG__UART4_DATA
//    <name> DATA </name>
//    <i> [Bits 7..0] RW (@ 0x49307000) Receive and Transmit Data Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART4_DATA >> 0) & 0xFFFFFFFF), ((UART4_DATA = (UART4_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: UART4_STATE  -------------------------------
// SVD Line: 3611

unsigned int UART4_STATE __AT (0x49307004);



// ------------------------------  Field Item: UART4_STATE_RXOV  ----------------------------------
// SVD Line: 3616

//  <item> SFDITEM_FIELD__UART4_STATE_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49307004) RX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_STATE ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART4_STATE_TXOV  ----------------------------------
// SVD Line: 3622

//  <item> SFDITEM_FIELD__UART4_STATE_TXOV
//    <name> TXOV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49307004) TX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_STATE ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART4_STATE_RXBF  ----------------------------------
// SVD Line: 3628

//  <item> SFDITEM_FIELD__UART4_STATE_RXBF
//    <name> RXBF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x49307004) RX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_STATE ) </loc>
//      <o.1..1> RXBF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART4_STATE_TXBF  ----------------------------------
// SVD Line: 3634

//  <item> SFDITEM_FIELD__UART4_STATE_TXBF
//    <name> TXBF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x49307004) TX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_STATE ) </loc>
//      <o.0..0> TXBF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART4_STATE  ----------------------------------
// SVD Line: 3611

//  <rtree> SFDITEM_REG__UART4_STATE
//    <name> STATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49307004) UART Status Register </i>
//    <loc> ( (unsigned int)((UART4_STATE >> 0) & 0xFFFFFFFF), ((UART4_STATE = (UART4_STATE & ~(0xCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_STATE_RXOV </item>
//    <item> SFDITEM_FIELD__UART4_STATE_TXOV </item>
//    <item> SFDITEM_FIELD__UART4_STATE_RXBF </item>
//    <item> SFDITEM_FIELD__UART4_STATE_TXBF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART4_CTRL  -------------------------------
// SVD Line: 3642

unsigned int UART4_CTRL __AT (0x49307008);



// -------------------------------  Field Item: UART4_CTRL_HSTX  ----------------------------------
// SVD Line: 3647

//  <item> SFDITEM_FIELD__UART4_CTRL_HSTX
//    <name> HSTX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x49307008) \nHigh Speed Test Mode for TX only\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_CTRL ) </loc>
//      <o.6..6> HSTX
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: UART4_CTRL_RVOVINT  ---------------------------------
// SVD Line: 3664

//  <item> SFDITEM_FIELD__UART4_CTRL_RVOVINT
//    <name> RVOVINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x49307008) \nRX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_CTRL ) </loc>
//      <o.5..5> RVOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: UART4_CTRL_TXOVINT  ---------------------------------
// SVD Line: 3681

//  <item> SFDITEM_FIELD__UART4_CTRL_TXOVINT
//    <name> TXOVINT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x49307008) \nTX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_CTRL ) </loc>
//      <o.4..4> TXOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: UART4_CTRL_RXINT  ----------------------------------
// SVD Line: 3698

//  <item> SFDITEM_FIELD__UART4_CTRL_RXINT
//    <name> RXINT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49307008) \nRX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_CTRL ) </loc>
//      <o.3..3> RXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: UART4_CTRL_TXINT  ----------------------------------
// SVD Line: 3715

//  <item> SFDITEM_FIELD__UART4_CTRL_TXINT
//    <name> TXINT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49307008) \nTX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_CTRL ) </loc>
//      <o.2..2> TXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: UART4_CTRL_RXEN  ----------------------------------
// SVD Line: 3732

//  <item> SFDITEM_FIELD__UART4_CTRL_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49307008) \nRX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_CTRL ) </loc>
//      <o.1..1> RXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: UART4_CTRL_TXEN  ----------------------------------
// SVD Line: 3749

//  <item> SFDITEM_FIELD__UART4_CTRL_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49307008) \nTX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_CTRL ) </loc>
//      <o.0..0> TXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: UART4_CTRL  -----------------------------------
// SVD Line: 3642

//  <rtree> SFDITEM_REG__UART4_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49307008) UART Control Register </i>
//    <loc> ( (unsigned int)((UART4_CTRL >> 0) & 0xFFFFFFFF), ((UART4_CTRL = (UART4_CTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_CTRL_HSTX </item>
//    <item> SFDITEM_FIELD__UART4_CTRL_RVOVINT </item>
//    <item> SFDITEM_FIELD__UART4_CTRL_TXOVINT </item>
//    <item> SFDITEM_FIELD__UART4_CTRL_RXINT </item>
//    <item> SFDITEM_FIELD__UART4_CTRL_TXINT </item>
//    <item> SFDITEM_FIELD__UART4_CTRL_RXEN </item>
//    <item> SFDITEM_FIELD__UART4_CTRL_TXEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART4_INTSTATUS  -----------------------------
// SVD Line: 3768

unsigned int UART4_INTSTATUS __AT (0x4930700C);



// ----------------------------  Field Item: UART4_INTSTATUS_RXOV  --------------------------------
// SVD Line: 3774

//  <item> SFDITEM_FIELD__UART4_INTSTATUS_RXOV
//    <name> RXOV </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4930700C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_INTSTATUS ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART4_INTSTATUS_TXOV  --------------------------------
// SVD Line: 3779

//  <item> SFDITEM_FIELD__UART4_INTSTATUS_TXOV
//    <name> TXOV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4930700C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_INTSTATUS ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART4_INTSTATUS_RXINT  -------------------------------
// SVD Line: 3784

//  <item> SFDITEM_FIELD__UART4_INTSTATUS_RXINT
//    <name> RXINT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4930700C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_INTSTATUS ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART4_INTSTATUS_TXINT  -------------------------------
// SVD Line: 3789

//  <item> SFDITEM_FIELD__UART4_INTSTATUS_TXINT
//    <name> TXINT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4930700C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_INTSTATUS ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART4_INTSTATUS  --------------------------------
// SVD Line: 3768

//  <rtree> SFDITEM_REG__UART4_INTSTATUS
//    <name> INTSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4930700C) UART Interrupt Status Register </i>
//    <loc> ( (unsigned int)((UART4_INTSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART4_INTSTATUS_RXOV </item>
//    <item> SFDITEM_FIELD__UART4_INTSTATUS_TXOV </item>
//    <item> SFDITEM_FIELD__UART4_INTSTATUS_RXINT </item>
//    <item> SFDITEM_FIELD__UART4_INTSTATUS_TXINT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART4_INTCLEAR  -----------------------------
// SVD Line: 3796

unsigned int UART4_INTCLEAR __AT (0x4930700C);



// -----------------------------  Field Item: UART4_INTCLEAR_RXOV  --------------------------------
// SVD Line: 3803

//  <item> SFDITEM_FIELD__UART4_INTCLEAR_RXOV
//    <name> RXOV </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4930700C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_INTCLEAR ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UART4_INTCLEAR_TXOV  --------------------------------
// SVD Line: 3809

//  <item> SFDITEM_FIELD__UART4_INTCLEAR_TXOV
//    <name> TXOV </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4930700C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_INTCLEAR ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART4_INTCLEAR_RXINT  --------------------------------
// SVD Line: 3815

//  <item> SFDITEM_FIELD__UART4_INTCLEAR_RXINT
//    <name> RXINT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4930700C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_INTCLEAR ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART4_INTCLEAR_TXINT  --------------------------------
// SVD Line: 3821

//  <item> SFDITEM_FIELD__UART4_INTCLEAR_TXINT
//    <name> TXINT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4930700C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_INTCLEAR ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART4_INTCLEAR  ---------------------------------
// SVD Line: 3796

//  <rtree> SFDITEM_REG__UART4_INTCLEAR
//    <name> INTCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4930700C) UART Interrupt CLEAR Register </i>
//    <loc> ( (unsigned int)((UART4_INTCLEAR >> 0) & 0xFFFFFFFF), ((UART4_INTCLEAR = (UART4_INTCLEAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_INTCLEAR_RXOV </item>
//    <item> SFDITEM_FIELD__UART4_INTCLEAR_TXOV </item>
//    <item> SFDITEM_FIELD__UART4_INTCLEAR_RXINT </item>
//    <item> SFDITEM_FIELD__UART4_INTCLEAR_TXINT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART4_BAUDDIV  ------------------------------
// SVD Line: 3829

unsigned int UART4_BAUDDIV __AT (0x49307010);



// ------------------------------  Register Item: UART4_BAUDDIV  ----------------------------------
// SVD Line: 3829

//  <item> SFDITEM_REG__UART4_BAUDDIV
//    <name> BAUDDIV </name>
//    <i> [Bits 31..0] RW (@ 0x49307010) Baudrate Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART4_BAUDDIV >> 0) & 0xFFFFFFFF), ((UART4_BAUDDIV = (UART4_BAUDDIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: UART4  -------------------------------------
// SVD Line: 3903

//  <view> UART4
//    <name> UART4 </name>
//    <item> SFDITEM_REG__UART4_DATA </item>
//    <item> SFDITEM_REG__UART4_STATE </item>
//    <item> SFDITEM_REG__UART4_CTRL </item>
//    <item> SFDITEM_REG__UART4_INTSTATUS </item>
//    <item> SFDITEM_REG__UART4_INTCLEAR </item>
//    <item> SFDITEM_REG__UART4_BAUDDIV </item>
//  </view>
//  


// ----------------------------  Register Item Address: UART5_DATA  -------------------------------
// SVD Line: 3605

unsigned char UART5_DATA __AT (0x49308000);



// --------------------------------  Register Item: UART5_DATA  -----------------------------------
// SVD Line: 3605

//  <item> SFDITEM_REG__UART5_DATA
//    <name> DATA </name>
//    <i> [Bits 7..0] RW (@ 0x49308000) Receive and Transmit Data Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART5_DATA >> 0) & 0xFFFFFFFF), ((UART5_DATA = (UART5_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: UART5_STATE  -------------------------------
// SVD Line: 3611

unsigned int UART5_STATE __AT (0x49308004);



// ------------------------------  Field Item: UART5_STATE_RXOV  ----------------------------------
// SVD Line: 3616

//  <item> SFDITEM_FIELD__UART5_STATE_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49308004) RX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_STATE ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART5_STATE_TXOV  ----------------------------------
// SVD Line: 3622

//  <item> SFDITEM_FIELD__UART5_STATE_TXOV
//    <name> TXOV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49308004) TX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_STATE ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART5_STATE_RXBF  ----------------------------------
// SVD Line: 3628

//  <item> SFDITEM_FIELD__UART5_STATE_RXBF
//    <name> RXBF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x49308004) RX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_STATE ) </loc>
//      <o.1..1> RXBF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART5_STATE_TXBF  ----------------------------------
// SVD Line: 3634

//  <item> SFDITEM_FIELD__UART5_STATE_TXBF
//    <name> TXBF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x49308004) TX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_STATE ) </loc>
//      <o.0..0> TXBF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART5_STATE  ----------------------------------
// SVD Line: 3611

//  <rtree> SFDITEM_REG__UART5_STATE
//    <name> STATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49308004) UART Status Register </i>
//    <loc> ( (unsigned int)((UART5_STATE >> 0) & 0xFFFFFFFF), ((UART5_STATE = (UART5_STATE & ~(0xCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_STATE_RXOV </item>
//    <item> SFDITEM_FIELD__UART5_STATE_TXOV </item>
//    <item> SFDITEM_FIELD__UART5_STATE_RXBF </item>
//    <item> SFDITEM_FIELD__UART5_STATE_TXBF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART5_CTRL  -------------------------------
// SVD Line: 3642

unsigned int UART5_CTRL __AT (0x49308008);



// -------------------------------  Field Item: UART5_CTRL_HSTX  ----------------------------------
// SVD Line: 3647

//  <item> SFDITEM_FIELD__UART5_CTRL_HSTX
//    <name> HSTX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x49308008) \nHigh Speed Test Mode for TX only\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART5_CTRL ) </loc>
//      <o.6..6> HSTX
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: UART5_CTRL_RVOVINT  ---------------------------------
// SVD Line: 3664

//  <item> SFDITEM_FIELD__UART5_CTRL_RVOVINT
//    <name> RVOVINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x49308008) \nRX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART5_CTRL ) </loc>
//      <o.5..5> RVOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: UART5_CTRL_TXOVINT  ---------------------------------
// SVD Line: 3681

//  <item> SFDITEM_FIELD__UART5_CTRL_TXOVINT
//    <name> TXOVINT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x49308008) \nTX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART5_CTRL ) </loc>
//      <o.4..4> TXOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: UART5_CTRL_RXINT  ----------------------------------
// SVD Line: 3698

//  <item> SFDITEM_FIELD__UART5_CTRL_RXINT
//    <name> RXINT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49308008) \nRX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART5_CTRL ) </loc>
//      <o.3..3> RXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: UART5_CTRL_TXINT  ----------------------------------
// SVD Line: 3715

//  <item> SFDITEM_FIELD__UART5_CTRL_TXINT
//    <name> TXINT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49308008) \nTX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART5_CTRL ) </loc>
//      <o.2..2> TXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: UART5_CTRL_RXEN  ----------------------------------
// SVD Line: 3732

//  <item> SFDITEM_FIELD__UART5_CTRL_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49308008) \nRX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART5_CTRL ) </loc>
//      <o.1..1> RXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: UART5_CTRL_TXEN  ----------------------------------
// SVD Line: 3749

//  <item> SFDITEM_FIELD__UART5_CTRL_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49308008) \nTX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART5_CTRL ) </loc>
//      <o.0..0> TXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: UART5_CTRL  -----------------------------------
// SVD Line: 3642

//  <rtree> SFDITEM_REG__UART5_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49308008) UART Control Register </i>
//    <loc> ( (unsigned int)((UART5_CTRL >> 0) & 0xFFFFFFFF), ((UART5_CTRL = (UART5_CTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_CTRL_HSTX </item>
//    <item> SFDITEM_FIELD__UART5_CTRL_RVOVINT </item>
//    <item> SFDITEM_FIELD__UART5_CTRL_TXOVINT </item>
//    <item> SFDITEM_FIELD__UART5_CTRL_RXINT </item>
//    <item> SFDITEM_FIELD__UART5_CTRL_TXINT </item>
//    <item> SFDITEM_FIELD__UART5_CTRL_RXEN </item>
//    <item> SFDITEM_FIELD__UART5_CTRL_TXEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART5_INTSTATUS  -----------------------------
// SVD Line: 3768

unsigned int UART5_INTSTATUS __AT (0x4930800C);



// ----------------------------  Field Item: UART5_INTSTATUS_RXOV  --------------------------------
// SVD Line: 3774

//  <item> SFDITEM_FIELD__UART5_INTSTATUS_RXOV
//    <name> RXOV </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4930800C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_INTSTATUS ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART5_INTSTATUS_TXOV  --------------------------------
// SVD Line: 3779

//  <item> SFDITEM_FIELD__UART5_INTSTATUS_TXOV
//    <name> TXOV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4930800C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_INTSTATUS ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART5_INTSTATUS_RXINT  -------------------------------
// SVD Line: 3784

//  <item> SFDITEM_FIELD__UART5_INTSTATUS_RXINT
//    <name> RXINT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4930800C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_INTSTATUS ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART5_INTSTATUS_TXINT  -------------------------------
// SVD Line: 3789

//  <item> SFDITEM_FIELD__UART5_INTSTATUS_TXINT
//    <name> TXINT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4930800C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_INTSTATUS ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART5_INTSTATUS  --------------------------------
// SVD Line: 3768

//  <rtree> SFDITEM_REG__UART5_INTSTATUS
//    <name> INTSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4930800C) UART Interrupt Status Register </i>
//    <loc> ( (unsigned int)((UART5_INTSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART5_INTSTATUS_RXOV </item>
//    <item> SFDITEM_FIELD__UART5_INTSTATUS_TXOV </item>
//    <item> SFDITEM_FIELD__UART5_INTSTATUS_RXINT </item>
//    <item> SFDITEM_FIELD__UART5_INTSTATUS_TXINT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART5_INTCLEAR  -----------------------------
// SVD Line: 3796

unsigned int UART5_INTCLEAR __AT (0x4930800C);



// -----------------------------  Field Item: UART5_INTCLEAR_RXOV  --------------------------------
// SVD Line: 3803

//  <item> SFDITEM_FIELD__UART5_INTCLEAR_RXOV
//    <name> RXOV </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4930800C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_INTCLEAR ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UART5_INTCLEAR_TXOV  --------------------------------
// SVD Line: 3809

//  <item> SFDITEM_FIELD__UART5_INTCLEAR_TXOV
//    <name> TXOV </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4930800C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_INTCLEAR ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART5_INTCLEAR_RXINT  --------------------------------
// SVD Line: 3815

//  <item> SFDITEM_FIELD__UART5_INTCLEAR_RXINT
//    <name> RXINT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4930800C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_INTCLEAR ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART5_INTCLEAR_TXINT  --------------------------------
// SVD Line: 3821

//  <item> SFDITEM_FIELD__UART5_INTCLEAR_TXINT
//    <name> TXINT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4930800C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_INTCLEAR ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART5_INTCLEAR  ---------------------------------
// SVD Line: 3796

//  <rtree> SFDITEM_REG__UART5_INTCLEAR
//    <name> INTCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4930800C) UART Interrupt CLEAR Register </i>
//    <loc> ( (unsigned int)((UART5_INTCLEAR >> 0) & 0xFFFFFFFF), ((UART5_INTCLEAR = (UART5_INTCLEAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_INTCLEAR_RXOV </item>
//    <item> SFDITEM_FIELD__UART5_INTCLEAR_TXOV </item>
//    <item> SFDITEM_FIELD__UART5_INTCLEAR_RXINT </item>
//    <item> SFDITEM_FIELD__UART5_INTCLEAR_TXINT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART5_BAUDDIV  ------------------------------
// SVD Line: 3829

unsigned int UART5_BAUDDIV __AT (0x49308010);



// ------------------------------  Register Item: UART5_BAUDDIV  ----------------------------------
// SVD Line: 3829

//  <item> SFDITEM_REG__UART5_BAUDDIV
//    <name> BAUDDIV </name>
//    <i> [Bits 31..0] RW (@ 0x49308010) Baudrate Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART5_BAUDDIV >> 0) & 0xFFFFFFFF), ((UART5_BAUDDIV = (UART5_BAUDDIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: UART5  -------------------------------------
// SVD Line: 3925

//  <view> UART5
//    <name> UART5 </name>
//    <item> SFDITEM_REG__UART5_DATA </item>
//    <item> SFDITEM_REG__UART5_STATE </item>
//    <item> SFDITEM_REG__UART5_CTRL </item>
//    <item> SFDITEM_REG__UART5_INTSTATUS </item>
//    <item> SFDITEM_REG__UART5_INTCLEAR </item>
//    <item> SFDITEM_REG__UART5_BAUDDIV </item>
//  </view>
//  


// ------------------------  Register Item Address: UART0_Secure_DATA  ----------------------------
// SVD Line: 3605

unsigned char UART0_Secure_DATA __AT (0x59303000);



// ----------------------------  Register Item: UART0_Secure_DATA  --------------------------------
// SVD Line: 3605

//  <item> SFDITEM_REG__UART0_Secure_DATA
//    <name> DATA </name>
//    <i> [Bits 7..0] RW (@ 0x59303000) Receive and Transmit Data Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART0_Secure_DATA >> 0) & 0xFFFFFFFF), ((UART0_Secure_DATA = (UART0_Secure_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: UART0_Secure_STATE  ---------------------------
// SVD Line: 3611

unsigned int UART0_Secure_STATE __AT (0x59303004);



// ---------------------------  Field Item: UART0_Secure_STATE_RXOV  ------------------------------
// SVD Line: 3616

//  <item> SFDITEM_FIELD__UART0_Secure_STATE_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59303004) RX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_STATE ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART0_Secure_STATE_TXOV  ------------------------------
// SVD Line: 3622

//  <item> SFDITEM_FIELD__UART0_Secure_STATE_TXOV
//    <name> TXOV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59303004) TX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_STATE ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART0_Secure_STATE_RXBF  ------------------------------
// SVD Line: 3628

//  <item> SFDITEM_FIELD__UART0_Secure_STATE_RXBF
//    <name> RXBF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x59303004) RX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_STATE ) </loc>
//      <o.1..1> RXBF
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART0_Secure_STATE_TXBF  ------------------------------
// SVD Line: 3634

//  <item> SFDITEM_FIELD__UART0_Secure_STATE_TXBF
//    <name> TXBF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x59303004) TX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_STATE ) </loc>
//      <o.0..0> TXBF
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: UART0_Secure_STATE  -------------------------------
// SVD Line: 3611

//  <rtree> SFDITEM_REG__UART0_Secure_STATE
//    <name> STATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59303004) UART Status Register </i>
//    <loc> ( (unsigned int)((UART0_Secure_STATE >> 0) & 0xFFFFFFFF), ((UART0_Secure_STATE = (UART0_Secure_STATE & ~(0xCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART0_Secure_STATE_RXOV </item>
//    <item> SFDITEM_FIELD__UART0_Secure_STATE_TXOV </item>
//    <item> SFDITEM_FIELD__UART0_Secure_STATE_RXBF </item>
//    <item> SFDITEM_FIELD__UART0_Secure_STATE_TXBF </item>
//  </rtree>
//  


// ------------------------  Register Item Address: UART0_Secure_CTRL  ----------------------------
// SVD Line: 3642

unsigned int UART0_Secure_CTRL __AT (0x59303008);



// ---------------------------  Field Item: UART0_Secure_CTRL_HSTX  -------------------------------
// SVD Line: 3647

//  <item> SFDITEM_FIELD__UART0_Secure_CTRL_HSTX
//    <name> HSTX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x59303008) \nHigh Speed Test Mode for TX only\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_Secure_CTRL ) </loc>
//      <o.6..6> HSTX
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: UART0_Secure_CTRL_RVOVINT  -----------------------------
// SVD Line: 3664

//  <item> SFDITEM_FIELD__UART0_Secure_CTRL_RVOVINT
//    <name> RVOVINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x59303008) \nRX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_Secure_CTRL ) </loc>
//      <o.5..5> RVOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: UART0_Secure_CTRL_TXOVINT  -----------------------------
// SVD Line: 3681

//  <item> SFDITEM_FIELD__UART0_Secure_CTRL_TXOVINT
//    <name> TXOVINT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x59303008) \nTX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_Secure_CTRL ) </loc>
//      <o.4..4> TXOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART0_Secure_CTRL_RXINT  ------------------------------
// SVD Line: 3698

//  <item> SFDITEM_FIELD__UART0_Secure_CTRL_RXINT
//    <name> RXINT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59303008) \nRX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_Secure_CTRL ) </loc>
//      <o.3..3> RXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART0_Secure_CTRL_TXINT  ------------------------------
// SVD Line: 3715

//  <item> SFDITEM_FIELD__UART0_Secure_CTRL_TXINT
//    <name> TXINT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59303008) \nTX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_Secure_CTRL ) </loc>
//      <o.2..2> TXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART0_Secure_CTRL_RXEN  -------------------------------
// SVD Line: 3732

//  <item> SFDITEM_FIELD__UART0_Secure_CTRL_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59303008) \nRX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_Secure_CTRL ) </loc>
//      <o.1..1> RXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART0_Secure_CTRL_TXEN  -------------------------------
// SVD Line: 3749

//  <item> SFDITEM_FIELD__UART0_Secure_CTRL_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59303008) \nTX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART0_Secure_CTRL ) </loc>
//      <o.0..0> TXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: UART0_Secure_CTRL  -------------------------------
// SVD Line: 3642

//  <rtree> SFDITEM_REG__UART0_Secure_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59303008) UART Control Register </i>
//    <loc> ( (unsigned int)((UART0_Secure_CTRL >> 0) & 0xFFFFFFFF), ((UART0_Secure_CTRL = (UART0_Secure_CTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART0_Secure_CTRL_HSTX </item>
//    <item> SFDITEM_FIELD__UART0_Secure_CTRL_RVOVINT </item>
//    <item> SFDITEM_FIELD__UART0_Secure_CTRL_TXOVINT </item>
//    <item> SFDITEM_FIELD__UART0_Secure_CTRL_RXINT </item>
//    <item> SFDITEM_FIELD__UART0_Secure_CTRL_TXINT </item>
//    <item> SFDITEM_FIELD__UART0_Secure_CTRL_RXEN </item>
//    <item> SFDITEM_FIELD__UART0_Secure_CTRL_TXEN </item>
//  </rtree>
//  


// ----------------------  Register Item Address: UART0_Secure_INTSTATUS  -------------------------
// SVD Line: 3768

unsigned int UART0_Secure_INTSTATUS __AT (0x5930300C);



// -------------------------  Field Item: UART0_Secure_INTSTATUS_RXOV  ----------------------------
// SVD Line: 3774

//  <item> SFDITEM_FIELD__UART0_Secure_INTSTATUS_RXOV
//    <name> RXOV </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5930300C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_INTSTATUS ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART0_Secure_INTSTATUS_TXOV  ----------------------------
// SVD Line: 3779

//  <item> SFDITEM_FIELD__UART0_Secure_INTSTATUS_TXOV
//    <name> TXOV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5930300C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_INTSTATUS ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ------------------------  Field Item: UART0_Secure_INTSTATUS_RXINT  ----------------------------
// SVD Line: 3784

//  <item> SFDITEM_FIELD__UART0_Secure_INTSTATUS_RXINT
//    <name> RXINT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5930300C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_INTSTATUS ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ------------------------  Field Item: UART0_Secure_INTSTATUS_TXINT  ----------------------------
// SVD Line: 3789

//  <item> SFDITEM_FIELD__UART0_Secure_INTSTATUS_TXINT
//    <name> TXINT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5930300C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_INTSTATUS ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -------------------------  Register RTree: UART0_Secure_INTSTATUS  -----------------------------
// SVD Line: 3768

//  <rtree> SFDITEM_REG__UART0_Secure_INTSTATUS
//    <name> INTSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5930300C) UART Interrupt Status Register </i>
//    <loc> ( (unsigned int)((UART0_Secure_INTSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART0_Secure_INTSTATUS_RXOV </item>
//    <item> SFDITEM_FIELD__UART0_Secure_INTSTATUS_TXOV </item>
//    <item> SFDITEM_FIELD__UART0_Secure_INTSTATUS_RXINT </item>
//    <item> SFDITEM_FIELD__UART0_Secure_INTSTATUS_TXINT </item>
//  </rtree>
//  


// ----------------------  Register Item Address: UART0_Secure_INTCLEAR  --------------------------
// SVD Line: 3796

unsigned int UART0_Secure_INTCLEAR __AT (0x5930300C);



// -------------------------  Field Item: UART0_Secure_INTCLEAR_RXOV  -----------------------------
// SVD Line: 3803

//  <item> SFDITEM_FIELD__UART0_Secure_INTCLEAR_RXOV
//    <name> RXOV </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x5930300C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_INTCLEAR ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART0_Secure_INTCLEAR_TXOV  -----------------------------
// SVD Line: 3809

//  <item> SFDITEM_FIELD__UART0_Secure_INTCLEAR_TXOV
//    <name> TXOV </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x5930300C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_INTCLEAR ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART0_Secure_INTCLEAR_RXINT  ----------------------------
// SVD Line: 3815

//  <item> SFDITEM_FIELD__UART0_Secure_INTCLEAR_RXINT
//    <name> RXINT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x5930300C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_INTCLEAR ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART0_Secure_INTCLEAR_TXINT  ----------------------------
// SVD Line: 3821

//  <item> SFDITEM_FIELD__UART0_Secure_INTCLEAR_TXINT
//    <name> TXINT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x5930300C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_Secure_INTCLEAR ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// --------------------------  Register RTree: UART0_Secure_INTCLEAR  -----------------------------
// SVD Line: 3796

//  <rtree> SFDITEM_REG__UART0_Secure_INTCLEAR
//    <name> INTCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x5930300C) UART Interrupt CLEAR Register </i>
//    <loc> ( (unsigned int)((UART0_Secure_INTCLEAR >> 0) & 0xFFFFFFFF), ((UART0_Secure_INTCLEAR = (UART0_Secure_INTCLEAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART0_Secure_INTCLEAR_RXOV </item>
//    <item> SFDITEM_FIELD__UART0_Secure_INTCLEAR_TXOV </item>
//    <item> SFDITEM_FIELD__UART0_Secure_INTCLEAR_RXINT </item>
//    <item> SFDITEM_FIELD__UART0_Secure_INTCLEAR_TXINT </item>
//  </rtree>
//  


// -----------------------  Register Item Address: UART0_Secure_BAUDDIV  --------------------------
// SVD Line: 3829

unsigned int UART0_Secure_BAUDDIV __AT (0x59303010);



// ---------------------------  Register Item: UART0_Secure_BAUDDIV  ------------------------------
// SVD Line: 3829

//  <item> SFDITEM_REG__UART0_Secure_BAUDDIV
//    <name> BAUDDIV </name>
//    <i> [Bits 31..0] RW (@ 0x59303010) Baudrate Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART0_Secure_BAUDDIV >> 0) & 0xFFFFFFFF), ((UART0_Secure_BAUDDIV = (UART0_Secure_BAUDDIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Peripheral View: UART0_Secure  ---------------------------------
// SVD Line: 3952

//  <view> UART0_Secure
//    <name> UART0_Secure </name>
//    <item> SFDITEM_REG__UART0_Secure_DATA </item>
//    <item> SFDITEM_REG__UART0_Secure_STATE </item>
//    <item> SFDITEM_REG__UART0_Secure_CTRL </item>
//    <item> SFDITEM_REG__UART0_Secure_INTSTATUS </item>
//    <item> SFDITEM_REG__UART0_Secure_INTCLEAR </item>
//    <item> SFDITEM_REG__UART0_Secure_BAUDDIV </item>
//  </view>
//  


// ------------------------  Register Item Address: UART1_Secure_DATA  ----------------------------
// SVD Line: 3605

unsigned char UART1_Secure_DATA __AT (0x59304000);



// ----------------------------  Register Item: UART1_Secure_DATA  --------------------------------
// SVD Line: 3605

//  <item> SFDITEM_REG__UART1_Secure_DATA
//    <name> DATA </name>
//    <i> [Bits 7..0] RW (@ 0x59304000) Receive and Transmit Data Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART1_Secure_DATA >> 0) & 0xFFFFFFFF), ((UART1_Secure_DATA = (UART1_Secure_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: UART1_Secure_STATE  ---------------------------
// SVD Line: 3611

unsigned int UART1_Secure_STATE __AT (0x59304004);



// ---------------------------  Field Item: UART1_Secure_STATE_RXOV  ------------------------------
// SVD Line: 3616

//  <item> SFDITEM_FIELD__UART1_Secure_STATE_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59304004) RX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_STATE ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART1_Secure_STATE_TXOV  ------------------------------
// SVD Line: 3622

//  <item> SFDITEM_FIELD__UART1_Secure_STATE_TXOV
//    <name> TXOV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59304004) TX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_STATE ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART1_Secure_STATE_RXBF  ------------------------------
// SVD Line: 3628

//  <item> SFDITEM_FIELD__UART1_Secure_STATE_RXBF
//    <name> RXBF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x59304004) RX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_STATE ) </loc>
//      <o.1..1> RXBF
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART1_Secure_STATE_TXBF  ------------------------------
// SVD Line: 3634

//  <item> SFDITEM_FIELD__UART1_Secure_STATE_TXBF
//    <name> TXBF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x59304004) TX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_STATE ) </loc>
//      <o.0..0> TXBF
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: UART1_Secure_STATE  -------------------------------
// SVD Line: 3611

//  <rtree> SFDITEM_REG__UART1_Secure_STATE
//    <name> STATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59304004) UART Status Register </i>
//    <loc> ( (unsigned int)((UART1_Secure_STATE >> 0) & 0xFFFFFFFF), ((UART1_Secure_STATE = (UART1_Secure_STATE & ~(0xCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART1_Secure_STATE_RXOV </item>
//    <item> SFDITEM_FIELD__UART1_Secure_STATE_TXOV </item>
//    <item> SFDITEM_FIELD__UART1_Secure_STATE_RXBF </item>
//    <item> SFDITEM_FIELD__UART1_Secure_STATE_TXBF </item>
//  </rtree>
//  


// ------------------------  Register Item Address: UART1_Secure_CTRL  ----------------------------
// SVD Line: 3642

unsigned int UART1_Secure_CTRL __AT (0x59304008);



// ---------------------------  Field Item: UART1_Secure_CTRL_HSTX  -------------------------------
// SVD Line: 3647

//  <item> SFDITEM_FIELD__UART1_Secure_CTRL_HSTX
//    <name> HSTX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x59304008) \nHigh Speed Test Mode for TX only\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_Secure_CTRL ) </loc>
//      <o.6..6> HSTX
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: UART1_Secure_CTRL_RVOVINT  -----------------------------
// SVD Line: 3664

//  <item> SFDITEM_FIELD__UART1_Secure_CTRL_RVOVINT
//    <name> RVOVINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x59304008) \nRX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_Secure_CTRL ) </loc>
//      <o.5..5> RVOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: UART1_Secure_CTRL_TXOVINT  -----------------------------
// SVD Line: 3681

//  <item> SFDITEM_FIELD__UART1_Secure_CTRL_TXOVINT
//    <name> TXOVINT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x59304008) \nTX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_Secure_CTRL ) </loc>
//      <o.4..4> TXOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART1_Secure_CTRL_RXINT  ------------------------------
// SVD Line: 3698

//  <item> SFDITEM_FIELD__UART1_Secure_CTRL_RXINT
//    <name> RXINT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59304008) \nRX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_Secure_CTRL ) </loc>
//      <o.3..3> RXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART1_Secure_CTRL_TXINT  ------------------------------
// SVD Line: 3715

//  <item> SFDITEM_FIELD__UART1_Secure_CTRL_TXINT
//    <name> TXINT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59304008) \nTX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_Secure_CTRL ) </loc>
//      <o.2..2> TXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART1_Secure_CTRL_RXEN  -------------------------------
// SVD Line: 3732

//  <item> SFDITEM_FIELD__UART1_Secure_CTRL_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59304008) \nRX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_Secure_CTRL ) </loc>
//      <o.1..1> RXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART1_Secure_CTRL_TXEN  -------------------------------
// SVD Line: 3749

//  <item> SFDITEM_FIELD__UART1_Secure_CTRL_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59304008) \nTX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART1_Secure_CTRL ) </loc>
//      <o.0..0> TXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: UART1_Secure_CTRL  -------------------------------
// SVD Line: 3642

//  <rtree> SFDITEM_REG__UART1_Secure_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59304008) UART Control Register </i>
//    <loc> ( (unsigned int)((UART1_Secure_CTRL >> 0) & 0xFFFFFFFF), ((UART1_Secure_CTRL = (UART1_Secure_CTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART1_Secure_CTRL_HSTX </item>
//    <item> SFDITEM_FIELD__UART1_Secure_CTRL_RVOVINT </item>
//    <item> SFDITEM_FIELD__UART1_Secure_CTRL_TXOVINT </item>
//    <item> SFDITEM_FIELD__UART1_Secure_CTRL_RXINT </item>
//    <item> SFDITEM_FIELD__UART1_Secure_CTRL_TXINT </item>
//    <item> SFDITEM_FIELD__UART1_Secure_CTRL_RXEN </item>
//    <item> SFDITEM_FIELD__UART1_Secure_CTRL_TXEN </item>
//  </rtree>
//  


// ----------------------  Register Item Address: UART1_Secure_INTSTATUS  -------------------------
// SVD Line: 3768

unsigned int UART1_Secure_INTSTATUS __AT (0x5930400C);



// -------------------------  Field Item: UART1_Secure_INTSTATUS_RXOV  ----------------------------
// SVD Line: 3774

//  <item> SFDITEM_FIELD__UART1_Secure_INTSTATUS_RXOV
//    <name> RXOV </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5930400C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_INTSTATUS ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART1_Secure_INTSTATUS_TXOV  ----------------------------
// SVD Line: 3779

//  <item> SFDITEM_FIELD__UART1_Secure_INTSTATUS_TXOV
//    <name> TXOV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5930400C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_INTSTATUS ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ------------------------  Field Item: UART1_Secure_INTSTATUS_RXINT  ----------------------------
// SVD Line: 3784

//  <item> SFDITEM_FIELD__UART1_Secure_INTSTATUS_RXINT
//    <name> RXINT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5930400C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_INTSTATUS ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ------------------------  Field Item: UART1_Secure_INTSTATUS_TXINT  ----------------------------
// SVD Line: 3789

//  <item> SFDITEM_FIELD__UART1_Secure_INTSTATUS_TXINT
//    <name> TXINT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5930400C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_INTSTATUS ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -------------------------  Register RTree: UART1_Secure_INTSTATUS  -----------------------------
// SVD Line: 3768

//  <rtree> SFDITEM_REG__UART1_Secure_INTSTATUS
//    <name> INTSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5930400C) UART Interrupt Status Register </i>
//    <loc> ( (unsigned int)((UART1_Secure_INTSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART1_Secure_INTSTATUS_RXOV </item>
//    <item> SFDITEM_FIELD__UART1_Secure_INTSTATUS_TXOV </item>
//    <item> SFDITEM_FIELD__UART1_Secure_INTSTATUS_RXINT </item>
//    <item> SFDITEM_FIELD__UART1_Secure_INTSTATUS_TXINT </item>
//  </rtree>
//  


// ----------------------  Register Item Address: UART1_Secure_INTCLEAR  --------------------------
// SVD Line: 3796

unsigned int UART1_Secure_INTCLEAR __AT (0x5930400C);



// -------------------------  Field Item: UART1_Secure_INTCLEAR_RXOV  -----------------------------
// SVD Line: 3803

//  <item> SFDITEM_FIELD__UART1_Secure_INTCLEAR_RXOV
//    <name> RXOV </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x5930400C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_INTCLEAR ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART1_Secure_INTCLEAR_TXOV  -----------------------------
// SVD Line: 3809

//  <item> SFDITEM_FIELD__UART1_Secure_INTCLEAR_TXOV
//    <name> TXOV </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x5930400C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_INTCLEAR ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART1_Secure_INTCLEAR_RXINT  ----------------------------
// SVD Line: 3815

//  <item> SFDITEM_FIELD__UART1_Secure_INTCLEAR_RXINT
//    <name> RXINT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x5930400C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_INTCLEAR ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART1_Secure_INTCLEAR_TXINT  ----------------------------
// SVD Line: 3821

//  <item> SFDITEM_FIELD__UART1_Secure_INTCLEAR_TXINT
//    <name> TXINT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x5930400C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_Secure_INTCLEAR ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// --------------------------  Register RTree: UART1_Secure_INTCLEAR  -----------------------------
// SVD Line: 3796

//  <rtree> SFDITEM_REG__UART1_Secure_INTCLEAR
//    <name> INTCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x5930400C) UART Interrupt CLEAR Register </i>
//    <loc> ( (unsigned int)((UART1_Secure_INTCLEAR >> 0) & 0xFFFFFFFF), ((UART1_Secure_INTCLEAR = (UART1_Secure_INTCLEAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART1_Secure_INTCLEAR_RXOV </item>
//    <item> SFDITEM_FIELD__UART1_Secure_INTCLEAR_TXOV </item>
//    <item> SFDITEM_FIELD__UART1_Secure_INTCLEAR_RXINT </item>
//    <item> SFDITEM_FIELD__UART1_Secure_INTCLEAR_TXINT </item>
//  </rtree>
//  


// -----------------------  Register Item Address: UART1_Secure_BAUDDIV  --------------------------
// SVD Line: 3829

unsigned int UART1_Secure_BAUDDIV __AT (0x59304010);



// ---------------------------  Register Item: UART1_Secure_BAUDDIV  ------------------------------
// SVD Line: 3829

//  <item> SFDITEM_REG__UART1_Secure_BAUDDIV
//    <name> BAUDDIV </name>
//    <i> [Bits 31..0] RW (@ 0x59304010) Baudrate Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART1_Secure_BAUDDIV >> 0) & 0xFFFFFFFF), ((UART1_Secure_BAUDDIV = (UART1_Secure_BAUDDIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Peripheral View: UART1_Secure  ---------------------------------
// SVD Line: 3959

//  <view> UART1_Secure
//    <name> UART1_Secure </name>
//    <item> SFDITEM_REG__UART1_Secure_DATA </item>
//    <item> SFDITEM_REG__UART1_Secure_STATE </item>
//    <item> SFDITEM_REG__UART1_Secure_CTRL </item>
//    <item> SFDITEM_REG__UART1_Secure_INTSTATUS </item>
//    <item> SFDITEM_REG__UART1_Secure_INTCLEAR </item>
//    <item> SFDITEM_REG__UART1_Secure_BAUDDIV </item>
//  </view>
//  


// ------------------------  Register Item Address: UART2_Secure_DATA  ----------------------------
// SVD Line: 3605

unsigned char UART2_Secure_DATA __AT (0x59305000);



// ----------------------------  Register Item: UART2_Secure_DATA  --------------------------------
// SVD Line: 3605

//  <item> SFDITEM_REG__UART2_Secure_DATA
//    <name> DATA </name>
//    <i> [Bits 7..0] RW (@ 0x59305000) Receive and Transmit Data Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_Secure_DATA >> 0) & 0xFFFFFFFF), ((UART2_Secure_DATA = (UART2_Secure_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: UART2_Secure_STATE  ---------------------------
// SVD Line: 3611

unsigned int UART2_Secure_STATE __AT (0x59305004);



// ---------------------------  Field Item: UART2_Secure_STATE_RXOV  ------------------------------
// SVD Line: 3616

//  <item> SFDITEM_FIELD__UART2_Secure_STATE_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59305004) RX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_STATE ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART2_Secure_STATE_TXOV  ------------------------------
// SVD Line: 3622

//  <item> SFDITEM_FIELD__UART2_Secure_STATE_TXOV
//    <name> TXOV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59305004) TX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_STATE ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART2_Secure_STATE_RXBF  ------------------------------
// SVD Line: 3628

//  <item> SFDITEM_FIELD__UART2_Secure_STATE_RXBF
//    <name> RXBF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x59305004) RX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_STATE ) </loc>
//      <o.1..1> RXBF
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART2_Secure_STATE_TXBF  ------------------------------
// SVD Line: 3634

//  <item> SFDITEM_FIELD__UART2_Secure_STATE_TXBF
//    <name> TXBF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x59305004) TX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_STATE ) </loc>
//      <o.0..0> TXBF
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: UART2_Secure_STATE  -------------------------------
// SVD Line: 3611

//  <rtree> SFDITEM_REG__UART2_Secure_STATE
//    <name> STATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59305004) UART Status Register </i>
//    <loc> ( (unsigned int)((UART2_Secure_STATE >> 0) & 0xFFFFFFFF), ((UART2_Secure_STATE = (UART2_Secure_STATE & ~(0xCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_Secure_STATE_RXOV </item>
//    <item> SFDITEM_FIELD__UART2_Secure_STATE_TXOV </item>
//    <item> SFDITEM_FIELD__UART2_Secure_STATE_RXBF </item>
//    <item> SFDITEM_FIELD__UART2_Secure_STATE_TXBF </item>
//  </rtree>
//  


// ------------------------  Register Item Address: UART2_Secure_CTRL  ----------------------------
// SVD Line: 3642

unsigned int UART2_Secure_CTRL __AT (0x59305008);



// ---------------------------  Field Item: UART2_Secure_CTRL_HSTX  -------------------------------
// SVD Line: 3647

//  <item> SFDITEM_FIELD__UART2_Secure_CTRL_HSTX
//    <name> HSTX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x59305008) \nHigh Speed Test Mode for TX only\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_Secure_CTRL ) </loc>
//      <o.6..6> HSTX
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: UART2_Secure_CTRL_RVOVINT  -----------------------------
// SVD Line: 3664

//  <item> SFDITEM_FIELD__UART2_Secure_CTRL_RVOVINT
//    <name> RVOVINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x59305008) \nRX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_Secure_CTRL ) </loc>
//      <o.5..5> RVOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: UART2_Secure_CTRL_TXOVINT  -----------------------------
// SVD Line: 3681

//  <item> SFDITEM_FIELD__UART2_Secure_CTRL_TXOVINT
//    <name> TXOVINT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x59305008) \nTX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_Secure_CTRL ) </loc>
//      <o.4..4> TXOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART2_Secure_CTRL_RXINT  ------------------------------
// SVD Line: 3698

//  <item> SFDITEM_FIELD__UART2_Secure_CTRL_RXINT
//    <name> RXINT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59305008) \nRX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_Secure_CTRL ) </loc>
//      <o.3..3> RXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART2_Secure_CTRL_TXINT  ------------------------------
// SVD Line: 3715

//  <item> SFDITEM_FIELD__UART2_Secure_CTRL_TXINT
//    <name> TXINT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59305008) \nTX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_Secure_CTRL ) </loc>
//      <o.2..2> TXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART2_Secure_CTRL_RXEN  -------------------------------
// SVD Line: 3732

//  <item> SFDITEM_FIELD__UART2_Secure_CTRL_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59305008) \nRX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_Secure_CTRL ) </loc>
//      <o.1..1> RXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART2_Secure_CTRL_TXEN  -------------------------------
// SVD Line: 3749

//  <item> SFDITEM_FIELD__UART2_Secure_CTRL_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59305008) \nTX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART2_Secure_CTRL ) </loc>
//      <o.0..0> TXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: UART2_Secure_CTRL  -------------------------------
// SVD Line: 3642

//  <rtree> SFDITEM_REG__UART2_Secure_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59305008) UART Control Register </i>
//    <loc> ( (unsigned int)((UART2_Secure_CTRL >> 0) & 0xFFFFFFFF), ((UART2_Secure_CTRL = (UART2_Secure_CTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_Secure_CTRL_HSTX </item>
//    <item> SFDITEM_FIELD__UART2_Secure_CTRL_RVOVINT </item>
//    <item> SFDITEM_FIELD__UART2_Secure_CTRL_TXOVINT </item>
//    <item> SFDITEM_FIELD__UART2_Secure_CTRL_RXINT </item>
//    <item> SFDITEM_FIELD__UART2_Secure_CTRL_TXINT </item>
//    <item> SFDITEM_FIELD__UART2_Secure_CTRL_RXEN </item>
//    <item> SFDITEM_FIELD__UART2_Secure_CTRL_TXEN </item>
//  </rtree>
//  


// ----------------------  Register Item Address: UART2_Secure_INTSTATUS  -------------------------
// SVD Line: 3768

unsigned int UART2_Secure_INTSTATUS __AT (0x5930500C);



// -------------------------  Field Item: UART2_Secure_INTSTATUS_RXOV  ----------------------------
// SVD Line: 3774

//  <item> SFDITEM_FIELD__UART2_Secure_INTSTATUS_RXOV
//    <name> RXOV </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5930500C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_INTSTATUS ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART2_Secure_INTSTATUS_TXOV  ----------------------------
// SVD Line: 3779

//  <item> SFDITEM_FIELD__UART2_Secure_INTSTATUS_TXOV
//    <name> TXOV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5930500C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_INTSTATUS ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ------------------------  Field Item: UART2_Secure_INTSTATUS_RXINT  ----------------------------
// SVD Line: 3784

//  <item> SFDITEM_FIELD__UART2_Secure_INTSTATUS_RXINT
//    <name> RXINT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5930500C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_INTSTATUS ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ------------------------  Field Item: UART2_Secure_INTSTATUS_TXINT  ----------------------------
// SVD Line: 3789

//  <item> SFDITEM_FIELD__UART2_Secure_INTSTATUS_TXINT
//    <name> TXINT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5930500C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_INTSTATUS ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -------------------------  Register RTree: UART2_Secure_INTSTATUS  -----------------------------
// SVD Line: 3768

//  <rtree> SFDITEM_REG__UART2_Secure_INTSTATUS
//    <name> INTSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5930500C) UART Interrupt Status Register </i>
//    <loc> ( (unsigned int)((UART2_Secure_INTSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART2_Secure_INTSTATUS_RXOV </item>
//    <item> SFDITEM_FIELD__UART2_Secure_INTSTATUS_TXOV </item>
//    <item> SFDITEM_FIELD__UART2_Secure_INTSTATUS_RXINT </item>
//    <item> SFDITEM_FIELD__UART2_Secure_INTSTATUS_TXINT </item>
//  </rtree>
//  


// ----------------------  Register Item Address: UART2_Secure_INTCLEAR  --------------------------
// SVD Line: 3796

unsigned int UART2_Secure_INTCLEAR __AT (0x5930500C);



// -------------------------  Field Item: UART2_Secure_INTCLEAR_RXOV  -----------------------------
// SVD Line: 3803

//  <item> SFDITEM_FIELD__UART2_Secure_INTCLEAR_RXOV
//    <name> RXOV </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x5930500C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_INTCLEAR ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART2_Secure_INTCLEAR_TXOV  -----------------------------
// SVD Line: 3809

//  <item> SFDITEM_FIELD__UART2_Secure_INTCLEAR_TXOV
//    <name> TXOV </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x5930500C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_INTCLEAR ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART2_Secure_INTCLEAR_RXINT  ----------------------------
// SVD Line: 3815

//  <item> SFDITEM_FIELD__UART2_Secure_INTCLEAR_RXINT
//    <name> RXINT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x5930500C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_INTCLEAR ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART2_Secure_INTCLEAR_TXINT  ----------------------------
// SVD Line: 3821

//  <item> SFDITEM_FIELD__UART2_Secure_INTCLEAR_TXINT
//    <name> TXINT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x5930500C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_Secure_INTCLEAR ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// --------------------------  Register RTree: UART2_Secure_INTCLEAR  -----------------------------
// SVD Line: 3796

//  <rtree> SFDITEM_REG__UART2_Secure_INTCLEAR
//    <name> INTCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x5930500C) UART Interrupt CLEAR Register </i>
//    <loc> ( (unsigned int)((UART2_Secure_INTCLEAR >> 0) & 0xFFFFFFFF), ((UART2_Secure_INTCLEAR = (UART2_Secure_INTCLEAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_Secure_INTCLEAR_RXOV </item>
//    <item> SFDITEM_FIELD__UART2_Secure_INTCLEAR_TXOV </item>
//    <item> SFDITEM_FIELD__UART2_Secure_INTCLEAR_RXINT </item>
//    <item> SFDITEM_FIELD__UART2_Secure_INTCLEAR_TXINT </item>
//  </rtree>
//  


// -----------------------  Register Item Address: UART2_Secure_BAUDDIV  --------------------------
// SVD Line: 3829

unsigned int UART2_Secure_BAUDDIV __AT (0x59305010);



// ---------------------------  Register Item: UART2_Secure_BAUDDIV  ------------------------------
// SVD Line: 3829

//  <item> SFDITEM_REG__UART2_Secure_BAUDDIV
//    <name> BAUDDIV </name>
//    <i> [Bits 31..0] RW (@ 0x59305010) Baudrate Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART2_Secure_BAUDDIV >> 0) & 0xFFFFFFFF), ((UART2_Secure_BAUDDIV = (UART2_Secure_BAUDDIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Peripheral View: UART2_Secure  ---------------------------------
// SVD Line: 3966

//  <view> UART2_Secure
//    <name> UART2_Secure </name>
//    <item> SFDITEM_REG__UART2_Secure_DATA </item>
//    <item> SFDITEM_REG__UART2_Secure_STATE </item>
//    <item> SFDITEM_REG__UART2_Secure_CTRL </item>
//    <item> SFDITEM_REG__UART2_Secure_INTSTATUS </item>
//    <item> SFDITEM_REG__UART2_Secure_INTCLEAR </item>
//    <item> SFDITEM_REG__UART2_Secure_BAUDDIV </item>
//  </view>
//  


// ------------------------  Register Item Address: UART3_Secure_DATA  ----------------------------
// SVD Line: 3605

unsigned char UART3_Secure_DATA __AT (0x59306000);



// ----------------------------  Register Item: UART3_Secure_DATA  --------------------------------
// SVD Line: 3605

//  <item> SFDITEM_REG__UART3_Secure_DATA
//    <name> DATA </name>
//    <i> [Bits 7..0] RW (@ 0x59306000) Receive and Transmit Data Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_Secure_DATA >> 0) & 0xFFFFFFFF), ((UART3_Secure_DATA = (UART3_Secure_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: UART3_Secure_STATE  ---------------------------
// SVD Line: 3611

unsigned int UART3_Secure_STATE __AT (0x59306004);



// ---------------------------  Field Item: UART3_Secure_STATE_RXOV  ------------------------------
// SVD Line: 3616

//  <item> SFDITEM_FIELD__UART3_Secure_STATE_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59306004) RX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_STATE ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART3_Secure_STATE_TXOV  ------------------------------
// SVD Line: 3622

//  <item> SFDITEM_FIELD__UART3_Secure_STATE_TXOV
//    <name> TXOV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59306004) TX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_STATE ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART3_Secure_STATE_RXBF  ------------------------------
// SVD Line: 3628

//  <item> SFDITEM_FIELD__UART3_Secure_STATE_RXBF
//    <name> RXBF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x59306004) RX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_STATE ) </loc>
//      <o.1..1> RXBF
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART3_Secure_STATE_TXBF  ------------------------------
// SVD Line: 3634

//  <item> SFDITEM_FIELD__UART3_Secure_STATE_TXBF
//    <name> TXBF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x59306004) TX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_STATE ) </loc>
//      <o.0..0> TXBF
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: UART3_Secure_STATE  -------------------------------
// SVD Line: 3611

//  <rtree> SFDITEM_REG__UART3_Secure_STATE
//    <name> STATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59306004) UART Status Register </i>
//    <loc> ( (unsigned int)((UART3_Secure_STATE >> 0) & 0xFFFFFFFF), ((UART3_Secure_STATE = (UART3_Secure_STATE & ~(0xCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_Secure_STATE_RXOV </item>
//    <item> SFDITEM_FIELD__UART3_Secure_STATE_TXOV </item>
//    <item> SFDITEM_FIELD__UART3_Secure_STATE_RXBF </item>
//    <item> SFDITEM_FIELD__UART3_Secure_STATE_TXBF </item>
//  </rtree>
//  


// ------------------------  Register Item Address: UART3_Secure_CTRL  ----------------------------
// SVD Line: 3642

unsigned int UART3_Secure_CTRL __AT (0x59306008);



// ---------------------------  Field Item: UART3_Secure_CTRL_HSTX  -------------------------------
// SVD Line: 3647

//  <item> SFDITEM_FIELD__UART3_Secure_CTRL_HSTX
//    <name> HSTX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x59306008) \nHigh Speed Test Mode for TX only\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_Secure_CTRL ) </loc>
//      <o.6..6> HSTX
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: UART3_Secure_CTRL_RVOVINT  -----------------------------
// SVD Line: 3664

//  <item> SFDITEM_FIELD__UART3_Secure_CTRL_RVOVINT
//    <name> RVOVINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x59306008) \nRX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_Secure_CTRL ) </loc>
//      <o.5..5> RVOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: UART3_Secure_CTRL_TXOVINT  -----------------------------
// SVD Line: 3681

//  <item> SFDITEM_FIELD__UART3_Secure_CTRL_TXOVINT
//    <name> TXOVINT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x59306008) \nTX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_Secure_CTRL ) </loc>
//      <o.4..4> TXOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART3_Secure_CTRL_RXINT  ------------------------------
// SVD Line: 3698

//  <item> SFDITEM_FIELD__UART3_Secure_CTRL_RXINT
//    <name> RXINT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59306008) \nRX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_Secure_CTRL ) </loc>
//      <o.3..3> RXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART3_Secure_CTRL_TXINT  ------------------------------
// SVD Line: 3715

//  <item> SFDITEM_FIELD__UART3_Secure_CTRL_TXINT
//    <name> TXINT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59306008) \nTX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_Secure_CTRL ) </loc>
//      <o.2..2> TXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART3_Secure_CTRL_RXEN  -------------------------------
// SVD Line: 3732

//  <item> SFDITEM_FIELD__UART3_Secure_CTRL_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59306008) \nRX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_Secure_CTRL ) </loc>
//      <o.1..1> RXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART3_Secure_CTRL_TXEN  -------------------------------
// SVD Line: 3749

//  <item> SFDITEM_FIELD__UART3_Secure_CTRL_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59306008) \nTX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART3_Secure_CTRL ) </loc>
//      <o.0..0> TXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: UART3_Secure_CTRL  -------------------------------
// SVD Line: 3642

//  <rtree> SFDITEM_REG__UART3_Secure_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59306008) UART Control Register </i>
//    <loc> ( (unsigned int)((UART3_Secure_CTRL >> 0) & 0xFFFFFFFF), ((UART3_Secure_CTRL = (UART3_Secure_CTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_Secure_CTRL_HSTX </item>
//    <item> SFDITEM_FIELD__UART3_Secure_CTRL_RVOVINT </item>
//    <item> SFDITEM_FIELD__UART3_Secure_CTRL_TXOVINT </item>
//    <item> SFDITEM_FIELD__UART3_Secure_CTRL_RXINT </item>
//    <item> SFDITEM_FIELD__UART3_Secure_CTRL_TXINT </item>
//    <item> SFDITEM_FIELD__UART3_Secure_CTRL_RXEN </item>
//    <item> SFDITEM_FIELD__UART3_Secure_CTRL_TXEN </item>
//  </rtree>
//  


// ----------------------  Register Item Address: UART3_Secure_INTSTATUS  -------------------------
// SVD Line: 3768

unsigned int UART3_Secure_INTSTATUS __AT (0x5930600C);



// -------------------------  Field Item: UART3_Secure_INTSTATUS_RXOV  ----------------------------
// SVD Line: 3774

//  <item> SFDITEM_FIELD__UART3_Secure_INTSTATUS_RXOV
//    <name> RXOV </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5930600C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_INTSTATUS ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART3_Secure_INTSTATUS_TXOV  ----------------------------
// SVD Line: 3779

//  <item> SFDITEM_FIELD__UART3_Secure_INTSTATUS_TXOV
//    <name> TXOV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5930600C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_INTSTATUS ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ------------------------  Field Item: UART3_Secure_INTSTATUS_RXINT  ----------------------------
// SVD Line: 3784

//  <item> SFDITEM_FIELD__UART3_Secure_INTSTATUS_RXINT
//    <name> RXINT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5930600C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_INTSTATUS ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ------------------------  Field Item: UART3_Secure_INTSTATUS_TXINT  ----------------------------
// SVD Line: 3789

//  <item> SFDITEM_FIELD__UART3_Secure_INTSTATUS_TXINT
//    <name> TXINT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5930600C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_INTSTATUS ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -------------------------  Register RTree: UART3_Secure_INTSTATUS  -----------------------------
// SVD Line: 3768

//  <rtree> SFDITEM_REG__UART3_Secure_INTSTATUS
//    <name> INTSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5930600C) UART Interrupt Status Register </i>
//    <loc> ( (unsigned int)((UART3_Secure_INTSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART3_Secure_INTSTATUS_RXOV </item>
//    <item> SFDITEM_FIELD__UART3_Secure_INTSTATUS_TXOV </item>
//    <item> SFDITEM_FIELD__UART3_Secure_INTSTATUS_RXINT </item>
//    <item> SFDITEM_FIELD__UART3_Secure_INTSTATUS_TXINT </item>
//  </rtree>
//  


// ----------------------  Register Item Address: UART3_Secure_INTCLEAR  --------------------------
// SVD Line: 3796

unsigned int UART3_Secure_INTCLEAR __AT (0x5930600C);



// -------------------------  Field Item: UART3_Secure_INTCLEAR_RXOV  -----------------------------
// SVD Line: 3803

//  <item> SFDITEM_FIELD__UART3_Secure_INTCLEAR_RXOV
//    <name> RXOV </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x5930600C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_INTCLEAR ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART3_Secure_INTCLEAR_TXOV  -----------------------------
// SVD Line: 3809

//  <item> SFDITEM_FIELD__UART3_Secure_INTCLEAR_TXOV
//    <name> TXOV </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x5930600C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_INTCLEAR ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART3_Secure_INTCLEAR_RXINT  ----------------------------
// SVD Line: 3815

//  <item> SFDITEM_FIELD__UART3_Secure_INTCLEAR_RXINT
//    <name> RXINT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x5930600C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_INTCLEAR ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART3_Secure_INTCLEAR_TXINT  ----------------------------
// SVD Line: 3821

//  <item> SFDITEM_FIELD__UART3_Secure_INTCLEAR_TXINT
//    <name> TXINT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x5930600C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_Secure_INTCLEAR ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// --------------------------  Register RTree: UART3_Secure_INTCLEAR  -----------------------------
// SVD Line: 3796

//  <rtree> SFDITEM_REG__UART3_Secure_INTCLEAR
//    <name> INTCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x5930600C) UART Interrupt CLEAR Register </i>
//    <loc> ( (unsigned int)((UART3_Secure_INTCLEAR >> 0) & 0xFFFFFFFF), ((UART3_Secure_INTCLEAR = (UART3_Secure_INTCLEAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_Secure_INTCLEAR_RXOV </item>
//    <item> SFDITEM_FIELD__UART3_Secure_INTCLEAR_TXOV </item>
//    <item> SFDITEM_FIELD__UART3_Secure_INTCLEAR_RXINT </item>
//    <item> SFDITEM_FIELD__UART3_Secure_INTCLEAR_TXINT </item>
//  </rtree>
//  


// -----------------------  Register Item Address: UART3_Secure_BAUDDIV  --------------------------
// SVD Line: 3829

unsigned int UART3_Secure_BAUDDIV __AT (0x59306010);



// ---------------------------  Register Item: UART3_Secure_BAUDDIV  ------------------------------
// SVD Line: 3829

//  <item> SFDITEM_REG__UART3_Secure_BAUDDIV
//    <name> BAUDDIV </name>
//    <i> [Bits 31..0] RW (@ 0x59306010) Baudrate Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART3_Secure_BAUDDIV >> 0) & 0xFFFFFFFF), ((UART3_Secure_BAUDDIV = (UART3_Secure_BAUDDIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Peripheral View: UART3_Secure  ---------------------------------
// SVD Line: 3973

//  <view> UART3_Secure
//    <name> UART3_Secure </name>
//    <item> SFDITEM_REG__UART3_Secure_DATA </item>
//    <item> SFDITEM_REG__UART3_Secure_STATE </item>
//    <item> SFDITEM_REG__UART3_Secure_CTRL </item>
//    <item> SFDITEM_REG__UART3_Secure_INTSTATUS </item>
//    <item> SFDITEM_REG__UART3_Secure_INTCLEAR </item>
//    <item> SFDITEM_REG__UART3_Secure_BAUDDIV </item>
//  </view>
//  


// ------------------------  Register Item Address: UART4_Secure_DATA  ----------------------------
// SVD Line: 3605

unsigned char UART4_Secure_DATA __AT (0x59307000);



// ----------------------------  Register Item: UART4_Secure_DATA  --------------------------------
// SVD Line: 3605

//  <item> SFDITEM_REG__UART4_Secure_DATA
//    <name> DATA </name>
//    <i> [Bits 7..0] RW (@ 0x59307000) Receive and Transmit Data Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART4_Secure_DATA >> 0) & 0xFFFFFFFF), ((UART4_Secure_DATA = (UART4_Secure_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: UART4_Secure_STATE  ---------------------------
// SVD Line: 3611

unsigned int UART4_Secure_STATE __AT (0x59307004);



// ---------------------------  Field Item: UART4_Secure_STATE_RXOV  ------------------------------
// SVD Line: 3616

//  <item> SFDITEM_FIELD__UART4_Secure_STATE_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59307004) RX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_STATE ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART4_Secure_STATE_TXOV  ------------------------------
// SVD Line: 3622

//  <item> SFDITEM_FIELD__UART4_Secure_STATE_TXOV
//    <name> TXOV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59307004) TX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_STATE ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART4_Secure_STATE_RXBF  ------------------------------
// SVD Line: 3628

//  <item> SFDITEM_FIELD__UART4_Secure_STATE_RXBF
//    <name> RXBF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x59307004) RX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_STATE ) </loc>
//      <o.1..1> RXBF
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART4_Secure_STATE_TXBF  ------------------------------
// SVD Line: 3634

//  <item> SFDITEM_FIELD__UART4_Secure_STATE_TXBF
//    <name> TXBF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x59307004) TX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_STATE ) </loc>
//      <o.0..0> TXBF
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: UART4_Secure_STATE  -------------------------------
// SVD Line: 3611

//  <rtree> SFDITEM_REG__UART4_Secure_STATE
//    <name> STATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59307004) UART Status Register </i>
//    <loc> ( (unsigned int)((UART4_Secure_STATE >> 0) & 0xFFFFFFFF), ((UART4_Secure_STATE = (UART4_Secure_STATE & ~(0xCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_Secure_STATE_RXOV </item>
//    <item> SFDITEM_FIELD__UART4_Secure_STATE_TXOV </item>
//    <item> SFDITEM_FIELD__UART4_Secure_STATE_RXBF </item>
//    <item> SFDITEM_FIELD__UART4_Secure_STATE_TXBF </item>
//  </rtree>
//  


// ------------------------  Register Item Address: UART4_Secure_CTRL  ----------------------------
// SVD Line: 3642

unsigned int UART4_Secure_CTRL __AT (0x59307008);



// ---------------------------  Field Item: UART4_Secure_CTRL_HSTX  -------------------------------
// SVD Line: 3647

//  <item> SFDITEM_FIELD__UART4_Secure_CTRL_HSTX
//    <name> HSTX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x59307008) \nHigh Speed Test Mode for TX only\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_Secure_CTRL ) </loc>
//      <o.6..6> HSTX
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: UART4_Secure_CTRL_RVOVINT  -----------------------------
// SVD Line: 3664

//  <item> SFDITEM_FIELD__UART4_Secure_CTRL_RVOVINT
//    <name> RVOVINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x59307008) \nRX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_Secure_CTRL ) </loc>
//      <o.5..5> RVOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: UART4_Secure_CTRL_TXOVINT  -----------------------------
// SVD Line: 3681

//  <item> SFDITEM_FIELD__UART4_Secure_CTRL_TXOVINT
//    <name> TXOVINT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x59307008) \nTX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_Secure_CTRL ) </loc>
//      <o.4..4> TXOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART4_Secure_CTRL_RXINT  ------------------------------
// SVD Line: 3698

//  <item> SFDITEM_FIELD__UART4_Secure_CTRL_RXINT
//    <name> RXINT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59307008) \nRX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_Secure_CTRL ) </loc>
//      <o.3..3> RXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART4_Secure_CTRL_TXINT  ------------------------------
// SVD Line: 3715

//  <item> SFDITEM_FIELD__UART4_Secure_CTRL_TXINT
//    <name> TXINT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59307008) \nTX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_Secure_CTRL ) </loc>
//      <o.2..2> TXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART4_Secure_CTRL_RXEN  -------------------------------
// SVD Line: 3732

//  <item> SFDITEM_FIELD__UART4_Secure_CTRL_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59307008) \nRX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_Secure_CTRL ) </loc>
//      <o.1..1> RXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART4_Secure_CTRL_TXEN  -------------------------------
// SVD Line: 3749

//  <item> SFDITEM_FIELD__UART4_Secure_CTRL_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59307008) \nTX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART4_Secure_CTRL ) </loc>
//      <o.0..0> TXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: UART4_Secure_CTRL  -------------------------------
// SVD Line: 3642

//  <rtree> SFDITEM_REG__UART4_Secure_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59307008) UART Control Register </i>
//    <loc> ( (unsigned int)((UART4_Secure_CTRL >> 0) & 0xFFFFFFFF), ((UART4_Secure_CTRL = (UART4_Secure_CTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_Secure_CTRL_HSTX </item>
//    <item> SFDITEM_FIELD__UART4_Secure_CTRL_RVOVINT </item>
//    <item> SFDITEM_FIELD__UART4_Secure_CTRL_TXOVINT </item>
//    <item> SFDITEM_FIELD__UART4_Secure_CTRL_RXINT </item>
//    <item> SFDITEM_FIELD__UART4_Secure_CTRL_TXINT </item>
//    <item> SFDITEM_FIELD__UART4_Secure_CTRL_RXEN </item>
//    <item> SFDITEM_FIELD__UART4_Secure_CTRL_TXEN </item>
//  </rtree>
//  


// ----------------------  Register Item Address: UART4_Secure_INTSTATUS  -------------------------
// SVD Line: 3768

unsigned int UART4_Secure_INTSTATUS __AT (0x5930700C);



// -------------------------  Field Item: UART4_Secure_INTSTATUS_RXOV  ----------------------------
// SVD Line: 3774

//  <item> SFDITEM_FIELD__UART4_Secure_INTSTATUS_RXOV
//    <name> RXOV </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5930700C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_INTSTATUS ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART4_Secure_INTSTATUS_TXOV  ----------------------------
// SVD Line: 3779

//  <item> SFDITEM_FIELD__UART4_Secure_INTSTATUS_TXOV
//    <name> TXOV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5930700C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_INTSTATUS ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ------------------------  Field Item: UART4_Secure_INTSTATUS_RXINT  ----------------------------
// SVD Line: 3784

//  <item> SFDITEM_FIELD__UART4_Secure_INTSTATUS_RXINT
//    <name> RXINT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5930700C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_INTSTATUS ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ------------------------  Field Item: UART4_Secure_INTSTATUS_TXINT  ----------------------------
// SVD Line: 3789

//  <item> SFDITEM_FIELD__UART4_Secure_INTSTATUS_TXINT
//    <name> TXINT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5930700C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_INTSTATUS ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -------------------------  Register RTree: UART4_Secure_INTSTATUS  -----------------------------
// SVD Line: 3768

//  <rtree> SFDITEM_REG__UART4_Secure_INTSTATUS
//    <name> INTSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5930700C) UART Interrupt Status Register </i>
//    <loc> ( (unsigned int)((UART4_Secure_INTSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART4_Secure_INTSTATUS_RXOV </item>
//    <item> SFDITEM_FIELD__UART4_Secure_INTSTATUS_TXOV </item>
//    <item> SFDITEM_FIELD__UART4_Secure_INTSTATUS_RXINT </item>
//    <item> SFDITEM_FIELD__UART4_Secure_INTSTATUS_TXINT </item>
//  </rtree>
//  


// ----------------------  Register Item Address: UART4_Secure_INTCLEAR  --------------------------
// SVD Line: 3796

unsigned int UART4_Secure_INTCLEAR __AT (0x5930700C);



// -------------------------  Field Item: UART4_Secure_INTCLEAR_RXOV  -----------------------------
// SVD Line: 3803

//  <item> SFDITEM_FIELD__UART4_Secure_INTCLEAR_RXOV
//    <name> RXOV </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x5930700C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_INTCLEAR ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART4_Secure_INTCLEAR_TXOV  -----------------------------
// SVD Line: 3809

//  <item> SFDITEM_FIELD__UART4_Secure_INTCLEAR_TXOV
//    <name> TXOV </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x5930700C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_INTCLEAR ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART4_Secure_INTCLEAR_RXINT  ----------------------------
// SVD Line: 3815

//  <item> SFDITEM_FIELD__UART4_Secure_INTCLEAR_RXINT
//    <name> RXINT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x5930700C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_INTCLEAR ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART4_Secure_INTCLEAR_TXINT  ----------------------------
// SVD Line: 3821

//  <item> SFDITEM_FIELD__UART4_Secure_INTCLEAR_TXINT
//    <name> TXINT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x5930700C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_Secure_INTCLEAR ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// --------------------------  Register RTree: UART4_Secure_INTCLEAR  -----------------------------
// SVD Line: 3796

//  <rtree> SFDITEM_REG__UART4_Secure_INTCLEAR
//    <name> INTCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x5930700C) UART Interrupt CLEAR Register </i>
//    <loc> ( (unsigned int)((UART4_Secure_INTCLEAR >> 0) & 0xFFFFFFFF), ((UART4_Secure_INTCLEAR = (UART4_Secure_INTCLEAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_Secure_INTCLEAR_RXOV </item>
//    <item> SFDITEM_FIELD__UART4_Secure_INTCLEAR_TXOV </item>
//    <item> SFDITEM_FIELD__UART4_Secure_INTCLEAR_RXINT </item>
//    <item> SFDITEM_FIELD__UART4_Secure_INTCLEAR_TXINT </item>
//  </rtree>
//  


// -----------------------  Register Item Address: UART4_Secure_BAUDDIV  --------------------------
// SVD Line: 3829

unsigned int UART4_Secure_BAUDDIV __AT (0x59307010);



// ---------------------------  Register Item: UART4_Secure_BAUDDIV  ------------------------------
// SVD Line: 3829

//  <item> SFDITEM_REG__UART4_Secure_BAUDDIV
//    <name> BAUDDIV </name>
//    <i> [Bits 31..0] RW (@ 0x59307010) Baudrate Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART4_Secure_BAUDDIV >> 0) & 0xFFFFFFFF), ((UART4_Secure_BAUDDIV = (UART4_Secure_BAUDDIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Peripheral View: UART4_Secure  ---------------------------------
// SVD Line: 3980

//  <view> UART4_Secure
//    <name> UART4_Secure </name>
//    <item> SFDITEM_REG__UART4_Secure_DATA </item>
//    <item> SFDITEM_REG__UART4_Secure_STATE </item>
//    <item> SFDITEM_REG__UART4_Secure_CTRL </item>
//    <item> SFDITEM_REG__UART4_Secure_INTSTATUS </item>
//    <item> SFDITEM_REG__UART4_Secure_INTCLEAR </item>
//    <item> SFDITEM_REG__UART4_Secure_BAUDDIV </item>
//  </view>
//  


// ------------------------  Register Item Address: UART5_Secure_DATA  ----------------------------
// SVD Line: 3605

unsigned char UART5_Secure_DATA __AT (0x59308000);



// ----------------------------  Register Item: UART5_Secure_DATA  --------------------------------
// SVD Line: 3605

//  <item> SFDITEM_REG__UART5_Secure_DATA
//    <name> DATA </name>
//    <i> [Bits 7..0] RW (@ 0x59308000) Receive and Transmit Data Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART5_Secure_DATA >> 0) & 0xFFFFFFFF), ((UART5_Secure_DATA = (UART5_Secure_DATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: UART5_Secure_STATE  ---------------------------
// SVD Line: 3611

unsigned int UART5_Secure_STATE __AT (0x59308004);



// ---------------------------  Field Item: UART5_Secure_STATE_RXOV  ------------------------------
// SVD Line: 3616

//  <item> SFDITEM_FIELD__UART5_Secure_STATE_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59308004) RX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_Secure_STATE ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART5_Secure_STATE_TXOV  ------------------------------
// SVD Line: 3622

//  <item> SFDITEM_FIELD__UART5_Secure_STATE_TXOV
//    <name> TXOV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59308004) TX Buffer Overun (write 1 to clear) </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_Secure_STATE ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART5_Secure_STATE_RXBF  ------------------------------
// SVD Line: 3628

//  <item> SFDITEM_FIELD__UART5_Secure_STATE_RXBF
//    <name> RXBF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x59308004) RX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_Secure_STATE ) </loc>
//      <o.1..1> RXBF
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART5_Secure_STATE_TXBF  ------------------------------
// SVD Line: 3634

//  <item> SFDITEM_FIELD__UART5_Secure_STATE_TXBF
//    <name> TXBF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x59308004) TX Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_Secure_STATE ) </loc>
//      <o.0..0> TXBF
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: UART5_Secure_STATE  -------------------------------
// SVD Line: 3611

//  <rtree> SFDITEM_REG__UART5_Secure_STATE
//    <name> STATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59308004) UART Status Register </i>
//    <loc> ( (unsigned int)((UART5_Secure_STATE >> 0) & 0xFFFFFFFF), ((UART5_Secure_STATE = (UART5_Secure_STATE & ~(0xCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_Secure_STATE_RXOV </item>
//    <item> SFDITEM_FIELD__UART5_Secure_STATE_TXOV </item>
//    <item> SFDITEM_FIELD__UART5_Secure_STATE_RXBF </item>
//    <item> SFDITEM_FIELD__UART5_Secure_STATE_TXBF </item>
//  </rtree>
//  


// ------------------------  Register Item Address: UART5_Secure_CTRL  ----------------------------
// SVD Line: 3642

unsigned int UART5_Secure_CTRL __AT (0x59308008);



// ---------------------------  Field Item: UART5_Secure_CTRL_HSTX  -------------------------------
// SVD Line: 3647

//  <item> SFDITEM_FIELD__UART5_Secure_CTRL_HSTX
//    <name> HSTX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x59308008) \nHigh Speed Test Mode for TX only\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART5_Secure_CTRL ) </loc>
//      <o.6..6> HSTX
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: UART5_Secure_CTRL_RVOVINT  -----------------------------
// SVD Line: 3664

//  <item> SFDITEM_FIELD__UART5_Secure_CTRL_RVOVINT
//    <name> RVOVINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x59308008) \nRX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART5_Secure_CTRL ) </loc>
//      <o.5..5> RVOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: UART5_Secure_CTRL_TXOVINT  -----------------------------
// SVD Line: 3681

//  <item> SFDITEM_FIELD__UART5_Secure_CTRL_TXOVINT
//    <name> TXOVINT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x59308008) \nTX Overrun Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART5_Secure_CTRL ) </loc>
//      <o.4..4> TXOVINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART5_Secure_CTRL_RXINT  ------------------------------
// SVD Line: 3698

//  <item> SFDITEM_FIELD__UART5_Secure_CTRL_RXINT
//    <name> RXINT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59308008) \nRX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART5_Secure_CTRL ) </loc>
//      <o.3..3> RXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART5_Secure_CTRL_TXINT  ------------------------------
// SVD Line: 3715

//  <item> SFDITEM_FIELD__UART5_Secure_CTRL_TXINT
//    <name> TXINT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59308008) \nTX Interrupt Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART5_Secure_CTRL ) </loc>
//      <o.2..2> TXINT
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART5_Secure_CTRL_RXEN  -------------------------------
// SVD Line: 3732

//  <item> SFDITEM_FIELD__UART5_Secure_CTRL_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59308008) \nRX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART5_Secure_CTRL ) </loc>
//      <o.1..1> RXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: UART5_Secure_CTRL_TXEN  -------------------------------
// SVD Line: 3749

//  <item> SFDITEM_FIELD__UART5_Secure_CTRL_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59308008) \nTX Enable\n0 : Disable = Disabled\n1 : Enable = Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) UART5_Secure_CTRL ) </loc>
//      <o.0..0> TXEN
//        <0=> 0: Disable = Disabled
//        <1=> 1: Enable = Enabled
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: UART5_Secure_CTRL  -------------------------------
// SVD Line: 3642

//  <rtree> SFDITEM_REG__UART5_Secure_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59308008) UART Control Register </i>
//    <loc> ( (unsigned int)((UART5_Secure_CTRL >> 0) & 0xFFFFFFFF), ((UART5_Secure_CTRL = (UART5_Secure_CTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_Secure_CTRL_HSTX </item>
//    <item> SFDITEM_FIELD__UART5_Secure_CTRL_RVOVINT </item>
//    <item> SFDITEM_FIELD__UART5_Secure_CTRL_TXOVINT </item>
//    <item> SFDITEM_FIELD__UART5_Secure_CTRL_RXINT </item>
//    <item> SFDITEM_FIELD__UART5_Secure_CTRL_TXINT </item>
//    <item> SFDITEM_FIELD__UART5_Secure_CTRL_RXEN </item>
//    <item> SFDITEM_FIELD__UART5_Secure_CTRL_TXEN </item>
//  </rtree>
//  


// ----------------------  Register Item Address: UART5_Secure_INTSTATUS  -------------------------
// SVD Line: 3768

unsigned int UART5_Secure_INTSTATUS __AT (0x5930800C);



// -------------------------  Field Item: UART5_Secure_INTSTATUS_RXOV  ----------------------------
// SVD Line: 3774

//  <item> SFDITEM_FIELD__UART5_Secure_INTSTATUS_RXOV
//    <name> RXOV </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5930800C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_Secure_INTSTATUS ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART5_Secure_INTSTATUS_TXOV  ----------------------------
// SVD Line: 3779

//  <item> SFDITEM_FIELD__UART5_Secure_INTSTATUS_TXOV
//    <name> TXOV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5930800C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_Secure_INTSTATUS ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// ------------------------  Field Item: UART5_Secure_INTSTATUS_RXINT  ----------------------------
// SVD Line: 3784

//  <item> SFDITEM_FIELD__UART5_Secure_INTSTATUS_RXINT
//    <name> RXINT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5930800C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_Secure_INTSTATUS ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// ------------------------  Field Item: UART5_Secure_INTSTATUS_TXINT  ----------------------------
// SVD Line: 3789

//  <item> SFDITEM_FIELD__UART5_Secure_INTSTATUS_TXINT
//    <name> TXINT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5930800C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_Secure_INTSTATUS ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// -------------------------  Register RTree: UART5_Secure_INTSTATUS  -----------------------------
// SVD Line: 3768

//  <rtree> SFDITEM_REG__UART5_Secure_INTSTATUS
//    <name> INTSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5930800C) UART Interrupt Status Register </i>
//    <loc> ( (unsigned int)((UART5_Secure_INTSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART5_Secure_INTSTATUS_RXOV </item>
//    <item> SFDITEM_FIELD__UART5_Secure_INTSTATUS_TXOV </item>
//    <item> SFDITEM_FIELD__UART5_Secure_INTSTATUS_RXINT </item>
//    <item> SFDITEM_FIELD__UART5_Secure_INTSTATUS_TXINT </item>
//  </rtree>
//  


// ----------------------  Register Item Address: UART5_Secure_INTCLEAR  --------------------------
// SVD Line: 3796

unsigned int UART5_Secure_INTCLEAR __AT (0x5930800C);



// -------------------------  Field Item: UART5_Secure_INTCLEAR_RXOV  -----------------------------
// SVD Line: 3803

//  <item> SFDITEM_FIELD__UART5_Secure_INTCLEAR_RXOV
//    <name> RXOV </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x5930800C) RX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_Secure_INTCLEAR ) </loc>
//      <o.3..3> RXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART5_Secure_INTCLEAR_TXOV  -----------------------------
// SVD Line: 3809

//  <item> SFDITEM_FIELD__UART5_Secure_INTCLEAR_TXOV
//    <name> TXOV </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x5930800C) TX Overrun Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_Secure_INTCLEAR ) </loc>
//      <o.2..2> TXOV
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART5_Secure_INTCLEAR_RXINT  ----------------------------
// SVD Line: 3815

//  <item> SFDITEM_FIELD__UART5_Secure_INTCLEAR_RXINT
//    <name> RXINT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x5930800C) RX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_Secure_INTCLEAR ) </loc>
//      <o.1..1> RXINT
//    </check>
//  </item>
//  


// -------------------------  Field Item: UART5_Secure_INTCLEAR_TXINT  ----------------------------
// SVD Line: 3821

//  <item> SFDITEM_FIELD__UART5_Secure_INTCLEAR_TXINT
//    <name> TXINT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x5930800C) TX Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_Secure_INTCLEAR ) </loc>
//      <o.0..0> TXINT
//    </check>
//  </item>
//  


// --------------------------  Register RTree: UART5_Secure_INTCLEAR  -----------------------------
// SVD Line: 3796

//  <rtree> SFDITEM_REG__UART5_Secure_INTCLEAR
//    <name> INTCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x5930800C) UART Interrupt CLEAR Register </i>
//    <loc> ( (unsigned int)((UART5_Secure_INTCLEAR >> 0) & 0xFFFFFFFF), ((UART5_Secure_INTCLEAR = (UART5_Secure_INTCLEAR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_Secure_INTCLEAR_RXOV </item>
//    <item> SFDITEM_FIELD__UART5_Secure_INTCLEAR_TXOV </item>
//    <item> SFDITEM_FIELD__UART5_Secure_INTCLEAR_RXINT </item>
//    <item> SFDITEM_FIELD__UART5_Secure_INTCLEAR_TXINT </item>
//  </rtree>
//  


// -----------------------  Register Item Address: UART5_Secure_BAUDDIV  --------------------------
// SVD Line: 3829

unsigned int UART5_Secure_BAUDDIV __AT (0x59308010);



// ---------------------------  Register Item: UART5_Secure_BAUDDIV  ------------------------------
// SVD Line: 3829

//  <item> SFDITEM_REG__UART5_Secure_BAUDDIV
//    <name> BAUDDIV </name>
//    <i> [Bits 31..0] RW (@ 0x59308010) Baudrate Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART5_Secure_BAUDDIV >> 0) & 0xFFFFFFFF), ((UART5_Secure_BAUDDIV = (UART5_Secure_BAUDDIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Peripheral View: UART5_Secure  ---------------------------------
// SVD Line: 3987

//  <view> UART5_Secure
//    <name> UART5_Secure </name>
//    <item> SFDITEM_REG__UART5_Secure_DATA </item>
//    <item> SFDITEM_REG__UART5_Secure_STATE </item>
//    <item> SFDITEM_REG__UART5_Secure_CTRL </item>
//    <item> SFDITEM_REG__UART5_Secure_INTSTATUS </item>
//    <item> SFDITEM_REG__UART5_Secure_INTCLEAR </item>
//    <item> SFDITEM_REG__UART5_Secure_BAUDDIV </item>
//  </view>
//  


// --------------------------  Register Item Address: I2C0_CONTROLS  ------------------------------
// SVD Line: 4012

unsigned int I2C0_CONTROLS __AT (0x49200000);



// ------------------------------  Field Item: I2C0_CONTROLS_SDA  ---------------------------------
// SVD Line: 4018

//  <item> SFDITEM_FIELD__I2C0_CONTROLS_SDA
//    <name> SDA </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x49200000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CONTROLS ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_CONTROLS_SCL  ---------------------------------
// SVD Line: 4023

//  <item> SFDITEM_FIELD__I2C0_CONTROLS_SCL
//    <name> SCL </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x49200000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CONTROLS ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C0_CONTROLS  ---------------------------------
// SVD Line: 4012

//  <rtree> SFDITEM_REG__I2C0_CONTROLS
//    <name> CONTROLS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x49200000) Control Set </i>
//    <loc> ( (unsigned int)((I2C0_CONTROLS >> 0) & 0xFFFFFFFF), ((I2C0_CONTROLS = (I2C0_CONTROLS & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_CONTROLS_SDA </item>
//    <item> SFDITEM_FIELD__I2C0_CONTROLS_SCL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: I2C0_CONTROL  ------------------------------
// SVD Line: 4030

unsigned int I2C0_CONTROL __AT (0x49200000);



// ------------------------------  Field Item: I2C0_CONTROL_SDA  ----------------------------------
// SVD Line: 4037

//  <item> SFDITEM_FIELD__I2C0_CONTROL_SDA
//    <name> SDA </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x49200000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CONTROL ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_CONTROL_SCL  ----------------------------------
// SVD Line: 4042

//  <item> SFDITEM_FIELD__I2C0_CONTROL_SCL
//    <name> SCL </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x49200000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CONTROL ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C0_CONTROL  ----------------------------------
// SVD Line: 4030

//  <rtree> SFDITEM_REG__I2C0_CONTROL
//    <name> CONTROL </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x49200000) Control Status </i>
//    <loc> ( (unsigned int)((I2C0_CONTROL >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C0_CONTROL_SDA </item>
//    <item> SFDITEM_FIELD__I2C0_CONTROL_SCL </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C0_CONTROLC  ------------------------------
// SVD Line: 4049

unsigned int I2C0_CONTROLC __AT (0x49200004);



// ------------------------------  Field Item: I2C0_CONTROLC_SDA  ---------------------------------
// SVD Line: 4054

//  <item> SFDITEM_FIELD__I2C0_CONTROLC_SDA
//    <name> SDA </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49200004) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CONTROLC ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_CONTROLC_SCL  ---------------------------------
// SVD Line: 4059

//  <item> SFDITEM_FIELD__I2C0_CONTROLC_SCL
//    <name> SCL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49200004) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CONTROLC ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C0_CONTROLC  ---------------------------------
// SVD Line: 4049

//  <rtree> SFDITEM_REG__I2C0_CONTROLC
//    <name> CONTROLC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49200004) Control Clear </i>
//    <loc> ( (unsigned int)((I2C0_CONTROLC >> 0) & 0xFFFFFFFF), ((I2C0_CONTROLC = (I2C0_CONTROLC & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_CONTROLC_SDA </item>
//    <item> SFDITEM_FIELD__I2C0_CONTROLC_SCL </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: I2C0  -------------------------------------
// SVD Line: 3994

//  <view> I2C0
//    <name> I2C0 </name>
//    <item> SFDITEM_REG__I2C0_CONTROLS </item>
//    <item> SFDITEM_REG__I2C0_CONTROL </item>
//    <item> SFDITEM_REG__I2C0_CONTROLC </item>
//  </view>
//  


// --------------------------  Register Item Address: I2C1_CONTROLS  ------------------------------
// SVD Line: 4012

unsigned int I2C1_CONTROLS __AT (0x49201000);



// ------------------------------  Field Item: I2C1_CONTROLS_SDA  ---------------------------------
// SVD Line: 4018

//  <item> SFDITEM_FIELD__I2C1_CONTROLS_SDA
//    <name> SDA </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x49201000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROLS ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_CONTROLS_SCL  ---------------------------------
// SVD Line: 4023

//  <item> SFDITEM_FIELD__I2C1_CONTROLS_SCL
//    <name> SCL </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x49201000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROLS ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C1_CONTROLS  ---------------------------------
// SVD Line: 4012

//  <rtree> SFDITEM_REG__I2C1_CONTROLS
//    <name> CONTROLS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x49201000) Control Set </i>
//    <loc> ( (unsigned int)((I2C1_CONTROLS >> 0) & 0xFFFFFFFF), ((I2C1_CONTROLS = (I2C1_CONTROLS & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_CONTROLS_SDA </item>
//    <item> SFDITEM_FIELD__I2C1_CONTROLS_SCL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: I2C1_CONTROL  ------------------------------
// SVD Line: 4030

unsigned int I2C1_CONTROL __AT (0x49201000);



// ------------------------------  Field Item: I2C1_CONTROL_SDA  ----------------------------------
// SVD Line: 4037

//  <item> SFDITEM_FIELD__I2C1_CONTROL_SDA
//    <name> SDA </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x49201000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROL ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_CONTROL_SCL  ----------------------------------
// SVD Line: 4042

//  <item> SFDITEM_FIELD__I2C1_CONTROL_SCL
//    <name> SCL </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x49201000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROL ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C1_CONTROL  ----------------------------------
// SVD Line: 4030

//  <rtree> SFDITEM_REG__I2C1_CONTROL
//    <name> CONTROL </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x49201000) Control Status </i>
//    <loc> ( (unsigned int)((I2C1_CONTROL >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C1_CONTROL_SDA </item>
//    <item> SFDITEM_FIELD__I2C1_CONTROL_SCL </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C1_CONTROLC  ------------------------------
// SVD Line: 4049

unsigned int I2C1_CONTROLC __AT (0x49201004);



// ------------------------------  Field Item: I2C1_CONTROLC_SDA  ---------------------------------
// SVD Line: 4054

//  <item> SFDITEM_FIELD__I2C1_CONTROLC_SDA
//    <name> SDA </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49201004) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROLC ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_CONTROLC_SCL  ---------------------------------
// SVD Line: 4059

//  <item> SFDITEM_FIELD__I2C1_CONTROLC_SCL
//    <name> SCL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49201004) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROLC ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C1_CONTROLC  ---------------------------------
// SVD Line: 4049

//  <rtree> SFDITEM_REG__I2C1_CONTROLC
//    <name> CONTROLC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49201004) Control Clear </i>
//    <loc> ( (unsigned int)((I2C1_CONTROLC >> 0) & 0xFFFFFFFF), ((I2C1_CONTROLC = (I2C1_CONTROLC & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_CONTROLC_SDA </item>
//    <item> SFDITEM_FIELD__I2C1_CONTROLC_SCL </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: I2C1  -------------------------------------
// SVD Line: 4069

//  <view> I2C1
//    <name> I2C1 </name>
//    <item> SFDITEM_REG__I2C1_CONTROLS </item>
//    <item> SFDITEM_REG__I2C1_CONTROL </item>
//    <item> SFDITEM_REG__I2C1_CONTROLC </item>
//  </view>
//  


// -----------------------  Register Item Address: I2C0_Secure_CONTROLS  --------------------------
// SVD Line: 4012

unsigned int I2C0_Secure_CONTROLS __AT (0x59200000);



// --------------------------  Field Item: I2C0_Secure_CONTROLS_SDA  ------------------------------
// SVD Line: 4018

//  <item> SFDITEM_FIELD__I2C0_Secure_CONTROLS_SDA
//    <name> SDA </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x59200000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_Secure_CONTROLS ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// --------------------------  Field Item: I2C0_Secure_CONTROLS_SCL  ------------------------------
// SVD Line: 4023

//  <item> SFDITEM_FIELD__I2C0_Secure_CONTROLS_SCL
//    <name> SCL </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x59200000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_Secure_CONTROLS ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// --------------------------  Register RTree: I2C0_Secure_CONTROLS  ------------------------------
// SVD Line: 4012

//  <rtree> SFDITEM_REG__I2C0_Secure_CONTROLS
//    <name> CONTROLS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x59200000) Control Set </i>
//    <loc> ( (unsigned int)((I2C0_Secure_CONTROLS >> 0) & 0xFFFFFFFF), ((I2C0_Secure_CONTROLS = (I2C0_Secure_CONTROLS & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_Secure_CONTROLS_SDA </item>
//    <item> SFDITEM_FIELD__I2C0_Secure_CONTROLS_SCL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: I2C0_Secure_CONTROL  ---------------------------
// SVD Line: 4030

unsigned int I2C0_Secure_CONTROL __AT (0x59200000);



// ---------------------------  Field Item: I2C0_Secure_CONTROL_SDA  ------------------------------
// SVD Line: 4037

//  <item> SFDITEM_FIELD__I2C0_Secure_CONTROL_SDA
//    <name> SDA </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x59200000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_Secure_CONTROL ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2C0_Secure_CONTROL_SCL  ------------------------------
// SVD Line: 4042

//  <item> SFDITEM_FIELD__I2C0_Secure_CONTROL_SCL
//    <name> SCL </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x59200000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_Secure_CONTROL ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: I2C0_Secure_CONTROL  ------------------------------
// SVD Line: 4030

//  <rtree> SFDITEM_REG__I2C0_Secure_CONTROL
//    <name> CONTROL </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x59200000) Control Status </i>
//    <loc> ( (unsigned int)((I2C0_Secure_CONTROL >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C0_Secure_CONTROL_SDA </item>
//    <item> SFDITEM_FIELD__I2C0_Secure_CONTROL_SCL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: I2C0_Secure_CONTROLC  --------------------------
// SVD Line: 4049

unsigned int I2C0_Secure_CONTROLC __AT (0x59200004);



// --------------------------  Field Item: I2C0_Secure_CONTROLC_SDA  ------------------------------
// SVD Line: 4054

//  <item> SFDITEM_FIELD__I2C0_Secure_CONTROLC_SDA
//    <name> SDA </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59200004) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_Secure_CONTROLC ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// --------------------------  Field Item: I2C0_Secure_CONTROLC_SCL  ------------------------------
// SVD Line: 4059

//  <item> SFDITEM_FIELD__I2C0_Secure_CONTROLC_SCL
//    <name> SCL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59200004) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_Secure_CONTROLC ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// --------------------------  Register RTree: I2C0_Secure_CONTROLC  ------------------------------
// SVD Line: 4049

//  <rtree> SFDITEM_REG__I2C0_Secure_CONTROLC
//    <name> CONTROLC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59200004) Control Clear </i>
//    <loc> ( (unsigned int)((I2C0_Secure_CONTROLC >> 0) & 0xFFFFFFFF), ((I2C0_Secure_CONTROLC = (I2C0_Secure_CONTROLC & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_Secure_CONTROLC_SDA </item>
//    <item> SFDITEM_FIELD__I2C0_Secure_CONTROLC_SCL </item>
//  </rtree>
//  


// ------------------------------  Peripheral View: I2C0_Secure  ----------------------------------
// SVD Line: 4076

//  <view> I2C0_Secure
//    <name> I2C0_Secure </name>
//    <item> SFDITEM_REG__I2C0_Secure_CONTROLS </item>
//    <item> SFDITEM_REG__I2C0_Secure_CONTROL </item>
//    <item> SFDITEM_REG__I2C0_Secure_CONTROLC </item>
//  </view>
//  


// -----------------------  Register Item Address: I2C1_Secure_CONTROLS  --------------------------
// SVD Line: 4012

unsigned int I2C1_Secure_CONTROLS __AT (0x59201000);



// --------------------------  Field Item: I2C1_Secure_CONTROLS_SDA  ------------------------------
// SVD Line: 4018

//  <item> SFDITEM_FIELD__I2C1_Secure_CONTROLS_SDA
//    <name> SDA </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x59201000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_Secure_CONTROLS ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// --------------------------  Field Item: I2C1_Secure_CONTROLS_SCL  ------------------------------
// SVD Line: 4023

//  <item> SFDITEM_FIELD__I2C1_Secure_CONTROLS_SCL
//    <name> SCL </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x59201000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_Secure_CONTROLS ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// --------------------------  Register RTree: I2C1_Secure_CONTROLS  ------------------------------
// SVD Line: 4012

//  <rtree> SFDITEM_REG__I2C1_Secure_CONTROLS
//    <name> CONTROLS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x59201000) Control Set </i>
//    <loc> ( (unsigned int)((I2C1_Secure_CONTROLS >> 0) & 0xFFFFFFFF), ((I2C1_Secure_CONTROLS = (I2C1_Secure_CONTROLS & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_Secure_CONTROLS_SDA </item>
//    <item> SFDITEM_FIELD__I2C1_Secure_CONTROLS_SCL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: I2C1_Secure_CONTROL  ---------------------------
// SVD Line: 4030

unsigned int I2C1_Secure_CONTROL __AT (0x59201000);



// ---------------------------  Field Item: I2C1_Secure_CONTROL_SDA  ------------------------------
// SVD Line: 4037

//  <item> SFDITEM_FIELD__I2C1_Secure_CONTROL_SDA
//    <name> SDA </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x59201000) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_Secure_CONTROL ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2C1_Secure_CONTROL_SCL  ------------------------------
// SVD Line: 4042

//  <item> SFDITEM_FIELD__I2C1_Secure_CONTROL_SCL
//    <name> SCL </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x59201000) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_Secure_CONTROL ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: I2C1_Secure_CONTROL  ------------------------------
// SVD Line: 4030

//  <rtree> SFDITEM_REG__I2C1_Secure_CONTROL
//    <name> CONTROL </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x59201000) Control Status </i>
//    <loc> ( (unsigned int)((I2C1_Secure_CONTROL >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C1_Secure_CONTROL_SDA </item>
//    <item> SFDITEM_FIELD__I2C1_Secure_CONTROL_SCL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: I2C1_Secure_CONTROLC  --------------------------
// SVD Line: 4049

unsigned int I2C1_Secure_CONTROLC __AT (0x59201004);



// --------------------------  Field Item: I2C1_Secure_CONTROLC_SDA  ------------------------------
// SVD Line: 4054

//  <item> SFDITEM_FIELD__I2C1_Secure_CONTROLC_SDA
//    <name> SDA </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59201004) Serial data line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_Secure_CONTROLC ) </loc>
//      <o.1..1> SDA
//    </check>
//  </item>
//  


// --------------------------  Field Item: I2C1_Secure_CONTROLC_SCL  ------------------------------
// SVD Line: 4059

//  <item> SFDITEM_FIELD__I2C1_Secure_CONTROLC_SCL
//    <name> SCL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59201004) Serial clock line </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_Secure_CONTROLC ) </loc>
//      <o.0..0> SCL
//    </check>
//  </item>
//  


// --------------------------  Register RTree: I2C1_Secure_CONTROLC  ------------------------------
// SVD Line: 4049

//  <rtree> SFDITEM_REG__I2C1_Secure_CONTROLC
//    <name> CONTROLC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59201004) Control Clear </i>
//    <loc> ( (unsigned int)((I2C1_Secure_CONTROLC >> 0) & 0xFFFFFFFF), ((I2C1_Secure_CONTROLC = (I2C1_Secure_CONTROLC & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_Secure_CONTROLC_SDA </item>
//    <item> SFDITEM_FIELD__I2C1_Secure_CONTROLC_SCL </item>
//  </rtree>
//  


// ------------------------------  Peripheral View: I2C1_Secure  ----------------------------------
// SVD Line: 4083

//  <view> I2C1_Secure
//    <name> I2C1_Secure </name>
//    <item> SFDITEM_REG__I2C1_Secure_CONTROLS </item>
//    <item> SFDITEM_REG__I2C1_Secure_CONTROL </item>
//    <item> SFDITEM_REG__I2C1_Secure_CONTROLC </item>
//  </view>
//  


// -----------------------------  Register Item Address: SSP0_CR0  --------------------------------
// SVD Line: 4109

unsigned int SSP0_CR0 __AT (0x49203000);



// --------------------------------  Field Item: SSP0_CR0_SCR  ------------------------------------
// SVD Line: 4114

//  <item> SFDITEM_FIELD__SSP0_CR0_SCR
//    <name> SCR </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x49203000) Serial clock rate </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP0_CR0 >> 8) & 0xFF), ((SSP0_CR0 = (SSP0_CR0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SSP0_CR0_SPH  ------------------------------------
// SVD Line: 4119

//  <item> SFDITEM_FIELD__SSP0_CR0_SPH
//    <name> SPH </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x49203000) SSPCLKOUT phase </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_CR0 ) </loc>
//      <o.7..7> SPH
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP0_CR0_SPO  ------------------------------------
// SVD Line: 4124

//  <item> SFDITEM_FIELD__SSP0_CR0_SPO
//    <name> SPO </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x49203000) SSPCLKOUT polarity </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_CR0 ) </loc>
//      <o.6..6> SPO
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP0_CR0_FRF  ------------------------------------
// SVD Line: 4129

//  <item> SFDITEM_FIELD__SSP0_CR0_FRF
//    <name> FRF </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x49203000) \nFrame format\n0 : Motorola = Motorola SPI frame format\n1 : TI = TI synchronous serial frame format\n2 : NM = National Microwire frame format\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_CR0 ) </loc>
//      <o.5..4> FRF
//        <0=> 0: Motorola = Motorola SPI frame format
//        <1=> 1: TI = TI synchronous serial frame format
//        <2=> 2: NM = National Microwire frame format
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: SSP0_CR0_DSS  ------------------------------------
// SVD Line: 4151

//  <item> SFDITEM_FIELD__SSP0_CR0_DSS
//    <name> DSS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x49203000) \nData Size Select\n0 : Reserved - do not use\n1 : Reserved - do not use\n2 : Reserved - do not use\n3 : 4bit = 4bit\n4 : 5bit = 5bit\n5 : 6bit = 6bit\n6 : 7bit = 7bit\n7 : 8bit = 8bit\n8 : 9bit = 9bit\n9 : 10bit = 10bit\n10 : 11bit = 11bit\n11 : 12bit = 12bit\n12 : 13bit = 13bit\n13 : 14bit = 14bit\n14 : 15bit = 15bit\n15 : 16bit = 16bit </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_CR0 ) </loc>
//      <o.3..0> DSS
//        <0=> 0: 
//        <1=> 1: 
//        <2=> 2: 
//        <3=> 3: 4bit = 4bit
//        <4=> 4: 5bit = 5bit
//        <5=> 5: 6bit = 6bit
//        <6=> 6: 7bit = 7bit
//        <7=> 7: 8bit = 8bit
//        <8=> 8: 9bit = 9bit
//        <9=> 9: 10bit = 10bit
//        <10=> 10: 11bit = 11bit
//        <11=> 11: 12bit = 12bit
//        <12=> 12: 13bit = 13bit
//        <13=> 13: 14bit = 14bit
//        <14=> 14: 15bit = 15bit
//        <15=> 15: 16bit = 16bit
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_CR0  ------------------------------------
// SVD Line: 4109

//  <rtree> SFDITEM_REG__SSP0_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49203000) Control register 0 </i>
//    <loc> ( (unsigned int)((SSP0_CR0 >> 0) & 0xFFFFFFFF), ((SSP0_CR0 = (SSP0_CR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_CR0_SCR </item>
//    <item> SFDITEM_FIELD__SSP0_CR0_SPH </item>
//    <item> SFDITEM_FIELD__SSP0_CR0_SPO </item>
//    <item> SFDITEM_FIELD__SSP0_CR0_FRF </item>
//    <item> SFDITEM_FIELD__SSP0_CR0_DSS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP0_CR1  --------------------------------
// SVD Line: 4212

unsigned int SSP0_CR1 __AT (0x49203004);



// --------------------------------  Field Item: SSP0_CR1_SOD  ------------------------------------
// SVD Line: 4217

//  <item> SFDITEM_FIELD__SSP0_CR1_SOD
//    <name> SOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49203004) \nSlave-mode output disable\n0 : Enable = SSP can drive the SSPTXD output in slave mode\n1 : Disable = SSP must not drive the SSPTXD output in slave mode </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_CR1 ) </loc>
//      <o.3..3> SOD
//        <0=> 0: Enable = SSP can drive the SSPTXD output in slave mode
//        <1=> 1: Disable = SSP must not drive the SSPTXD output in slave mode
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: SSP0_CR1_MS  ------------------------------------
// SVD Line: 4234

//  <item> SFDITEM_FIELD__SSP0_CR1_MS
//    <name> MS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49203004) \nMaster or slave mode select\n0 : Master = Device configured as master, default\n1 : Slave = Device configured as slave </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_CR1 ) </loc>
//      <o.2..2> MS
//        <0=> 0: Master = Device configured as master, default
//        <1=> 1: Slave = Device configured as slave
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: SSP0_CR1_SSE  ------------------------------------
// SVD Line: 4251

//  <item> SFDITEM_FIELD__SSP0_CR1_SSE
//    <name> SSE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49203004) \nSynchronous serial port enable\n0 : Disabled = SSP operation disabled\n1 : Enabled = SSP operation enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_CR1 ) </loc>
//      <o.1..1> SSE
//        <0=> 0: Disabled = SSP operation disabled
//        <1=> 1: Enabled = SSP operation enabled
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: SSP0_CR1_LBM  ------------------------------------
// SVD Line: 4268

//  <item> SFDITEM_FIELD__SSP0_CR1_LBM
//    <name> LBM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49203004) \nLoop back mode\n0 : Normal = Normal serial port operation enabled\n1 : Loopback = Output of transmit serial shifter is connected to input of receive serial shifter internally </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_CR1 ) </loc>
//      <o.0..0> LBM
//        <0=> 0: Normal = Normal serial port operation enabled
//        <1=> 1: Loopback = Output of transmit serial shifter is connected to input of receive serial shifter internally
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_CR1  ------------------------------------
// SVD Line: 4212

//  <rtree> SFDITEM_REG__SSP0_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49203004) Control register 1 </i>
//    <loc> ( (unsigned int)((SSP0_CR1 >> 0) & 0xFFFFFFFF), ((SSP0_CR1 = (SSP0_CR1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_CR1_SOD </item>
//    <item> SFDITEM_FIELD__SSP0_CR1_MS </item>
//    <item> SFDITEM_FIELD__SSP0_CR1_SSE </item>
//    <item> SFDITEM_FIELD__SSP0_CR1_LBM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP0_DR  ---------------------------------
// SVD Line: 4287

unsigned int SSP0_DR __AT (0x49203008);



// --------------------------------  Field Item: SSP0_DR_Data  ------------------------------------
// SVD Line: 4292

//  <item> SFDITEM_FIELD__SSP0_DR_Data
//    <name> Data </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x49203008) Transmit/Receive FIFO </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP0_DR >> 0) & 0xFFFF), ((SSP0_DR = (SSP0_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: SSP0_DR  ------------------------------------
// SVD Line: 4287

//  <rtree> SFDITEM_REG__SSP0_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49203008) Data register </i>
//    <loc> ( (unsigned int)((SSP0_DR >> 0) & 0xFFFFFFFF), ((SSP0_DR = (SSP0_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_DR_Data </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP0_SR  ---------------------------------
// SVD Line: 4299

unsigned int SSP0_SR __AT (0x4920300C);



// ---------------------------------  Field Item: SSP0_SR_BSY  ------------------------------------
// SVD Line: 4304

//  <item> SFDITEM_FIELD__SSP0_SR_BSY
//    <name> BSY </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4920300C) \nPrimeCell SSP busy flag\n0 : Idle = SSP is idle\n1 : Busy = SSP is currently transmitting and/or receiving a frame or the transmit FIFO is not empty </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_SR ) </loc>
//      <o.4..4> BSY
//        <0=> 0: Idle = SSP is idle
//        <1=> 1: Busy = SSP is currently transmitting and/or receiving a frame or the transmit FIFO is not empty
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: SSP0_SR_RFF  ------------------------------------
// SVD Line: 4321

//  <item> SFDITEM_FIELD__SSP0_SR_RFF
//    <name> RFF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4920300C) \nReceive FIFO full\n0 : NF = Receive FIFO is not full\n1 : F = Receive FIFO is full </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_SR ) </loc>
//      <o.3..3> RFF
//        <0=> 0: NF = Receive FIFO is not full
//        <1=> 1: F = Receive FIFO is full
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: SSP0_SR_RNE  ------------------------------------
// SVD Line: 4338

//  <item> SFDITEM_FIELD__SSP0_SR_RNE
//    <name> RNE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4920300C) \nReceive FIFO not empty\n0 : E = Receive FIFO is empty\n1 : NE = Receive FIFO is not empty </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_SR ) </loc>
//      <o.2..2> RNE
//        <0=> 0: E = Receive FIFO is empty
//        <1=> 1: NE = Receive FIFO is not empty
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: SSP0_SR_TNF  ------------------------------------
// SVD Line: 4355

//  <item> SFDITEM_FIELD__SSP0_SR_TNF
//    <name> TNF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4920300C) \nTransmit FIFO not full\n0 : F = Receive FIFO is full\n1 : NF = Receive FIFO is not full </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_SR ) </loc>
//      <o.1..1> TNF
//        <0=> 0: F = Receive FIFO is full
//        <1=> 1: NF = Receive FIFO is not full
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: SSP0_SR_TFE  ------------------------------------
// SVD Line: 4372

//  <item> SFDITEM_FIELD__SSP0_SR_TFE
//    <name> TFE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4920300C) \nTransmit FIFO empty\n0 : NE = Receive FIFO is not empty\n1 : E = Receive FIFO is empty </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_SR ) </loc>
//      <o.0..0> TFE
//        <0=> 0: NE = Receive FIFO is not empty
//        <1=> 1: E = Receive FIFO is empty
//    </combo>
//  </item>
//  


// ---------------------------------  Register RTree: SSP0_SR  ------------------------------------
// SVD Line: 4299

//  <rtree> SFDITEM_REG__SSP0_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4920300C) Status register </i>
//    <loc> ( (unsigned int)((SSP0_SR >> 0) & 0xFFFFFFFF), ((SSP0_SR = (SSP0_SR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_SR_BSY </item>
//    <item> SFDITEM_FIELD__SSP0_SR_RFF </item>
//    <item> SFDITEM_FIELD__SSP0_SR_RNE </item>
//    <item> SFDITEM_FIELD__SSP0_SR_TNF </item>
//    <item> SFDITEM_FIELD__SSP0_SR_TFE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP0_CPSR  --------------------------------
// SVD Line: 4391

unsigned int SSP0_CPSR __AT (0x49203010);



// ------------------------------  Field Item: SSP0_CPSR_CPSDVSR  ---------------------------------
// SVD Line: 4396

//  <item> SFDITEM_FIELD__SSP0_CPSR_CPSDVSR
//    <name> CPSDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x49203010) Clock prescale divisor </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP0_CPSR >> 0) & 0xFF), ((SSP0_CPSR = (SSP0_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_CPSR  -----------------------------------
// SVD Line: 4391

//  <rtree> SFDITEM_REG__SSP0_CPSR
//    <name> CPSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49203010) Clock prescale register </i>
//    <loc> ( (unsigned int)((SSP0_CPSR >> 0) & 0xFFFFFFFF), ((SSP0_CPSR = (SSP0_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_CPSR_CPSDVSR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP0_IMSC  --------------------------------
// SVD Line: 4403

unsigned int SSP0_IMSC __AT (0x49203014);



// -------------------------------  Field Item: SSP0_IMSC_TXIM  -----------------------------------
// SVD Line: 4408

//  <item> SFDITEM_FIELD__SSP0_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49203014) \nTransmit FIFO interrupt mask\n0 : Masked = Transmit FIFO half empty or less condition interrupt is masked\n1 : NotMasked = Transmit FIFO half empty or less condition interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_IMSC ) </loc>
//      <o.3..3> TXIM
//        <0=> 0: Masked = Transmit FIFO half empty or less condition interrupt is masked
//        <1=> 1: NotMasked = Transmit FIFO half empty or less condition interrupt is not masked
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: SSP0_IMSC_RXIM  -----------------------------------
// SVD Line: 4425

//  <item> SFDITEM_FIELD__SSP0_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49203014) \nReceive FIFO interrupt mask\n0 : Masked = Receive FIFO half full or less condition interrupt is masked\n1 : NotMasked = Receive FIFO half full or less condition interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_IMSC ) </loc>
//      <o.2..2> RXIM
//        <0=> 0: Masked = Receive FIFO half full or less condition interrupt is masked
//        <1=> 1: NotMasked = Receive FIFO half full or less condition interrupt is not masked
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: SSP0_IMSC_RTIM  -----------------------------------
// SVD Line: 4442

//  <item> SFDITEM_FIELD__SSP0_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49203014) \nReceive timeout interrupt mask\n0 : Masked = Receive FIFO not empty or no read prior to timeout period interrupt is masked\n1 : NotMasked = Receive FIFO not empty or no read prior to timeout period interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_IMSC ) </loc>
//      <o.1..1> RTIM
//        <0=> 0: Masked = Receive FIFO not empty or no read prior to timeout period interrupt is masked
//        <1=> 1: NotMasked = Receive FIFO not empty or no read prior to timeout period interrupt is not masked
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: SSP0_IMSC_RORIM  ----------------------------------
// SVD Line: 4459

//  <item> SFDITEM_FIELD__SSP0_IMSC_RORIM
//    <name> RORIM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49203014) \nReceive overrun interrupt mask\n0 : Masked = Receive FIFO written to while full condition interrupt is masked\n1 : NotMasked = Receive FIFO written to while full condition interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_IMSC ) </loc>
//      <o.0..0> RORIM
//        <0=> 0: Masked = Receive FIFO written to while full condition interrupt is masked
//        <1=> 1: NotMasked = Receive FIFO written to while full condition interrupt is not masked
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_IMSC  -----------------------------------
// SVD Line: 4403

//  <rtree> SFDITEM_REG__SSP0_IMSC
//    <name> IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49203014) Interrupt mask set or clear register </i>
//    <loc> ( (unsigned int)((SSP0_IMSC >> 0) & 0xFFFFFFFF), ((SSP0_IMSC = (SSP0_IMSC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_IMSC_TXIM </item>
//    <item> SFDITEM_FIELD__SSP0_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__SSP0_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__SSP0_IMSC_RORIM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP0_RIS  --------------------------------
// SVD Line: 4478

unsigned int SSP0_RIS __AT (0x49203018);



// -------------------------------  Field Item: SSP0_RIS_TXRIS  -----------------------------------
// SVD Line: 4483

//  <item> SFDITEM_FIELD__SSP0_RIS_TXRIS
//    <name> TXRIS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49203018) transmit FIFO raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_RIS ) </loc>
//      <o.3..3> TXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_RIS_RXRIS  -----------------------------------
// SVD Line: 4488

//  <item> SFDITEM_FIELD__SSP0_RIS_RXRIS
//    <name> RXRIS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49203018) receive FIFO raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_RIS ) </loc>
//      <o.2..2> RXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_RIS_RTRIS  -----------------------------------
// SVD Line: 4493

//  <item> SFDITEM_FIELD__SSP0_RIS_RTRIS
//    <name> RTRIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49203018) receive timeout raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_RIS ) </loc>
//      <o.1..1> RTRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_RIS_RORRIS  ----------------------------------
// SVD Line: 4498

//  <item> SFDITEM_FIELD__SSP0_RIS_RORRIS
//    <name> RORRIS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49203018) receive over run raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_RIS ) </loc>
//      <o.0..0> RORRIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_RIS  ------------------------------------
// SVD Line: 4478

//  <rtree> SFDITEM_REG__SSP0_RIS
//    <name> RIS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49203018) Raw interrupt status register </i>
//    <loc> ( (unsigned int)((SSP0_RIS >> 0) & 0xFFFFFFFF), ((SSP0_RIS = (SSP0_RIS & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_RIS_TXRIS </item>
//    <item> SFDITEM_FIELD__SSP0_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__SSP0_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__SSP0_RIS_RORRIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP0_MIS  --------------------------------
// SVD Line: 4505

unsigned int SSP0_MIS __AT (0x4920301C);



// -------------------------------  Field Item: SSP0_MIS_TXMIS  -----------------------------------
// SVD Line: 4510

//  <item> SFDITEM_FIELD__SSP0_MIS_TXMIS
//    <name> TXMIS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4920301C) transmit FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_MIS ) </loc>
//      <o.3..3> TXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_MIS_RXMIS  -----------------------------------
// SVD Line: 4515

//  <item> SFDITEM_FIELD__SSP0_MIS_RXMIS
//    <name> RXMIS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4920301C) receive FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_MIS ) </loc>
//      <o.2..2> RXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_MIS_RTMIS  -----------------------------------
// SVD Line: 4520

//  <item> SFDITEM_FIELD__SSP0_MIS_RTMIS
//    <name> RTMIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4920301C) receive timeout masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_MIS ) </loc>
//      <o.1..1> RTMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_MIS_RORMIS  ----------------------------------
// SVD Line: 4525

//  <item> SFDITEM_FIELD__SSP0_MIS_RORMIS
//    <name> RORMIS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4920301C) receive over run masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_MIS ) </loc>
//      <o.0..0> RORMIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_MIS  ------------------------------------
// SVD Line: 4505

//  <rtree> SFDITEM_REG__SSP0_MIS
//    <name> MIS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4920301C) Masked interrupt status register </i>
//    <loc> ( (unsigned int)((SSP0_MIS >> 0) & 0xFFFFFFFF), ((SSP0_MIS = (SSP0_MIS & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_MIS_TXMIS </item>
//    <item> SFDITEM_FIELD__SSP0_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__SSP0_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__SSP0_MIS_RORMIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP0_ICR  --------------------------------
// SVD Line: 4532

unsigned int SSP0_ICR __AT (0x49203020);



// --------------------------------  Field Item: SSP0_ICR_RTIC  -----------------------------------
// SVD Line: 4537

//  <item> SFDITEM_FIELD__SSP0_ICR_RTIC
//    <name> RTIC </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49203020) Clears the SSPRTINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ICR ) </loc>
//      <o.1..1> RTIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_ICR_RORIC  -----------------------------------
// SVD Line: 4542

//  <item> SFDITEM_FIELD__SSP0_ICR_RORIC
//    <name> RORIC </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49203020) Clears the SSPRORINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ICR ) </loc>
//      <o.0..0> RORIC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_ICR  ------------------------------------
// SVD Line: 4532

//  <rtree> SFDITEM_REG__SSP0_ICR
//    <name> ICR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49203020) Interrupt clear register </i>
//    <loc> ( (unsigned int)((SSP0_ICR >> 0) & 0xFFFFFFFF), ((SSP0_ICR = (SSP0_ICR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_ICR_RTIC </item>
//    <item> SFDITEM_FIELD__SSP0_ICR_RORIC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP0_DMACR  -------------------------------
// SVD Line: 4549

unsigned int SSP0_DMACR __AT (0x49203024);



// ------------------------------  Field Item: SSP0_DMACR_TXDMAE  ---------------------------------
// SVD Line: 4554

//  <item> SFDITEM_FIELD__SSP0_DMACR_TXDMAE
//    <name> TXDMAE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49203024) Transmit DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_DMACR ) </loc>
//      <o.1..1> TXDMAE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP0_DMACR_RXDMAE  ---------------------------------
// SVD Line: 4559

//  <item> SFDITEM_FIELD__SSP0_DMACR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49203024) Receive DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_DMACR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SSP0_DMACR  -----------------------------------
// SVD Line: 4549

//  <rtree> SFDITEM_REG__SSP0_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49203024) DMA control register </i>
//    <loc> ( (unsigned int)((SSP0_DMACR >> 0) & 0xFFFFFFFF), ((SSP0_DMACR = (SSP0_DMACR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_DMACR_TXDMAE </item>
//    <item> SFDITEM_FIELD__SSP0_DMACR_RXDMAE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP0_TCR  --------------------------------
// SVD Line: 4566

unsigned int SSP0_TCR __AT (0x49203080);



// ------------------------------  Field Item: SSP0_TCR_TESTFIFO  ---------------------------------
// SVD Line: 4572

//  <item> SFDITEM_FIELD__SSP0_TCR_TESTFIFO
//    <name> TESTFIFO </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49203080) \nTest FIFO enable\n0 : Disabled = Normal operation\n1 : Enabled = When this bit is 1, a write to the TDR writes data into the receive FIFO, and reads from the TDR reads data out of the transmit FIFO. </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_TCR ) </loc>
//      <o.1..1> TESTFIFO
//        <0=> 0: Disabled = Normal operation
//        <1=> 1: Enabled = When this bit is 1, a write to the TDR writes data into the receive FIFO, and reads from the TDR reads data out of the transmit FIFO.
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: SSP0_TCR_ITEN  -----------------------------------
// SVD Line: 4589

//  <item> SFDITEM_FIELD__SSP0_TCR_ITEN
//    <name> ITEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49203080) \nIntegration test enable\n0 : Disabled = Normal mode\n1 : Enabled = The PrimeCell SSP is placed in integration test mode. </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_TCR ) </loc>
//      <o.0..0> ITEN
//        <0=> 0: Disabled = Normal mode
//        <1=> 1: Enabled = The PrimeCell SSP is placed in integration test mode.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_TCR  ------------------------------------
// SVD Line: 4566

//  <rtree> SFDITEM_REG__SSP0_TCR
//    <name> TCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49203080) Test control register </i>
//    <loc> ( (unsigned int)((SSP0_TCR >> 0) & 0xFFFFFFFF), ((SSP0_TCR = (SSP0_TCR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_TCR_TESTFIFO </item>
//    <item> SFDITEM_FIELD__SSP0_TCR_ITEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP0_ITIP  --------------------------------
// SVD Line: 4608

unsigned int SSP0_ITIP __AT (0x49203084);



// -----------------------------  Field Item: SSP0_ITIP_TXDMACLR  ---------------------------------
// SVD Line: 4614

//  <item> SFDITEM_FIELD__SSP0_ITIP_TXDMACLR
//    <name> TXDMACLR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x49203084) Value to be driven on the intra-chip input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ITIP ) </loc>
//      <o.4..4> TXDMACLR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP0_ITIP_RXDDMACLR  --------------------------------
// SVD Line: 4619

//  <item> SFDITEM_FIELD__SSP0_ITIP_RXDDMACLR
//    <name> RXDDMACLR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49203084) Value to be driven on the intra-chip input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ITIP ) </loc>
//      <o.3..3> RXDDMACLR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_ITIP_CLKIN  ----------------------------------
// SVD Line: 4624

//  <item> SFDITEM_FIELD__SSP0_ITIP_CLKIN
//    <name> CLKIN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49203084) Return the value of CLKIN primary input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ITIP ) </loc>
//      <o.2..2> CLKIN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_ITIP_FSSIN  ----------------------------------
// SVD Line: 4629

//  <item> SFDITEM_FIELD__SSP0_ITIP_FSSIN
//    <name> FSSIN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49203084) Return the value of FSSIN primary input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ITIP ) </loc>
//      <o.1..1> FSSIN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP0_ITIP_RXD  -----------------------------------
// SVD Line: 4634

//  <item> SFDITEM_FIELD__SSP0_ITIP_RXD
//    <name> RXD </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49203084) Return the value of RXD primary input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ITIP ) </loc>
//      <o.0..0> RXD
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_ITIP  -----------------------------------
// SVD Line: 4608

//  <rtree> SFDITEM_REG__SSP0_ITIP
//    <name> ITIP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49203084) Integration test input register </i>
//    <loc> ( (unsigned int)((SSP0_ITIP >> 0) & 0xFFFFFFFF), ((SSP0_ITIP = (SSP0_ITIP & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_ITIP_TXDMACLR </item>
//    <item> SFDITEM_FIELD__SSP0_ITIP_RXDDMACLR </item>
//    <item> SFDITEM_FIELD__SSP0_ITIP_CLKIN </item>
//    <item> SFDITEM_FIELD__SSP0_ITIP_FSSIN </item>
//    <item> SFDITEM_FIELD__SSP0_ITIP_RXD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP0_ITOP  --------------------------------
// SVD Line: 4641

unsigned int SSP0_ITOP __AT (0x49203088);



// -----------------------------  Field Item: SSP0_ITOP_TXDMASREQ  --------------------------------
// SVD Line: 4647

//  <item> SFDITEM_FIELD__SSP0_ITOP_TXDMASREQ
//    <name> TXDMASREQ </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x49203088) Value on the TXDMASREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ITOP ) </loc>
//      <o.13..13> TXDMASREQ
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP0_ITOP_TXDMABREQ  --------------------------------
// SVD Line: 4652

//  <item> SFDITEM_FIELD__SSP0_ITOP_TXDMABREQ
//    <name> TXDMABREQ </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x49203088) Value on the TXDMABREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ITOP ) </loc>
//      <o.12..12> TXDMABREQ
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP0_ITOP_RXDMASREQ  --------------------------------
// SVD Line: 4657

//  <item> SFDITEM_FIELD__SSP0_ITOP_RXDMASREQ
//    <name> RXDMASREQ </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x49203088) Value on the TXDMASREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ITOP ) </loc>
//      <o.11..11> RXDMASREQ
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP0_ITOP_RXDMABREQ  --------------------------------
// SVD Line: 4662

//  <item> SFDITEM_FIELD__SSP0_ITOP_RXDMABREQ
//    <name> RXDMABREQ </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x49203088) Value on the TXDMABREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ITOP ) </loc>
//      <o.10..10> RXDMABREQ
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_ITOP_INTR  -----------------------------------
// SVD Line: 4667

//  <item> SFDITEM_FIELD__SSP0_ITOP_INTR
//    <name> INTR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x49203088) Value on the INTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ITOP ) </loc>
//      <o.9..9> INTR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP0_ITOP_TXINTR  ----------------------------------
// SVD Line: 4672

//  <item> SFDITEM_FIELD__SSP0_ITOP_TXINTR
//    <name> TXINTR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x49203088) Value on the TXINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ITOP ) </loc>
//      <o.8..8> TXINTR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP0_ITOP_RXINTR  ----------------------------------
// SVD Line: 4677

//  <item> SFDITEM_FIELD__SSP0_ITOP_RXINTR
//    <name> RXINTR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x49203088) Value on the RXINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ITOP ) </loc>
//      <o.7..7> RXINTR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP0_ITOP_RTINTR  ----------------------------------
// SVD Line: 4682

//  <item> SFDITEM_FIELD__SSP0_ITOP_RTINTR
//    <name> RTINTR </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x49203088) Value on the RTINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ITOP ) </loc>
//      <o.6..6> RTINTR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP0_ITOP_RORINTR  ---------------------------------
// SVD Line: 4687

//  <item> SFDITEM_FIELD__SSP0_ITOP_RORINTR
//    <name> RORINTR </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x49203088) Value on the RORINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ITOP ) </loc>
//      <o.5..5> RORINTR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP0_ITOP_OE  ------------------------------------
// SVD Line: 4692

//  <item> SFDITEM_FIELD__SSP0_ITOP_OE
//    <name> OE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x49203088) Value on the OE line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ITOP ) </loc>
//      <o.4..4> OE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_ITOP_CTLOE  ----------------------------------
// SVD Line: 4697

//  <item> SFDITEM_FIELD__SSP0_ITOP_CTLOE
//    <name> CTLOE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49203088) Value on the OE line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ITOP ) </loc>
//      <o.3..3> CTLOE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP0_ITOP_CLKOUT  ----------------------------------
// SVD Line: 4702

//  <item> SFDITEM_FIELD__SSP0_ITOP_CLKOUT
//    <name> CLKOUT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49203088) Value on the CLKOUT line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ITOP ) </loc>
//      <o.2..2> CLKOUT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP0_ITOP_FSSOUT  ----------------------------------
// SVD Line: 4707

//  <item> SFDITEM_FIELD__SSP0_ITOP_FSSOUT
//    <name> FSSOUT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49203088) Value on the FSSOUT line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ITOP ) </loc>
//      <o.1..1> FSSOUT
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP0_ITOP_TXD  -----------------------------------
// SVD Line: 4712

//  <item> SFDITEM_FIELD__SSP0_ITOP_TXD
//    <name> TXD </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49203088) Value on the TXD line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ITOP ) </loc>
//      <o.0..0> TXD
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_ITOP  -----------------------------------
// SVD Line: 4641

//  <rtree> SFDITEM_REG__SSP0_ITOP
//    <name> ITOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49203088) Integration test output register </i>
//    <loc> ( (unsigned int)((SSP0_ITOP >> 0) & 0xFFFFFFFF), ((SSP0_ITOP = (SSP0_ITOP & ~(0x3FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_ITOP_TXDMASREQ </item>
//    <item> SFDITEM_FIELD__SSP0_ITOP_TXDMABREQ </item>
//    <item> SFDITEM_FIELD__SSP0_ITOP_RXDMASREQ </item>
//    <item> SFDITEM_FIELD__SSP0_ITOP_RXDMABREQ </item>
//    <item> SFDITEM_FIELD__SSP0_ITOP_INTR </item>
//    <item> SFDITEM_FIELD__SSP0_ITOP_TXINTR </item>
//    <item> SFDITEM_FIELD__SSP0_ITOP_RXINTR </item>
//    <item> SFDITEM_FIELD__SSP0_ITOP_RTINTR </item>
//    <item> SFDITEM_FIELD__SSP0_ITOP_RORINTR </item>
//    <item> SFDITEM_FIELD__SSP0_ITOP_OE </item>
//    <item> SFDITEM_FIELD__SSP0_ITOP_CTLOE </item>
//    <item> SFDITEM_FIELD__SSP0_ITOP_CLKOUT </item>
//    <item> SFDITEM_FIELD__SSP0_ITOP_FSSOUT </item>
//    <item> SFDITEM_FIELD__SSP0_ITOP_TXD </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP0_TDR  --------------------------------
// SVD Line: 4719

unsigned int SSP0_TDR __AT (0x4920308C);



// --------------------------------  Field Item: SSP0_TDR_DATA  -----------------------------------
// SVD Line: 4725

//  <item> SFDITEM_FIELD__SSP0_TDR_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4920308C) When the TESTFIFO signal is asserted, data is written into the receive FIFO and read out of the transmit FIFO </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP0_TDR >> 0) & 0xFFFF), ((SSP0_TDR = (SSP0_TDR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_TDR  ------------------------------------
// SVD Line: 4719

//  <rtree> SFDITEM_REG__SSP0_TDR
//    <name> TDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4920308C) Test data register </i>
//    <loc> ( (unsigned int)((SSP0_TDR >> 0) & 0xFFFFFFFF), ((SSP0_TDR = (SSP0_TDR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_TDR_DATA </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SSP0  -------------------------------------
// SVD Line: 4090

//  <view> SSP0
//    <name> SSP0 </name>
//    <item> SFDITEM_REG__SSP0_CR0 </item>
//    <item> SFDITEM_REG__SSP0_CR1 </item>
//    <item> SFDITEM_REG__SSP0_DR </item>
//    <item> SFDITEM_REG__SSP0_SR </item>
//    <item> SFDITEM_REG__SSP0_CPSR </item>
//    <item> SFDITEM_REG__SSP0_IMSC </item>
//    <item> SFDITEM_REG__SSP0_RIS </item>
//    <item> SFDITEM_REG__SSP0_MIS </item>
//    <item> SFDITEM_REG__SSP0_ICR </item>
//    <item> SFDITEM_REG__SSP0_DMACR </item>
//    <item> SFDITEM_REG__SSP0_TCR </item>
//    <item> SFDITEM_REG__SSP0_ITIP </item>
//    <item> SFDITEM_REG__SSP0_ITOP </item>
//    <item> SFDITEM_REG__SSP0_TDR </item>
//  </view>
//  


// -----------------------------  Register Item Address: SSP1_CR0  --------------------------------
// SVD Line: 4109

unsigned int SSP1_CR0 __AT (0x49204000);



// --------------------------------  Field Item: SSP1_CR0_SCR  ------------------------------------
// SVD Line: 4114

//  <item> SFDITEM_FIELD__SSP1_CR0_SCR
//    <name> SCR </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x49204000) Serial clock rate </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP1_CR0 >> 8) & 0xFF), ((SSP1_CR0 = (SSP1_CR0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SSP1_CR0_SPH  ------------------------------------
// SVD Line: 4119

//  <item> SFDITEM_FIELD__SSP1_CR0_SPH
//    <name> SPH </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x49204000) SSPCLKOUT phase </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_CR0 ) </loc>
//      <o.7..7> SPH
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP1_CR0_SPO  ------------------------------------
// SVD Line: 4124

//  <item> SFDITEM_FIELD__SSP1_CR0_SPO
//    <name> SPO </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x49204000) SSPCLKOUT polarity </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_CR0 ) </loc>
//      <o.6..6> SPO
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP1_CR0_FRF  ------------------------------------
// SVD Line: 4129

//  <item> SFDITEM_FIELD__SSP1_CR0_FRF
//    <name> FRF </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x49204000) \nFrame format\n0 : Motorola = Motorola SPI frame format\n1 : TI = TI synchronous serial frame format\n2 : NM = National Microwire frame format\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_CR0 ) </loc>
//      <o.5..4> FRF
//        <0=> 0: Motorola = Motorola SPI frame format
//        <1=> 1: TI = TI synchronous serial frame format
//        <2=> 2: NM = National Microwire frame format
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: SSP1_CR0_DSS  ------------------------------------
// SVD Line: 4151

//  <item> SFDITEM_FIELD__SSP1_CR0_DSS
//    <name> DSS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x49204000) \nData Size Select\n0 : Reserved - do not use\n1 : Reserved - do not use\n2 : Reserved - do not use\n3 : 4bit = 4bit\n4 : 5bit = 5bit\n5 : 6bit = 6bit\n6 : 7bit = 7bit\n7 : 8bit = 8bit\n8 : 9bit = 9bit\n9 : 10bit = 10bit\n10 : 11bit = 11bit\n11 : 12bit = 12bit\n12 : 13bit = 13bit\n13 : 14bit = 14bit\n14 : 15bit = 15bit\n15 : 16bit = 16bit </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_CR0 ) </loc>
//      <o.3..0> DSS
//        <0=> 0: 
//        <1=> 1: 
//        <2=> 2: 
//        <3=> 3: 4bit = 4bit
//        <4=> 4: 5bit = 5bit
//        <5=> 5: 6bit = 6bit
//        <6=> 6: 7bit = 7bit
//        <7=> 7: 8bit = 8bit
//        <8=> 8: 9bit = 9bit
//        <9=> 9: 10bit = 10bit
//        <10=> 10: 11bit = 11bit
//        <11=> 11: 12bit = 12bit
//        <12=> 12: 13bit = 13bit
//        <13=> 13: 14bit = 14bit
//        <14=> 14: 15bit = 15bit
//        <15=> 15: 16bit = 16bit
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_CR0  ------------------------------------
// SVD Line: 4109

//  <rtree> SFDITEM_REG__SSP1_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49204000) Control register 0 </i>
//    <loc> ( (unsigned int)((SSP1_CR0 >> 0) & 0xFFFFFFFF), ((SSP1_CR0 = (SSP1_CR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_CR0_SCR </item>
//    <item> SFDITEM_FIELD__SSP1_CR0_SPH </item>
//    <item> SFDITEM_FIELD__SSP1_CR0_SPO </item>
//    <item> SFDITEM_FIELD__SSP1_CR0_FRF </item>
//    <item> SFDITEM_FIELD__SSP1_CR0_DSS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP1_CR1  --------------------------------
// SVD Line: 4212

unsigned int SSP1_CR1 __AT (0x49204004);



// --------------------------------  Field Item: SSP1_CR1_SOD  ------------------------------------
// SVD Line: 4217

//  <item> SFDITEM_FIELD__SSP1_CR1_SOD
//    <name> SOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49204004) \nSlave-mode output disable\n0 : Enable = SSP can drive the SSPTXD output in slave mode\n1 : Disable = SSP must not drive the SSPTXD output in slave mode </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_CR1 ) </loc>
//      <o.3..3> SOD
//        <0=> 0: Enable = SSP can drive the SSPTXD output in slave mode
//        <1=> 1: Disable = SSP must not drive the SSPTXD output in slave mode
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: SSP1_CR1_MS  ------------------------------------
// SVD Line: 4234

//  <item> SFDITEM_FIELD__SSP1_CR1_MS
//    <name> MS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49204004) \nMaster or slave mode select\n0 : Master = Device configured as master, default\n1 : Slave = Device configured as slave </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_CR1 ) </loc>
//      <o.2..2> MS
//        <0=> 0: Master = Device configured as master, default
//        <1=> 1: Slave = Device configured as slave
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: SSP1_CR1_SSE  ------------------------------------
// SVD Line: 4251

//  <item> SFDITEM_FIELD__SSP1_CR1_SSE
//    <name> SSE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49204004) \nSynchronous serial port enable\n0 : Disabled = SSP operation disabled\n1 : Enabled = SSP operation enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_CR1 ) </loc>
//      <o.1..1> SSE
//        <0=> 0: Disabled = SSP operation disabled
//        <1=> 1: Enabled = SSP operation enabled
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: SSP1_CR1_LBM  ------------------------------------
// SVD Line: 4268

//  <item> SFDITEM_FIELD__SSP1_CR1_LBM
//    <name> LBM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49204004) \nLoop back mode\n0 : Normal = Normal serial port operation enabled\n1 : Loopback = Output of transmit serial shifter is connected to input of receive serial shifter internally </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_CR1 ) </loc>
//      <o.0..0> LBM
//        <0=> 0: Normal = Normal serial port operation enabled
//        <1=> 1: Loopback = Output of transmit serial shifter is connected to input of receive serial shifter internally
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_CR1  ------------------------------------
// SVD Line: 4212

//  <rtree> SFDITEM_REG__SSP1_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49204004) Control register 1 </i>
//    <loc> ( (unsigned int)((SSP1_CR1 >> 0) & 0xFFFFFFFF), ((SSP1_CR1 = (SSP1_CR1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_CR1_SOD </item>
//    <item> SFDITEM_FIELD__SSP1_CR1_MS </item>
//    <item> SFDITEM_FIELD__SSP1_CR1_SSE </item>
//    <item> SFDITEM_FIELD__SSP1_CR1_LBM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP1_DR  ---------------------------------
// SVD Line: 4287

unsigned int SSP1_DR __AT (0x49204008);



// --------------------------------  Field Item: SSP1_DR_Data  ------------------------------------
// SVD Line: 4292

//  <item> SFDITEM_FIELD__SSP1_DR_Data
//    <name> Data </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x49204008) Transmit/Receive FIFO </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP1_DR >> 0) & 0xFFFF), ((SSP1_DR = (SSP1_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: SSP1_DR  ------------------------------------
// SVD Line: 4287

//  <rtree> SFDITEM_REG__SSP1_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49204008) Data register </i>
//    <loc> ( (unsigned int)((SSP1_DR >> 0) & 0xFFFFFFFF), ((SSP1_DR = (SSP1_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_DR_Data </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP1_SR  ---------------------------------
// SVD Line: 4299

unsigned int SSP1_SR __AT (0x4920400C);



// ---------------------------------  Field Item: SSP1_SR_BSY  ------------------------------------
// SVD Line: 4304

//  <item> SFDITEM_FIELD__SSP1_SR_BSY
//    <name> BSY </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4920400C) \nPrimeCell SSP busy flag\n0 : Idle = SSP is idle\n1 : Busy = SSP is currently transmitting and/or receiving a frame or the transmit FIFO is not empty </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_SR ) </loc>
//      <o.4..4> BSY
//        <0=> 0: Idle = SSP is idle
//        <1=> 1: Busy = SSP is currently transmitting and/or receiving a frame or the transmit FIFO is not empty
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: SSP1_SR_RFF  ------------------------------------
// SVD Line: 4321

//  <item> SFDITEM_FIELD__SSP1_SR_RFF
//    <name> RFF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4920400C) \nReceive FIFO full\n0 : NF = Receive FIFO is not full\n1 : F = Receive FIFO is full </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_SR ) </loc>
//      <o.3..3> RFF
//        <0=> 0: NF = Receive FIFO is not full
//        <1=> 1: F = Receive FIFO is full
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: SSP1_SR_RNE  ------------------------------------
// SVD Line: 4338

//  <item> SFDITEM_FIELD__SSP1_SR_RNE
//    <name> RNE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4920400C) \nReceive FIFO not empty\n0 : E = Receive FIFO is empty\n1 : NE = Receive FIFO is not empty </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_SR ) </loc>
//      <o.2..2> RNE
//        <0=> 0: E = Receive FIFO is empty
//        <1=> 1: NE = Receive FIFO is not empty
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: SSP1_SR_TNF  ------------------------------------
// SVD Line: 4355

//  <item> SFDITEM_FIELD__SSP1_SR_TNF
//    <name> TNF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4920400C) \nTransmit FIFO not full\n0 : F = Receive FIFO is full\n1 : NF = Receive FIFO is not full </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_SR ) </loc>
//      <o.1..1> TNF
//        <0=> 0: F = Receive FIFO is full
//        <1=> 1: NF = Receive FIFO is not full
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: SSP1_SR_TFE  ------------------------------------
// SVD Line: 4372

//  <item> SFDITEM_FIELD__SSP1_SR_TFE
//    <name> TFE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4920400C) \nTransmit FIFO empty\n0 : NE = Receive FIFO is not empty\n1 : E = Receive FIFO is empty </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_SR ) </loc>
//      <o.0..0> TFE
//        <0=> 0: NE = Receive FIFO is not empty
//        <1=> 1: E = Receive FIFO is empty
//    </combo>
//  </item>
//  


// ---------------------------------  Register RTree: SSP1_SR  ------------------------------------
// SVD Line: 4299

//  <rtree> SFDITEM_REG__SSP1_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4920400C) Status register </i>
//    <loc> ( (unsigned int)((SSP1_SR >> 0) & 0xFFFFFFFF), ((SSP1_SR = (SSP1_SR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_SR_BSY </item>
//    <item> SFDITEM_FIELD__SSP1_SR_RFF </item>
//    <item> SFDITEM_FIELD__SSP1_SR_RNE </item>
//    <item> SFDITEM_FIELD__SSP1_SR_TNF </item>
//    <item> SFDITEM_FIELD__SSP1_SR_TFE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP1_CPSR  --------------------------------
// SVD Line: 4391

unsigned int SSP1_CPSR __AT (0x49204010);



// ------------------------------  Field Item: SSP1_CPSR_CPSDVSR  ---------------------------------
// SVD Line: 4396

//  <item> SFDITEM_FIELD__SSP1_CPSR_CPSDVSR
//    <name> CPSDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x49204010) Clock prescale divisor </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP1_CPSR >> 0) & 0xFF), ((SSP1_CPSR = (SSP1_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_CPSR  -----------------------------------
// SVD Line: 4391

//  <rtree> SFDITEM_REG__SSP1_CPSR
//    <name> CPSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49204010) Clock prescale register </i>
//    <loc> ( (unsigned int)((SSP1_CPSR >> 0) & 0xFFFFFFFF), ((SSP1_CPSR = (SSP1_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_CPSR_CPSDVSR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP1_IMSC  --------------------------------
// SVD Line: 4403

unsigned int SSP1_IMSC __AT (0x49204014);



// -------------------------------  Field Item: SSP1_IMSC_TXIM  -----------------------------------
// SVD Line: 4408

//  <item> SFDITEM_FIELD__SSP1_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49204014) \nTransmit FIFO interrupt mask\n0 : Masked = Transmit FIFO half empty or less condition interrupt is masked\n1 : NotMasked = Transmit FIFO half empty or less condition interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_IMSC ) </loc>
//      <o.3..3> TXIM
//        <0=> 0: Masked = Transmit FIFO half empty or less condition interrupt is masked
//        <1=> 1: NotMasked = Transmit FIFO half empty or less condition interrupt is not masked
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: SSP1_IMSC_RXIM  -----------------------------------
// SVD Line: 4425

//  <item> SFDITEM_FIELD__SSP1_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49204014) \nReceive FIFO interrupt mask\n0 : Masked = Receive FIFO half full or less condition interrupt is masked\n1 : NotMasked = Receive FIFO half full or less condition interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_IMSC ) </loc>
//      <o.2..2> RXIM
//        <0=> 0: Masked = Receive FIFO half full or less condition interrupt is masked
//        <1=> 1: NotMasked = Receive FIFO half full or less condition interrupt is not masked
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: SSP1_IMSC_RTIM  -----------------------------------
// SVD Line: 4442

//  <item> SFDITEM_FIELD__SSP1_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49204014) \nReceive timeout interrupt mask\n0 : Masked = Receive FIFO not empty or no read prior to timeout period interrupt is masked\n1 : NotMasked = Receive FIFO not empty or no read prior to timeout period interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_IMSC ) </loc>
//      <o.1..1> RTIM
//        <0=> 0: Masked = Receive FIFO not empty or no read prior to timeout period interrupt is masked
//        <1=> 1: NotMasked = Receive FIFO not empty or no read prior to timeout period interrupt is not masked
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: SSP1_IMSC_RORIM  ----------------------------------
// SVD Line: 4459

//  <item> SFDITEM_FIELD__SSP1_IMSC_RORIM
//    <name> RORIM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49204014) \nReceive overrun interrupt mask\n0 : Masked = Receive FIFO written to while full condition interrupt is masked\n1 : NotMasked = Receive FIFO written to while full condition interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_IMSC ) </loc>
//      <o.0..0> RORIM
//        <0=> 0: Masked = Receive FIFO written to while full condition interrupt is masked
//        <1=> 1: NotMasked = Receive FIFO written to while full condition interrupt is not masked
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_IMSC  -----------------------------------
// SVD Line: 4403

//  <rtree> SFDITEM_REG__SSP1_IMSC
//    <name> IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49204014) Interrupt mask set or clear register </i>
//    <loc> ( (unsigned int)((SSP1_IMSC >> 0) & 0xFFFFFFFF), ((SSP1_IMSC = (SSP1_IMSC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_IMSC_TXIM </item>
//    <item> SFDITEM_FIELD__SSP1_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__SSP1_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__SSP1_IMSC_RORIM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP1_RIS  --------------------------------
// SVD Line: 4478

unsigned int SSP1_RIS __AT (0x49204018);



// -------------------------------  Field Item: SSP1_RIS_TXRIS  -----------------------------------
// SVD Line: 4483

//  <item> SFDITEM_FIELD__SSP1_RIS_TXRIS
//    <name> TXRIS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49204018) transmit FIFO raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_RIS ) </loc>
//      <o.3..3> TXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_RIS_RXRIS  -----------------------------------
// SVD Line: 4488

//  <item> SFDITEM_FIELD__SSP1_RIS_RXRIS
//    <name> RXRIS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49204018) receive FIFO raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_RIS ) </loc>
//      <o.2..2> RXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_RIS_RTRIS  -----------------------------------
// SVD Line: 4493

//  <item> SFDITEM_FIELD__SSP1_RIS_RTRIS
//    <name> RTRIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49204018) receive timeout raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_RIS ) </loc>
//      <o.1..1> RTRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_RIS_RORRIS  ----------------------------------
// SVD Line: 4498

//  <item> SFDITEM_FIELD__SSP1_RIS_RORRIS
//    <name> RORRIS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49204018) receive over run raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_RIS ) </loc>
//      <o.0..0> RORRIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_RIS  ------------------------------------
// SVD Line: 4478

//  <rtree> SFDITEM_REG__SSP1_RIS
//    <name> RIS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49204018) Raw interrupt status register </i>
//    <loc> ( (unsigned int)((SSP1_RIS >> 0) & 0xFFFFFFFF), ((SSP1_RIS = (SSP1_RIS & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_RIS_TXRIS </item>
//    <item> SFDITEM_FIELD__SSP1_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__SSP1_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__SSP1_RIS_RORRIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP1_MIS  --------------------------------
// SVD Line: 4505

unsigned int SSP1_MIS __AT (0x4920401C);



// -------------------------------  Field Item: SSP1_MIS_TXMIS  -----------------------------------
// SVD Line: 4510

//  <item> SFDITEM_FIELD__SSP1_MIS_TXMIS
//    <name> TXMIS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4920401C) transmit FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_MIS ) </loc>
//      <o.3..3> TXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_MIS_RXMIS  -----------------------------------
// SVD Line: 4515

//  <item> SFDITEM_FIELD__SSP1_MIS_RXMIS
//    <name> RXMIS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4920401C) receive FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_MIS ) </loc>
//      <o.2..2> RXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_MIS_RTMIS  -----------------------------------
// SVD Line: 4520

//  <item> SFDITEM_FIELD__SSP1_MIS_RTMIS
//    <name> RTMIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4920401C) receive timeout masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_MIS ) </loc>
//      <o.1..1> RTMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_MIS_RORMIS  ----------------------------------
// SVD Line: 4525

//  <item> SFDITEM_FIELD__SSP1_MIS_RORMIS
//    <name> RORMIS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4920401C) receive over run masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_MIS ) </loc>
//      <o.0..0> RORMIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_MIS  ------------------------------------
// SVD Line: 4505

//  <rtree> SFDITEM_REG__SSP1_MIS
//    <name> MIS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4920401C) Masked interrupt status register </i>
//    <loc> ( (unsigned int)((SSP1_MIS >> 0) & 0xFFFFFFFF), ((SSP1_MIS = (SSP1_MIS & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_MIS_TXMIS </item>
//    <item> SFDITEM_FIELD__SSP1_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__SSP1_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__SSP1_MIS_RORMIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP1_ICR  --------------------------------
// SVD Line: 4532

unsigned int SSP1_ICR __AT (0x49204020);



// --------------------------------  Field Item: SSP1_ICR_RTIC  -----------------------------------
// SVD Line: 4537

//  <item> SFDITEM_FIELD__SSP1_ICR_RTIC
//    <name> RTIC </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49204020) Clears the SSPRTINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ICR ) </loc>
//      <o.1..1> RTIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_ICR_RORIC  -----------------------------------
// SVD Line: 4542

//  <item> SFDITEM_FIELD__SSP1_ICR_RORIC
//    <name> RORIC </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49204020) Clears the SSPRORINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ICR ) </loc>
//      <o.0..0> RORIC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_ICR  ------------------------------------
// SVD Line: 4532

//  <rtree> SFDITEM_REG__SSP1_ICR
//    <name> ICR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49204020) Interrupt clear register </i>
//    <loc> ( (unsigned int)((SSP1_ICR >> 0) & 0xFFFFFFFF), ((SSP1_ICR = (SSP1_ICR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_ICR_RTIC </item>
//    <item> SFDITEM_FIELD__SSP1_ICR_RORIC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP1_DMACR  -------------------------------
// SVD Line: 4549

unsigned int SSP1_DMACR __AT (0x49204024);



// ------------------------------  Field Item: SSP1_DMACR_TXDMAE  ---------------------------------
// SVD Line: 4554

//  <item> SFDITEM_FIELD__SSP1_DMACR_TXDMAE
//    <name> TXDMAE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49204024) Transmit DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_DMACR ) </loc>
//      <o.1..1> TXDMAE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP1_DMACR_RXDMAE  ---------------------------------
// SVD Line: 4559

//  <item> SFDITEM_FIELD__SSP1_DMACR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49204024) Receive DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_DMACR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SSP1_DMACR  -----------------------------------
// SVD Line: 4549

//  <rtree> SFDITEM_REG__SSP1_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49204024) DMA control register </i>
//    <loc> ( (unsigned int)((SSP1_DMACR >> 0) & 0xFFFFFFFF), ((SSP1_DMACR = (SSP1_DMACR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_DMACR_TXDMAE </item>
//    <item> SFDITEM_FIELD__SSP1_DMACR_RXDMAE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP1_TCR  --------------------------------
// SVD Line: 4566

unsigned int SSP1_TCR __AT (0x49204080);



// ------------------------------  Field Item: SSP1_TCR_TESTFIFO  ---------------------------------
// SVD Line: 4572

//  <item> SFDITEM_FIELD__SSP1_TCR_TESTFIFO
//    <name> TESTFIFO </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49204080) \nTest FIFO enable\n0 : Disabled = Normal operation\n1 : Enabled = When this bit is 1, a write to the TDR writes data into the receive FIFO, and reads from the TDR reads data out of the transmit FIFO. </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_TCR ) </loc>
//      <o.1..1> TESTFIFO
//        <0=> 0: Disabled = Normal operation
//        <1=> 1: Enabled = When this bit is 1, a write to the TDR writes data into the receive FIFO, and reads from the TDR reads data out of the transmit FIFO.
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: SSP1_TCR_ITEN  -----------------------------------
// SVD Line: 4589

//  <item> SFDITEM_FIELD__SSP1_TCR_ITEN
//    <name> ITEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49204080) \nIntegration test enable\n0 : Disabled = Normal mode\n1 : Enabled = The PrimeCell SSP is placed in integration test mode. </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_TCR ) </loc>
//      <o.0..0> ITEN
//        <0=> 0: Disabled = Normal mode
//        <1=> 1: Enabled = The PrimeCell SSP is placed in integration test mode.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_TCR  ------------------------------------
// SVD Line: 4566

//  <rtree> SFDITEM_REG__SSP1_TCR
//    <name> TCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49204080) Test control register </i>
//    <loc> ( (unsigned int)((SSP1_TCR >> 0) & 0xFFFFFFFF), ((SSP1_TCR = (SSP1_TCR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_TCR_TESTFIFO </item>
//    <item> SFDITEM_FIELD__SSP1_TCR_ITEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP1_ITIP  --------------------------------
// SVD Line: 4608

unsigned int SSP1_ITIP __AT (0x49204084);



// -----------------------------  Field Item: SSP1_ITIP_TXDMACLR  ---------------------------------
// SVD Line: 4614

//  <item> SFDITEM_FIELD__SSP1_ITIP_TXDMACLR
//    <name> TXDMACLR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x49204084) Value to be driven on the intra-chip input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ITIP ) </loc>
//      <o.4..4> TXDMACLR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP1_ITIP_RXDDMACLR  --------------------------------
// SVD Line: 4619

//  <item> SFDITEM_FIELD__SSP1_ITIP_RXDDMACLR
//    <name> RXDDMACLR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49204084) Value to be driven on the intra-chip input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ITIP ) </loc>
//      <o.3..3> RXDDMACLR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_ITIP_CLKIN  ----------------------------------
// SVD Line: 4624

//  <item> SFDITEM_FIELD__SSP1_ITIP_CLKIN
//    <name> CLKIN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49204084) Return the value of CLKIN primary input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ITIP ) </loc>
//      <o.2..2> CLKIN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_ITIP_FSSIN  ----------------------------------
// SVD Line: 4629

//  <item> SFDITEM_FIELD__SSP1_ITIP_FSSIN
//    <name> FSSIN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49204084) Return the value of FSSIN primary input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ITIP ) </loc>
//      <o.1..1> FSSIN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP1_ITIP_RXD  -----------------------------------
// SVD Line: 4634

//  <item> SFDITEM_FIELD__SSP1_ITIP_RXD
//    <name> RXD </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49204084) Return the value of RXD primary input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ITIP ) </loc>
//      <o.0..0> RXD
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_ITIP  -----------------------------------
// SVD Line: 4608

//  <rtree> SFDITEM_REG__SSP1_ITIP
//    <name> ITIP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49204084) Integration test input register </i>
//    <loc> ( (unsigned int)((SSP1_ITIP >> 0) & 0xFFFFFFFF), ((SSP1_ITIP = (SSP1_ITIP & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_ITIP_TXDMACLR </item>
//    <item> SFDITEM_FIELD__SSP1_ITIP_RXDDMACLR </item>
//    <item> SFDITEM_FIELD__SSP1_ITIP_CLKIN </item>
//    <item> SFDITEM_FIELD__SSP1_ITIP_FSSIN </item>
//    <item> SFDITEM_FIELD__SSP1_ITIP_RXD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP1_ITOP  --------------------------------
// SVD Line: 4641

unsigned int SSP1_ITOP __AT (0x49204088);



// -----------------------------  Field Item: SSP1_ITOP_TXDMASREQ  --------------------------------
// SVD Line: 4647

//  <item> SFDITEM_FIELD__SSP1_ITOP_TXDMASREQ
//    <name> TXDMASREQ </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x49204088) Value on the TXDMASREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ITOP ) </loc>
//      <o.13..13> TXDMASREQ
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP1_ITOP_TXDMABREQ  --------------------------------
// SVD Line: 4652

//  <item> SFDITEM_FIELD__SSP1_ITOP_TXDMABREQ
//    <name> TXDMABREQ </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x49204088) Value on the TXDMABREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ITOP ) </loc>
//      <o.12..12> TXDMABREQ
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP1_ITOP_RXDMASREQ  --------------------------------
// SVD Line: 4657

//  <item> SFDITEM_FIELD__SSP1_ITOP_RXDMASREQ
//    <name> RXDMASREQ </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x49204088) Value on the TXDMASREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ITOP ) </loc>
//      <o.11..11> RXDMASREQ
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP1_ITOP_RXDMABREQ  --------------------------------
// SVD Line: 4662

//  <item> SFDITEM_FIELD__SSP1_ITOP_RXDMABREQ
//    <name> RXDMABREQ </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x49204088) Value on the TXDMABREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ITOP ) </loc>
//      <o.10..10> RXDMABREQ
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_ITOP_INTR  -----------------------------------
// SVD Line: 4667

//  <item> SFDITEM_FIELD__SSP1_ITOP_INTR
//    <name> INTR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x49204088) Value on the INTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ITOP ) </loc>
//      <o.9..9> INTR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP1_ITOP_TXINTR  ----------------------------------
// SVD Line: 4672

//  <item> SFDITEM_FIELD__SSP1_ITOP_TXINTR
//    <name> TXINTR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x49204088) Value on the TXINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ITOP ) </loc>
//      <o.8..8> TXINTR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP1_ITOP_RXINTR  ----------------------------------
// SVD Line: 4677

//  <item> SFDITEM_FIELD__SSP1_ITOP_RXINTR
//    <name> RXINTR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x49204088) Value on the RXINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ITOP ) </loc>
//      <o.7..7> RXINTR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP1_ITOP_RTINTR  ----------------------------------
// SVD Line: 4682

//  <item> SFDITEM_FIELD__SSP1_ITOP_RTINTR
//    <name> RTINTR </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x49204088) Value on the RTINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ITOP ) </loc>
//      <o.6..6> RTINTR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP1_ITOP_RORINTR  ---------------------------------
// SVD Line: 4687

//  <item> SFDITEM_FIELD__SSP1_ITOP_RORINTR
//    <name> RORINTR </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x49204088) Value on the RORINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ITOP ) </loc>
//      <o.5..5> RORINTR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP1_ITOP_OE  ------------------------------------
// SVD Line: 4692

//  <item> SFDITEM_FIELD__SSP1_ITOP_OE
//    <name> OE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x49204088) Value on the OE line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ITOP ) </loc>
//      <o.4..4> OE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_ITOP_CTLOE  ----------------------------------
// SVD Line: 4697

//  <item> SFDITEM_FIELD__SSP1_ITOP_CTLOE
//    <name> CTLOE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49204088) Value on the OE line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ITOP ) </loc>
//      <o.3..3> CTLOE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP1_ITOP_CLKOUT  ----------------------------------
// SVD Line: 4702

//  <item> SFDITEM_FIELD__SSP1_ITOP_CLKOUT
//    <name> CLKOUT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49204088) Value on the CLKOUT line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ITOP ) </loc>
//      <o.2..2> CLKOUT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP1_ITOP_FSSOUT  ----------------------------------
// SVD Line: 4707

//  <item> SFDITEM_FIELD__SSP1_ITOP_FSSOUT
//    <name> FSSOUT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49204088) Value on the FSSOUT line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ITOP ) </loc>
//      <o.1..1> FSSOUT
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP1_ITOP_TXD  -----------------------------------
// SVD Line: 4712

//  <item> SFDITEM_FIELD__SSP1_ITOP_TXD
//    <name> TXD </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49204088) Value on the TXD line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ITOP ) </loc>
//      <o.0..0> TXD
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_ITOP  -----------------------------------
// SVD Line: 4641

//  <rtree> SFDITEM_REG__SSP1_ITOP
//    <name> ITOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49204088) Integration test output register </i>
//    <loc> ( (unsigned int)((SSP1_ITOP >> 0) & 0xFFFFFFFF), ((SSP1_ITOP = (SSP1_ITOP & ~(0x3FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_ITOP_TXDMASREQ </item>
//    <item> SFDITEM_FIELD__SSP1_ITOP_TXDMABREQ </item>
//    <item> SFDITEM_FIELD__SSP1_ITOP_RXDMASREQ </item>
//    <item> SFDITEM_FIELD__SSP1_ITOP_RXDMABREQ </item>
//    <item> SFDITEM_FIELD__SSP1_ITOP_INTR </item>
//    <item> SFDITEM_FIELD__SSP1_ITOP_TXINTR </item>
//    <item> SFDITEM_FIELD__SSP1_ITOP_RXINTR </item>
//    <item> SFDITEM_FIELD__SSP1_ITOP_RTINTR </item>
//    <item> SFDITEM_FIELD__SSP1_ITOP_RORINTR </item>
//    <item> SFDITEM_FIELD__SSP1_ITOP_OE </item>
//    <item> SFDITEM_FIELD__SSP1_ITOP_CTLOE </item>
//    <item> SFDITEM_FIELD__SSP1_ITOP_CLKOUT </item>
//    <item> SFDITEM_FIELD__SSP1_ITOP_FSSOUT </item>
//    <item> SFDITEM_FIELD__SSP1_ITOP_TXD </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP1_TDR  --------------------------------
// SVD Line: 4719

unsigned int SSP1_TDR __AT (0x4920408C);



// --------------------------------  Field Item: SSP1_TDR_DATA  -----------------------------------
// SVD Line: 4725

//  <item> SFDITEM_FIELD__SSP1_TDR_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4920408C) When the TESTFIFO signal is asserted, data is written into the receive FIFO and read out of the transmit FIFO </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP1_TDR >> 0) & 0xFFFF), ((SSP1_TDR = (SSP1_TDR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_TDR  ------------------------------------
// SVD Line: 4719

//  <rtree> SFDITEM_REG__SSP1_TDR
//    <name> TDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4920408C) Test data register </i>
//    <loc> ( (unsigned int)((SSP1_TDR >> 0) & 0xFFFFFFFF), ((SSP1_TDR = (SSP1_TDR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_TDR_DATA </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SSP1  -------------------------------------
// SVD Line: 4735

//  <view> SSP1
//    <name> SSP1 </name>
//    <item> SFDITEM_REG__SSP1_CR0 </item>
//    <item> SFDITEM_REG__SSP1_CR1 </item>
//    <item> SFDITEM_REG__SSP1_DR </item>
//    <item> SFDITEM_REG__SSP1_SR </item>
//    <item> SFDITEM_REG__SSP1_CPSR </item>
//    <item> SFDITEM_REG__SSP1_IMSC </item>
//    <item> SFDITEM_REG__SSP1_RIS </item>
//    <item> SFDITEM_REG__SSP1_MIS </item>
//    <item> SFDITEM_REG__SSP1_ICR </item>
//    <item> SFDITEM_REG__SSP1_DMACR </item>
//    <item> SFDITEM_REG__SSP1_TCR </item>
//    <item> SFDITEM_REG__SSP1_ITIP </item>
//    <item> SFDITEM_REG__SSP1_ITOP </item>
//    <item> SFDITEM_REG__SSP1_TDR </item>
//  </view>
//  


// -----------------------------  Register Item Address: SSP2_CR0  --------------------------------
// SVD Line: 4109

unsigned int SSP2_CR0 __AT (0x49202000);



// --------------------------------  Field Item: SSP2_CR0_SCR  ------------------------------------
// SVD Line: 4114

//  <item> SFDITEM_FIELD__SSP2_CR0_SCR
//    <name> SCR </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x49202000) Serial clock rate </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP2_CR0 >> 8) & 0xFF), ((SSP2_CR0 = (SSP2_CR0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SSP2_CR0_SPH  ------------------------------------
// SVD Line: 4119

//  <item> SFDITEM_FIELD__SSP2_CR0_SPH
//    <name> SPH </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x49202000) SSPCLKOUT phase </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_CR0 ) </loc>
//      <o.7..7> SPH
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP2_CR0_SPO  ------------------------------------
// SVD Line: 4124

//  <item> SFDITEM_FIELD__SSP2_CR0_SPO
//    <name> SPO </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x49202000) SSPCLKOUT polarity </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_CR0 ) </loc>
//      <o.6..6> SPO
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP2_CR0_FRF  ------------------------------------
// SVD Line: 4129

//  <item> SFDITEM_FIELD__SSP2_CR0_FRF
//    <name> FRF </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x49202000) \nFrame format\n0 : Motorola = Motorola SPI frame format\n1 : TI = TI synchronous serial frame format\n2 : NM = National Microwire frame format\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_CR0 ) </loc>
//      <o.5..4> FRF
//        <0=> 0: Motorola = Motorola SPI frame format
//        <1=> 1: TI = TI synchronous serial frame format
//        <2=> 2: NM = National Microwire frame format
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: SSP2_CR0_DSS  ------------------------------------
// SVD Line: 4151

//  <item> SFDITEM_FIELD__SSP2_CR0_DSS
//    <name> DSS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x49202000) \nData Size Select\n0 : Reserved - do not use\n1 : Reserved - do not use\n2 : Reserved - do not use\n3 : 4bit = 4bit\n4 : 5bit = 5bit\n5 : 6bit = 6bit\n6 : 7bit = 7bit\n7 : 8bit = 8bit\n8 : 9bit = 9bit\n9 : 10bit = 10bit\n10 : 11bit = 11bit\n11 : 12bit = 12bit\n12 : 13bit = 13bit\n13 : 14bit = 14bit\n14 : 15bit = 15bit\n15 : 16bit = 16bit </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_CR0 ) </loc>
//      <o.3..0> DSS
//        <0=> 0: 
//        <1=> 1: 
//        <2=> 2: 
//        <3=> 3: 4bit = 4bit
//        <4=> 4: 5bit = 5bit
//        <5=> 5: 6bit = 6bit
//        <6=> 6: 7bit = 7bit
//        <7=> 7: 8bit = 8bit
//        <8=> 8: 9bit = 9bit
//        <9=> 9: 10bit = 10bit
//        <10=> 10: 11bit = 11bit
//        <11=> 11: 12bit = 12bit
//        <12=> 12: 13bit = 13bit
//        <13=> 13: 14bit = 14bit
//        <14=> 14: 15bit = 15bit
//        <15=> 15: 16bit = 16bit
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_CR0  ------------------------------------
// SVD Line: 4109

//  <rtree> SFDITEM_REG__SSP2_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49202000) Control register 0 </i>
//    <loc> ( (unsigned int)((SSP2_CR0 >> 0) & 0xFFFFFFFF), ((SSP2_CR0 = (SSP2_CR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_CR0_SCR </item>
//    <item> SFDITEM_FIELD__SSP2_CR0_SPH </item>
//    <item> SFDITEM_FIELD__SSP2_CR0_SPO </item>
//    <item> SFDITEM_FIELD__SSP2_CR0_FRF </item>
//    <item> SFDITEM_FIELD__SSP2_CR0_DSS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP2_CR1  --------------------------------
// SVD Line: 4212

unsigned int SSP2_CR1 __AT (0x49202004);



// --------------------------------  Field Item: SSP2_CR1_SOD  ------------------------------------
// SVD Line: 4217

//  <item> SFDITEM_FIELD__SSP2_CR1_SOD
//    <name> SOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49202004) \nSlave-mode output disable\n0 : Enable = SSP can drive the SSPTXD output in slave mode\n1 : Disable = SSP must not drive the SSPTXD output in slave mode </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_CR1 ) </loc>
//      <o.3..3> SOD
//        <0=> 0: Enable = SSP can drive the SSPTXD output in slave mode
//        <1=> 1: Disable = SSP must not drive the SSPTXD output in slave mode
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: SSP2_CR1_MS  ------------------------------------
// SVD Line: 4234

//  <item> SFDITEM_FIELD__SSP2_CR1_MS
//    <name> MS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49202004) \nMaster or slave mode select\n0 : Master = Device configured as master, default\n1 : Slave = Device configured as slave </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_CR1 ) </loc>
//      <o.2..2> MS
//        <0=> 0: Master = Device configured as master, default
//        <1=> 1: Slave = Device configured as slave
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: SSP2_CR1_SSE  ------------------------------------
// SVD Line: 4251

//  <item> SFDITEM_FIELD__SSP2_CR1_SSE
//    <name> SSE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49202004) \nSynchronous serial port enable\n0 : Disabled = SSP operation disabled\n1 : Enabled = SSP operation enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_CR1 ) </loc>
//      <o.1..1> SSE
//        <0=> 0: Disabled = SSP operation disabled
//        <1=> 1: Enabled = SSP operation enabled
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: SSP2_CR1_LBM  ------------------------------------
// SVD Line: 4268

//  <item> SFDITEM_FIELD__SSP2_CR1_LBM
//    <name> LBM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49202004) \nLoop back mode\n0 : Normal = Normal serial port operation enabled\n1 : Loopback = Output of transmit serial shifter is connected to input of receive serial shifter internally </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_CR1 ) </loc>
//      <o.0..0> LBM
//        <0=> 0: Normal = Normal serial port operation enabled
//        <1=> 1: Loopback = Output of transmit serial shifter is connected to input of receive serial shifter internally
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_CR1  ------------------------------------
// SVD Line: 4212

//  <rtree> SFDITEM_REG__SSP2_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49202004) Control register 1 </i>
//    <loc> ( (unsigned int)((SSP2_CR1 >> 0) & 0xFFFFFFFF), ((SSP2_CR1 = (SSP2_CR1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_CR1_SOD </item>
//    <item> SFDITEM_FIELD__SSP2_CR1_MS </item>
//    <item> SFDITEM_FIELD__SSP2_CR1_SSE </item>
//    <item> SFDITEM_FIELD__SSP2_CR1_LBM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP2_DR  ---------------------------------
// SVD Line: 4287

unsigned int SSP2_DR __AT (0x49202008);



// --------------------------------  Field Item: SSP2_DR_Data  ------------------------------------
// SVD Line: 4292

//  <item> SFDITEM_FIELD__SSP2_DR_Data
//    <name> Data </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x49202008) Transmit/Receive FIFO </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP2_DR >> 0) & 0xFFFF), ((SSP2_DR = (SSP2_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: SSP2_DR  ------------------------------------
// SVD Line: 4287

//  <rtree> SFDITEM_REG__SSP2_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49202008) Data register </i>
//    <loc> ( (unsigned int)((SSP2_DR >> 0) & 0xFFFFFFFF), ((SSP2_DR = (SSP2_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_DR_Data </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP2_SR  ---------------------------------
// SVD Line: 4299

unsigned int SSP2_SR __AT (0x4920200C);



// ---------------------------------  Field Item: SSP2_SR_BSY  ------------------------------------
// SVD Line: 4304

//  <item> SFDITEM_FIELD__SSP2_SR_BSY
//    <name> BSY </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4920200C) \nPrimeCell SSP busy flag\n0 : Idle = SSP is idle\n1 : Busy = SSP is currently transmitting and/or receiving a frame or the transmit FIFO is not empty </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_SR ) </loc>
//      <o.4..4> BSY
//        <0=> 0: Idle = SSP is idle
//        <1=> 1: Busy = SSP is currently transmitting and/or receiving a frame or the transmit FIFO is not empty
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: SSP2_SR_RFF  ------------------------------------
// SVD Line: 4321

//  <item> SFDITEM_FIELD__SSP2_SR_RFF
//    <name> RFF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4920200C) \nReceive FIFO full\n0 : NF = Receive FIFO is not full\n1 : F = Receive FIFO is full </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_SR ) </loc>
//      <o.3..3> RFF
//        <0=> 0: NF = Receive FIFO is not full
//        <1=> 1: F = Receive FIFO is full
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: SSP2_SR_RNE  ------------------------------------
// SVD Line: 4338

//  <item> SFDITEM_FIELD__SSP2_SR_RNE
//    <name> RNE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4920200C) \nReceive FIFO not empty\n0 : E = Receive FIFO is empty\n1 : NE = Receive FIFO is not empty </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_SR ) </loc>
//      <o.2..2> RNE
//        <0=> 0: E = Receive FIFO is empty
//        <1=> 1: NE = Receive FIFO is not empty
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: SSP2_SR_TNF  ------------------------------------
// SVD Line: 4355

//  <item> SFDITEM_FIELD__SSP2_SR_TNF
//    <name> TNF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4920200C) \nTransmit FIFO not full\n0 : F = Receive FIFO is full\n1 : NF = Receive FIFO is not full </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_SR ) </loc>
//      <o.1..1> TNF
//        <0=> 0: F = Receive FIFO is full
//        <1=> 1: NF = Receive FIFO is not full
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: SSP2_SR_TFE  ------------------------------------
// SVD Line: 4372

//  <item> SFDITEM_FIELD__SSP2_SR_TFE
//    <name> TFE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4920200C) \nTransmit FIFO empty\n0 : NE = Receive FIFO is not empty\n1 : E = Receive FIFO is empty </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_SR ) </loc>
//      <o.0..0> TFE
//        <0=> 0: NE = Receive FIFO is not empty
//        <1=> 1: E = Receive FIFO is empty
//    </combo>
//  </item>
//  


// ---------------------------------  Register RTree: SSP2_SR  ------------------------------------
// SVD Line: 4299

//  <rtree> SFDITEM_REG__SSP2_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4920200C) Status register </i>
//    <loc> ( (unsigned int)((SSP2_SR >> 0) & 0xFFFFFFFF), ((SSP2_SR = (SSP2_SR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_SR_BSY </item>
//    <item> SFDITEM_FIELD__SSP2_SR_RFF </item>
//    <item> SFDITEM_FIELD__SSP2_SR_RNE </item>
//    <item> SFDITEM_FIELD__SSP2_SR_TNF </item>
//    <item> SFDITEM_FIELD__SSP2_SR_TFE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP2_CPSR  --------------------------------
// SVD Line: 4391

unsigned int SSP2_CPSR __AT (0x49202010);



// ------------------------------  Field Item: SSP2_CPSR_CPSDVSR  ---------------------------------
// SVD Line: 4396

//  <item> SFDITEM_FIELD__SSP2_CPSR_CPSDVSR
//    <name> CPSDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x49202010) Clock prescale divisor </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP2_CPSR >> 0) & 0xFF), ((SSP2_CPSR = (SSP2_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_CPSR  -----------------------------------
// SVD Line: 4391

//  <rtree> SFDITEM_REG__SSP2_CPSR
//    <name> CPSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49202010) Clock prescale register </i>
//    <loc> ( (unsigned int)((SSP2_CPSR >> 0) & 0xFFFFFFFF), ((SSP2_CPSR = (SSP2_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_CPSR_CPSDVSR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP2_IMSC  --------------------------------
// SVD Line: 4403

unsigned int SSP2_IMSC __AT (0x49202014);



// -------------------------------  Field Item: SSP2_IMSC_TXIM  -----------------------------------
// SVD Line: 4408

//  <item> SFDITEM_FIELD__SSP2_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49202014) \nTransmit FIFO interrupt mask\n0 : Masked = Transmit FIFO half empty or less condition interrupt is masked\n1 : NotMasked = Transmit FIFO half empty or less condition interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_IMSC ) </loc>
//      <o.3..3> TXIM
//        <0=> 0: Masked = Transmit FIFO half empty or less condition interrupt is masked
//        <1=> 1: NotMasked = Transmit FIFO half empty or less condition interrupt is not masked
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: SSP2_IMSC_RXIM  -----------------------------------
// SVD Line: 4425

//  <item> SFDITEM_FIELD__SSP2_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49202014) \nReceive FIFO interrupt mask\n0 : Masked = Receive FIFO half full or less condition interrupt is masked\n1 : NotMasked = Receive FIFO half full or less condition interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_IMSC ) </loc>
//      <o.2..2> RXIM
//        <0=> 0: Masked = Receive FIFO half full or less condition interrupt is masked
//        <1=> 1: NotMasked = Receive FIFO half full or less condition interrupt is not masked
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: SSP2_IMSC_RTIM  -----------------------------------
// SVD Line: 4442

//  <item> SFDITEM_FIELD__SSP2_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49202014) \nReceive timeout interrupt mask\n0 : Masked = Receive FIFO not empty or no read prior to timeout period interrupt is masked\n1 : NotMasked = Receive FIFO not empty or no read prior to timeout period interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_IMSC ) </loc>
//      <o.1..1> RTIM
//        <0=> 0: Masked = Receive FIFO not empty or no read prior to timeout period interrupt is masked
//        <1=> 1: NotMasked = Receive FIFO not empty or no read prior to timeout period interrupt is not masked
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: SSP2_IMSC_RORIM  ----------------------------------
// SVD Line: 4459

//  <item> SFDITEM_FIELD__SSP2_IMSC_RORIM
//    <name> RORIM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49202014) \nReceive overrun interrupt mask\n0 : Masked = Receive FIFO written to while full condition interrupt is masked\n1 : NotMasked = Receive FIFO written to while full condition interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_IMSC ) </loc>
//      <o.0..0> RORIM
//        <0=> 0: Masked = Receive FIFO written to while full condition interrupt is masked
//        <1=> 1: NotMasked = Receive FIFO written to while full condition interrupt is not masked
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_IMSC  -----------------------------------
// SVD Line: 4403

//  <rtree> SFDITEM_REG__SSP2_IMSC
//    <name> IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49202014) Interrupt mask set or clear register </i>
//    <loc> ( (unsigned int)((SSP2_IMSC >> 0) & 0xFFFFFFFF), ((SSP2_IMSC = (SSP2_IMSC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_IMSC_TXIM </item>
//    <item> SFDITEM_FIELD__SSP2_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__SSP2_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__SSP2_IMSC_RORIM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP2_RIS  --------------------------------
// SVD Line: 4478

unsigned int SSP2_RIS __AT (0x49202018);



// -------------------------------  Field Item: SSP2_RIS_TXRIS  -----------------------------------
// SVD Line: 4483

//  <item> SFDITEM_FIELD__SSP2_RIS_TXRIS
//    <name> TXRIS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49202018) transmit FIFO raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_RIS ) </loc>
//      <o.3..3> TXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_RIS_RXRIS  -----------------------------------
// SVD Line: 4488

//  <item> SFDITEM_FIELD__SSP2_RIS_RXRIS
//    <name> RXRIS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49202018) receive FIFO raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_RIS ) </loc>
//      <o.2..2> RXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_RIS_RTRIS  -----------------------------------
// SVD Line: 4493

//  <item> SFDITEM_FIELD__SSP2_RIS_RTRIS
//    <name> RTRIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49202018) receive timeout raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_RIS ) </loc>
//      <o.1..1> RTRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_RIS_RORRIS  ----------------------------------
// SVD Line: 4498

//  <item> SFDITEM_FIELD__SSP2_RIS_RORRIS
//    <name> RORRIS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49202018) receive over run raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_RIS ) </loc>
//      <o.0..0> RORRIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_RIS  ------------------------------------
// SVD Line: 4478

//  <rtree> SFDITEM_REG__SSP2_RIS
//    <name> RIS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49202018) Raw interrupt status register </i>
//    <loc> ( (unsigned int)((SSP2_RIS >> 0) & 0xFFFFFFFF), ((SSP2_RIS = (SSP2_RIS & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_RIS_TXRIS </item>
//    <item> SFDITEM_FIELD__SSP2_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__SSP2_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__SSP2_RIS_RORRIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP2_MIS  --------------------------------
// SVD Line: 4505

unsigned int SSP2_MIS __AT (0x4920201C);



// -------------------------------  Field Item: SSP2_MIS_TXMIS  -----------------------------------
// SVD Line: 4510

//  <item> SFDITEM_FIELD__SSP2_MIS_TXMIS
//    <name> TXMIS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4920201C) transmit FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_MIS ) </loc>
//      <o.3..3> TXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_MIS_RXMIS  -----------------------------------
// SVD Line: 4515

//  <item> SFDITEM_FIELD__SSP2_MIS_RXMIS
//    <name> RXMIS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4920201C) receive FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_MIS ) </loc>
//      <o.2..2> RXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_MIS_RTMIS  -----------------------------------
// SVD Line: 4520

//  <item> SFDITEM_FIELD__SSP2_MIS_RTMIS
//    <name> RTMIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4920201C) receive timeout masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_MIS ) </loc>
//      <o.1..1> RTMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_MIS_RORMIS  ----------------------------------
// SVD Line: 4525

//  <item> SFDITEM_FIELD__SSP2_MIS_RORMIS
//    <name> RORMIS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4920201C) receive over run masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_MIS ) </loc>
//      <o.0..0> RORMIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_MIS  ------------------------------------
// SVD Line: 4505

//  <rtree> SFDITEM_REG__SSP2_MIS
//    <name> MIS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4920201C) Masked interrupt status register </i>
//    <loc> ( (unsigned int)((SSP2_MIS >> 0) & 0xFFFFFFFF), ((SSP2_MIS = (SSP2_MIS & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_MIS_TXMIS </item>
//    <item> SFDITEM_FIELD__SSP2_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__SSP2_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__SSP2_MIS_RORMIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP2_ICR  --------------------------------
// SVD Line: 4532

unsigned int SSP2_ICR __AT (0x49202020);



// --------------------------------  Field Item: SSP2_ICR_RTIC  -----------------------------------
// SVD Line: 4537

//  <item> SFDITEM_FIELD__SSP2_ICR_RTIC
//    <name> RTIC </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49202020) Clears the SSPRTINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ICR ) </loc>
//      <o.1..1> RTIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_ICR_RORIC  -----------------------------------
// SVD Line: 4542

//  <item> SFDITEM_FIELD__SSP2_ICR_RORIC
//    <name> RORIC </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49202020) Clears the SSPRORINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ICR ) </loc>
//      <o.0..0> RORIC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_ICR  ------------------------------------
// SVD Line: 4532

//  <rtree> SFDITEM_REG__SSP2_ICR
//    <name> ICR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49202020) Interrupt clear register </i>
//    <loc> ( (unsigned int)((SSP2_ICR >> 0) & 0xFFFFFFFF), ((SSP2_ICR = (SSP2_ICR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_ICR_RTIC </item>
//    <item> SFDITEM_FIELD__SSP2_ICR_RORIC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP2_DMACR  -------------------------------
// SVD Line: 4549

unsigned int SSP2_DMACR __AT (0x49202024);



// ------------------------------  Field Item: SSP2_DMACR_TXDMAE  ---------------------------------
// SVD Line: 4554

//  <item> SFDITEM_FIELD__SSP2_DMACR_TXDMAE
//    <name> TXDMAE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49202024) Transmit DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_DMACR ) </loc>
//      <o.1..1> TXDMAE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP2_DMACR_RXDMAE  ---------------------------------
// SVD Line: 4559

//  <item> SFDITEM_FIELD__SSP2_DMACR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49202024) Receive DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_DMACR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SSP2_DMACR  -----------------------------------
// SVD Line: 4549

//  <rtree> SFDITEM_REG__SSP2_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49202024) DMA control register </i>
//    <loc> ( (unsigned int)((SSP2_DMACR >> 0) & 0xFFFFFFFF), ((SSP2_DMACR = (SSP2_DMACR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_DMACR_TXDMAE </item>
//    <item> SFDITEM_FIELD__SSP2_DMACR_RXDMAE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP2_TCR  --------------------------------
// SVD Line: 4566

unsigned int SSP2_TCR __AT (0x49202080);



// ------------------------------  Field Item: SSP2_TCR_TESTFIFO  ---------------------------------
// SVD Line: 4572

//  <item> SFDITEM_FIELD__SSP2_TCR_TESTFIFO
//    <name> TESTFIFO </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49202080) \nTest FIFO enable\n0 : Disabled = Normal operation\n1 : Enabled = When this bit is 1, a write to the TDR writes data into the receive FIFO, and reads from the TDR reads data out of the transmit FIFO. </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_TCR ) </loc>
//      <o.1..1> TESTFIFO
//        <0=> 0: Disabled = Normal operation
//        <1=> 1: Enabled = When this bit is 1, a write to the TDR writes data into the receive FIFO, and reads from the TDR reads data out of the transmit FIFO.
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: SSP2_TCR_ITEN  -----------------------------------
// SVD Line: 4589

//  <item> SFDITEM_FIELD__SSP2_TCR_ITEN
//    <name> ITEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49202080) \nIntegration test enable\n0 : Disabled = Normal mode\n1 : Enabled = The PrimeCell SSP is placed in integration test mode. </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_TCR ) </loc>
//      <o.0..0> ITEN
//        <0=> 0: Disabled = Normal mode
//        <1=> 1: Enabled = The PrimeCell SSP is placed in integration test mode.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_TCR  ------------------------------------
// SVD Line: 4566

//  <rtree> SFDITEM_REG__SSP2_TCR
//    <name> TCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49202080) Test control register </i>
//    <loc> ( (unsigned int)((SSP2_TCR >> 0) & 0xFFFFFFFF), ((SSP2_TCR = (SSP2_TCR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_TCR_TESTFIFO </item>
//    <item> SFDITEM_FIELD__SSP2_TCR_ITEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP2_ITIP  --------------------------------
// SVD Line: 4608

unsigned int SSP2_ITIP __AT (0x49202084);



// -----------------------------  Field Item: SSP2_ITIP_TXDMACLR  ---------------------------------
// SVD Line: 4614

//  <item> SFDITEM_FIELD__SSP2_ITIP_TXDMACLR
//    <name> TXDMACLR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x49202084) Value to be driven on the intra-chip input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ITIP ) </loc>
//      <o.4..4> TXDMACLR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP2_ITIP_RXDDMACLR  --------------------------------
// SVD Line: 4619

//  <item> SFDITEM_FIELD__SSP2_ITIP_RXDDMACLR
//    <name> RXDDMACLR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49202084) Value to be driven on the intra-chip input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ITIP ) </loc>
//      <o.3..3> RXDDMACLR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_ITIP_CLKIN  ----------------------------------
// SVD Line: 4624

//  <item> SFDITEM_FIELD__SSP2_ITIP_CLKIN
//    <name> CLKIN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49202084) Return the value of CLKIN primary input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ITIP ) </loc>
//      <o.2..2> CLKIN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_ITIP_FSSIN  ----------------------------------
// SVD Line: 4629

//  <item> SFDITEM_FIELD__SSP2_ITIP_FSSIN
//    <name> FSSIN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49202084) Return the value of FSSIN primary input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ITIP ) </loc>
//      <o.1..1> FSSIN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP2_ITIP_RXD  -----------------------------------
// SVD Line: 4634

//  <item> SFDITEM_FIELD__SSP2_ITIP_RXD
//    <name> RXD </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49202084) Return the value of RXD primary input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ITIP ) </loc>
//      <o.0..0> RXD
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_ITIP  -----------------------------------
// SVD Line: 4608

//  <rtree> SFDITEM_REG__SSP2_ITIP
//    <name> ITIP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49202084) Integration test input register </i>
//    <loc> ( (unsigned int)((SSP2_ITIP >> 0) & 0xFFFFFFFF), ((SSP2_ITIP = (SSP2_ITIP & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_ITIP_TXDMACLR </item>
//    <item> SFDITEM_FIELD__SSP2_ITIP_RXDDMACLR </item>
//    <item> SFDITEM_FIELD__SSP2_ITIP_CLKIN </item>
//    <item> SFDITEM_FIELD__SSP2_ITIP_FSSIN </item>
//    <item> SFDITEM_FIELD__SSP2_ITIP_RXD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP2_ITOP  --------------------------------
// SVD Line: 4641

unsigned int SSP2_ITOP __AT (0x49202088);



// -----------------------------  Field Item: SSP2_ITOP_TXDMASREQ  --------------------------------
// SVD Line: 4647

//  <item> SFDITEM_FIELD__SSP2_ITOP_TXDMASREQ
//    <name> TXDMASREQ </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x49202088) Value on the TXDMASREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ITOP ) </loc>
//      <o.13..13> TXDMASREQ
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP2_ITOP_TXDMABREQ  --------------------------------
// SVD Line: 4652

//  <item> SFDITEM_FIELD__SSP2_ITOP_TXDMABREQ
//    <name> TXDMABREQ </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x49202088) Value on the TXDMABREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ITOP ) </loc>
//      <o.12..12> TXDMABREQ
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP2_ITOP_RXDMASREQ  --------------------------------
// SVD Line: 4657

//  <item> SFDITEM_FIELD__SSP2_ITOP_RXDMASREQ
//    <name> RXDMASREQ </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x49202088) Value on the TXDMASREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ITOP ) </loc>
//      <o.11..11> RXDMASREQ
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP2_ITOP_RXDMABREQ  --------------------------------
// SVD Line: 4662

//  <item> SFDITEM_FIELD__SSP2_ITOP_RXDMABREQ
//    <name> RXDMABREQ </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x49202088) Value on the TXDMABREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ITOP ) </loc>
//      <o.10..10> RXDMABREQ
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_ITOP_INTR  -----------------------------------
// SVD Line: 4667

//  <item> SFDITEM_FIELD__SSP2_ITOP_INTR
//    <name> INTR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x49202088) Value on the INTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ITOP ) </loc>
//      <o.9..9> INTR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP2_ITOP_TXINTR  ----------------------------------
// SVD Line: 4672

//  <item> SFDITEM_FIELD__SSP2_ITOP_TXINTR
//    <name> TXINTR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x49202088) Value on the TXINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ITOP ) </loc>
//      <o.8..8> TXINTR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP2_ITOP_RXINTR  ----------------------------------
// SVD Line: 4677

//  <item> SFDITEM_FIELD__SSP2_ITOP_RXINTR
//    <name> RXINTR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x49202088) Value on the RXINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ITOP ) </loc>
//      <o.7..7> RXINTR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP2_ITOP_RTINTR  ----------------------------------
// SVD Line: 4682

//  <item> SFDITEM_FIELD__SSP2_ITOP_RTINTR
//    <name> RTINTR </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x49202088) Value on the RTINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ITOP ) </loc>
//      <o.6..6> RTINTR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP2_ITOP_RORINTR  ---------------------------------
// SVD Line: 4687

//  <item> SFDITEM_FIELD__SSP2_ITOP_RORINTR
//    <name> RORINTR </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x49202088) Value on the RORINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ITOP ) </loc>
//      <o.5..5> RORINTR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP2_ITOP_OE  ------------------------------------
// SVD Line: 4692

//  <item> SFDITEM_FIELD__SSP2_ITOP_OE
//    <name> OE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x49202088) Value on the OE line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ITOP ) </loc>
//      <o.4..4> OE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_ITOP_CTLOE  ----------------------------------
// SVD Line: 4697

//  <item> SFDITEM_FIELD__SSP2_ITOP_CTLOE
//    <name> CTLOE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49202088) Value on the OE line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ITOP ) </loc>
//      <o.3..3> CTLOE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP2_ITOP_CLKOUT  ----------------------------------
// SVD Line: 4702

//  <item> SFDITEM_FIELD__SSP2_ITOP_CLKOUT
//    <name> CLKOUT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49202088) Value on the CLKOUT line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ITOP ) </loc>
//      <o.2..2> CLKOUT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SSP2_ITOP_FSSOUT  ----------------------------------
// SVD Line: 4707

//  <item> SFDITEM_FIELD__SSP2_ITOP_FSSOUT
//    <name> FSSOUT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49202088) Value on the FSSOUT line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ITOP ) </loc>
//      <o.1..1> FSSOUT
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP2_ITOP_TXD  -----------------------------------
// SVD Line: 4712

//  <item> SFDITEM_FIELD__SSP2_ITOP_TXD
//    <name> TXD </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49202088) Value on the TXD line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ITOP ) </loc>
//      <o.0..0> TXD
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_ITOP  -----------------------------------
// SVD Line: 4641

//  <rtree> SFDITEM_REG__SSP2_ITOP
//    <name> ITOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49202088) Integration test output register </i>
//    <loc> ( (unsigned int)((SSP2_ITOP >> 0) & 0xFFFFFFFF), ((SSP2_ITOP = (SSP2_ITOP & ~(0x3FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_ITOP_TXDMASREQ </item>
//    <item> SFDITEM_FIELD__SSP2_ITOP_TXDMABREQ </item>
//    <item> SFDITEM_FIELD__SSP2_ITOP_RXDMASREQ </item>
//    <item> SFDITEM_FIELD__SSP2_ITOP_RXDMABREQ </item>
//    <item> SFDITEM_FIELD__SSP2_ITOP_INTR </item>
//    <item> SFDITEM_FIELD__SSP2_ITOP_TXINTR </item>
//    <item> SFDITEM_FIELD__SSP2_ITOP_RXINTR </item>
//    <item> SFDITEM_FIELD__SSP2_ITOP_RTINTR </item>
//    <item> SFDITEM_FIELD__SSP2_ITOP_RORINTR </item>
//    <item> SFDITEM_FIELD__SSP2_ITOP_OE </item>
//    <item> SFDITEM_FIELD__SSP2_ITOP_CTLOE </item>
//    <item> SFDITEM_FIELD__SSP2_ITOP_CLKOUT </item>
//    <item> SFDITEM_FIELD__SSP2_ITOP_FSSOUT </item>
//    <item> SFDITEM_FIELD__SSP2_ITOP_TXD </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP2_TDR  --------------------------------
// SVD Line: 4719

unsigned int SSP2_TDR __AT (0x4920208C);



// --------------------------------  Field Item: SSP2_TDR_DATA  -----------------------------------
// SVD Line: 4725

//  <item> SFDITEM_FIELD__SSP2_TDR_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4920208C) When the TESTFIFO signal is asserted, data is written into the receive FIFO and read out of the transmit FIFO </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP2_TDR >> 0) & 0xFFFF), ((SSP2_TDR = (SSP2_TDR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_TDR  ------------------------------------
// SVD Line: 4719

//  <rtree> SFDITEM_REG__SSP2_TDR
//    <name> TDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4920208C) Test data register </i>
//    <loc> ( (unsigned int)((SSP2_TDR >> 0) & 0xFFFFFFFF), ((SSP2_TDR = (SSP2_TDR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_TDR_DATA </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SSP2  -------------------------------------
// SVD Line: 4747

//  <view> SSP2
//    <name> SSP2 </name>
//    <item> SFDITEM_REG__SSP2_CR0 </item>
//    <item> SFDITEM_REG__SSP2_CR1 </item>
//    <item> SFDITEM_REG__SSP2_DR </item>
//    <item> SFDITEM_REG__SSP2_SR </item>
//    <item> SFDITEM_REG__SSP2_CPSR </item>
//    <item> SFDITEM_REG__SSP2_IMSC </item>
//    <item> SFDITEM_REG__SSP2_RIS </item>
//    <item> SFDITEM_REG__SSP2_MIS </item>
//    <item> SFDITEM_REG__SSP2_ICR </item>
//    <item> SFDITEM_REG__SSP2_DMACR </item>
//    <item> SFDITEM_REG__SSP2_TCR </item>
//    <item> SFDITEM_REG__SSP2_ITIP </item>
//    <item> SFDITEM_REG__SSP2_ITOP </item>
//    <item> SFDITEM_REG__SSP2_TDR </item>
//  </view>
//  


// -------------------------  Register Item Address: SSP0_Secure_CR0  -----------------------------
// SVD Line: 4109

unsigned int SSP0_Secure_CR0 __AT (0x59203000);



// -----------------------------  Field Item: SSP0_Secure_CR0_SCR  --------------------------------
// SVD Line: 4114

//  <item> SFDITEM_FIELD__SSP0_Secure_CR0_SCR
//    <name> SCR </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x59203000) Serial clock rate </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP0_Secure_CR0 >> 8) & 0xFF), ((SSP0_Secure_CR0 = (SSP0_Secure_CR0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SSP0_Secure_CR0_SPH  --------------------------------
// SVD Line: 4119

//  <item> SFDITEM_FIELD__SSP0_Secure_CR0_SPH
//    <name> SPH </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x59203000) SSPCLKOUT phase </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_CR0 ) </loc>
//      <o.7..7> SPH
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP0_Secure_CR0_SPO  --------------------------------
// SVD Line: 4124

//  <item> SFDITEM_FIELD__SSP0_Secure_CR0_SPO
//    <name> SPO </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x59203000) SSPCLKOUT polarity </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_CR0 ) </loc>
//      <o.6..6> SPO
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP0_Secure_CR0_FRF  --------------------------------
// SVD Line: 4129

//  <item> SFDITEM_FIELD__SSP0_Secure_CR0_FRF
//    <name> FRF </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x59203000) \nFrame format\n0 : Motorola = Motorola SPI frame format\n1 : TI = TI synchronous serial frame format\n2 : NM = National Microwire frame format\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_Secure_CR0 ) </loc>
//      <o.5..4> FRF
//        <0=> 0: Motorola = Motorola SPI frame format
//        <1=> 1: TI = TI synchronous serial frame format
//        <2=> 2: NM = National Microwire frame format
//        <3=> 3: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP0_Secure_CR0_DSS  --------------------------------
// SVD Line: 4151

//  <item> SFDITEM_FIELD__SSP0_Secure_CR0_DSS
//    <name> DSS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x59203000) \nData Size Select\n0 : Reserved - do not use\n1 : Reserved - do not use\n2 : Reserved - do not use\n3 : 4bit = 4bit\n4 : 5bit = 5bit\n5 : 6bit = 6bit\n6 : 7bit = 7bit\n7 : 8bit = 8bit\n8 : 9bit = 9bit\n9 : 10bit = 10bit\n10 : 11bit = 11bit\n11 : 12bit = 12bit\n12 : 13bit = 13bit\n13 : 14bit = 14bit\n14 : 15bit = 15bit\n15 : 16bit = 16bit </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_Secure_CR0 ) </loc>
//      <o.3..0> DSS
//        <0=> 0: 
//        <1=> 1: 
//        <2=> 2: 
//        <3=> 3: 4bit = 4bit
//        <4=> 4: 5bit = 5bit
//        <5=> 5: 6bit = 6bit
//        <6=> 6: 7bit = 7bit
//        <7=> 7: 8bit = 8bit
//        <8=> 8: 9bit = 9bit
//        <9=> 9: 10bit = 10bit
//        <10=> 10: 11bit = 11bit
//        <11=> 11: 12bit = 12bit
//        <12=> 12: 13bit = 13bit
//        <13=> 13: 14bit = 14bit
//        <14=> 14: 15bit = 15bit
//        <15=> 15: 16bit = 16bit
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_Secure_CR0  --------------------------------
// SVD Line: 4109

//  <rtree> SFDITEM_REG__SSP0_Secure_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59203000) Control register 0 </i>
//    <loc> ( (unsigned int)((SSP0_Secure_CR0 >> 0) & 0xFFFFFFFF), ((SSP0_Secure_CR0 = (SSP0_Secure_CR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_CR0_SCR </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_CR0_SPH </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_CR0_SPO </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_CR0_FRF </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_CR0_DSS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP0_Secure_CR1  -----------------------------
// SVD Line: 4212

unsigned int SSP0_Secure_CR1 __AT (0x59203004);



// -----------------------------  Field Item: SSP0_Secure_CR1_SOD  --------------------------------
// SVD Line: 4217

//  <item> SFDITEM_FIELD__SSP0_Secure_CR1_SOD
//    <name> SOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59203004) \nSlave-mode output disable\n0 : Enable = SSP can drive the SSPTXD output in slave mode\n1 : Disable = SSP must not drive the SSPTXD output in slave mode </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_Secure_CR1 ) </loc>
//      <o.3..3> SOD
//        <0=> 0: Enable = SSP can drive the SSPTXD output in slave mode
//        <1=> 1: Disable = SSP must not drive the SSPTXD output in slave mode
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP0_Secure_CR1_MS  ---------------------------------
// SVD Line: 4234

//  <item> SFDITEM_FIELD__SSP0_Secure_CR1_MS
//    <name> MS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59203004) \nMaster or slave mode select\n0 : Master = Device configured as master, default\n1 : Slave = Device configured as slave </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_Secure_CR1 ) </loc>
//      <o.2..2> MS
//        <0=> 0: Master = Device configured as master, default
//        <1=> 1: Slave = Device configured as slave
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP0_Secure_CR1_SSE  --------------------------------
// SVD Line: 4251

//  <item> SFDITEM_FIELD__SSP0_Secure_CR1_SSE
//    <name> SSE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59203004) \nSynchronous serial port enable\n0 : Disabled = SSP operation disabled\n1 : Enabled = SSP operation enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_Secure_CR1 ) </loc>
//      <o.1..1> SSE
//        <0=> 0: Disabled = SSP operation disabled
//        <1=> 1: Enabled = SSP operation enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP0_Secure_CR1_LBM  --------------------------------
// SVD Line: 4268

//  <item> SFDITEM_FIELD__SSP0_Secure_CR1_LBM
//    <name> LBM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59203004) \nLoop back mode\n0 : Normal = Normal serial port operation enabled\n1 : Loopback = Output of transmit serial shifter is connected to input of receive serial shifter internally </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_Secure_CR1 ) </loc>
//      <o.0..0> LBM
//        <0=> 0: Normal = Normal serial port operation enabled
//        <1=> 1: Loopback = Output of transmit serial shifter is connected to input of receive serial shifter internally
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_Secure_CR1  --------------------------------
// SVD Line: 4212

//  <rtree> SFDITEM_REG__SSP0_Secure_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59203004) Control register 1 </i>
//    <loc> ( (unsigned int)((SSP0_Secure_CR1 >> 0) & 0xFFFFFFFF), ((SSP0_Secure_CR1 = (SSP0_Secure_CR1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_CR1_SOD </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_CR1_MS </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_CR1_SSE </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_CR1_LBM </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP0_Secure_DR  -----------------------------
// SVD Line: 4287

unsigned int SSP0_Secure_DR __AT (0x59203008);



// -----------------------------  Field Item: SSP0_Secure_DR_Data  --------------------------------
// SVD Line: 4292

//  <item> SFDITEM_FIELD__SSP0_Secure_DR_Data
//    <name> Data </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x59203008) Transmit/Receive FIFO </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP0_Secure_DR >> 0) & 0xFFFF), ((SSP0_Secure_DR = (SSP0_Secure_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_Secure_DR  ---------------------------------
// SVD Line: 4287

//  <rtree> SFDITEM_REG__SSP0_Secure_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59203008) Data register </i>
//    <loc> ( (unsigned int)((SSP0_Secure_DR >> 0) & 0xFFFFFFFF), ((SSP0_Secure_DR = (SSP0_Secure_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_DR_Data </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP0_Secure_SR  -----------------------------
// SVD Line: 4299

unsigned int SSP0_Secure_SR __AT (0x5920300C);



// -----------------------------  Field Item: SSP0_Secure_SR_BSY  ---------------------------------
// SVD Line: 4304

//  <item> SFDITEM_FIELD__SSP0_Secure_SR_BSY
//    <name> BSY </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x5920300C) \nPrimeCell SSP busy flag\n0 : Idle = SSP is idle\n1 : Busy = SSP is currently transmitting and/or receiving a frame or the transmit FIFO is not empty </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_Secure_SR ) </loc>
//      <o.4..4> BSY
//        <0=> 0: Idle = SSP is idle
//        <1=> 1: Busy = SSP is currently transmitting and/or receiving a frame or the transmit FIFO is not empty
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP0_Secure_SR_RFF  ---------------------------------
// SVD Line: 4321

//  <item> SFDITEM_FIELD__SSP0_Secure_SR_RFF
//    <name> RFF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x5920300C) \nReceive FIFO full\n0 : NF = Receive FIFO is not full\n1 : F = Receive FIFO is full </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_Secure_SR ) </loc>
//      <o.3..3> RFF
//        <0=> 0: NF = Receive FIFO is not full
//        <1=> 1: F = Receive FIFO is full
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP0_Secure_SR_RNE  ---------------------------------
// SVD Line: 4338

//  <item> SFDITEM_FIELD__SSP0_Secure_SR_RNE
//    <name> RNE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x5920300C) \nReceive FIFO not empty\n0 : E = Receive FIFO is empty\n1 : NE = Receive FIFO is not empty </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_Secure_SR ) </loc>
//      <o.2..2> RNE
//        <0=> 0: E = Receive FIFO is empty
//        <1=> 1: NE = Receive FIFO is not empty
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP0_Secure_SR_TNF  ---------------------------------
// SVD Line: 4355

//  <item> SFDITEM_FIELD__SSP0_Secure_SR_TNF
//    <name> TNF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5920300C) \nTransmit FIFO not full\n0 : F = Receive FIFO is full\n1 : NF = Receive FIFO is not full </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_Secure_SR ) </loc>
//      <o.1..1> TNF
//        <0=> 0: F = Receive FIFO is full
//        <1=> 1: NF = Receive FIFO is not full
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP0_Secure_SR_TFE  ---------------------------------
// SVD Line: 4372

//  <item> SFDITEM_FIELD__SSP0_Secure_SR_TFE
//    <name> TFE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5920300C) \nTransmit FIFO empty\n0 : NE = Receive FIFO is not empty\n1 : E = Receive FIFO is empty </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_Secure_SR ) </loc>
//      <o.0..0> TFE
//        <0=> 0: NE = Receive FIFO is not empty
//        <1=> 1: E = Receive FIFO is empty
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_Secure_SR  ---------------------------------
// SVD Line: 4299

//  <rtree> SFDITEM_REG__SSP0_Secure_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5920300C) Status register </i>
//    <loc> ( (unsigned int)((SSP0_Secure_SR >> 0) & 0xFFFFFFFF), ((SSP0_Secure_SR = (SSP0_Secure_SR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_SR_BSY </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_SR_RFF </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_SR_RNE </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_SR_TNF </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_SR_TFE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP0_Secure_CPSR  ----------------------------
// SVD Line: 4391

unsigned int SSP0_Secure_CPSR __AT (0x59203010);



// --------------------------  Field Item: SSP0_Secure_CPSR_CPSDVSR  ------------------------------
// SVD Line: 4396

//  <item> SFDITEM_FIELD__SSP0_Secure_CPSR_CPSDVSR
//    <name> CPSDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x59203010) Clock prescale divisor </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP0_Secure_CPSR >> 0) & 0xFF), ((SSP0_Secure_CPSR = (SSP0_Secure_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: SSP0_Secure_CPSR  --------------------------------
// SVD Line: 4391

//  <rtree> SFDITEM_REG__SSP0_Secure_CPSR
//    <name> CPSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59203010) Clock prescale register </i>
//    <loc> ( (unsigned int)((SSP0_Secure_CPSR >> 0) & 0xFFFFFFFF), ((SSP0_Secure_CPSR = (SSP0_Secure_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_CPSR_CPSDVSR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP0_Secure_IMSC  ----------------------------
// SVD Line: 4403

unsigned int SSP0_Secure_IMSC __AT (0x59203014);



// ----------------------------  Field Item: SSP0_Secure_IMSC_TXIM  -------------------------------
// SVD Line: 4408

//  <item> SFDITEM_FIELD__SSP0_Secure_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59203014) \nTransmit FIFO interrupt mask\n0 : Masked = Transmit FIFO half empty or less condition interrupt is masked\n1 : NotMasked = Transmit FIFO half empty or less condition interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_Secure_IMSC ) </loc>
//      <o.3..3> TXIM
//        <0=> 0: Masked = Transmit FIFO half empty or less condition interrupt is masked
//        <1=> 1: NotMasked = Transmit FIFO half empty or less condition interrupt is not masked
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SSP0_Secure_IMSC_RXIM  -------------------------------
// SVD Line: 4425

//  <item> SFDITEM_FIELD__SSP0_Secure_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59203014) \nReceive FIFO interrupt mask\n0 : Masked = Receive FIFO half full or less condition interrupt is masked\n1 : NotMasked = Receive FIFO half full or less condition interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_Secure_IMSC ) </loc>
//      <o.2..2> RXIM
//        <0=> 0: Masked = Receive FIFO half full or less condition interrupt is masked
//        <1=> 1: NotMasked = Receive FIFO half full or less condition interrupt is not masked
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SSP0_Secure_IMSC_RTIM  -------------------------------
// SVD Line: 4442

//  <item> SFDITEM_FIELD__SSP0_Secure_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59203014) \nReceive timeout interrupt mask\n0 : Masked = Receive FIFO not empty or no read prior to timeout period interrupt is masked\n1 : NotMasked = Receive FIFO not empty or no read prior to timeout period interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_Secure_IMSC ) </loc>
//      <o.1..1> RTIM
//        <0=> 0: Masked = Receive FIFO not empty or no read prior to timeout period interrupt is masked
//        <1=> 1: NotMasked = Receive FIFO not empty or no read prior to timeout period interrupt is not masked
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: SSP0_Secure_IMSC_RORIM  -------------------------------
// SVD Line: 4459

//  <item> SFDITEM_FIELD__SSP0_Secure_IMSC_RORIM
//    <name> RORIM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59203014) \nReceive overrun interrupt mask\n0 : Masked = Receive FIFO written to while full condition interrupt is masked\n1 : NotMasked = Receive FIFO written to while full condition interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_Secure_IMSC ) </loc>
//      <o.0..0> RORIM
//        <0=> 0: Masked = Receive FIFO written to while full condition interrupt is masked
//        <1=> 1: NotMasked = Receive FIFO written to while full condition interrupt is not masked
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: SSP0_Secure_IMSC  --------------------------------
// SVD Line: 4403

//  <rtree> SFDITEM_REG__SSP0_Secure_IMSC
//    <name> IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59203014) Interrupt mask set or clear register </i>
//    <loc> ( (unsigned int)((SSP0_Secure_IMSC >> 0) & 0xFFFFFFFF), ((SSP0_Secure_IMSC = (SSP0_Secure_IMSC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_IMSC_TXIM </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_IMSC_RORIM </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP0_Secure_RIS  -----------------------------
// SVD Line: 4478

unsigned int SSP0_Secure_RIS __AT (0x59203018);



// ----------------------------  Field Item: SSP0_Secure_RIS_TXRIS  -------------------------------
// SVD Line: 4483

//  <item> SFDITEM_FIELD__SSP0_Secure_RIS_TXRIS
//    <name> TXRIS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59203018) transmit FIFO raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_RIS ) </loc>
//      <o.3..3> TXRIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP0_Secure_RIS_RXRIS  -------------------------------
// SVD Line: 4488

//  <item> SFDITEM_FIELD__SSP0_Secure_RIS_RXRIS
//    <name> RXRIS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59203018) receive FIFO raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_RIS ) </loc>
//      <o.2..2> RXRIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP0_Secure_RIS_RTRIS  -------------------------------
// SVD Line: 4493

//  <item> SFDITEM_FIELD__SSP0_Secure_RIS_RTRIS
//    <name> RTRIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59203018) receive timeout raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_RIS ) </loc>
//      <o.1..1> RTRIS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP0_Secure_RIS_RORRIS  -------------------------------
// SVD Line: 4498

//  <item> SFDITEM_FIELD__SSP0_Secure_RIS_RORRIS
//    <name> RORRIS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59203018) receive over run raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_RIS ) </loc>
//      <o.0..0> RORRIS
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_Secure_RIS  --------------------------------
// SVD Line: 4478

//  <rtree> SFDITEM_REG__SSP0_Secure_RIS
//    <name> RIS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59203018) Raw interrupt status register </i>
//    <loc> ( (unsigned int)((SSP0_Secure_RIS >> 0) & 0xFFFFFFFF), ((SSP0_Secure_RIS = (SSP0_Secure_RIS & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_RIS_TXRIS </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_RIS_RORRIS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP0_Secure_MIS  -----------------------------
// SVD Line: 4505

unsigned int SSP0_Secure_MIS __AT (0x5920301C);



// ----------------------------  Field Item: SSP0_Secure_MIS_TXMIS  -------------------------------
// SVD Line: 4510

//  <item> SFDITEM_FIELD__SSP0_Secure_MIS_TXMIS
//    <name> TXMIS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x5920301C) transmit FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_MIS ) </loc>
//      <o.3..3> TXMIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP0_Secure_MIS_RXMIS  -------------------------------
// SVD Line: 4515

//  <item> SFDITEM_FIELD__SSP0_Secure_MIS_RXMIS
//    <name> RXMIS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x5920301C) receive FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_MIS ) </loc>
//      <o.2..2> RXMIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP0_Secure_MIS_RTMIS  -------------------------------
// SVD Line: 4520

//  <item> SFDITEM_FIELD__SSP0_Secure_MIS_RTMIS
//    <name> RTMIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5920301C) receive timeout masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_MIS ) </loc>
//      <o.1..1> RTMIS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP0_Secure_MIS_RORMIS  -------------------------------
// SVD Line: 4525

//  <item> SFDITEM_FIELD__SSP0_Secure_MIS_RORMIS
//    <name> RORMIS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5920301C) receive over run masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_MIS ) </loc>
//      <o.0..0> RORMIS
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_Secure_MIS  --------------------------------
// SVD Line: 4505

//  <rtree> SFDITEM_REG__SSP0_Secure_MIS
//    <name> MIS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5920301C) Masked interrupt status register </i>
//    <loc> ( (unsigned int)((SSP0_Secure_MIS >> 0) & 0xFFFFFFFF), ((SSP0_Secure_MIS = (SSP0_Secure_MIS & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_MIS_TXMIS </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_MIS_RORMIS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP0_Secure_ICR  -----------------------------
// SVD Line: 4532

unsigned int SSP0_Secure_ICR __AT (0x59203020);



// ----------------------------  Field Item: SSP0_Secure_ICR_RTIC  --------------------------------
// SVD Line: 4537

//  <item> SFDITEM_FIELD__SSP0_Secure_ICR_RTIC
//    <name> RTIC </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59203020) Clears the SSPRTINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_ICR ) </loc>
//      <o.1..1> RTIC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP0_Secure_ICR_RORIC  -------------------------------
// SVD Line: 4542

//  <item> SFDITEM_FIELD__SSP0_Secure_ICR_RORIC
//    <name> RORIC </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59203020) Clears the SSPRORINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_ICR ) </loc>
//      <o.0..0> RORIC
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_Secure_ICR  --------------------------------
// SVD Line: 4532

//  <rtree> SFDITEM_REG__SSP0_Secure_ICR
//    <name> ICR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59203020) Interrupt clear register </i>
//    <loc> ( (unsigned int)((SSP0_Secure_ICR >> 0) & 0xFFFFFFFF), ((SSP0_Secure_ICR = (SSP0_Secure_ICR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_ICR_RTIC </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_ICR_RORIC </item>
//  </rtree>
//  


// ------------------------  Register Item Address: SSP0_Secure_DMACR  ----------------------------
// SVD Line: 4549

unsigned int SSP0_Secure_DMACR __AT (0x59203024);



// --------------------------  Field Item: SSP0_Secure_DMACR_TXDMAE  ------------------------------
// SVD Line: 4554

//  <item> SFDITEM_FIELD__SSP0_Secure_DMACR_TXDMAE
//    <name> TXDMAE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59203024) Transmit DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_DMACR ) </loc>
//      <o.1..1> TXDMAE
//    </check>
//  </item>
//  


// --------------------------  Field Item: SSP0_Secure_DMACR_RXDMAE  ------------------------------
// SVD Line: 4559

//  <item> SFDITEM_FIELD__SSP0_Secure_DMACR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59203024) Receive DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_DMACR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: SSP0_Secure_DMACR  -------------------------------
// SVD Line: 4549

//  <rtree> SFDITEM_REG__SSP0_Secure_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59203024) DMA control register </i>
//    <loc> ( (unsigned int)((SSP0_Secure_DMACR >> 0) & 0xFFFFFFFF), ((SSP0_Secure_DMACR = (SSP0_Secure_DMACR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_DMACR_TXDMAE </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_DMACR_RXDMAE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP0_Secure_TCR  -----------------------------
// SVD Line: 4566

unsigned int SSP0_Secure_TCR __AT (0x59203080);



// --------------------------  Field Item: SSP0_Secure_TCR_TESTFIFO  ------------------------------
// SVD Line: 4572

//  <item> SFDITEM_FIELD__SSP0_Secure_TCR_TESTFIFO
//    <name> TESTFIFO </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59203080) \nTest FIFO enable\n0 : Disabled = Normal operation\n1 : Enabled = When this bit is 1, a write to the TDR writes data into the receive FIFO, and reads from the TDR reads data out of the transmit FIFO. </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_Secure_TCR ) </loc>
//      <o.1..1> TESTFIFO
//        <0=> 0: Disabled = Normal operation
//        <1=> 1: Enabled = When this bit is 1, a write to the TDR writes data into the receive FIFO, and reads from the TDR reads data out of the transmit FIFO.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SSP0_Secure_TCR_ITEN  --------------------------------
// SVD Line: 4589

//  <item> SFDITEM_FIELD__SSP0_Secure_TCR_ITEN
//    <name> ITEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59203080) \nIntegration test enable\n0 : Disabled = Normal mode\n1 : Enabled = The PrimeCell SSP is placed in integration test mode. </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP0_Secure_TCR ) </loc>
//      <o.0..0> ITEN
//        <0=> 0: Disabled = Normal mode
//        <1=> 1: Enabled = The PrimeCell SSP is placed in integration test mode.
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_Secure_TCR  --------------------------------
// SVD Line: 4566

//  <rtree> SFDITEM_REG__SSP0_Secure_TCR
//    <name> TCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59203080) Test control register </i>
//    <loc> ( (unsigned int)((SSP0_Secure_TCR >> 0) & 0xFFFFFFFF), ((SSP0_Secure_TCR = (SSP0_Secure_TCR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_TCR_TESTFIFO </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_TCR_ITEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP0_Secure_ITIP  ----------------------------
// SVD Line: 4608

unsigned int SSP0_Secure_ITIP __AT (0x59203084);



// --------------------------  Field Item: SSP0_Secure_ITIP_TXDMACLR  -----------------------------
// SVD Line: 4614

//  <item> SFDITEM_FIELD__SSP0_Secure_ITIP_TXDMACLR
//    <name> TXDMACLR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x59203084) Value to be driven on the intra-chip input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_ITIP ) </loc>
//      <o.4..4> TXDMACLR
//    </check>
//  </item>
//  


// -------------------------  Field Item: SSP0_Secure_ITIP_RXDDMACLR  -----------------------------
// SVD Line: 4619

//  <item> SFDITEM_FIELD__SSP0_Secure_ITIP_RXDDMACLR
//    <name> RXDDMACLR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59203084) Value to be driven on the intra-chip input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_ITIP ) </loc>
//      <o.3..3> RXDDMACLR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP0_Secure_ITIP_CLKIN  -------------------------------
// SVD Line: 4624

//  <item> SFDITEM_FIELD__SSP0_Secure_ITIP_CLKIN
//    <name> CLKIN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59203084) Return the value of CLKIN primary input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_ITIP ) </loc>
//      <o.2..2> CLKIN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP0_Secure_ITIP_FSSIN  -------------------------------
// SVD Line: 4629

//  <item> SFDITEM_FIELD__SSP0_Secure_ITIP_FSSIN
//    <name> FSSIN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59203084) Return the value of FSSIN primary input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_ITIP ) </loc>
//      <o.1..1> FSSIN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP0_Secure_ITIP_RXD  --------------------------------
// SVD Line: 4634

//  <item> SFDITEM_FIELD__SSP0_Secure_ITIP_RXD
//    <name> RXD </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59203084) Return the value of RXD primary input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_ITIP ) </loc>
//      <o.0..0> RXD
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: SSP0_Secure_ITIP  --------------------------------
// SVD Line: 4608

//  <rtree> SFDITEM_REG__SSP0_Secure_ITIP
//    <name> ITIP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59203084) Integration test input register </i>
//    <loc> ( (unsigned int)((SSP0_Secure_ITIP >> 0) & 0xFFFFFFFF), ((SSP0_Secure_ITIP = (SSP0_Secure_ITIP & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_ITIP_TXDMACLR </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_ITIP_RXDDMACLR </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_ITIP_CLKIN </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_ITIP_FSSIN </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_ITIP_RXD </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP0_Secure_ITOP  ----------------------------
// SVD Line: 4641

unsigned int SSP0_Secure_ITOP __AT (0x59203088);



// -------------------------  Field Item: SSP0_Secure_ITOP_TXDMASREQ  -----------------------------
// SVD Line: 4647

//  <item> SFDITEM_FIELD__SSP0_Secure_ITOP_TXDMASREQ
//    <name> TXDMASREQ </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x59203088) Value on the TXDMASREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_ITOP ) </loc>
//      <o.13..13> TXDMASREQ
//    </check>
//  </item>
//  


// -------------------------  Field Item: SSP0_Secure_ITOP_TXDMABREQ  -----------------------------
// SVD Line: 4652

//  <item> SFDITEM_FIELD__SSP0_Secure_ITOP_TXDMABREQ
//    <name> TXDMABREQ </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x59203088) Value on the TXDMABREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_ITOP ) </loc>
//      <o.12..12> TXDMABREQ
//    </check>
//  </item>
//  


// -------------------------  Field Item: SSP0_Secure_ITOP_RXDMASREQ  -----------------------------
// SVD Line: 4657

//  <item> SFDITEM_FIELD__SSP0_Secure_ITOP_RXDMASREQ
//    <name> RXDMASREQ </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x59203088) Value on the TXDMASREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_ITOP ) </loc>
//      <o.11..11> RXDMASREQ
//    </check>
//  </item>
//  


// -------------------------  Field Item: SSP0_Secure_ITOP_RXDMABREQ  -----------------------------
// SVD Line: 4662

//  <item> SFDITEM_FIELD__SSP0_Secure_ITOP_RXDMABREQ
//    <name> RXDMABREQ </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x59203088) Value on the TXDMABREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_ITOP ) </loc>
//      <o.10..10> RXDMABREQ
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP0_Secure_ITOP_INTR  -------------------------------
// SVD Line: 4667

//  <item> SFDITEM_FIELD__SSP0_Secure_ITOP_INTR
//    <name> INTR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x59203088) Value on the INTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_ITOP ) </loc>
//      <o.9..9> INTR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP0_Secure_ITOP_TXINTR  ------------------------------
// SVD Line: 4672

//  <item> SFDITEM_FIELD__SSP0_Secure_ITOP_TXINTR
//    <name> TXINTR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x59203088) Value on the TXINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_ITOP ) </loc>
//      <o.8..8> TXINTR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP0_Secure_ITOP_RXINTR  ------------------------------
// SVD Line: 4677

//  <item> SFDITEM_FIELD__SSP0_Secure_ITOP_RXINTR
//    <name> RXINTR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x59203088) Value on the RXINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_ITOP ) </loc>
//      <o.7..7> RXINTR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP0_Secure_ITOP_RTINTR  ------------------------------
// SVD Line: 4682

//  <item> SFDITEM_FIELD__SSP0_Secure_ITOP_RTINTR
//    <name> RTINTR </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x59203088) Value on the RTINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_ITOP ) </loc>
//      <o.6..6> RTINTR
//    </check>
//  </item>
//  


// --------------------------  Field Item: SSP0_Secure_ITOP_RORINTR  ------------------------------
// SVD Line: 4687

//  <item> SFDITEM_FIELD__SSP0_Secure_ITOP_RORINTR
//    <name> RORINTR </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x59203088) Value on the RORINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_ITOP ) </loc>
//      <o.5..5> RORINTR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP0_Secure_ITOP_OE  --------------------------------
// SVD Line: 4692

//  <item> SFDITEM_FIELD__SSP0_Secure_ITOP_OE
//    <name> OE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x59203088) Value on the OE line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_ITOP ) </loc>
//      <o.4..4> OE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP0_Secure_ITOP_CTLOE  -------------------------------
// SVD Line: 4697

//  <item> SFDITEM_FIELD__SSP0_Secure_ITOP_CTLOE
//    <name> CTLOE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59203088) Value on the OE line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_ITOP ) </loc>
//      <o.3..3> CTLOE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP0_Secure_ITOP_CLKOUT  ------------------------------
// SVD Line: 4702

//  <item> SFDITEM_FIELD__SSP0_Secure_ITOP_CLKOUT
//    <name> CLKOUT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59203088) Value on the CLKOUT line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_ITOP ) </loc>
//      <o.2..2> CLKOUT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP0_Secure_ITOP_FSSOUT  ------------------------------
// SVD Line: 4707

//  <item> SFDITEM_FIELD__SSP0_Secure_ITOP_FSSOUT
//    <name> FSSOUT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59203088) Value on the FSSOUT line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_ITOP ) </loc>
//      <o.1..1> FSSOUT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP0_Secure_ITOP_TXD  --------------------------------
// SVD Line: 4712

//  <item> SFDITEM_FIELD__SSP0_Secure_ITOP_TXD
//    <name> TXD </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59203088) Value on the TXD line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_Secure_ITOP ) </loc>
//      <o.0..0> TXD
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: SSP0_Secure_ITOP  --------------------------------
// SVD Line: 4641

//  <rtree> SFDITEM_REG__SSP0_Secure_ITOP
//    <name> ITOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59203088) Integration test output register </i>
//    <loc> ( (unsigned int)((SSP0_Secure_ITOP >> 0) & 0xFFFFFFFF), ((SSP0_Secure_ITOP = (SSP0_Secure_ITOP & ~(0x3FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_ITOP_TXDMASREQ </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_ITOP_TXDMABREQ </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_ITOP_RXDMASREQ </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_ITOP_RXDMABREQ </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_ITOP_INTR </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_ITOP_TXINTR </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_ITOP_RXINTR </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_ITOP_RTINTR </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_ITOP_RORINTR </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_ITOP_OE </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_ITOP_CTLOE </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_ITOP_CLKOUT </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_ITOP_FSSOUT </item>
//    <item> SFDITEM_FIELD__SSP0_Secure_ITOP_TXD </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP0_Secure_TDR  -----------------------------
// SVD Line: 4719

unsigned int SSP0_Secure_TDR __AT (0x5920308C);



// ----------------------------  Field Item: SSP0_Secure_TDR_DATA  --------------------------------
// SVD Line: 4725

//  <item> SFDITEM_FIELD__SSP0_Secure_TDR_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x5920308C) When the TESTFIFO signal is asserted, data is written into the receive FIFO and read out of the transmit FIFO </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP0_Secure_TDR >> 0) & 0xFFFF), ((SSP0_Secure_TDR = (SSP0_Secure_TDR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_Secure_TDR  --------------------------------
// SVD Line: 4719

//  <rtree> SFDITEM_REG__SSP0_Secure_TDR
//    <name> TDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5920308C) Test data register </i>
//    <loc> ( (unsigned int)((SSP0_Secure_TDR >> 0) & 0xFFFFFFFF), ((SSP0_Secure_TDR = (SSP0_Secure_TDR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_Secure_TDR_DATA </item>
//  </rtree>
//  


// ------------------------------  Peripheral View: SSP0_Secure  ----------------------------------
// SVD Line: 4759

//  <view> SSP0_Secure
//    <name> SSP0_Secure </name>
//    <item> SFDITEM_REG__SSP0_Secure_CR0 </item>
//    <item> SFDITEM_REG__SSP0_Secure_CR1 </item>
//    <item> SFDITEM_REG__SSP0_Secure_DR </item>
//    <item> SFDITEM_REG__SSP0_Secure_SR </item>
//    <item> SFDITEM_REG__SSP0_Secure_CPSR </item>
//    <item> SFDITEM_REG__SSP0_Secure_IMSC </item>
//    <item> SFDITEM_REG__SSP0_Secure_RIS </item>
//    <item> SFDITEM_REG__SSP0_Secure_MIS </item>
//    <item> SFDITEM_REG__SSP0_Secure_ICR </item>
//    <item> SFDITEM_REG__SSP0_Secure_DMACR </item>
//    <item> SFDITEM_REG__SSP0_Secure_TCR </item>
//    <item> SFDITEM_REG__SSP0_Secure_ITIP </item>
//    <item> SFDITEM_REG__SSP0_Secure_ITOP </item>
//    <item> SFDITEM_REG__SSP0_Secure_TDR </item>
//  </view>
//  


// -------------------------  Register Item Address: SSP1_Secure_CR0  -----------------------------
// SVD Line: 4109

unsigned int SSP1_Secure_CR0 __AT (0x59204000);



// -----------------------------  Field Item: SSP1_Secure_CR0_SCR  --------------------------------
// SVD Line: 4114

//  <item> SFDITEM_FIELD__SSP1_Secure_CR0_SCR
//    <name> SCR </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x59204000) Serial clock rate </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP1_Secure_CR0 >> 8) & 0xFF), ((SSP1_Secure_CR0 = (SSP1_Secure_CR0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SSP1_Secure_CR0_SPH  --------------------------------
// SVD Line: 4119

//  <item> SFDITEM_FIELD__SSP1_Secure_CR0_SPH
//    <name> SPH </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x59204000) SSPCLKOUT phase </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_CR0 ) </loc>
//      <o.7..7> SPH
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP1_Secure_CR0_SPO  --------------------------------
// SVD Line: 4124

//  <item> SFDITEM_FIELD__SSP1_Secure_CR0_SPO
//    <name> SPO </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x59204000) SSPCLKOUT polarity </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_CR0 ) </loc>
//      <o.6..6> SPO
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP1_Secure_CR0_FRF  --------------------------------
// SVD Line: 4129

//  <item> SFDITEM_FIELD__SSP1_Secure_CR0_FRF
//    <name> FRF </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x59204000) \nFrame format\n0 : Motorola = Motorola SPI frame format\n1 : TI = TI synchronous serial frame format\n2 : NM = National Microwire frame format\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_Secure_CR0 ) </loc>
//      <o.5..4> FRF
//        <0=> 0: Motorola = Motorola SPI frame format
//        <1=> 1: TI = TI synchronous serial frame format
//        <2=> 2: NM = National Microwire frame format
//        <3=> 3: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP1_Secure_CR0_DSS  --------------------------------
// SVD Line: 4151

//  <item> SFDITEM_FIELD__SSP1_Secure_CR0_DSS
//    <name> DSS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x59204000) \nData Size Select\n0 : Reserved - do not use\n1 : Reserved - do not use\n2 : Reserved - do not use\n3 : 4bit = 4bit\n4 : 5bit = 5bit\n5 : 6bit = 6bit\n6 : 7bit = 7bit\n7 : 8bit = 8bit\n8 : 9bit = 9bit\n9 : 10bit = 10bit\n10 : 11bit = 11bit\n11 : 12bit = 12bit\n12 : 13bit = 13bit\n13 : 14bit = 14bit\n14 : 15bit = 15bit\n15 : 16bit = 16bit </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_Secure_CR0 ) </loc>
//      <o.3..0> DSS
//        <0=> 0: 
//        <1=> 1: 
//        <2=> 2: 
//        <3=> 3: 4bit = 4bit
//        <4=> 4: 5bit = 5bit
//        <5=> 5: 6bit = 6bit
//        <6=> 6: 7bit = 7bit
//        <7=> 7: 8bit = 8bit
//        <8=> 8: 9bit = 9bit
//        <9=> 9: 10bit = 10bit
//        <10=> 10: 11bit = 11bit
//        <11=> 11: 12bit = 12bit
//        <12=> 12: 13bit = 13bit
//        <13=> 13: 14bit = 14bit
//        <14=> 14: 15bit = 15bit
//        <15=> 15: 16bit = 16bit
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_Secure_CR0  --------------------------------
// SVD Line: 4109

//  <rtree> SFDITEM_REG__SSP1_Secure_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59204000) Control register 0 </i>
//    <loc> ( (unsigned int)((SSP1_Secure_CR0 >> 0) & 0xFFFFFFFF), ((SSP1_Secure_CR0 = (SSP1_Secure_CR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_CR0_SCR </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_CR0_SPH </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_CR0_SPO </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_CR0_FRF </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_CR0_DSS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP1_Secure_CR1  -----------------------------
// SVD Line: 4212

unsigned int SSP1_Secure_CR1 __AT (0x59204004);



// -----------------------------  Field Item: SSP1_Secure_CR1_SOD  --------------------------------
// SVD Line: 4217

//  <item> SFDITEM_FIELD__SSP1_Secure_CR1_SOD
//    <name> SOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59204004) \nSlave-mode output disable\n0 : Enable = SSP can drive the SSPTXD output in slave mode\n1 : Disable = SSP must not drive the SSPTXD output in slave mode </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_Secure_CR1 ) </loc>
//      <o.3..3> SOD
//        <0=> 0: Enable = SSP can drive the SSPTXD output in slave mode
//        <1=> 1: Disable = SSP must not drive the SSPTXD output in slave mode
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP1_Secure_CR1_MS  ---------------------------------
// SVD Line: 4234

//  <item> SFDITEM_FIELD__SSP1_Secure_CR1_MS
//    <name> MS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59204004) \nMaster or slave mode select\n0 : Master = Device configured as master, default\n1 : Slave = Device configured as slave </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_Secure_CR1 ) </loc>
//      <o.2..2> MS
//        <0=> 0: Master = Device configured as master, default
//        <1=> 1: Slave = Device configured as slave
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP1_Secure_CR1_SSE  --------------------------------
// SVD Line: 4251

//  <item> SFDITEM_FIELD__SSP1_Secure_CR1_SSE
//    <name> SSE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59204004) \nSynchronous serial port enable\n0 : Disabled = SSP operation disabled\n1 : Enabled = SSP operation enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_Secure_CR1 ) </loc>
//      <o.1..1> SSE
//        <0=> 0: Disabled = SSP operation disabled
//        <1=> 1: Enabled = SSP operation enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP1_Secure_CR1_LBM  --------------------------------
// SVD Line: 4268

//  <item> SFDITEM_FIELD__SSP1_Secure_CR1_LBM
//    <name> LBM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59204004) \nLoop back mode\n0 : Normal = Normal serial port operation enabled\n1 : Loopback = Output of transmit serial shifter is connected to input of receive serial shifter internally </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_Secure_CR1 ) </loc>
//      <o.0..0> LBM
//        <0=> 0: Normal = Normal serial port operation enabled
//        <1=> 1: Loopback = Output of transmit serial shifter is connected to input of receive serial shifter internally
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_Secure_CR1  --------------------------------
// SVD Line: 4212

//  <rtree> SFDITEM_REG__SSP1_Secure_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59204004) Control register 1 </i>
//    <loc> ( (unsigned int)((SSP1_Secure_CR1 >> 0) & 0xFFFFFFFF), ((SSP1_Secure_CR1 = (SSP1_Secure_CR1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_CR1_SOD </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_CR1_MS </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_CR1_SSE </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_CR1_LBM </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP1_Secure_DR  -----------------------------
// SVD Line: 4287

unsigned int SSP1_Secure_DR __AT (0x59204008);



// -----------------------------  Field Item: SSP1_Secure_DR_Data  --------------------------------
// SVD Line: 4292

//  <item> SFDITEM_FIELD__SSP1_Secure_DR_Data
//    <name> Data </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x59204008) Transmit/Receive FIFO </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP1_Secure_DR >> 0) & 0xFFFF), ((SSP1_Secure_DR = (SSP1_Secure_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_Secure_DR  ---------------------------------
// SVD Line: 4287

//  <rtree> SFDITEM_REG__SSP1_Secure_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59204008) Data register </i>
//    <loc> ( (unsigned int)((SSP1_Secure_DR >> 0) & 0xFFFFFFFF), ((SSP1_Secure_DR = (SSP1_Secure_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_DR_Data </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP1_Secure_SR  -----------------------------
// SVD Line: 4299

unsigned int SSP1_Secure_SR __AT (0x5920400C);



// -----------------------------  Field Item: SSP1_Secure_SR_BSY  ---------------------------------
// SVD Line: 4304

//  <item> SFDITEM_FIELD__SSP1_Secure_SR_BSY
//    <name> BSY </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x5920400C) \nPrimeCell SSP busy flag\n0 : Idle = SSP is idle\n1 : Busy = SSP is currently transmitting and/or receiving a frame or the transmit FIFO is not empty </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_Secure_SR ) </loc>
//      <o.4..4> BSY
//        <0=> 0: Idle = SSP is idle
//        <1=> 1: Busy = SSP is currently transmitting and/or receiving a frame or the transmit FIFO is not empty
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP1_Secure_SR_RFF  ---------------------------------
// SVD Line: 4321

//  <item> SFDITEM_FIELD__SSP1_Secure_SR_RFF
//    <name> RFF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x5920400C) \nReceive FIFO full\n0 : NF = Receive FIFO is not full\n1 : F = Receive FIFO is full </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_Secure_SR ) </loc>
//      <o.3..3> RFF
//        <0=> 0: NF = Receive FIFO is not full
//        <1=> 1: F = Receive FIFO is full
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP1_Secure_SR_RNE  ---------------------------------
// SVD Line: 4338

//  <item> SFDITEM_FIELD__SSP1_Secure_SR_RNE
//    <name> RNE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x5920400C) \nReceive FIFO not empty\n0 : E = Receive FIFO is empty\n1 : NE = Receive FIFO is not empty </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_Secure_SR ) </loc>
//      <o.2..2> RNE
//        <0=> 0: E = Receive FIFO is empty
//        <1=> 1: NE = Receive FIFO is not empty
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP1_Secure_SR_TNF  ---------------------------------
// SVD Line: 4355

//  <item> SFDITEM_FIELD__SSP1_Secure_SR_TNF
//    <name> TNF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5920400C) \nTransmit FIFO not full\n0 : F = Receive FIFO is full\n1 : NF = Receive FIFO is not full </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_Secure_SR ) </loc>
//      <o.1..1> TNF
//        <0=> 0: F = Receive FIFO is full
//        <1=> 1: NF = Receive FIFO is not full
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP1_Secure_SR_TFE  ---------------------------------
// SVD Line: 4372

//  <item> SFDITEM_FIELD__SSP1_Secure_SR_TFE
//    <name> TFE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5920400C) \nTransmit FIFO empty\n0 : NE = Receive FIFO is not empty\n1 : E = Receive FIFO is empty </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_Secure_SR ) </loc>
//      <o.0..0> TFE
//        <0=> 0: NE = Receive FIFO is not empty
//        <1=> 1: E = Receive FIFO is empty
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_Secure_SR  ---------------------------------
// SVD Line: 4299

//  <rtree> SFDITEM_REG__SSP1_Secure_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5920400C) Status register </i>
//    <loc> ( (unsigned int)((SSP1_Secure_SR >> 0) & 0xFFFFFFFF), ((SSP1_Secure_SR = (SSP1_Secure_SR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_SR_BSY </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_SR_RFF </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_SR_RNE </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_SR_TNF </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_SR_TFE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP1_Secure_CPSR  ----------------------------
// SVD Line: 4391

unsigned int SSP1_Secure_CPSR __AT (0x59204010);



// --------------------------  Field Item: SSP1_Secure_CPSR_CPSDVSR  ------------------------------
// SVD Line: 4396

//  <item> SFDITEM_FIELD__SSP1_Secure_CPSR_CPSDVSR
//    <name> CPSDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x59204010) Clock prescale divisor </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP1_Secure_CPSR >> 0) & 0xFF), ((SSP1_Secure_CPSR = (SSP1_Secure_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: SSP1_Secure_CPSR  --------------------------------
// SVD Line: 4391

//  <rtree> SFDITEM_REG__SSP1_Secure_CPSR
//    <name> CPSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59204010) Clock prescale register </i>
//    <loc> ( (unsigned int)((SSP1_Secure_CPSR >> 0) & 0xFFFFFFFF), ((SSP1_Secure_CPSR = (SSP1_Secure_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_CPSR_CPSDVSR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP1_Secure_IMSC  ----------------------------
// SVD Line: 4403

unsigned int SSP1_Secure_IMSC __AT (0x59204014);



// ----------------------------  Field Item: SSP1_Secure_IMSC_TXIM  -------------------------------
// SVD Line: 4408

//  <item> SFDITEM_FIELD__SSP1_Secure_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59204014) \nTransmit FIFO interrupt mask\n0 : Masked = Transmit FIFO half empty or less condition interrupt is masked\n1 : NotMasked = Transmit FIFO half empty or less condition interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_Secure_IMSC ) </loc>
//      <o.3..3> TXIM
//        <0=> 0: Masked = Transmit FIFO half empty or less condition interrupt is masked
//        <1=> 1: NotMasked = Transmit FIFO half empty or less condition interrupt is not masked
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SSP1_Secure_IMSC_RXIM  -------------------------------
// SVD Line: 4425

//  <item> SFDITEM_FIELD__SSP1_Secure_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59204014) \nReceive FIFO interrupt mask\n0 : Masked = Receive FIFO half full or less condition interrupt is masked\n1 : NotMasked = Receive FIFO half full or less condition interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_Secure_IMSC ) </loc>
//      <o.2..2> RXIM
//        <0=> 0: Masked = Receive FIFO half full or less condition interrupt is masked
//        <1=> 1: NotMasked = Receive FIFO half full or less condition interrupt is not masked
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SSP1_Secure_IMSC_RTIM  -------------------------------
// SVD Line: 4442

//  <item> SFDITEM_FIELD__SSP1_Secure_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59204014) \nReceive timeout interrupt mask\n0 : Masked = Receive FIFO not empty or no read prior to timeout period interrupt is masked\n1 : NotMasked = Receive FIFO not empty or no read prior to timeout period interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_Secure_IMSC ) </loc>
//      <o.1..1> RTIM
//        <0=> 0: Masked = Receive FIFO not empty or no read prior to timeout period interrupt is masked
//        <1=> 1: NotMasked = Receive FIFO not empty or no read prior to timeout period interrupt is not masked
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: SSP1_Secure_IMSC_RORIM  -------------------------------
// SVD Line: 4459

//  <item> SFDITEM_FIELD__SSP1_Secure_IMSC_RORIM
//    <name> RORIM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59204014) \nReceive overrun interrupt mask\n0 : Masked = Receive FIFO written to while full condition interrupt is masked\n1 : NotMasked = Receive FIFO written to while full condition interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_Secure_IMSC ) </loc>
//      <o.0..0> RORIM
//        <0=> 0: Masked = Receive FIFO written to while full condition interrupt is masked
//        <1=> 1: NotMasked = Receive FIFO written to while full condition interrupt is not masked
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: SSP1_Secure_IMSC  --------------------------------
// SVD Line: 4403

//  <rtree> SFDITEM_REG__SSP1_Secure_IMSC
//    <name> IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59204014) Interrupt mask set or clear register </i>
//    <loc> ( (unsigned int)((SSP1_Secure_IMSC >> 0) & 0xFFFFFFFF), ((SSP1_Secure_IMSC = (SSP1_Secure_IMSC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_IMSC_TXIM </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_IMSC_RORIM </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP1_Secure_RIS  -----------------------------
// SVD Line: 4478

unsigned int SSP1_Secure_RIS __AT (0x59204018);



// ----------------------------  Field Item: SSP1_Secure_RIS_TXRIS  -------------------------------
// SVD Line: 4483

//  <item> SFDITEM_FIELD__SSP1_Secure_RIS_TXRIS
//    <name> TXRIS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59204018) transmit FIFO raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_RIS ) </loc>
//      <o.3..3> TXRIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP1_Secure_RIS_RXRIS  -------------------------------
// SVD Line: 4488

//  <item> SFDITEM_FIELD__SSP1_Secure_RIS_RXRIS
//    <name> RXRIS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59204018) receive FIFO raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_RIS ) </loc>
//      <o.2..2> RXRIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP1_Secure_RIS_RTRIS  -------------------------------
// SVD Line: 4493

//  <item> SFDITEM_FIELD__SSP1_Secure_RIS_RTRIS
//    <name> RTRIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59204018) receive timeout raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_RIS ) </loc>
//      <o.1..1> RTRIS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP1_Secure_RIS_RORRIS  -------------------------------
// SVD Line: 4498

//  <item> SFDITEM_FIELD__SSP1_Secure_RIS_RORRIS
//    <name> RORRIS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59204018) receive over run raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_RIS ) </loc>
//      <o.0..0> RORRIS
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_Secure_RIS  --------------------------------
// SVD Line: 4478

//  <rtree> SFDITEM_REG__SSP1_Secure_RIS
//    <name> RIS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59204018) Raw interrupt status register </i>
//    <loc> ( (unsigned int)((SSP1_Secure_RIS >> 0) & 0xFFFFFFFF), ((SSP1_Secure_RIS = (SSP1_Secure_RIS & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_RIS_TXRIS </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_RIS_RORRIS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP1_Secure_MIS  -----------------------------
// SVD Line: 4505

unsigned int SSP1_Secure_MIS __AT (0x5920401C);



// ----------------------------  Field Item: SSP1_Secure_MIS_TXMIS  -------------------------------
// SVD Line: 4510

//  <item> SFDITEM_FIELD__SSP1_Secure_MIS_TXMIS
//    <name> TXMIS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x5920401C) transmit FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_MIS ) </loc>
//      <o.3..3> TXMIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP1_Secure_MIS_RXMIS  -------------------------------
// SVD Line: 4515

//  <item> SFDITEM_FIELD__SSP1_Secure_MIS_RXMIS
//    <name> RXMIS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x5920401C) receive FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_MIS ) </loc>
//      <o.2..2> RXMIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP1_Secure_MIS_RTMIS  -------------------------------
// SVD Line: 4520

//  <item> SFDITEM_FIELD__SSP1_Secure_MIS_RTMIS
//    <name> RTMIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5920401C) receive timeout masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_MIS ) </loc>
//      <o.1..1> RTMIS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP1_Secure_MIS_RORMIS  -------------------------------
// SVD Line: 4525

//  <item> SFDITEM_FIELD__SSP1_Secure_MIS_RORMIS
//    <name> RORMIS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5920401C) receive over run masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_MIS ) </loc>
//      <o.0..0> RORMIS
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_Secure_MIS  --------------------------------
// SVD Line: 4505

//  <rtree> SFDITEM_REG__SSP1_Secure_MIS
//    <name> MIS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5920401C) Masked interrupt status register </i>
//    <loc> ( (unsigned int)((SSP1_Secure_MIS >> 0) & 0xFFFFFFFF), ((SSP1_Secure_MIS = (SSP1_Secure_MIS & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_MIS_TXMIS </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_MIS_RORMIS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP1_Secure_ICR  -----------------------------
// SVD Line: 4532

unsigned int SSP1_Secure_ICR __AT (0x59204020);



// ----------------------------  Field Item: SSP1_Secure_ICR_RTIC  --------------------------------
// SVD Line: 4537

//  <item> SFDITEM_FIELD__SSP1_Secure_ICR_RTIC
//    <name> RTIC </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59204020) Clears the SSPRTINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_ICR ) </loc>
//      <o.1..1> RTIC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP1_Secure_ICR_RORIC  -------------------------------
// SVD Line: 4542

//  <item> SFDITEM_FIELD__SSP1_Secure_ICR_RORIC
//    <name> RORIC </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59204020) Clears the SSPRORINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_ICR ) </loc>
//      <o.0..0> RORIC
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_Secure_ICR  --------------------------------
// SVD Line: 4532

//  <rtree> SFDITEM_REG__SSP1_Secure_ICR
//    <name> ICR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59204020) Interrupt clear register </i>
//    <loc> ( (unsigned int)((SSP1_Secure_ICR >> 0) & 0xFFFFFFFF), ((SSP1_Secure_ICR = (SSP1_Secure_ICR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_ICR_RTIC </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_ICR_RORIC </item>
//  </rtree>
//  


// ------------------------  Register Item Address: SSP1_Secure_DMACR  ----------------------------
// SVD Line: 4549

unsigned int SSP1_Secure_DMACR __AT (0x59204024);



// --------------------------  Field Item: SSP1_Secure_DMACR_TXDMAE  ------------------------------
// SVD Line: 4554

//  <item> SFDITEM_FIELD__SSP1_Secure_DMACR_TXDMAE
//    <name> TXDMAE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59204024) Transmit DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_DMACR ) </loc>
//      <o.1..1> TXDMAE
//    </check>
//  </item>
//  


// --------------------------  Field Item: SSP1_Secure_DMACR_RXDMAE  ------------------------------
// SVD Line: 4559

//  <item> SFDITEM_FIELD__SSP1_Secure_DMACR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59204024) Receive DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_DMACR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: SSP1_Secure_DMACR  -------------------------------
// SVD Line: 4549

//  <rtree> SFDITEM_REG__SSP1_Secure_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59204024) DMA control register </i>
//    <loc> ( (unsigned int)((SSP1_Secure_DMACR >> 0) & 0xFFFFFFFF), ((SSP1_Secure_DMACR = (SSP1_Secure_DMACR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_DMACR_TXDMAE </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_DMACR_RXDMAE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP1_Secure_TCR  -----------------------------
// SVD Line: 4566

unsigned int SSP1_Secure_TCR __AT (0x59204080);



// --------------------------  Field Item: SSP1_Secure_TCR_TESTFIFO  ------------------------------
// SVD Line: 4572

//  <item> SFDITEM_FIELD__SSP1_Secure_TCR_TESTFIFO
//    <name> TESTFIFO </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59204080) \nTest FIFO enable\n0 : Disabled = Normal operation\n1 : Enabled = When this bit is 1, a write to the TDR writes data into the receive FIFO, and reads from the TDR reads data out of the transmit FIFO. </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_Secure_TCR ) </loc>
//      <o.1..1> TESTFIFO
//        <0=> 0: Disabled = Normal operation
//        <1=> 1: Enabled = When this bit is 1, a write to the TDR writes data into the receive FIFO, and reads from the TDR reads data out of the transmit FIFO.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SSP1_Secure_TCR_ITEN  --------------------------------
// SVD Line: 4589

//  <item> SFDITEM_FIELD__SSP1_Secure_TCR_ITEN
//    <name> ITEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59204080) \nIntegration test enable\n0 : Disabled = Normal mode\n1 : Enabled = The PrimeCell SSP is placed in integration test mode. </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP1_Secure_TCR ) </loc>
//      <o.0..0> ITEN
//        <0=> 0: Disabled = Normal mode
//        <1=> 1: Enabled = The PrimeCell SSP is placed in integration test mode.
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_Secure_TCR  --------------------------------
// SVD Line: 4566

//  <rtree> SFDITEM_REG__SSP1_Secure_TCR
//    <name> TCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59204080) Test control register </i>
//    <loc> ( (unsigned int)((SSP1_Secure_TCR >> 0) & 0xFFFFFFFF), ((SSP1_Secure_TCR = (SSP1_Secure_TCR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_TCR_TESTFIFO </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_TCR_ITEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP1_Secure_ITIP  ----------------------------
// SVD Line: 4608

unsigned int SSP1_Secure_ITIP __AT (0x59204084);



// --------------------------  Field Item: SSP1_Secure_ITIP_TXDMACLR  -----------------------------
// SVD Line: 4614

//  <item> SFDITEM_FIELD__SSP1_Secure_ITIP_TXDMACLR
//    <name> TXDMACLR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x59204084) Value to be driven on the intra-chip input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_ITIP ) </loc>
//      <o.4..4> TXDMACLR
//    </check>
//  </item>
//  


// -------------------------  Field Item: SSP1_Secure_ITIP_RXDDMACLR  -----------------------------
// SVD Line: 4619

//  <item> SFDITEM_FIELD__SSP1_Secure_ITIP_RXDDMACLR
//    <name> RXDDMACLR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59204084) Value to be driven on the intra-chip input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_ITIP ) </loc>
//      <o.3..3> RXDDMACLR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP1_Secure_ITIP_CLKIN  -------------------------------
// SVD Line: 4624

//  <item> SFDITEM_FIELD__SSP1_Secure_ITIP_CLKIN
//    <name> CLKIN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59204084) Return the value of CLKIN primary input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_ITIP ) </loc>
//      <o.2..2> CLKIN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP1_Secure_ITIP_FSSIN  -------------------------------
// SVD Line: 4629

//  <item> SFDITEM_FIELD__SSP1_Secure_ITIP_FSSIN
//    <name> FSSIN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59204084) Return the value of FSSIN primary input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_ITIP ) </loc>
//      <o.1..1> FSSIN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP1_Secure_ITIP_RXD  --------------------------------
// SVD Line: 4634

//  <item> SFDITEM_FIELD__SSP1_Secure_ITIP_RXD
//    <name> RXD </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59204084) Return the value of RXD primary input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_ITIP ) </loc>
//      <o.0..0> RXD
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: SSP1_Secure_ITIP  --------------------------------
// SVD Line: 4608

//  <rtree> SFDITEM_REG__SSP1_Secure_ITIP
//    <name> ITIP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59204084) Integration test input register </i>
//    <loc> ( (unsigned int)((SSP1_Secure_ITIP >> 0) & 0xFFFFFFFF), ((SSP1_Secure_ITIP = (SSP1_Secure_ITIP & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_ITIP_TXDMACLR </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_ITIP_RXDDMACLR </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_ITIP_CLKIN </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_ITIP_FSSIN </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_ITIP_RXD </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP1_Secure_ITOP  ----------------------------
// SVD Line: 4641

unsigned int SSP1_Secure_ITOP __AT (0x59204088);



// -------------------------  Field Item: SSP1_Secure_ITOP_TXDMASREQ  -----------------------------
// SVD Line: 4647

//  <item> SFDITEM_FIELD__SSP1_Secure_ITOP_TXDMASREQ
//    <name> TXDMASREQ </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x59204088) Value on the TXDMASREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_ITOP ) </loc>
//      <o.13..13> TXDMASREQ
//    </check>
//  </item>
//  


// -------------------------  Field Item: SSP1_Secure_ITOP_TXDMABREQ  -----------------------------
// SVD Line: 4652

//  <item> SFDITEM_FIELD__SSP1_Secure_ITOP_TXDMABREQ
//    <name> TXDMABREQ </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x59204088) Value on the TXDMABREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_ITOP ) </loc>
//      <o.12..12> TXDMABREQ
//    </check>
//  </item>
//  


// -------------------------  Field Item: SSP1_Secure_ITOP_RXDMASREQ  -----------------------------
// SVD Line: 4657

//  <item> SFDITEM_FIELD__SSP1_Secure_ITOP_RXDMASREQ
//    <name> RXDMASREQ </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x59204088) Value on the TXDMASREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_ITOP ) </loc>
//      <o.11..11> RXDMASREQ
//    </check>
//  </item>
//  


// -------------------------  Field Item: SSP1_Secure_ITOP_RXDMABREQ  -----------------------------
// SVD Line: 4662

//  <item> SFDITEM_FIELD__SSP1_Secure_ITOP_RXDMABREQ
//    <name> RXDMABREQ </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x59204088) Value on the TXDMABREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_ITOP ) </loc>
//      <o.10..10> RXDMABREQ
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP1_Secure_ITOP_INTR  -------------------------------
// SVD Line: 4667

//  <item> SFDITEM_FIELD__SSP1_Secure_ITOP_INTR
//    <name> INTR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x59204088) Value on the INTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_ITOP ) </loc>
//      <o.9..9> INTR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP1_Secure_ITOP_TXINTR  ------------------------------
// SVD Line: 4672

//  <item> SFDITEM_FIELD__SSP1_Secure_ITOP_TXINTR
//    <name> TXINTR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x59204088) Value on the TXINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_ITOP ) </loc>
//      <o.8..8> TXINTR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP1_Secure_ITOP_RXINTR  ------------------------------
// SVD Line: 4677

//  <item> SFDITEM_FIELD__SSP1_Secure_ITOP_RXINTR
//    <name> RXINTR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x59204088) Value on the RXINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_ITOP ) </loc>
//      <o.7..7> RXINTR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP1_Secure_ITOP_RTINTR  ------------------------------
// SVD Line: 4682

//  <item> SFDITEM_FIELD__SSP1_Secure_ITOP_RTINTR
//    <name> RTINTR </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x59204088) Value on the RTINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_ITOP ) </loc>
//      <o.6..6> RTINTR
//    </check>
//  </item>
//  


// --------------------------  Field Item: SSP1_Secure_ITOP_RORINTR  ------------------------------
// SVD Line: 4687

//  <item> SFDITEM_FIELD__SSP1_Secure_ITOP_RORINTR
//    <name> RORINTR </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x59204088) Value on the RORINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_ITOP ) </loc>
//      <o.5..5> RORINTR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP1_Secure_ITOP_OE  --------------------------------
// SVD Line: 4692

//  <item> SFDITEM_FIELD__SSP1_Secure_ITOP_OE
//    <name> OE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x59204088) Value on the OE line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_ITOP ) </loc>
//      <o.4..4> OE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP1_Secure_ITOP_CTLOE  -------------------------------
// SVD Line: 4697

//  <item> SFDITEM_FIELD__SSP1_Secure_ITOP_CTLOE
//    <name> CTLOE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59204088) Value on the OE line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_ITOP ) </loc>
//      <o.3..3> CTLOE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP1_Secure_ITOP_CLKOUT  ------------------------------
// SVD Line: 4702

//  <item> SFDITEM_FIELD__SSP1_Secure_ITOP_CLKOUT
//    <name> CLKOUT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59204088) Value on the CLKOUT line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_ITOP ) </loc>
//      <o.2..2> CLKOUT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP1_Secure_ITOP_FSSOUT  ------------------------------
// SVD Line: 4707

//  <item> SFDITEM_FIELD__SSP1_Secure_ITOP_FSSOUT
//    <name> FSSOUT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59204088) Value on the FSSOUT line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_ITOP ) </loc>
//      <o.1..1> FSSOUT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP1_Secure_ITOP_TXD  --------------------------------
// SVD Line: 4712

//  <item> SFDITEM_FIELD__SSP1_Secure_ITOP_TXD
//    <name> TXD </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59204088) Value on the TXD line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_Secure_ITOP ) </loc>
//      <o.0..0> TXD
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: SSP1_Secure_ITOP  --------------------------------
// SVD Line: 4641

//  <rtree> SFDITEM_REG__SSP1_Secure_ITOP
//    <name> ITOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59204088) Integration test output register </i>
//    <loc> ( (unsigned int)((SSP1_Secure_ITOP >> 0) & 0xFFFFFFFF), ((SSP1_Secure_ITOP = (SSP1_Secure_ITOP & ~(0x3FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_ITOP_TXDMASREQ </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_ITOP_TXDMABREQ </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_ITOP_RXDMASREQ </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_ITOP_RXDMABREQ </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_ITOP_INTR </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_ITOP_TXINTR </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_ITOP_RXINTR </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_ITOP_RTINTR </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_ITOP_RORINTR </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_ITOP_OE </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_ITOP_CTLOE </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_ITOP_CLKOUT </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_ITOP_FSSOUT </item>
//    <item> SFDITEM_FIELD__SSP1_Secure_ITOP_TXD </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP1_Secure_TDR  -----------------------------
// SVD Line: 4719

unsigned int SSP1_Secure_TDR __AT (0x5920408C);



// ----------------------------  Field Item: SSP1_Secure_TDR_DATA  --------------------------------
// SVD Line: 4725

//  <item> SFDITEM_FIELD__SSP1_Secure_TDR_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x5920408C) When the TESTFIFO signal is asserted, data is written into the receive FIFO and read out of the transmit FIFO </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP1_Secure_TDR >> 0) & 0xFFFF), ((SSP1_Secure_TDR = (SSP1_Secure_TDR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_Secure_TDR  --------------------------------
// SVD Line: 4719

//  <rtree> SFDITEM_REG__SSP1_Secure_TDR
//    <name> TDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5920408C) Test data register </i>
//    <loc> ( (unsigned int)((SSP1_Secure_TDR >> 0) & 0xFFFFFFFF), ((SSP1_Secure_TDR = (SSP1_Secure_TDR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_Secure_TDR_DATA </item>
//  </rtree>
//  


// ------------------------------  Peripheral View: SSP1_Secure  ----------------------------------
// SVD Line: 4766

//  <view> SSP1_Secure
//    <name> SSP1_Secure </name>
//    <item> SFDITEM_REG__SSP1_Secure_CR0 </item>
//    <item> SFDITEM_REG__SSP1_Secure_CR1 </item>
//    <item> SFDITEM_REG__SSP1_Secure_DR </item>
//    <item> SFDITEM_REG__SSP1_Secure_SR </item>
//    <item> SFDITEM_REG__SSP1_Secure_CPSR </item>
//    <item> SFDITEM_REG__SSP1_Secure_IMSC </item>
//    <item> SFDITEM_REG__SSP1_Secure_RIS </item>
//    <item> SFDITEM_REG__SSP1_Secure_MIS </item>
//    <item> SFDITEM_REG__SSP1_Secure_ICR </item>
//    <item> SFDITEM_REG__SSP1_Secure_DMACR </item>
//    <item> SFDITEM_REG__SSP1_Secure_TCR </item>
//    <item> SFDITEM_REG__SSP1_Secure_ITIP </item>
//    <item> SFDITEM_REG__SSP1_Secure_ITOP </item>
//    <item> SFDITEM_REG__SSP1_Secure_TDR </item>
//  </view>
//  


// -------------------------  Register Item Address: SSP2_Secure_CR0  -----------------------------
// SVD Line: 4109

unsigned int SSP2_Secure_CR0 __AT (0x59202000);



// -----------------------------  Field Item: SSP2_Secure_CR0_SCR  --------------------------------
// SVD Line: 4114

//  <item> SFDITEM_FIELD__SSP2_Secure_CR0_SCR
//    <name> SCR </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x59202000) Serial clock rate </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP2_Secure_CR0 >> 8) & 0xFF), ((SSP2_Secure_CR0 = (SSP2_Secure_CR0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SSP2_Secure_CR0_SPH  --------------------------------
// SVD Line: 4119

//  <item> SFDITEM_FIELD__SSP2_Secure_CR0_SPH
//    <name> SPH </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x59202000) SSPCLKOUT phase </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_CR0 ) </loc>
//      <o.7..7> SPH
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP2_Secure_CR0_SPO  --------------------------------
// SVD Line: 4124

//  <item> SFDITEM_FIELD__SSP2_Secure_CR0_SPO
//    <name> SPO </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x59202000) SSPCLKOUT polarity </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_CR0 ) </loc>
//      <o.6..6> SPO
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP2_Secure_CR0_FRF  --------------------------------
// SVD Line: 4129

//  <item> SFDITEM_FIELD__SSP2_Secure_CR0_FRF
//    <name> FRF </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x59202000) \nFrame format\n0 : Motorola = Motorola SPI frame format\n1 : TI = TI synchronous serial frame format\n2 : NM = National Microwire frame format\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_Secure_CR0 ) </loc>
//      <o.5..4> FRF
//        <0=> 0: Motorola = Motorola SPI frame format
//        <1=> 1: TI = TI synchronous serial frame format
//        <2=> 2: NM = National Microwire frame format
//        <3=> 3: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP2_Secure_CR0_DSS  --------------------------------
// SVD Line: 4151

//  <item> SFDITEM_FIELD__SSP2_Secure_CR0_DSS
//    <name> DSS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x59202000) \nData Size Select\n0 : Reserved - do not use\n1 : Reserved - do not use\n2 : Reserved - do not use\n3 : 4bit = 4bit\n4 : 5bit = 5bit\n5 : 6bit = 6bit\n6 : 7bit = 7bit\n7 : 8bit = 8bit\n8 : 9bit = 9bit\n9 : 10bit = 10bit\n10 : 11bit = 11bit\n11 : 12bit = 12bit\n12 : 13bit = 13bit\n13 : 14bit = 14bit\n14 : 15bit = 15bit\n15 : 16bit = 16bit </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_Secure_CR0 ) </loc>
//      <o.3..0> DSS
//        <0=> 0: 
//        <1=> 1: 
//        <2=> 2: 
//        <3=> 3: 4bit = 4bit
//        <4=> 4: 5bit = 5bit
//        <5=> 5: 6bit = 6bit
//        <6=> 6: 7bit = 7bit
//        <7=> 7: 8bit = 8bit
//        <8=> 8: 9bit = 9bit
//        <9=> 9: 10bit = 10bit
//        <10=> 10: 11bit = 11bit
//        <11=> 11: 12bit = 12bit
//        <12=> 12: 13bit = 13bit
//        <13=> 13: 14bit = 14bit
//        <14=> 14: 15bit = 15bit
//        <15=> 15: 16bit = 16bit
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_Secure_CR0  --------------------------------
// SVD Line: 4109

//  <rtree> SFDITEM_REG__SSP2_Secure_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59202000) Control register 0 </i>
//    <loc> ( (unsigned int)((SSP2_Secure_CR0 >> 0) & 0xFFFFFFFF), ((SSP2_Secure_CR0 = (SSP2_Secure_CR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_CR0_SCR </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_CR0_SPH </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_CR0_SPO </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_CR0_FRF </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_CR0_DSS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP2_Secure_CR1  -----------------------------
// SVD Line: 4212

unsigned int SSP2_Secure_CR1 __AT (0x59202004);



// -----------------------------  Field Item: SSP2_Secure_CR1_SOD  --------------------------------
// SVD Line: 4217

//  <item> SFDITEM_FIELD__SSP2_Secure_CR1_SOD
//    <name> SOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59202004) \nSlave-mode output disable\n0 : Enable = SSP can drive the SSPTXD output in slave mode\n1 : Disable = SSP must not drive the SSPTXD output in slave mode </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_Secure_CR1 ) </loc>
//      <o.3..3> SOD
//        <0=> 0: Enable = SSP can drive the SSPTXD output in slave mode
//        <1=> 1: Disable = SSP must not drive the SSPTXD output in slave mode
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP2_Secure_CR1_MS  ---------------------------------
// SVD Line: 4234

//  <item> SFDITEM_FIELD__SSP2_Secure_CR1_MS
//    <name> MS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59202004) \nMaster or slave mode select\n0 : Master = Device configured as master, default\n1 : Slave = Device configured as slave </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_Secure_CR1 ) </loc>
//      <o.2..2> MS
//        <0=> 0: Master = Device configured as master, default
//        <1=> 1: Slave = Device configured as slave
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP2_Secure_CR1_SSE  --------------------------------
// SVD Line: 4251

//  <item> SFDITEM_FIELD__SSP2_Secure_CR1_SSE
//    <name> SSE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59202004) \nSynchronous serial port enable\n0 : Disabled = SSP operation disabled\n1 : Enabled = SSP operation enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_Secure_CR1 ) </loc>
//      <o.1..1> SSE
//        <0=> 0: Disabled = SSP operation disabled
//        <1=> 1: Enabled = SSP operation enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP2_Secure_CR1_LBM  --------------------------------
// SVD Line: 4268

//  <item> SFDITEM_FIELD__SSP2_Secure_CR1_LBM
//    <name> LBM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59202004) \nLoop back mode\n0 : Normal = Normal serial port operation enabled\n1 : Loopback = Output of transmit serial shifter is connected to input of receive serial shifter internally </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_Secure_CR1 ) </loc>
//      <o.0..0> LBM
//        <0=> 0: Normal = Normal serial port operation enabled
//        <1=> 1: Loopback = Output of transmit serial shifter is connected to input of receive serial shifter internally
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_Secure_CR1  --------------------------------
// SVD Line: 4212

//  <rtree> SFDITEM_REG__SSP2_Secure_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59202004) Control register 1 </i>
//    <loc> ( (unsigned int)((SSP2_Secure_CR1 >> 0) & 0xFFFFFFFF), ((SSP2_Secure_CR1 = (SSP2_Secure_CR1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_CR1_SOD </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_CR1_MS </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_CR1_SSE </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_CR1_LBM </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP2_Secure_DR  -----------------------------
// SVD Line: 4287

unsigned int SSP2_Secure_DR __AT (0x59202008);



// -----------------------------  Field Item: SSP2_Secure_DR_Data  --------------------------------
// SVD Line: 4292

//  <item> SFDITEM_FIELD__SSP2_Secure_DR_Data
//    <name> Data </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x59202008) Transmit/Receive FIFO </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP2_Secure_DR >> 0) & 0xFFFF), ((SSP2_Secure_DR = (SSP2_Secure_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_Secure_DR  ---------------------------------
// SVD Line: 4287

//  <rtree> SFDITEM_REG__SSP2_Secure_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59202008) Data register </i>
//    <loc> ( (unsigned int)((SSP2_Secure_DR >> 0) & 0xFFFFFFFF), ((SSP2_Secure_DR = (SSP2_Secure_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_DR_Data </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP2_Secure_SR  -----------------------------
// SVD Line: 4299

unsigned int SSP2_Secure_SR __AT (0x5920200C);



// -----------------------------  Field Item: SSP2_Secure_SR_BSY  ---------------------------------
// SVD Line: 4304

//  <item> SFDITEM_FIELD__SSP2_Secure_SR_BSY
//    <name> BSY </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x5920200C) \nPrimeCell SSP busy flag\n0 : Idle = SSP is idle\n1 : Busy = SSP is currently transmitting and/or receiving a frame or the transmit FIFO is not empty </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_Secure_SR ) </loc>
//      <o.4..4> BSY
//        <0=> 0: Idle = SSP is idle
//        <1=> 1: Busy = SSP is currently transmitting and/or receiving a frame or the transmit FIFO is not empty
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP2_Secure_SR_RFF  ---------------------------------
// SVD Line: 4321

//  <item> SFDITEM_FIELD__SSP2_Secure_SR_RFF
//    <name> RFF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x5920200C) \nReceive FIFO full\n0 : NF = Receive FIFO is not full\n1 : F = Receive FIFO is full </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_Secure_SR ) </loc>
//      <o.3..3> RFF
//        <0=> 0: NF = Receive FIFO is not full
//        <1=> 1: F = Receive FIFO is full
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP2_Secure_SR_RNE  ---------------------------------
// SVD Line: 4338

//  <item> SFDITEM_FIELD__SSP2_Secure_SR_RNE
//    <name> RNE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x5920200C) \nReceive FIFO not empty\n0 : E = Receive FIFO is empty\n1 : NE = Receive FIFO is not empty </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_Secure_SR ) </loc>
//      <o.2..2> RNE
//        <0=> 0: E = Receive FIFO is empty
//        <1=> 1: NE = Receive FIFO is not empty
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP2_Secure_SR_TNF  ---------------------------------
// SVD Line: 4355

//  <item> SFDITEM_FIELD__SSP2_Secure_SR_TNF
//    <name> TNF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5920200C) \nTransmit FIFO not full\n0 : F = Receive FIFO is full\n1 : NF = Receive FIFO is not full </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_Secure_SR ) </loc>
//      <o.1..1> TNF
//        <0=> 0: F = Receive FIFO is full
//        <1=> 1: NF = Receive FIFO is not full
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SSP2_Secure_SR_TFE  ---------------------------------
// SVD Line: 4372

//  <item> SFDITEM_FIELD__SSP2_Secure_SR_TFE
//    <name> TFE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5920200C) \nTransmit FIFO empty\n0 : NE = Receive FIFO is not empty\n1 : E = Receive FIFO is empty </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_Secure_SR ) </loc>
//      <o.0..0> TFE
//        <0=> 0: NE = Receive FIFO is not empty
//        <1=> 1: E = Receive FIFO is empty
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_Secure_SR  ---------------------------------
// SVD Line: 4299

//  <rtree> SFDITEM_REG__SSP2_Secure_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5920200C) Status register </i>
//    <loc> ( (unsigned int)((SSP2_Secure_SR >> 0) & 0xFFFFFFFF), ((SSP2_Secure_SR = (SSP2_Secure_SR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_SR_BSY </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_SR_RFF </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_SR_RNE </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_SR_TNF </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_SR_TFE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP2_Secure_CPSR  ----------------------------
// SVD Line: 4391

unsigned int SSP2_Secure_CPSR __AT (0x59202010);



// --------------------------  Field Item: SSP2_Secure_CPSR_CPSDVSR  ------------------------------
// SVD Line: 4396

//  <item> SFDITEM_FIELD__SSP2_Secure_CPSR_CPSDVSR
//    <name> CPSDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x59202010) Clock prescale divisor </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP2_Secure_CPSR >> 0) & 0xFF), ((SSP2_Secure_CPSR = (SSP2_Secure_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: SSP2_Secure_CPSR  --------------------------------
// SVD Line: 4391

//  <rtree> SFDITEM_REG__SSP2_Secure_CPSR
//    <name> CPSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59202010) Clock prescale register </i>
//    <loc> ( (unsigned int)((SSP2_Secure_CPSR >> 0) & 0xFFFFFFFF), ((SSP2_Secure_CPSR = (SSP2_Secure_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_CPSR_CPSDVSR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP2_Secure_IMSC  ----------------------------
// SVD Line: 4403

unsigned int SSP2_Secure_IMSC __AT (0x59202014);



// ----------------------------  Field Item: SSP2_Secure_IMSC_TXIM  -------------------------------
// SVD Line: 4408

//  <item> SFDITEM_FIELD__SSP2_Secure_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59202014) \nTransmit FIFO interrupt mask\n0 : Masked = Transmit FIFO half empty or less condition interrupt is masked\n1 : NotMasked = Transmit FIFO half empty or less condition interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_Secure_IMSC ) </loc>
//      <o.3..3> TXIM
//        <0=> 0: Masked = Transmit FIFO half empty or less condition interrupt is masked
//        <1=> 1: NotMasked = Transmit FIFO half empty or less condition interrupt is not masked
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SSP2_Secure_IMSC_RXIM  -------------------------------
// SVD Line: 4425

//  <item> SFDITEM_FIELD__SSP2_Secure_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59202014) \nReceive FIFO interrupt mask\n0 : Masked = Receive FIFO half full or less condition interrupt is masked\n1 : NotMasked = Receive FIFO half full or less condition interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_Secure_IMSC ) </loc>
//      <o.2..2> RXIM
//        <0=> 0: Masked = Receive FIFO half full or less condition interrupt is masked
//        <1=> 1: NotMasked = Receive FIFO half full or less condition interrupt is not masked
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SSP2_Secure_IMSC_RTIM  -------------------------------
// SVD Line: 4442

//  <item> SFDITEM_FIELD__SSP2_Secure_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59202014) \nReceive timeout interrupt mask\n0 : Masked = Receive FIFO not empty or no read prior to timeout period interrupt is masked\n1 : NotMasked = Receive FIFO not empty or no read prior to timeout period interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_Secure_IMSC ) </loc>
//      <o.1..1> RTIM
//        <0=> 0: Masked = Receive FIFO not empty or no read prior to timeout period interrupt is masked
//        <1=> 1: NotMasked = Receive FIFO not empty or no read prior to timeout period interrupt is not masked
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: SSP2_Secure_IMSC_RORIM  -------------------------------
// SVD Line: 4459

//  <item> SFDITEM_FIELD__SSP2_Secure_IMSC_RORIM
//    <name> RORIM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59202014) \nReceive overrun interrupt mask\n0 : Masked = Receive FIFO written to while full condition interrupt is masked\n1 : NotMasked = Receive FIFO written to while full condition interrupt is not masked </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_Secure_IMSC ) </loc>
//      <o.0..0> RORIM
//        <0=> 0: Masked = Receive FIFO written to while full condition interrupt is masked
//        <1=> 1: NotMasked = Receive FIFO written to while full condition interrupt is not masked
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: SSP2_Secure_IMSC  --------------------------------
// SVD Line: 4403

//  <rtree> SFDITEM_REG__SSP2_Secure_IMSC
//    <name> IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59202014) Interrupt mask set or clear register </i>
//    <loc> ( (unsigned int)((SSP2_Secure_IMSC >> 0) & 0xFFFFFFFF), ((SSP2_Secure_IMSC = (SSP2_Secure_IMSC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_IMSC_TXIM </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_IMSC_RORIM </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP2_Secure_RIS  -----------------------------
// SVD Line: 4478

unsigned int SSP2_Secure_RIS __AT (0x59202018);



// ----------------------------  Field Item: SSP2_Secure_RIS_TXRIS  -------------------------------
// SVD Line: 4483

//  <item> SFDITEM_FIELD__SSP2_Secure_RIS_TXRIS
//    <name> TXRIS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59202018) transmit FIFO raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_RIS ) </loc>
//      <o.3..3> TXRIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP2_Secure_RIS_RXRIS  -------------------------------
// SVD Line: 4488

//  <item> SFDITEM_FIELD__SSP2_Secure_RIS_RXRIS
//    <name> RXRIS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59202018) receive FIFO raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_RIS ) </loc>
//      <o.2..2> RXRIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP2_Secure_RIS_RTRIS  -------------------------------
// SVD Line: 4493

//  <item> SFDITEM_FIELD__SSP2_Secure_RIS_RTRIS
//    <name> RTRIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59202018) receive timeout raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_RIS ) </loc>
//      <o.1..1> RTRIS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP2_Secure_RIS_RORRIS  -------------------------------
// SVD Line: 4498

//  <item> SFDITEM_FIELD__SSP2_Secure_RIS_RORRIS
//    <name> RORRIS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59202018) receive over run raw interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_RIS ) </loc>
//      <o.0..0> RORRIS
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_Secure_RIS  --------------------------------
// SVD Line: 4478

//  <rtree> SFDITEM_REG__SSP2_Secure_RIS
//    <name> RIS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59202018) Raw interrupt status register </i>
//    <loc> ( (unsigned int)((SSP2_Secure_RIS >> 0) & 0xFFFFFFFF), ((SSP2_Secure_RIS = (SSP2_Secure_RIS & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_RIS_TXRIS </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_RIS_RORRIS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP2_Secure_MIS  -----------------------------
// SVD Line: 4505

unsigned int SSP2_Secure_MIS __AT (0x5920201C);



// ----------------------------  Field Item: SSP2_Secure_MIS_TXMIS  -------------------------------
// SVD Line: 4510

//  <item> SFDITEM_FIELD__SSP2_Secure_MIS_TXMIS
//    <name> TXMIS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x5920201C) transmit FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_MIS ) </loc>
//      <o.3..3> TXMIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP2_Secure_MIS_RXMIS  -------------------------------
// SVD Line: 4515

//  <item> SFDITEM_FIELD__SSP2_Secure_MIS_RXMIS
//    <name> RXMIS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x5920201C) receive FIFO masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_MIS ) </loc>
//      <o.2..2> RXMIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP2_Secure_MIS_RTMIS  -------------------------------
// SVD Line: 4520

//  <item> SFDITEM_FIELD__SSP2_Secure_MIS_RTMIS
//    <name> RTMIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5920201C) receive timeout masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_MIS ) </loc>
//      <o.1..1> RTMIS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP2_Secure_MIS_RORMIS  -------------------------------
// SVD Line: 4525

//  <item> SFDITEM_FIELD__SSP2_Secure_MIS_RORMIS
//    <name> RORMIS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5920201C) receive over run masked interrupt state </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_MIS ) </loc>
//      <o.0..0> RORMIS
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_Secure_MIS  --------------------------------
// SVD Line: 4505

//  <rtree> SFDITEM_REG__SSP2_Secure_MIS
//    <name> MIS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5920201C) Masked interrupt status register </i>
//    <loc> ( (unsigned int)((SSP2_Secure_MIS >> 0) & 0xFFFFFFFF), ((SSP2_Secure_MIS = (SSP2_Secure_MIS & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_MIS_TXMIS </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_MIS_RORMIS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP2_Secure_ICR  -----------------------------
// SVD Line: 4532

unsigned int SSP2_Secure_ICR __AT (0x59202020);



// ----------------------------  Field Item: SSP2_Secure_ICR_RTIC  --------------------------------
// SVD Line: 4537

//  <item> SFDITEM_FIELD__SSP2_Secure_ICR_RTIC
//    <name> RTIC </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59202020) Clears the SSPRTINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_ICR ) </loc>
//      <o.1..1> RTIC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP2_Secure_ICR_RORIC  -------------------------------
// SVD Line: 4542

//  <item> SFDITEM_FIELD__SSP2_Secure_ICR_RORIC
//    <name> RORIC </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59202020) Clears the SSPRORINTR interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_ICR ) </loc>
//      <o.0..0> RORIC
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_Secure_ICR  --------------------------------
// SVD Line: 4532

//  <rtree> SFDITEM_REG__SSP2_Secure_ICR
//    <name> ICR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59202020) Interrupt clear register </i>
//    <loc> ( (unsigned int)((SSP2_Secure_ICR >> 0) & 0xFFFFFFFF), ((SSP2_Secure_ICR = (SSP2_Secure_ICR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_ICR_RTIC </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_ICR_RORIC </item>
//  </rtree>
//  


// ------------------------  Register Item Address: SSP2_Secure_DMACR  ----------------------------
// SVD Line: 4549

unsigned int SSP2_Secure_DMACR __AT (0x59202024);



// --------------------------  Field Item: SSP2_Secure_DMACR_TXDMAE  ------------------------------
// SVD Line: 4554

//  <item> SFDITEM_FIELD__SSP2_Secure_DMACR_TXDMAE
//    <name> TXDMAE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59202024) Transmit DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_DMACR ) </loc>
//      <o.1..1> TXDMAE
//    </check>
//  </item>
//  


// --------------------------  Field Item: SSP2_Secure_DMACR_RXDMAE  ------------------------------
// SVD Line: 4559

//  <item> SFDITEM_FIELD__SSP2_Secure_DMACR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59202024) Receive DMA Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_DMACR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: SSP2_Secure_DMACR  -------------------------------
// SVD Line: 4549

//  <rtree> SFDITEM_REG__SSP2_Secure_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59202024) DMA control register </i>
//    <loc> ( (unsigned int)((SSP2_Secure_DMACR >> 0) & 0xFFFFFFFF), ((SSP2_Secure_DMACR = (SSP2_Secure_DMACR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_DMACR_TXDMAE </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_DMACR_RXDMAE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP2_Secure_TCR  -----------------------------
// SVD Line: 4566

unsigned int SSP2_Secure_TCR __AT (0x59202080);



// --------------------------  Field Item: SSP2_Secure_TCR_TESTFIFO  ------------------------------
// SVD Line: 4572

//  <item> SFDITEM_FIELD__SSP2_Secure_TCR_TESTFIFO
//    <name> TESTFIFO </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59202080) \nTest FIFO enable\n0 : Disabled = Normal operation\n1 : Enabled = When this bit is 1, a write to the TDR writes data into the receive FIFO, and reads from the TDR reads data out of the transmit FIFO. </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_Secure_TCR ) </loc>
//      <o.1..1> TESTFIFO
//        <0=> 0: Disabled = Normal operation
//        <1=> 1: Enabled = When this bit is 1, a write to the TDR writes data into the receive FIFO, and reads from the TDR reads data out of the transmit FIFO.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SSP2_Secure_TCR_ITEN  --------------------------------
// SVD Line: 4589

//  <item> SFDITEM_FIELD__SSP2_Secure_TCR_ITEN
//    <name> ITEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59202080) \nIntegration test enable\n0 : Disabled = Normal mode\n1 : Enabled = The PrimeCell SSP is placed in integration test mode. </i>
//    <combo> 
//      <loc> ( (unsigned int) SSP2_Secure_TCR ) </loc>
//      <o.0..0> ITEN
//        <0=> 0: Disabled = Normal mode
//        <1=> 1: Enabled = The PrimeCell SSP is placed in integration test mode.
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_Secure_TCR  --------------------------------
// SVD Line: 4566

//  <rtree> SFDITEM_REG__SSP2_Secure_TCR
//    <name> TCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59202080) Test control register </i>
//    <loc> ( (unsigned int)((SSP2_Secure_TCR >> 0) & 0xFFFFFFFF), ((SSP2_Secure_TCR = (SSP2_Secure_TCR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_TCR_TESTFIFO </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_TCR_ITEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP2_Secure_ITIP  ----------------------------
// SVD Line: 4608

unsigned int SSP2_Secure_ITIP __AT (0x59202084);



// --------------------------  Field Item: SSP2_Secure_ITIP_TXDMACLR  -----------------------------
// SVD Line: 4614

//  <item> SFDITEM_FIELD__SSP2_Secure_ITIP_TXDMACLR
//    <name> TXDMACLR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x59202084) Value to be driven on the intra-chip input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_ITIP ) </loc>
//      <o.4..4> TXDMACLR
//    </check>
//  </item>
//  


// -------------------------  Field Item: SSP2_Secure_ITIP_RXDDMACLR  -----------------------------
// SVD Line: 4619

//  <item> SFDITEM_FIELD__SSP2_Secure_ITIP_RXDDMACLR
//    <name> RXDDMACLR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59202084) Value to be driven on the intra-chip input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_ITIP ) </loc>
//      <o.3..3> RXDDMACLR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP2_Secure_ITIP_CLKIN  -------------------------------
// SVD Line: 4624

//  <item> SFDITEM_FIELD__SSP2_Secure_ITIP_CLKIN
//    <name> CLKIN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59202084) Return the value of CLKIN primary input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_ITIP ) </loc>
//      <o.2..2> CLKIN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP2_Secure_ITIP_FSSIN  -------------------------------
// SVD Line: 4629

//  <item> SFDITEM_FIELD__SSP2_Secure_ITIP_FSSIN
//    <name> FSSIN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59202084) Return the value of FSSIN primary input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_ITIP ) </loc>
//      <o.1..1> FSSIN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP2_Secure_ITIP_RXD  --------------------------------
// SVD Line: 4634

//  <item> SFDITEM_FIELD__SSP2_Secure_ITIP_RXD
//    <name> RXD </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59202084) Return the value of RXD primary input </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_ITIP ) </loc>
//      <o.0..0> RXD
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: SSP2_Secure_ITIP  --------------------------------
// SVD Line: 4608

//  <rtree> SFDITEM_REG__SSP2_Secure_ITIP
//    <name> ITIP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59202084) Integration test input register </i>
//    <loc> ( (unsigned int)((SSP2_Secure_ITIP >> 0) & 0xFFFFFFFF), ((SSP2_Secure_ITIP = (SSP2_Secure_ITIP & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_ITIP_TXDMACLR </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_ITIP_RXDDMACLR </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_ITIP_CLKIN </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_ITIP_FSSIN </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_ITIP_RXD </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP2_Secure_ITOP  ----------------------------
// SVD Line: 4641

unsigned int SSP2_Secure_ITOP __AT (0x59202088);



// -------------------------  Field Item: SSP2_Secure_ITOP_TXDMASREQ  -----------------------------
// SVD Line: 4647

//  <item> SFDITEM_FIELD__SSP2_Secure_ITOP_TXDMASREQ
//    <name> TXDMASREQ </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x59202088) Value on the TXDMASREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_ITOP ) </loc>
//      <o.13..13> TXDMASREQ
//    </check>
//  </item>
//  


// -------------------------  Field Item: SSP2_Secure_ITOP_TXDMABREQ  -----------------------------
// SVD Line: 4652

//  <item> SFDITEM_FIELD__SSP2_Secure_ITOP_TXDMABREQ
//    <name> TXDMABREQ </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x59202088) Value on the TXDMABREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_ITOP ) </loc>
//      <o.12..12> TXDMABREQ
//    </check>
//  </item>
//  


// -------------------------  Field Item: SSP2_Secure_ITOP_RXDMASREQ  -----------------------------
// SVD Line: 4657

//  <item> SFDITEM_FIELD__SSP2_Secure_ITOP_RXDMASREQ
//    <name> RXDMASREQ </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x59202088) Value on the TXDMASREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_ITOP ) </loc>
//      <o.11..11> RXDMASREQ
//    </check>
//  </item>
//  


// -------------------------  Field Item: SSP2_Secure_ITOP_RXDMABREQ  -----------------------------
// SVD Line: 4662

//  <item> SFDITEM_FIELD__SSP2_Secure_ITOP_RXDMABREQ
//    <name> RXDMABREQ </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x59202088) Value on the TXDMABREQ line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_ITOP ) </loc>
//      <o.10..10> RXDMABREQ
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP2_Secure_ITOP_INTR  -------------------------------
// SVD Line: 4667

//  <item> SFDITEM_FIELD__SSP2_Secure_ITOP_INTR
//    <name> INTR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x59202088) Value on the INTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_ITOP ) </loc>
//      <o.9..9> INTR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP2_Secure_ITOP_TXINTR  ------------------------------
// SVD Line: 4672

//  <item> SFDITEM_FIELD__SSP2_Secure_ITOP_TXINTR
//    <name> TXINTR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x59202088) Value on the TXINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_ITOP ) </loc>
//      <o.8..8> TXINTR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP2_Secure_ITOP_RXINTR  ------------------------------
// SVD Line: 4677

//  <item> SFDITEM_FIELD__SSP2_Secure_ITOP_RXINTR
//    <name> RXINTR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x59202088) Value on the RXINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_ITOP ) </loc>
//      <o.7..7> RXINTR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP2_Secure_ITOP_RTINTR  ------------------------------
// SVD Line: 4682

//  <item> SFDITEM_FIELD__SSP2_Secure_ITOP_RTINTR
//    <name> RTINTR </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x59202088) Value on the RTINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_ITOP ) </loc>
//      <o.6..6> RTINTR
//    </check>
//  </item>
//  


// --------------------------  Field Item: SSP2_Secure_ITOP_RORINTR  ------------------------------
// SVD Line: 4687

//  <item> SFDITEM_FIELD__SSP2_Secure_ITOP_RORINTR
//    <name> RORINTR </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x59202088) Value on the RORINTR line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_ITOP ) </loc>
//      <o.5..5> RORINTR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP2_Secure_ITOP_OE  --------------------------------
// SVD Line: 4692

//  <item> SFDITEM_FIELD__SSP2_Secure_ITOP_OE
//    <name> OE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x59202088) Value on the OE line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_ITOP ) </loc>
//      <o.4..4> OE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP2_Secure_ITOP_CTLOE  -------------------------------
// SVD Line: 4697

//  <item> SFDITEM_FIELD__SSP2_Secure_ITOP_CTLOE
//    <name> CTLOE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59202088) Value on the OE line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_ITOP ) </loc>
//      <o.3..3> CTLOE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP2_Secure_ITOP_CLKOUT  ------------------------------
// SVD Line: 4702

//  <item> SFDITEM_FIELD__SSP2_Secure_ITOP_CLKOUT
//    <name> CLKOUT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59202088) Value on the CLKOUT line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_ITOP ) </loc>
//      <o.2..2> CLKOUT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SSP2_Secure_ITOP_FSSOUT  ------------------------------
// SVD Line: 4707

//  <item> SFDITEM_FIELD__SSP2_Secure_ITOP_FSSOUT
//    <name> FSSOUT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59202088) Value on the FSSOUT line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_ITOP ) </loc>
//      <o.1..1> FSSOUT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SSP2_Secure_ITOP_TXD  --------------------------------
// SVD Line: 4712

//  <item> SFDITEM_FIELD__SSP2_Secure_ITOP_TXD
//    <name> TXD </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59202088) Value on the TXD line </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_Secure_ITOP ) </loc>
//      <o.0..0> TXD
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: SSP2_Secure_ITOP  --------------------------------
// SVD Line: 4641

//  <rtree> SFDITEM_REG__SSP2_Secure_ITOP
//    <name> ITOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59202088) Integration test output register </i>
//    <loc> ( (unsigned int)((SSP2_Secure_ITOP >> 0) & 0xFFFFFFFF), ((SSP2_Secure_ITOP = (SSP2_Secure_ITOP & ~(0x3FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_ITOP_TXDMASREQ </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_ITOP_TXDMABREQ </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_ITOP_RXDMASREQ </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_ITOP_RXDMABREQ </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_ITOP_INTR </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_ITOP_TXINTR </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_ITOP_RXINTR </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_ITOP_RTINTR </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_ITOP_RORINTR </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_ITOP_OE </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_ITOP_CTLOE </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_ITOP_CLKOUT </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_ITOP_FSSOUT </item>
//    <item> SFDITEM_FIELD__SSP2_Secure_ITOP_TXD </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP2_Secure_TDR  -----------------------------
// SVD Line: 4719

unsigned int SSP2_Secure_TDR __AT (0x5920208C);



// ----------------------------  Field Item: SSP2_Secure_TDR_DATA  --------------------------------
// SVD Line: 4725

//  <item> SFDITEM_FIELD__SSP2_Secure_TDR_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x5920208C) When the TESTFIFO signal is asserted, data is written into the receive FIFO and read out of the transmit FIFO </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP2_Secure_TDR >> 0) & 0xFFFF), ((SSP2_Secure_TDR = (SSP2_Secure_TDR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_Secure_TDR  --------------------------------
// SVD Line: 4719

//  <rtree> SFDITEM_REG__SSP2_Secure_TDR
//    <name> TDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5920208C) Test data register </i>
//    <loc> ( (unsigned int)((SSP2_Secure_TDR >> 0) & 0xFFFFFFFF), ((SSP2_Secure_TDR = (SSP2_Secure_TDR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_Secure_TDR_DATA </item>
//  </rtree>
//  


// ------------------------------  Peripheral View: SSP2_Secure  ----------------------------------
// SVD Line: 4773

//  <view> SSP2_Secure
//    <name> SSP2_Secure </name>
//    <item> SFDITEM_REG__SSP2_Secure_CR0 </item>
//    <item> SFDITEM_REG__SSP2_Secure_CR1 </item>
//    <item> SFDITEM_REG__SSP2_Secure_DR </item>
//    <item> SFDITEM_REG__SSP2_Secure_SR </item>
//    <item> SFDITEM_REG__SSP2_Secure_CPSR </item>
//    <item> SFDITEM_REG__SSP2_Secure_IMSC </item>
//    <item> SFDITEM_REG__SSP2_Secure_RIS </item>
//    <item> SFDITEM_REG__SSP2_Secure_MIS </item>
//    <item> SFDITEM_REG__SSP2_Secure_ICR </item>
//    <item> SFDITEM_REG__SSP2_Secure_DMACR </item>
//    <item> SFDITEM_REG__SSP2_Secure_TCR </item>
//    <item> SFDITEM_REG__SSP2_Secure_ITIP </item>
//    <item> SFDITEM_REG__SSP2_Secure_ITOP </item>
//    <item> SFDITEM_REG__SSP2_Secure_TDR </item>
//  </view>
//  


// ---------------------------  Register Item Address: WATCHDOG_WCS  ------------------------------
// SVD Line: 4802

unsigned int WATCHDOG_WCS __AT (0x48040000);



// -------------------------------  Register Item: WATCHDOG_WCS  ----------------------------------
// SVD Line: 4802

//  <item> SFDITEM_REG__WATCHDOG_WCS
//    <name> WCS </name>
//    <i> [Bits 31..0] RW (@ 0x48040000) Watchdog control and Status. </i>
//    <edit> 
//      <loc> ( (unsigned int)((WATCHDOG_WCS >> 0) & 0xFFFFFFFF), ((WATCHDOG_WCS = (WATCHDOG_WCS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: WATCHDOG_WOR  ------------------------------
// SVD Line: 4810

unsigned int WATCHDOG_WOR __AT (0x48040008);



// -------------------------------  Register Item: WATCHDOG_WOR  ----------------------------------
// SVD Line: 4810

//  <item> SFDITEM_REG__WATCHDOG_WOR
//    <name> WOR </name>
//    <i> [Bits 31..0] RW (@ 0x48040008) Watchdog Offset Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((WATCHDOG_WOR >> 0) & 0xFFFFFFFF), ((WATCHDOG_WOR = (WATCHDOG_WOR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: WATCHDOG_WCV_LOW  ----------------------------
// SVD Line: 4818

unsigned int WATCHDOG_WCV_LOW __AT (0x48040010);



// -----------------------------  Register Item: WATCHDOG_WCV_LOW  --------------------------------
// SVD Line: 4818

//  <item> SFDITEM_REG__WATCHDOG_WCV_LOW
//    <name> WCV_LOW </name>
//    <i> [Bits 31..0] RW (@ 0x48040010) Watchdog Compare Value Lower Word. </i>
//    <edit> 
//      <loc> ( (unsigned int)((WATCHDOG_WCV_LOW >> 0) & 0xFFFFFFFF), ((WATCHDOG_WCV_LOW = (WATCHDOG_WCV_LOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: WATCHDOG_WCV_HIGH  ----------------------------
// SVD Line: 4826

unsigned int WATCHDOG_WCV_HIGH __AT (0x48040014);



// ----------------------------  Register Item: WATCHDOG_WCV_HIGH  --------------------------------
// SVD Line: 4826

//  <item> SFDITEM_REG__WATCHDOG_WCV_HIGH
//    <name> WCV_HIGH </name>
//    <i> [Bits 31..0] RW (@ 0x48040014) Watchdog Compare Value Higher Word. </i>
//    <edit> 
//      <loc> ( (unsigned int)((WATCHDOG_WCV_HIGH >> 0) & 0xFFFFFFFF), ((WATCHDOG_WCV_HIGH = (WATCHDOG_WCV_HIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: WATCHDOG_CNT_W_IIDR  ---------------------------
// SVD Line: 4834

unsigned int WATCHDOG_CNT_W_IIDR __AT (0x48040FCC);



// ---------------------------  Register Item: WATCHDOG_CNT_W_IIDR  -------------------------------
// SVD Line: 4834

//  <item> SFDITEM_REG__WATCHDOG_CNT_W_IIDR
//    <name> CNT_W_IIDR </name>
//    <i> [Bits 31..0] RO (@ 0x48040FCC) Control Frame Watchdog Interface Identification Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((WATCHDOG_CNT_W_IIDR >> 0) & 0xFFFFFFFF), ((WATCHDOG_CNT_W_IIDR = (WATCHDOG_CNT_W_IIDR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: WATCHDOG_WRR  ------------------------------
// SVD Line: 4842

unsigned int WATCHDOG_WRR __AT (0x48041000);



// -------------------------------  Register Item: WATCHDOG_WRR  ----------------------------------
// SVD Line: 4842

//  <item> SFDITEM_REG__WATCHDOG_WRR
//    <name> WRR </name>
//    <i> [Bits 31..0] WO (@ 0x48041000) Watchdog Refresh Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((WATCHDOG_WRR >> 0) & 0xFFFFFFFF), ((WATCHDOG_WRR = (WATCHDOG_WRR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: WATCHDOG_REF_W_IIDR  ---------------------------
// SVD Line: 4850

unsigned int WATCHDOG_REF_W_IIDR __AT (0x48041FCC);



// ---------------------------  Register Item: WATCHDOG_REF_W_IIDR  -------------------------------
// SVD Line: 4850

//  <item> SFDITEM_REG__WATCHDOG_REF_W_IIDR
//    <name> REF_W_IIDR </name>
//    <i> [Bits 31..0] RO (@ 0x48041FCC) Refresh Frame Watchdog Interface Identification Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((WATCHDOG_REF_W_IIDR >> 0) & 0xFFFFFFFF), ((WATCHDOG_REF_W_IIDR = (WATCHDOG_REF_W_IIDR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Peripheral View: WATCHDOG  -----------------------------------
// SVD Line: 4780

//  <view> WATCHDOG
//    <name> WATCHDOG </name>
//    <item> SFDITEM_REG__WATCHDOG_WCS </item>
//    <item> SFDITEM_REG__WATCHDOG_WOR </item>
//    <item> SFDITEM_REG__WATCHDOG_WCV_LOW </item>
//    <item> SFDITEM_REG__WATCHDOG_WCV_HIGH </item>
//    <item> SFDITEM_REG__WATCHDOG_CNT_W_IIDR </item>
//    <item> SFDITEM_REG__WATCHDOG_WRR </item>
//    <item> SFDITEM_REG__WATCHDOG_REF_W_IIDR </item>
//  </view>
//  


// -----------------------  Register Item Address: WATCHDOG_Secure_WCS  ---------------------------
// SVD Line: 4802

unsigned int WATCHDOG_Secure_WCS __AT (0x58040000);



// ---------------------------  Register Item: WATCHDOG_Secure_WCS  -------------------------------
// SVD Line: 4802

//  <item> SFDITEM_REG__WATCHDOG_Secure_WCS
//    <name> WCS </name>
//    <i> [Bits 31..0] RW (@ 0x58040000) Watchdog control and Status. </i>
//    <edit> 
//      <loc> ( (unsigned int)((WATCHDOG_Secure_WCS >> 0) & 0xFFFFFFFF), ((WATCHDOG_Secure_WCS = (WATCHDOG_Secure_WCS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: WATCHDOG_Secure_WOR  ---------------------------
// SVD Line: 4810

unsigned int WATCHDOG_Secure_WOR __AT (0x58040008);



// ---------------------------  Register Item: WATCHDOG_Secure_WOR  -------------------------------
// SVD Line: 4810

//  <item> SFDITEM_REG__WATCHDOG_Secure_WOR
//    <name> WOR </name>
//    <i> [Bits 31..0] RW (@ 0x58040008) Watchdog Offset Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((WATCHDOG_Secure_WOR >> 0) & 0xFFFFFFFF), ((WATCHDOG_Secure_WOR = (WATCHDOG_Secure_WOR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: WATCHDOG_Secure_WCV_LOW  -------------------------
// SVD Line: 4818

unsigned int WATCHDOG_Secure_WCV_LOW __AT (0x58040010);



// -------------------------  Register Item: WATCHDOG_Secure_WCV_LOW  -----------------------------
// SVD Line: 4818

//  <item> SFDITEM_REG__WATCHDOG_Secure_WCV_LOW
//    <name> WCV_LOW </name>
//    <i> [Bits 31..0] RW (@ 0x58040010) Watchdog Compare Value Lower Word. </i>
//    <edit> 
//      <loc> ( (unsigned int)((WATCHDOG_Secure_WCV_LOW >> 0) & 0xFFFFFFFF), ((WATCHDOG_Secure_WCV_LOW = (WATCHDOG_Secure_WCV_LOW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: WATCHDOG_Secure_WCV_HIGH  ------------------------
// SVD Line: 4826

unsigned int WATCHDOG_Secure_WCV_HIGH __AT (0x58040014);



// -------------------------  Register Item: WATCHDOG_Secure_WCV_HIGH  ----------------------------
// SVD Line: 4826

//  <item> SFDITEM_REG__WATCHDOG_Secure_WCV_HIGH
//    <name> WCV_HIGH </name>
//    <i> [Bits 31..0] RW (@ 0x58040014) Watchdog Compare Value Higher Word. </i>
//    <edit> 
//      <loc> ( (unsigned int)((WATCHDOG_Secure_WCV_HIGH >> 0) & 0xFFFFFFFF), ((WATCHDOG_Secure_WCV_HIGH = (WATCHDOG_Secure_WCV_HIGH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: WATCHDOG_Secure_CNT_W_IIDR  -----------------------
// SVD Line: 4834

unsigned int WATCHDOG_Secure_CNT_W_IIDR __AT (0x58040FCC);



// ------------------------  Register Item: WATCHDOG_Secure_CNT_W_IIDR  ---------------------------
// SVD Line: 4834

//  <item> SFDITEM_REG__WATCHDOG_Secure_CNT_W_IIDR
//    <name> CNT_W_IIDR </name>
//    <i> [Bits 31..0] RO (@ 0x58040FCC) Control Frame Watchdog Interface Identification Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((WATCHDOG_Secure_CNT_W_IIDR >> 0) & 0xFFFFFFFF), ((WATCHDOG_Secure_CNT_W_IIDR = (WATCHDOG_Secure_CNT_W_IIDR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: WATCHDOG_Secure_WRR  ---------------------------
// SVD Line: 4842

unsigned int WATCHDOG_Secure_WRR __AT (0x58041000);



// ---------------------------  Register Item: WATCHDOG_Secure_WRR  -------------------------------
// SVD Line: 4842

//  <item> SFDITEM_REG__WATCHDOG_Secure_WRR
//    <name> WRR </name>
//    <i> [Bits 31..0] WO (@ 0x58041000) Watchdog Refresh Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((WATCHDOG_Secure_WRR >> 0) & 0xFFFFFFFF), ((WATCHDOG_Secure_WRR = (WATCHDOG_Secure_WRR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: WATCHDOG_Secure_REF_W_IIDR  -----------------------
// SVD Line: 4850

unsigned int WATCHDOG_Secure_REF_W_IIDR __AT (0x58041FCC);



// ------------------------  Register Item: WATCHDOG_Secure_REF_W_IIDR  ---------------------------
// SVD Line: 4850

//  <item> SFDITEM_REG__WATCHDOG_Secure_REF_W_IIDR
//    <name> REF_W_IIDR </name>
//    <i> [Bits 31..0] RO (@ 0x58041FCC) Refresh Frame Watchdog Interface Identification Register. </i>
//    <edit> 
//      <loc> ( (unsigned int)((WATCHDOG_Secure_REF_W_IIDR >> 0) & 0xFFFFFFFF), ((WATCHDOG_Secure_REF_W_IIDR = (WATCHDOG_Secure_REF_W_IIDR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Peripheral View: WATCHDOG_Secure  --------------------------------
// SVD Line: 4860

//  <view> WATCHDOG_Secure
//    <name> WATCHDOG_Secure </name>
//    <item> SFDITEM_REG__WATCHDOG_Secure_WCS </item>
//    <item> SFDITEM_REG__WATCHDOG_Secure_WOR </item>
//    <item> SFDITEM_REG__WATCHDOG_Secure_WCV_LOW </item>
//    <item> SFDITEM_REG__WATCHDOG_Secure_WCV_HIGH </item>
//    <item> SFDITEM_REG__WATCHDOG_Secure_CNT_W_IIDR </item>
//    <item> SFDITEM_REG__WATCHDOG_Secure_WRR </item>
//    <item> SFDITEM_REG__WATCHDOG_Secure_REF_W_IIDR </item>
//  </view>
//  


// -----------------------  Register Item Address: SLOWCLKWATCHDOG_CTRL  --------------------------
// SVD Line: 3270

unsigned int SLOWCLKWATCHDOG_CTRL __AT (0x5802E000);



// -------------------------  Field Item: SLOWCLKWATCHDOG_CTRL_ENABLE  ----------------------------
// SVD Line: 3275

//  <item> SFDITEM_FIELD__SLOWCLKWATCHDOG_CTRL_ENABLE
//    <name> ENABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5802E000) \nEnable\n0 : Disable = Timer is disabled\n1 : Enable = Timer is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SLOWCLKWATCHDOG_CTRL ) </loc>
//      <o.0..0> ENABLE
//        <0=> 0: Disable = Timer is disabled
//        <1=> 1: Enable = Timer is enabled
//    </combo>
//  </item>
//  


// -------------------------  Field Item: SLOWCLKWATCHDOG_CTRL_EXTIN  -----------------------------
// SVD Line: 3292

//  <item> SFDITEM_FIELD__SLOWCLKWATCHDOG_CTRL_EXTIN
//    <name> EXTIN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5802E000) \nExternal Input as Enable\n0 : Disable = External Input as Enable is disabled\n1 : Enable = External Input as Enable is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SLOWCLKWATCHDOG_CTRL ) </loc>
//      <o.1..1> EXTIN
//        <0=> 0: Disable = External Input as Enable is disabled
//        <1=> 1: Enable = External Input as Enable is enabled
//    </combo>
//  </item>
//  


// -------------------------  Field Item: SLOWCLKWATCHDOG_CTRL_EXTCLK  ----------------------------
// SVD Line: 3309

//  <item> SFDITEM_FIELD__SLOWCLKWATCHDOG_CTRL_EXTCLK
//    <name> EXTCLK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x5802E000) \nExternal Clock Enable\n0 : Disable = External Clock is disabled\n1 : Enable = External Clock is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SLOWCLKWATCHDOG_CTRL ) </loc>
//      <o.2..2> EXTCLK
//        <0=> 0: Disable = External Clock is disabled
//        <1=> 1: Enable = External Clock is enabled
//    </combo>
//  </item>
//  


// -------------------------  Field Item: SLOWCLKWATCHDOG_CTRL_INTEN  -----------------------------
// SVD Line: 3326

//  <item> SFDITEM_FIELD__SLOWCLKWATCHDOG_CTRL_INTEN
//    <name> INTEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x5802E000) \nInterrupt Enable\n0 : Disable = Interrupt is disabled\n1 : Enable = Interrupt is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SLOWCLKWATCHDOG_CTRL ) </loc>
//      <o.3..3> INTEN
//        <0=> 0: Disable = Interrupt is disabled
//        <1=> 1: Enable = Interrupt is enabled
//    </combo>
//  </item>
//  


// --------------------------  Register RTree: SLOWCLKWATCHDOG_CTRL  ------------------------------
// SVD Line: 3270

//  <rtree> SFDITEM_REG__SLOWCLKWATCHDOG_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5802E000) Control Register </i>
//    <loc> ( (unsigned int)((SLOWCLKWATCHDOG_CTRL >> 0) & 0xFFFFFFFF), ((SLOWCLKWATCHDOG_CTRL = (SLOWCLKWATCHDOG_CTRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SLOWCLKWATCHDOG_CTRL_ENABLE </item>
//    <item> SFDITEM_FIELD__SLOWCLKWATCHDOG_CTRL_EXTIN </item>
//    <item> SFDITEM_FIELD__SLOWCLKWATCHDOG_CTRL_EXTCLK </item>
//    <item> SFDITEM_FIELD__SLOWCLKWATCHDOG_CTRL_INTEN </item>
//  </rtree>
//  


// ----------------------  Register Item Address: SLOWCLKWATCHDOG_VALUE  --------------------------
// SVD Line: 3345

unsigned int SLOWCLKWATCHDOG_VALUE __AT (0x5802E004);



// --------------------------  Register Item: SLOWCLKWATCHDOG_VALUE  ------------------------------
// SVD Line: 3345

//  <item> SFDITEM_REG__SLOWCLKWATCHDOG_VALUE
//    <name> VALUE </name>
//    <i> [Bits 31..0] RW (@ 0x5802E004) Current Timer Counter Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((SLOWCLKWATCHDOG_VALUE >> 0) & 0xFFFFFFFF), ((SLOWCLKWATCHDOG_VALUE = (SLOWCLKWATCHDOG_VALUE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: SLOWCLKWATCHDOG_RELOAD  -------------------------
// SVD Line: 3350

unsigned int SLOWCLKWATCHDOG_RELOAD __AT (0x5802E008);



// --------------------------  Register Item: SLOWCLKWATCHDOG_RELOAD  -----------------------------
// SVD Line: 3350

//  <item> SFDITEM_REG__SLOWCLKWATCHDOG_RELOAD
//    <name> RELOAD </name>
//    <i> [Bits 31..0] RW (@ 0x5802E008) Counter Reload Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((SLOWCLKWATCHDOG_RELOAD >> 0) & 0xFFFFFFFF), ((SLOWCLKWATCHDOG_RELOAD = (SLOWCLKWATCHDOG_RELOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: SLOWCLKWATCHDOG_INTSTATUS  ------------------------
// SVD Line: 3355

unsigned int SLOWCLKWATCHDOG_INTSTATUS __AT (0x5802E00C);



// ------------------------  Register Item: SLOWCLKWATCHDOG_INTSTATUS  ----------------------------
// SVD Line: 3355

//  <item> SFDITEM_REG__SLOWCLKWATCHDOG_INTSTATUS
//    <name> INTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x5802E00C) Timer Interrupt status register </i>
//    <edit> 
//      <loc> ( (unsigned int)((SLOWCLKWATCHDOG_INTSTATUS >> 0) & 0xFFFFFFFF), ((SLOWCLKWATCHDOG_INTSTATUS = (SLOWCLKWATCHDOG_INTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: SLOWCLKWATCHDOG_INTCLEAR  ------------------------
// SVD Line: 3361

unsigned int SLOWCLKWATCHDOG_INTCLEAR __AT (0x5802E00C);



// -------------------------  Register Item: SLOWCLKWATCHDOG_INTCLEAR  ----------------------------
// SVD Line: 3361

//  <item> SFDITEM_REG__SLOWCLKWATCHDOG_INTCLEAR
//    <name> INTCLEAR </name>
//    <i> [Bits 31..0] WO (@ 0x5802E00C) Timer Interrupt clear register </i>
//    <edit> 
//      <loc> ( (unsigned int)((SLOWCLKWATCHDOG_INTCLEAR >> 0) & 0xFFFFFFFF), ((SLOWCLKWATCHDOG_INTCLEAR = (SLOWCLKWATCHDOG_INTCLEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Peripheral View: SLOWCLKWATCHDOG  --------------------------------
// SVD Line: 4867

//  <view> SLOWCLKWATCHDOG
//    <name> SLOWCLKWATCHDOG </name>
//    <item> SFDITEM_REG__SLOWCLKWATCHDOG_CTRL </item>
//    <item> SFDITEM_REG__SLOWCLKWATCHDOG_VALUE </item>
//    <item> SFDITEM_REG__SLOWCLKWATCHDOG_RELOAD </item>
//    <item> SFDITEM_REG__SLOWCLKWATCHDOG_INTSTATUS </item>
//    <item> SFDITEM_REG__SLOWCLKWATCHDOG_INTCLEAR </item>
//  </view>
//  


// ----------------------------  Register Item Address: FPGAIO_LED  -------------------------------
// SVD Line: 4885

unsigned int FPGAIO_LED __AT (0x49302000);



// -------------------------------  Field Item: FPGAIO_LED_LED0  ----------------------------------
// SVD Line: 4892

//  <item> SFDITEM_FIELD__FPGAIO_LED_LED0
//    <name> LED0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49302000) \nLED0\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_LED ) </loc>
//      <o.0..0> LED0
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: FPGAIO_LED_LED1  ----------------------------------
// SVD Line: 4908

//  <item> SFDITEM_FIELD__FPGAIO_LED_LED1
//    <name> LED1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49302000) \nLED1\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_LED ) </loc>
//      <o.1..1> LED1
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: FPGAIO_LED_LED2  ----------------------------------
// SVD Line: 4924

//  <item> SFDITEM_FIELD__FPGAIO_LED_LED2
//    <name> LED2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49302000) \nLED2\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_LED ) </loc>
//      <o.2..2> LED2
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: FPGAIO_LED_LED3  ----------------------------------
// SVD Line: 4940

//  <item> SFDITEM_FIELD__FPGAIO_LED_LED3
//    <name> LED3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49302000) \nLED3\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_LED ) </loc>
//      <o.3..3> LED3
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: FPGAIO_LED_LED4  ----------------------------------
// SVD Line: 4956

//  <item> SFDITEM_FIELD__FPGAIO_LED_LED4
//    <name> LED4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x49302000) \nLED4\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_LED ) </loc>
//      <o.4..4> LED4
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: FPGAIO_LED_LED5  ----------------------------------
// SVD Line: 4972

//  <item> SFDITEM_FIELD__FPGAIO_LED_LED5
//    <name> LED5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x49302000) \nLED5\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_LED ) </loc>
//      <o.5..5> LED5
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: FPGAIO_LED_LED6  ----------------------------------
// SVD Line: 4988

//  <item> SFDITEM_FIELD__FPGAIO_LED_LED6
//    <name> LED6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x49302000) \nLED6\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_LED ) </loc>
//      <o.6..6> LED6
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: FPGAIO_LED_LED7  ----------------------------------
// SVD Line: 5004

//  <item> SFDITEM_FIELD__FPGAIO_LED_LED7
//    <name> LED7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x49302000) \nLED7\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_LED ) </loc>
//      <o.7..7> LED7
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: FPGAIO_LED_LED8  ----------------------------------
// SVD Line: 5020

//  <item> SFDITEM_FIELD__FPGAIO_LED_LED8
//    <name> LED8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x49302000) \nLED8\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_LED ) </loc>
//      <o.8..8> LED8
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: FPGAIO_LED_LED9  ----------------------------------
// SVD Line: 5036

//  <item> SFDITEM_FIELD__FPGAIO_LED_LED9
//    <name> LED9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x49302000) \nLED9\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_LED ) </loc>
//      <o.9..9> LED9
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: FPGAIO_LED  -----------------------------------
// SVD Line: 4885

//  <rtree> SFDITEM_REG__FPGAIO_LED
//    <name> LED </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49302000) LED Connections </i>
//    <loc> ( (unsigned int)((FPGAIO_LED >> 0) & 0xFFFFFFFF), ((FPGAIO_LED = (FPGAIO_LED & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FPGAIO_LED_LED0 </item>
//    <item> SFDITEM_FIELD__FPGAIO_LED_LED1 </item>
//    <item> SFDITEM_FIELD__FPGAIO_LED_LED2 </item>
//    <item> SFDITEM_FIELD__FPGAIO_LED_LED3 </item>
//    <item> SFDITEM_FIELD__FPGAIO_LED_LED4 </item>
//    <item> SFDITEM_FIELD__FPGAIO_LED_LED5 </item>
//    <item> SFDITEM_FIELD__FPGAIO_LED_LED6 </item>
//    <item> SFDITEM_FIELD__FPGAIO_LED_LED7 </item>
//    <item> SFDITEM_FIELD__FPGAIO_LED_LED8 </item>
//    <item> SFDITEM_FIELD__FPGAIO_LED_LED9 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: FPGAIO_BUTTON  ------------------------------
// SVD Line: 5054

unsigned int FPGAIO_BUTTON __AT (0x49302008);



// ----------------------------  Field Item: FPGAIO_BUTTON_BUTTON0  -------------------------------
// SVD Line: 5061

//  <item> SFDITEM_FIELD__FPGAIO_BUTTON_BUTTON0
//    <name> BUTTON0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49302008) \nBUTTON0\n0 : Off = BUTTON is off\n1 : On = BUTTON is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_BUTTON ) </loc>
//      <o.0..0> BUTTON0
//        <0=> 0: Off = BUTTON is off
//        <1=> 1: On = BUTTON is on
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: FPGAIO_BUTTON_BUTTON1  -------------------------------
// SVD Line: 5077

//  <item> SFDITEM_FIELD__FPGAIO_BUTTON_BUTTON1
//    <name> BUTTON1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49302008) \nBUTTON1\n0 : Off = BUTTON is off\n1 : On = BUTTON is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_BUTTON ) </loc>
//      <o.1..1> BUTTON1
//        <0=> 0: Off = BUTTON is off
//        <1=> 1: On = BUTTON is on
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: FPGAIO_BUTTON  ---------------------------------
// SVD Line: 5054

//  <rtree> SFDITEM_REG__FPGAIO_BUTTON
//    <name> BUTTON </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49302008) Button Connections </i>
//    <loc> ( (unsigned int)((FPGAIO_BUTTON >> 0) & 0xFFFFFFFF), ((FPGAIO_BUTTON = (FPGAIO_BUTTON & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FPGAIO_BUTTON_BUTTON0 </item>
//    <item> SFDITEM_FIELD__FPGAIO_BUTTON_BUTTON1 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: FPGAIO_CLK1HZ  ------------------------------
// SVD Line: 5095

unsigned int FPGAIO_CLK1HZ __AT (0x49302010);



// ------------------------------  Register Item: FPGAIO_CLK1HZ  ----------------------------------
// SVD Line: 5095

//  <item> SFDITEM_REG__FPGAIO_CLK1HZ
//    <name> CLK1HZ </name>
//    <i> [Bits 31..0] RO (@ 0x49302010) 1Hz Up Counter </i>
//    <edit> 
//      <loc> ( (unsigned int)((FPGAIO_CLK1HZ >> 0) & 0xFFFFFFFF), ((FPGAIO_CLK1HZ = (FPGAIO_CLK1HZ & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: FPGAIO_CLK100HZ  -----------------------------
// SVD Line: 5103

unsigned int FPGAIO_CLK100HZ __AT (0x49302014);



// -----------------------------  Register Item: FPGAIO_CLK100HZ  ---------------------------------
// SVD Line: 5103

//  <item> SFDITEM_REG__FPGAIO_CLK100HZ
//    <name> CLK100HZ </name>
//    <i> [Bits 31..0] RO (@ 0x49302014) 100Hz Up Counter </i>
//    <edit> 
//      <loc> ( (unsigned int)((FPGAIO_CLK100HZ >> 0) & 0xFFFFFFFF), ((FPGAIO_CLK100HZ = (FPGAIO_CLK100HZ & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: FPGAIO_COUNTER  -----------------------------
// SVD Line: 5111

unsigned int FPGAIO_COUNTER __AT (0x49302018);



// ------------------------------  Register Item: FPGAIO_COUNTER  ---------------------------------
// SVD Line: 5111

//  <item> SFDITEM_REG__FPGAIO_COUNTER
//    <name> COUNTER </name>
//    <i> [Bits 31..0] RW (@ 0x49302018) Cycle up counter </i>
//    <edit> 
//      <loc> ( (unsigned int)((FPGAIO_COUNTER >> 0) & 0xFFFFFFFF), ((FPGAIO_COUNTER = (FPGAIO_COUNTER & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: FPGAIO_PRESCALER  ----------------------------
// SVD Line: 5119

unsigned int FPGAIO_PRESCALER __AT (0x4930201C);



// -----------------------------  Register Item: FPGAIO_PRESCALER  --------------------------------
// SVD Line: 5119

//  <item> SFDITEM_REG__FPGAIO_PRESCALER
//    <name> PRESCALER </name>
//    <i> [Bits 31..0] RW (@ 0x4930201C) Reload value for prescaler counter </i>
//    <edit> 
//      <loc> ( (unsigned int)((FPGAIO_PRESCALER >> 0) & 0xFFFFFFFF), ((FPGAIO_PRESCALER = (FPGAIO_PRESCALER & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: FPGAIO_PSCNTR  ------------------------------
// SVD Line: 5127

unsigned int FPGAIO_PSCNTR __AT (0x49302020);



// ------------------------------  Register Item: FPGAIO_PSCNTR  ----------------------------------
// SVD Line: 5127

//  <item> SFDITEM_REG__FPGAIO_PSCNTR
//    <name> PSCNTR </name>
//    <i> [Bits 31..0] RW (@ 0x49302020) Prescale Counter </i>
//    <edit> 
//      <loc> ( (unsigned int)((FPGAIO_PSCNTR >> 0) & 0xFFFFFFFF), ((FPGAIO_PSCNTR = (FPGAIO_PSCNTR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: FPGAIO_SWITCHES  -----------------------------
// SVD Line: 5135

unsigned int FPGAIO_SWITCHES __AT (0x49302028);



// -----------------------------  Field Item: FPGAIO_SWITCHES_SW0  --------------------------------
// SVD Line: 5142

//  <item> SFDITEM_FIELD__FPGAIO_SWITCHES_SW0
//    <name> SW0 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x49302028) \nSW0\n0 : Off = Switch is Off\n1 : On = Switch is On </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_SWITCHES ) </loc>
//      <o.0..0> SW0
//        <0=> 0: Off = Switch is Off
//        <1=> 1: On = Switch is On
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: FPGAIO_SWITCHES_SW1  --------------------------------
// SVD Line: 5158

//  <item> SFDITEM_FIELD__FPGAIO_SWITCHES_SW1
//    <name> SW1 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x49302028) \nSW1\n0 : Off = Switch is Off\n1 : On = Switch is On </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_SWITCHES ) </loc>
//      <o.1..1> SW1
//        <0=> 0: Off = Switch is Off
//        <1=> 1: On = Switch is On
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: FPGAIO_SWITCHES_SW2  --------------------------------
// SVD Line: 5174

//  <item> SFDITEM_FIELD__FPGAIO_SWITCHES_SW2
//    <name> SW2 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x49302028) \nSW2\n0 : Off = Switch is Off\n1 : On = Switch is On </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_SWITCHES ) </loc>
//      <o.2..2> SW2
//        <0=> 0: Off = Switch is Off
//        <1=> 1: On = Switch is On
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: FPGAIO_SWITCHES_SW3  --------------------------------
// SVD Line: 5190

//  <item> SFDITEM_FIELD__FPGAIO_SWITCHES_SW3
//    <name> SW3 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x49302028) \nSW3\n0 : Off = Switch is Off\n1 : On = Switch is On </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_SWITCHES ) </loc>
//      <o.3..3> SW3
//        <0=> 0: Off = Switch is Off
//        <1=> 1: On = Switch is On
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: FPGAIO_SWITCHES_SW4  --------------------------------
// SVD Line: 5206

//  <item> SFDITEM_FIELD__FPGAIO_SWITCHES_SW4
//    <name> SW4 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x49302028) \nSW4\n0 : Off = Switch is Off\n1 : On = Switch is On </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_SWITCHES ) </loc>
//      <o.4..4> SW4
//        <0=> 0: Off = Switch is Off
//        <1=> 1: On = Switch is On
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: FPGAIO_SWITCHES_SW5  --------------------------------
// SVD Line: 5222

//  <item> SFDITEM_FIELD__FPGAIO_SWITCHES_SW5
//    <name> SW5 </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x49302028) \nSW5\n0 : Off = Switch is Off\n1 : On = Switch is On </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_SWITCHES ) </loc>
//      <o.5..5> SW5
//        <0=> 0: Off = Switch is Off
//        <1=> 1: On = Switch is On
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: FPGAIO_SWITCHES_SW6  --------------------------------
// SVD Line: 5238

//  <item> SFDITEM_FIELD__FPGAIO_SWITCHES_SW6
//    <name> SW6 </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x49302028) \nSW6\n0 : Off = Switch is Off\n1 : On = Switch is On </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_SWITCHES ) </loc>
//      <o.6..6> SW6
//        <0=> 0: Off = Switch is Off
//        <1=> 1: On = Switch is On
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: FPGAIO_SWITCHES_SW7  --------------------------------
// SVD Line: 5254

//  <item> SFDITEM_FIELD__FPGAIO_SWITCHES_SW7
//    <name> SW7 </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x49302028) \nSW7\n0 : Off = Switch is Off\n1 : On = Switch is On </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_SWITCHES ) </loc>
//      <o.7..7> SW7
//        <0=> 0: Off = Switch is Off
//        <1=> 1: On = Switch is On
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: FPGAIO_SWITCHES  --------------------------------
// SVD Line: 5135

//  <rtree> SFDITEM_REG__FPGAIO_SWITCHES
//    <name> SWITCHES </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x49302028) User Switches </i>
//    <loc> ( (unsigned int)((FPGAIO_SWITCHES >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FPGAIO_SWITCHES_SW0 </item>
//    <item> SFDITEM_FIELD__FPGAIO_SWITCHES_SW1 </item>
//    <item> SFDITEM_FIELD__FPGAIO_SWITCHES_SW2 </item>
//    <item> SFDITEM_FIELD__FPGAIO_SWITCHES_SW3 </item>
//    <item> SFDITEM_FIELD__FPGAIO_SWITCHES_SW4 </item>
//    <item> SFDITEM_FIELD__FPGAIO_SWITCHES_SW5 </item>
//    <item> SFDITEM_FIELD__FPGAIO_SWITCHES_SW6 </item>
//    <item> SFDITEM_FIELD__FPGAIO_SWITCHES_SW7 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: FPGAIO_MISC  -------------------------------
// SVD Line: 5272

unsigned int FPGAIO_MISC __AT (0x4930204C);



// -------------------------  Field Item: FPGAIO_MISC_SHIELD1_SPI_nCS  ----------------------------
// SVD Line: 5280

//  <item> SFDITEM_FIELD__FPGAIO_MISC_SHIELD1_SPI_nCS
//    <name> SHIELD1_SPI_nCS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4930204C) SHIELD1_SPI_nCS </i>
//    <check> 
//      <loc> ( (unsigned int) FPGAIO_MISC ) </loc>
//      <o.2..2> SHIELD1_SPI_nCS
//    </check>
//  </item>
//  


// -------------------------  Field Item: FPGAIO_MISC_SHIELD0_SPI_nCS  ----------------------------
// SVD Line: 5284

//  <item> SFDITEM_FIELD__FPGAIO_MISC_SHIELD0_SPI_nCS
//    <name> SHIELD0_SPI_nCS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4930204C) SHIELD0_SPI_nCS </i>
//    <check> 
//      <loc> ( (unsigned int) FPGAIO_MISC ) </loc>
//      <o.1..1> SHIELD0_SPI_nCS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: FPGAIO_MISC_ADC_SPI_nCS  ------------------------------
// SVD Line: 5288

//  <item> SFDITEM_FIELD__FPGAIO_MISC_ADC_SPI_nCS
//    <name> ADC_SPI_nCS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4930204C) ADC_SPI_nCS </i>
//    <check> 
//      <loc> ( (unsigned int) FPGAIO_MISC ) </loc>
//      <o.0..0> ADC_SPI_nCS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: FPGAIO_MISC  ----------------------------------
// SVD Line: 5272

//  <rtree> SFDITEM_REG__FPGAIO_MISC
//    <name> MISC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4930204C) Misc. Control </i>
//    <loc> ( (unsigned int)((FPGAIO_MISC >> 0) & 0xFFFFFFFF), ((FPGAIO_MISC = (FPGAIO_MISC & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FPGAIO_MISC_SHIELD1_SPI_nCS </item>
//    <item> SFDITEM_FIELD__FPGAIO_MISC_SHIELD0_SPI_nCS </item>
//    <item> SFDITEM_FIELD__FPGAIO_MISC_ADC_SPI_nCS </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: FPGAIO  ------------------------------------
// SVD Line: 4874

//  <view> FPGAIO
//    <name> FPGAIO </name>
//    <item> SFDITEM_REG__FPGAIO_LED </item>
//    <item> SFDITEM_REG__FPGAIO_BUTTON </item>
//    <item> SFDITEM_REG__FPGAIO_CLK1HZ </item>
//    <item> SFDITEM_REG__FPGAIO_CLK100HZ </item>
//    <item> SFDITEM_REG__FPGAIO_COUNTER </item>
//    <item> SFDITEM_REG__FPGAIO_PRESCALER </item>
//    <item> SFDITEM_REG__FPGAIO_PSCNTR </item>
//    <item> SFDITEM_REG__FPGAIO_SWITCHES </item>
//    <item> SFDITEM_REG__FPGAIO_MISC </item>
//  </view>
//  


// ------------------------  Register Item Address: FPGAIO_Secure_LED  ----------------------------
// SVD Line: 4885

unsigned int FPGAIO_Secure_LED __AT (0x59302000);



// ---------------------------  Field Item: FPGAIO_Secure_LED_LED0  -------------------------------
// SVD Line: 4892

//  <item> SFDITEM_FIELD__FPGAIO_Secure_LED_LED0
//    <name> LED0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59302000) \nLED0\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_Secure_LED ) </loc>
//      <o.0..0> LED0
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: FPGAIO_Secure_LED_LED1  -------------------------------
// SVD Line: 4908

//  <item> SFDITEM_FIELD__FPGAIO_Secure_LED_LED1
//    <name> LED1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59302000) \nLED1\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_Secure_LED ) </loc>
//      <o.1..1> LED1
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: FPGAIO_Secure_LED_LED2  -------------------------------
// SVD Line: 4924

//  <item> SFDITEM_FIELD__FPGAIO_Secure_LED_LED2
//    <name> LED2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59302000) \nLED2\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_Secure_LED ) </loc>
//      <o.2..2> LED2
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: FPGAIO_Secure_LED_LED3  -------------------------------
// SVD Line: 4940

//  <item> SFDITEM_FIELD__FPGAIO_Secure_LED_LED3
//    <name> LED3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59302000) \nLED3\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_Secure_LED ) </loc>
//      <o.3..3> LED3
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: FPGAIO_Secure_LED_LED4  -------------------------------
// SVD Line: 4956

//  <item> SFDITEM_FIELD__FPGAIO_Secure_LED_LED4
//    <name> LED4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x59302000) \nLED4\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_Secure_LED ) </loc>
//      <o.4..4> LED4
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: FPGAIO_Secure_LED_LED5  -------------------------------
// SVD Line: 4972

//  <item> SFDITEM_FIELD__FPGAIO_Secure_LED_LED5
//    <name> LED5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x59302000) \nLED5\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_Secure_LED ) </loc>
//      <o.5..5> LED5
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: FPGAIO_Secure_LED_LED6  -------------------------------
// SVD Line: 4988

//  <item> SFDITEM_FIELD__FPGAIO_Secure_LED_LED6
//    <name> LED6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x59302000) \nLED6\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_Secure_LED ) </loc>
//      <o.6..6> LED6
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: FPGAIO_Secure_LED_LED7  -------------------------------
// SVD Line: 5004

//  <item> SFDITEM_FIELD__FPGAIO_Secure_LED_LED7
//    <name> LED7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x59302000) \nLED7\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_Secure_LED ) </loc>
//      <o.7..7> LED7
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: FPGAIO_Secure_LED_LED8  -------------------------------
// SVD Line: 5020

//  <item> SFDITEM_FIELD__FPGAIO_Secure_LED_LED8
//    <name> LED8 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x59302000) \nLED8\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_Secure_LED ) </loc>
//      <o.8..8> LED8
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: FPGAIO_Secure_LED_LED9  -------------------------------
// SVD Line: 5036

//  <item> SFDITEM_FIELD__FPGAIO_Secure_LED_LED9
//    <name> LED9 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x59302000) \nLED9\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_Secure_LED ) </loc>
//      <o.9..9> LED9
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: FPGAIO_Secure_LED  -------------------------------
// SVD Line: 4885

//  <rtree> SFDITEM_REG__FPGAIO_Secure_LED
//    <name> LED </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59302000) LED Connections </i>
//    <loc> ( (unsigned int)((FPGAIO_Secure_LED >> 0) & 0xFFFFFFFF), ((FPGAIO_Secure_LED = (FPGAIO_Secure_LED & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FPGAIO_Secure_LED_LED0 </item>
//    <item> SFDITEM_FIELD__FPGAIO_Secure_LED_LED1 </item>
//    <item> SFDITEM_FIELD__FPGAIO_Secure_LED_LED2 </item>
//    <item> SFDITEM_FIELD__FPGAIO_Secure_LED_LED3 </item>
//    <item> SFDITEM_FIELD__FPGAIO_Secure_LED_LED4 </item>
//    <item> SFDITEM_FIELD__FPGAIO_Secure_LED_LED5 </item>
//    <item> SFDITEM_FIELD__FPGAIO_Secure_LED_LED6 </item>
//    <item> SFDITEM_FIELD__FPGAIO_Secure_LED_LED7 </item>
//    <item> SFDITEM_FIELD__FPGAIO_Secure_LED_LED8 </item>
//    <item> SFDITEM_FIELD__FPGAIO_Secure_LED_LED9 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: FPGAIO_Secure_BUTTON  --------------------------
// SVD Line: 5054

unsigned int FPGAIO_Secure_BUTTON __AT (0x59302008);



// ------------------------  Field Item: FPGAIO_Secure_BUTTON_BUTTON0  ----------------------------
// SVD Line: 5061

//  <item> SFDITEM_FIELD__FPGAIO_Secure_BUTTON_BUTTON0
//    <name> BUTTON0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59302008) \nBUTTON0\n0 : Off = BUTTON is off\n1 : On = BUTTON is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_Secure_BUTTON ) </loc>
//      <o.0..0> BUTTON0
//        <0=> 0: Off = BUTTON is off
//        <1=> 1: On = BUTTON is on
//    </combo>
//  </item>
//  


// ------------------------  Field Item: FPGAIO_Secure_BUTTON_BUTTON1  ----------------------------
// SVD Line: 5077

//  <item> SFDITEM_FIELD__FPGAIO_Secure_BUTTON_BUTTON1
//    <name> BUTTON1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59302008) \nBUTTON1\n0 : Off = BUTTON is off\n1 : On = BUTTON is on </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_Secure_BUTTON ) </loc>
//      <o.1..1> BUTTON1
//        <0=> 0: Off = BUTTON is off
//        <1=> 1: On = BUTTON is on
//    </combo>
//  </item>
//  


// --------------------------  Register RTree: FPGAIO_Secure_BUTTON  ------------------------------
// SVD Line: 5054

//  <rtree> SFDITEM_REG__FPGAIO_Secure_BUTTON
//    <name> BUTTON </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59302008) Button Connections </i>
//    <loc> ( (unsigned int)((FPGAIO_Secure_BUTTON >> 0) & 0xFFFFFFFF), ((FPGAIO_Secure_BUTTON = (FPGAIO_Secure_BUTTON & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FPGAIO_Secure_BUTTON_BUTTON0 </item>
//    <item> SFDITEM_FIELD__FPGAIO_Secure_BUTTON_BUTTON1 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: FPGAIO_Secure_CLK1HZ  --------------------------
// SVD Line: 5095

unsigned int FPGAIO_Secure_CLK1HZ __AT (0x59302010);



// ---------------------------  Register Item: FPGAIO_Secure_CLK1HZ  ------------------------------
// SVD Line: 5095

//  <item> SFDITEM_REG__FPGAIO_Secure_CLK1HZ
//    <name> CLK1HZ </name>
//    <i> [Bits 31..0] RO (@ 0x59302010) 1Hz Up Counter </i>
//    <edit> 
//      <loc> ( (unsigned int)((FPGAIO_Secure_CLK1HZ >> 0) & 0xFFFFFFFF), ((FPGAIO_Secure_CLK1HZ = (FPGAIO_Secure_CLK1HZ & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: FPGAIO_Secure_CLK100HZ  -------------------------
// SVD Line: 5103

unsigned int FPGAIO_Secure_CLK100HZ __AT (0x59302014);



// --------------------------  Register Item: FPGAIO_Secure_CLK100HZ  -----------------------------
// SVD Line: 5103

//  <item> SFDITEM_REG__FPGAIO_Secure_CLK100HZ
//    <name> CLK100HZ </name>
//    <i> [Bits 31..0] RO (@ 0x59302014) 100Hz Up Counter </i>
//    <edit> 
//      <loc> ( (unsigned int)((FPGAIO_Secure_CLK100HZ >> 0) & 0xFFFFFFFF), ((FPGAIO_Secure_CLK100HZ = (FPGAIO_Secure_CLK100HZ & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: FPGAIO_Secure_COUNTER  --------------------------
// SVD Line: 5111

unsigned int FPGAIO_Secure_COUNTER __AT (0x59302018);



// --------------------------  Register Item: FPGAIO_Secure_COUNTER  ------------------------------
// SVD Line: 5111

//  <item> SFDITEM_REG__FPGAIO_Secure_COUNTER
//    <name> COUNTER </name>
//    <i> [Bits 31..0] RW (@ 0x59302018) Cycle up counter </i>
//    <edit> 
//      <loc> ( (unsigned int)((FPGAIO_Secure_COUNTER >> 0) & 0xFFFFFFFF), ((FPGAIO_Secure_COUNTER = (FPGAIO_Secure_COUNTER & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: FPGAIO_Secure_PRESCALER  -------------------------
// SVD Line: 5119

unsigned int FPGAIO_Secure_PRESCALER __AT (0x5930201C);



// -------------------------  Register Item: FPGAIO_Secure_PRESCALER  -----------------------------
// SVD Line: 5119

//  <item> SFDITEM_REG__FPGAIO_Secure_PRESCALER
//    <name> PRESCALER </name>
//    <i> [Bits 31..0] RW (@ 0x5930201C) Reload value for prescaler counter </i>
//    <edit> 
//      <loc> ( (unsigned int)((FPGAIO_Secure_PRESCALER >> 0) & 0xFFFFFFFF), ((FPGAIO_Secure_PRESCALER = (FPGAIO_Secure_PRESCALER & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: FPGAIO_Secure_PSCNTR  --------------------------
// SVD Line: 5127

unsigned int FPGAIO_Secure_PSCNTR __AT (0x59302020);



// ---------------------------  Register Item: FPGAIO_Secure_PSCNTR  ------------------------------
// SVD Line: 5127

//  <item> SFDITEM_REG__FPGAIO_Secure_PSCNTR
//    <name> PSCNTR </name>
//    <i> [Bits 31..0] RW (@ 0x59302020) Prescale Counter </i>
//    <edit> 
//      <loc> ( (unsigned int)((FPGAIO_Secure_PSCNTR >> 0) & 0xFFFFFFFF), ((FPGAIO_Secure_PSCNTR = (FPGAIO_Secure_PSCNTR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: FPGAIO_Secure_SWITCHES  -------------------------
// SVD Line: 5135

unsigned int FPGAIO_Secure_SWITCHES __AT (0x59302028);



// -------------------------  Field Item: FPGAIO_Secure_SWITCHES_SW0  -----------------------------
// SVD Line: 5142

//  <item> SFDITEM_FIELD__FPGAIO_Secure_SWITCHES_SW0
//    <name> SW0 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x59302028) \nSW0\n0 : Off = Switch is Off\n1 : On = Switch is On </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_Secure_SWITCHES ) </loc>
//      <o.0..0> SW0
//        <0=> 0: Off = Switch is Off
//        <1=> 1: On = Switch is On
//    </combo>
//  </item>
//  


// -------------------------  Field Item: FPGAIO_Secure_SWITCHES_SW1  -----------------------------
// SVD Line: 5158

//  <item> SFDITEM_FIELD__FPGAIO_Secure_SWITCHES_SW1
//    <name> SW1 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x59302028) \nSW1\n0 : Off = Switch is Off\n1 : On = Switch is On </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_Secure_SWITCHES ) </loc>
//      <o.1..1> SW1
//        <0=> 0: Off = Switch is Off
//        <1=> 1: On = Switch is On
//    </combo>
//  </item>
//  


// -------------------------  Field Item: FPGAIO_Secure_SWITCHES_SW2  -----------------------------
// SVD Line: 5174

//  <item> SFDITEM_FIELD__FPGAIO_Secure_SWITCHES_SW2
//    <name> SW2 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x59302028) \nSW2\n0 : Off = Switch is Off\n1 : On = Switch is On </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_Secure_SWITCHES ) </loc>
//      <o.2..2> SW2
//        <0=> 0: Off = Switch is Off
//        <1=> 1: On = Switch is On
//    </combo>
//  </item>
//  


// -------------------------  Field Item: FPGAIO_Secure_SWITCHES_SW3  -----------------------------
// SVD Line: 5190

//  <item> SFDITEM_FIELD__FPGAIO_Secure_SWITCHES_SW3
//    <name> SW3 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x59302028) \nSW3\n0 : Off = Switch is Off\n1 : On = Switch is On </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_Secure_SWITCHES ) </loc>
//      <o.3..3> SW3
//        <0=> 0: Off = Switch is Off
//        <1=> 1: On = Switch is On
//    </combo>
//  </item>
//  


// -------------------------  Field Item: FPGAIO_Secure_SWITCHES_SW4  -----------------------------
// SVD Line: 5206

//  <item> SFDITEM_FIELD__FPGAIO_Secure_SWITCHES_SW4
//    <name> SW4 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x59302028) \nSW4\n0 : Off = Switch is Off\n1 : On = Switch is On </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_Secure_SWITCHES ) </loc>
//      <o.4..4> SW4
//        <0=> 0: Off = Switch is Off
//        <1=> 1: On = Switch is On
//    </combo>
//  </item>
//  


// -------------------------  Field Item: FPGAIO_Secure_SWITCHES_SW5  -----------------------------
// SVD Line: 5222

//  <item> SFDITEM_FIELD__FPGAIO_Secure_SWITCHES_SW5
//    <name> SW5 </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x59302028) \nSW5\n0 : Off = Switch is Off\n1 : On = Switch is On </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_Secure_SWITCHES ) </loc>
//      <o.5..5> SW5
//        <0=> 0: Off = Switch is Off
//        <1=> 1: On = Switch is On
//    </combo>
//  </item>
//  


// -------------------------  Field Item: FPGAIO_Secure_SWITCHES_SW6  -----------------------------
// SVD Line: 5238

//  <item> SFDITEM_FIELD__FPGAIO_Secure_SWITCHES_SW6
//    <name> SW6 </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x59302028) \nSW6\n0 : Off = Switch is Off\n1 : On = Switch is On </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_Secure_SWITCHES ) </loc>
//      <o.6..6> SW6
//        <0=> 0: Off = Switch is Off
//        <1=> 1: On = Switch is On
//    </combo>
//  </item>
//  


// -------------------------  Field Item: FPGAIO_Secure_SWITCHES_SW7  -----------------------------
// SVD Line: 5254

//  <item> SFDITEM_FIELD__FPGAIO_Secure_SWITCHES_SW7
//    <name> SW7 </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x59302028) \nSW7\n0 : Off = Switch is Off\n1 : On = Switch is On </i>
//    <combo> 
//      <loc> ( (unsigned int) FPGAIO_Secure_SWITCHES ) </loc>
//      <o.7..7> SW7
//        <0=> 0: Off = Switch is Off
//        <1=> 1: On = Switch is On
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: FPGAIO_Secure_SWITCHES  -----------------------------
// SVD Line: 5135

//  <rtree> SFDITEM_REG__FPGAIO_Secure_SWITCHES
//    <name> SWITCHES </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x59302028) User Switches </i>
//    <loc> ( (unsigned int)((FPGAIO_Secure_SWITCHES >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FPGAIO_Secure_SWITCHES_SW0 </item>
//    <item> SFDITEM_FIELD__FPGAIO_Secure_SWITCHES_SW1 </item>
//    <item> SFDITEM_FIELD__FPGAIO_Secure_SWITCHES_SW2 </item>
//    <item> SFDITEM_FIELD__FPGAIO_Secure_SWITCHES_SW3 </item>
//    <item> SFDITEM_FIELD__FPGAIO_Secure_SWITCHES_SW4 </item>
//    <item> SFDITEM_FIELD__FPGAIO_Secure_SWITCHES_SW5 </item>
//    <item> SFDITEM_FIELD__FPGAIO_Secure_SWITCHES_SW6 </item>
//    <item> SFDITEM_FIELD__FPGAIO_Secure_SWITCHES_SW7 </item>
//  </rtree>
//  


// ------------------------  Register Item Address: FPGAIO_Secure_MISC  ---------------------------
// SVD Line: 5272

unsigned int FPGAIO_Secure_MISC __AT (0x5930204C);



// ---------------------  Field Item: FPGAIO_Secure_MISC_SHIELD1_SPI_nCS  -------------------------
// SVD Line: 5280

//  <item> SFDITEM_FIELD__FPGAIO_Secure_MISC_SHIELD1_SPI_nCS
//    <name> SHIELD1_SPI_nCS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x5930204C) SHIELD1_SPI_nCS </i>
//    <check> 
//      <loc> ( (unsigned int) FPGAIO_Secure_MISC ) </loc>
//      <o.2..2> SHIELD1_SPI_nCS
//    </check>
//  </item>
//  


// ---------------------  Field Item: FPGAIO_Secure_MISC_SHIELD0_SPI_nCS  -------------------------
// SVD Line: 5284

//  <item> SFDITEM_FIELD__FPGAIO_Secure_MISC_SHIELD0_SPI_nCS
//    <name> SHIELD0_SPI_nCS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5930204C) SHIELD0_SPI_nCS </i>
//    <check> 
//      <loc> ( (unsigned int) FPGAIO_Secure_MISC ) </loc>
//      <o.1..1> SHIELD0_SPI_nCS
//    </check>
//  </item>
//  


// -----------------------  Field Item: FPGAIO_Secure_MISC_ADC_SPI_nCS  ---------------------------
// SVD Line: 5288

//  <item> SFDITEM_FIELD__FPGAIO_Secure_MISC_ADC_SPI_nCS
//    <name> ADC_SPI_nCS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5930204C) ADC_SPI_nCS </i>
//    <check> 
//      <loc> ( (unsigned int) FPGAIO_Secure_MISC ) </loc>
//      <o.0..0> ADC_SPI_nCS
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: FPGAIO_Secure_MISC  -------------------------------
// SVD Line: 5272

//  <rtree> SFDITEM_REG__FPGAIO_Secure_MISC
//    <name> MISC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5930204C) Misc. Control </i>
//    <loc> ( (unsigned int)((FPGAIO_Secure_MISC >> 0) & 0xFFFFFFFF), ((FPGAIO_Secure_MISC = (FPGAIO_Secure_MISC & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FPGAIO_Secure_MISC_SHIELD1_SPI_nCS </item>
//    <item> SFDITEM_FIELD__FPGAIO_Secure_MISC_SHIELD0_SPI_nCS </item>
//    <item> SFDITEM_FIELD__FPGAIO_Secure_MISC_ADC_SPI_nCS </item>
//  </rtree>
//  


// -----------------------------  Peripheral View: FPGAIO_Secure  ---------------------------------
// SVD Line: 5297

//  <view> FPGAIO_Secure
//    <name> FPGAIO_Secure </name>
//    <item> SFDITEM_REG__FPGAIO_Secure_LED </item>
//    <item> SFDITEM_REG__FPGAIO_Secure_BUTTON </item>
//    <item> SFDITEM_REG__FPGAIO_Secure_CLK1HZ </item>
//    <item> SFDITEM_REG__FPGAIO_Secure_CLK100HZ </item>
//    <item> SFDITEM_REG__FPGAIO_Secure_COUNTER </item>
//    <item> SFDITEM_REG__FPGAIO_Secure_PRESCALER </item>
//    <item> SFDITEM_REG__FPGAIO_Secure_PSCNTR </item>
//    <item> SFDITEM_REG__FPGAIO_Secure_SWITCHES </item>
//    <item> SFDITEM_REG__FPGAIO_Secure_MISC </item>
//  </view>
//  


// ---------------------------  Register Item Address: SCC_CFG_REG0  ------------------------------
// SVD Line: 5315

unsigned int SCC_CFG_REG0 __AT (0x49300000);



// -----------------------------  Field Item: SCC_CFG_REG0_REMAP  ---------------------------------
// SVD Line: 5322

//  <item> SFDITEM_FIELD__SCC_CFG_REG0_REMAP
//    <name> REMAP </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49300000) 1 = REMAP Block RAM to ZBT </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_CFG_REG0 ) </loc>
//      <o.0..0> REMAP
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: SCC_CFG_REG0  ----------------------------------
// SVD Line: 5315

//  <rtree> SFDITEM_REG__SCC_CFG_REG0
//    <name> CFG_REG0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49300000) CFG_REG0 </i>
//    <loc> ( (unsigned int)((SCC_CFG_REG0 >> 0) & 0xFFFFFFFF), ((SCC_CFG_REG0 = (SCC_CFG_REG0 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_CFG_REG0_REMAP </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SCC_CFG_REG1  ------------------------------
// SVD Line: 5329

unsigned int SCC_CFG_REG1 __AT (0x49300004);



// ----------------------------  Field Item: SCC_CFG_REG1_MCC_LED7  -------------------------------
// SVD Line: 5336

//  <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED7
//    <name> MCC_LED7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x49300004) \nMCC LEDs: 0 = OFF 1 = ON\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG1 ) </loc>
//      <o.7..7> MCC_LED7
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SCC_CFG_REG1_MCC_LED6  -------------------------------
// SVD Line: 5353

//  <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED6
//    <name> MCC_LED6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x49300004) \nMCC LEDs: 0 = OFF 1 = ON\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG1 ) </loc>
//      <o.6..6> MCC_LED6
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SCC_CFG_REG1_MCC_LED5  -------------------------------
// SVD Line: 5370

//  <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED5
//    <name> MCC_LED5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x49300004) \nMCC LEDs: 0 = OFF 1 = ON\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG1 ) </loc>
//      <o.5..5> MCC_LED5
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SCC_CFG_REG1_MCC_LED4  -------------------------------
// SVD Line: 5387

//  <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED4
//    <name> MCC_LED4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x49300004) \nMCC LEDs: 0 = OFF 1 = ON\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG1 ) </loc>
//      <o.4..4> MCC_LED4
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SCC_CFG_REG1_MCC_LED3  -------------------------------
// SVD Line: 5404

//  <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED3
//    <name> MCC_LED3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49300004) \nMCC LEDs: 0 = OFF 1 = ON\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG1 ) </loc>
//      <o.3..3> MCC_LED3
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SCC_CFG_REG1_MCC_LED2  -------------------------------
// SVD Line: 5421

//  <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED2
//    <name> MCC_LED2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49300004) \nMCC LEDs: 0 = OFF 1 = ON\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG1 ) </loc>
//      <o.2..2> MCC_LED2
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SCC_CFG_REG1_MCC_LED1  -------------------------------
// SVD Line: 5438

//  <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED1
//    <name> MCC_LED1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49300004) \nMCC LEDs: 0 = OFF 1 = ON\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG1 ) </loc>
//      <o.1..1> MCC_LED1
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SCC_CFG_REG1_MCC_LED0  -------------------------------
// SVD Line: 5455

//  <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED0
//    <name> MCC_LED0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49300004) \nMCC LEDs: 0 = OFF 1 = ON\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG1 ) </loc>
//      <o.0..0> MCC_LED0
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: SCC_CFG_REG1  ----------------------------------
// SVD Line: 5329

//  <rtree> SFDITEM_REG__SCC_CFG_REG1
//    <name> CFG_REG1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49300004) CFG_REG1 </i>
//    <loc> ( (unsigned int)((SCC_CFG_REG1 >> 0) & 0xFFFFFFFF), ((SCC_CFG_REG1 = (SCC_CFG_REG1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED7 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED6 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED5 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED4 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED3 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED2 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED1 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG1_MCC_LED0 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SCC_CFG_REG2  ------------------------------
// SVD Line: 5474

unsigned int SCC_CFG_REG2 __AT (0x49300008);



// -------------------------------  Register Item: SCC_CFG_REG2  ----------------------------------
// SVD Line: 5474

//  <item> SFDITEM_REG__SCC_CFG_REG2
//    <name> CFG_REG2 </name>
//    <i> [Bits 31..0] RO (@ 0x49300008) CFG_REG2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SCC_CFG_REG2 >> 0) & 0xFFFFFFFF), ((SCC_CFG_REG2 = (SCC_CFG_REG2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: SCC_CFG_REG3  ------------------------------
// SVD Line: 5481

unsigned int SCC_CFG_REG3 __AT (0x4930000C);



// --------------------------  Field Item: SCC_CFG_REG3_MCC_SWITCH7  ------------------------------
// SVD Line: 5488

//  <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH7
//    <name> MCC_SWITCH7 </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4930000C) \nMCC SWITCHES: 0 = OFF 1 = ON\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG3 ) </loc>
//      <o.7..7> MCC_SWITCH7
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// --------------------------  Field Item: SCC_CFG_REG3_MCC_SWITCH6  ------------------------------
// SVD Line: 5505

//  <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH6
//    <name> MCC_SWITCH6 </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4930000C) \nMCC SWITCHES: 0 = OFF 1 = ON\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG3 ) </loc>
//      <o.6..6> MCC_SWITCH6
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// --------------------------  Field Item: SCC_CFG_REG3_MCC_SWITCH5  ------------------------------
// SVD Line: 5522

//  <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH5
//    <name> MCC_SWITCH5 </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4930000C) \nMCC SWITCHES: 0 = OFF 1 = ON\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG3 ) </loc>
//      <o.5..5> MCC_SWITCH5
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// --------------------------  Field Item: SCC_CFG_REG3_MCC_SWITCH4  ------------------------------
// SVD Line: 5539

//  <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH4
//    <name> MCC_SWITCH4 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4930000C) \nMCC SWITCHES: 0 = OFF 1 = ON\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG3 ) </loc>
//      <o.4..4> MCC_SWITCH4
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// --------------------------  Field Item: SCC_CFG_REG3_MCC_SWITCH3  ------------------------------
// SVD Line: 5556

//  <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH3
//    <name> MCC_SWITCH3 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4930000C) \nMCC SWITCHES: 0 = OFF 1 = ON\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG3 ) </loc>
//      <o.3..3> MCC_SWITCH3
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// --------------------------  Field Item: SCC_CFG_REG3_MCC_SWITCH2  ------------------------------
// SVD Line: 5573

//  <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH2
//    <name> MCC_SWITCH2 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4930000C) \nMCC SWITCHES: 0 = OFF 1 = ON\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG3 ) </loc>
//      <o.2..2> MCC_SWITCH2
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// --------------------------  Field Item: SCC_CFG_REG3_MCC_SWITCH1  ------------------------------
// SVD Line: 5590

//  <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH1
//    <name> MCC_SWITCH1 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4930000C) \nMCC SWITCHES: 0 = OFF 1 = ON\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG3 ) </loc>
//      <o.1..1> MCC_SWITCH1
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// --------------------------  Field Item: SCC_CFG_REG3_MCC_SWITCH0  ------------------------------
// SVD Line: 5607

//  <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH0
//    <name> MCC_SWITCH0 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4930000C) \nMCC SWITCHES: 0 = OFF 1 = ON\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_CFG_REG3 ) </loc>
//      <o.0..0> MCC_SWITCH0
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: SCC_CFG_REG3  ----------------------------------
// SVD Line: 5481

//  <rtree> SFDITEM_REG__SCC_CFG_REG3
//    <name> CFG_REG3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4930000C) CFG_REG3 </i>
//    <loc> ( (unsigned int)((SCC_CFG_REG3 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH7 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH6 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH5 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH4 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH3 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH2 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH1 </item>
//    <item> SFDITEM_FIELD__SCC_CFG_REG3_MCC_SWITCH0 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SCC_CFG_REG4  ------------------------------
// SVD Line: 5626

unsigned int SCC_CFG_REG4 __AT (0x49300010);



// -----------------------------  Field Item: SCC_CFG_REG4_BRDREV  --------------------------------
// SVD Line: 5633

//  <item> SFDITEM_FIELD__SCC_CFG_REG4_BRDREV
//    <name> BRDREV </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x49300010) Board Revision </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_CFG_REG4 >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: SCC_CFG_REG4  ----------------------------------
// SVD Line: 5626

//  <rtree> SFDITEM_REG__SCC_CFG_REG4
//    <name> CFG_REG4 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x49300010) CFG_REG4 </i>
//    <loc> ( (unsigned int)((SCC_CFG_REG4 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCC_CFG_REG4_BRDREV </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SCC_CFG_REG5  ------------------------------
// SVD Line: 5640

unsigned int SCC_CFG_REG5 __AT (0x49300014);



// -----------------------------  Field Item: SCC_CFG_REG5_DEBUG  ---------------------------------
// SVD Line: 5647

//  <item> SFDITEM_FIELD__SCC_CFG_REG5_DEBUG
//    <name> DEBUG </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x49300014) Debug: 0 = Serial Wire Debug 1 = JTAG </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_CFG_REG5 ) </loc>
//      <o.5..5> DEBUG
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: SCC_CFG_REG5  ----------------------------------
// SVD Line: 5640

//  <rtree> SFDITEM_REG__SCC_CFG_REG5
//    <name> CFG_REG5 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49300014) CFG_REG5 </i>
//    <loc> ( (unsigned int)((SCC_CFG_REG5 >> 0) & 0xFFFFFFFF), ((SCC_CFG_REG5 = (SCC_CFG_REG5 & ~(0x20UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x20) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_CFG_REG5_DEBUG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SCC_CFG_REG6  ------------------------------
// SVD Line: 5654

unsigned int SCC_CFG_REG6 __AT (0x49300018);



// -------------------------------  Register Item: SCC_CFG_REG6  ----------------------------------
// SVD Line: 5654

//  <item> SFDITEM_REG__SCC_CFG_REG6
//    <name> CFG_REG6 </name>
//    <i> [Bits 31..0] RO (@ 0x49300018) CFG_REG6 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SCC_CFG_REG6 >> 0) & 0xFFFFFFFF), ((SCC_CFG_REG6 = (SCC_CFG_REG6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: SCC_CFG_REG7  ------------------------------
// SVD Line: 5661

unsigned int SCC_CFG_REG7 __AT (0x4930001C);



// -------------------------------  Register Item: SCC_CFG_REG7  ----------------------------------
// SVD Line: 5661

//  <item> SFDITEM_REG__SCC_CFG_REG7
//    <name> CFG_REG7 </name>
//    <i> [Bits 31..0] RO (@ 0x4930001C) CFG_REG7 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SCC_CFG_REG7 >> 0) & 0xFFFFFFFF), ((SCC_CFG_REG7 = (SCC_CFG_REG7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SCC_SYS_CFGDATA_RTN  ---------------------------
// SVD Line: 5668

unsigned int SCC_SYS_CFGDATA_RTN __AT (0x493000A0);



// ---------------------------  Register Item: SCC_SYS_CFGDATA_RTN  -------------------------------
// SVD Line: 5668

//  <item> SFDITEM_REG__SCC_SYS_CFGDATA_RTN
//    <name> SYS_CFGDATA_RTN </name>
//    <i> [Bits 31..0] RW (@ 0x493000A0) SYS_CFGDATA_RTN </i>
//    <edit> 
//      <loc> ( (unsigned int)((SCC_SYS_CFGDATA_RTN >> 0) & 0xFFFFFFFF), ((SCC_SYS_CFGDATA_RTN = (SCC_SYS_CFGDATA_RTN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SCC_SYS_CFGDATA_OUT  ---------------------------
// SVD Line: 5675

unsigned int SCC_SYS_CFGDATA_OUT __AT (0x493000A4);



// ---------------------------  Register Item: SCC_SYS_CFGDATA_OUT  -------------------------------
// SVD Line: 5675

//  <item> SFDITEM_REG__SCC_SYS_CFGDATA_OUT
//    <name> SYS_CFGDATA_OUT </name>
//    <i> [Bits 31..0] RW (@ 0x493000A4) SYS_CFGDATA_OUT </i>
//    <edit> 
//      <loc> ( (unsigned int)((SCC_SYS_CFGDATA_OUT >> 0) & 0xFFFFFFFF), ((SCC_SYS_CFGDATA_OUT = (SCC_SYS_CFGDATA_OUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SCC_SYS_CFGCTRL  -----------------------------
// SVD Line: 5682

unsigned int SCC_SYS_CFGCTRL __AT (0x493000A8);



// ----------------------------  Field Item: SCC_SYS_CFGCTRL_START  -------------------------------
// SVD Line: 5689

//  <item> SFDITEM_FIELD__SCC_SYS_CFGCTRL_START
//    <name> START </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x493000A8) Start: generates interrupt on write to this bit </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_SYS_CFGCTRL ) </loc>
//      <o.31..31> START
//    </check>
//  </item>
//  


// --------------------------  Field Item: SCC_SYS_CFGCTRL_RW_ACCESS  -----------------------------
// SVD Line: 5694

//  <item> SFDITEM_FIELD__SCC_SYS_CFGCTRL_RW_ACCESS
//    <name> RW_ACCESS </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x493000A8) Read/Write Access </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_SYS_CFGCTRL ) </loc>
//      <o.30..30> RW_ACCESS
//    </check>
//  </item>
//  


// --------------------------  Field Item: SCC_SYS_CFGCTRL_RFUNCVAL  ------------------------------
// SVD Line: 5699

//  <item> SFDITEM_FIELD__SCC_SYS_CFGCTRL_RFUNCVAL
//    <name> RFUNCVAL </name>
//    <rw> 
//    <i> [Bits 25..20] RW (@ 0x493000A8) Function Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_SYS_CFGCTRL >> 20) & 0x3F), ((SCC_SYS_CFGCTRL = (SCC_SYS_CFGCTRL & ~(0x3FUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: SCC_SYS_CFGCTRL_DEVICE  -------------------------------
// SVD Line: 5704

//  <item> SFDITEM_FIELD__SCC_SYS_CFGCTRL_DEVICE
//    <name> DEVICE </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x493000A8) Device (value of 0/1/2 for supported clocks </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCC_SYS_CFGCTRL >> 0) & 0xFFF), ((SCC_SYS_CFGCTRL = (SCC_SYS_CFGCTRL & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SCC_SYS_CFGCTRL  --------------------------------
// SVD Line: 5682

//  <rtree> SFDITEM_REG__SCC_SYS_CFGCTRL
//    <name> SYS_CFGCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x493000A8) SYS_CFGCTRL </i>
//    <loc> ( (unsigned int)((SCC_SYS_CFGCTRL >> 0) & 0xFFFFFFFF), ((SCC_SYS_CFGCTRL = (SCC_SYS_CFGCTRL & ~(0xC3F00FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC3F00FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_SYS_CFGCTRL_START </item>
//    <item> SFDITEM_FIELD__SCC_SYS_CFGCTRL_RW_ACCESS </item>
//    <item> SFDITEM_FIELD__SCC_SYS_CFGCTRL_RFUNCVAL </item>
//    <item> SFDITEM_FIELD__SCC_SYS_CFGCTRL_DEVICE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SCC_SYS_CFGSTAT  -----------------------------
// SVD Line: 5711

unsigned int SCC_SYS_CFGSTAT __AT (0x493000AC);



// ----------------------------  Field Item: SCC_SYS_CFGSTAT_ERROR  -------------------------------
// SVD Line: 5718

//  <item> SFDITEM_FIELD__SCC_SYS_CFGSTAT_ERROR
//    <name> ERROR </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x493000AC) Error Flag </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_SYS_CFGSTAT ) </loc>
//      <o.1..1> ERROR
//    </check>
//  </item>
//  


// --------------------------  Field Item: SCC_SYS_CFGSTAT_COMPLETE  ------------------------------
// SVD Line: 5723

//  <item> SFDITEM_FIELD__SCC_SYS_CFGSTAT_COMPLETE
//    <name> COMPLETE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x493000AC) Complete Flag </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_SYS_CFGSTAT ) </loc>
//      <o.0..0> COMPLETE
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SCC_SYS_CFGSTAT  --------------------------------
// SVD Line: 5711

//  <rtree> SFDITEM_REG__SCC_SYS_CFGSTAT
//    <name> SYS_CFGSTAT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x493000AC) SYS_CFGSTAT </i>
//    <loc> ( (unsigned int)((SCC_SYS_CFGSTAT >> 0) & 0xFFFFFFFF), ((SCC_SYS_CFGSTAT = (SCC_SYS_CFGSTAT & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_SYS_CFGSTAT_ERROR </item>
//    <item> SFDITEM_FIELD__SCC_SYS_CFGSTAT_COMPLETE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCC_DLL  ---------------------------------
// SVD Line: 5730

unsigned int SCC_DLL __AT (0x49300100);



// ----------------------------  Field Item: SCC_DLL_LOCKED_MASKED  -------------------------------
// SVD Line: 5738

//  <item> SFDITEM_FIELD__SCC_DLL_LOCKED_MASKED
//    <name> LOCKED_MASKED </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x49300100) Error Flag </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_DLL >> 24) & 0xFF), ((SCC_DLL = (SCC_DLL & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SCC_DLL_LOCK_UNLOCK  --------------------------------
// SVD Line: 5743

//  <item> SFDITEM_FIELD__SCC_DLL_LOCK_UNLOCK
//    <name> LOCK_UNLOCK </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x49300100) Complete Flag </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_DLL >> 16) & 0xFF), ((SCC_DLL = (SCC_DLL & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCC_DLL_LOCKED  -----------------------------------
// SVD Line: 5748

//  <item> SFDITEM_FIELD__SCC_DLL_LOCKED
//    <name> LOCKED </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49300100) Complete Flag </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_DLL ) </loc>
//      <o.0..0> LOCKED
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: SCC_DLL  ------------------------------------
// SVD Line: 5730

//  <rtree> SFDITEM_REG__SCC_DLL
//    <name> DLL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49300100) DLL Lock Register </i>
//    <loc> ( (unsigned int)((SCC_DLL >> 0) & 0xFFFFFFFF), ((SCC_DLL = (SCC_DLL & ~(0xFFFF0001UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF0001) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_DLL_LOCKED_MASKED </item>
//    <item> SFDITEM_FIELD__SCC_DLL_LOCK_UNLOCK </item>
//    <item> SFDITEM_FIELD__SCC_DLL_LOCKED </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCC_AID  ---------------------------------
// SVD Line: 5755

unsigned int SCC_AID __AT (0x49300FF8);



// -----------------------------  Field Item: SCC_AID_FPGA_BUILD  ---------------------------------
// SVD Line: 5762

//  <item> SFDITEM_FIELD__SCC_AID_FPGA_BUILD
//    <name> FPGA_BUILD </name>
//    <r> 
//    <i> [Bits 31..24] RO (@ 0x49300FF8) FPGA Build Number </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_AID >> 24) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: SCC_AID_MPS3_REV  ----------------------------------
// SVD Line: 5767

//  <item> SFDITEM_FIELD__SCC_AID_MPS3_REV
//    <name> MPS3_REV </name>
//    <r> 
//    <i> [Bits 23..20] RO (@ 0x49300FF8) V2M-MPS3 target Board Revision (A=0,B=1,C=2) </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_AID >> 20) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SCC_AID_NUM_CFG_REG  --------------------------------
// SVD Line: 5772

//  <item> SFDITEM_FIELD__SCC_AID_NUM_CFG_REG
//    <name> NUM_CFG_REG </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x49300FF8) Number of SCC configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_AID >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: SCC_AID  ------------------------------------
// SVD Line: 5755

//  <rtree> SFDITEM_REG__SCC_AID
//    <name> AID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x49300FF8) AID </i>
//    <loc> ( (unsigned int)((SCC_AID >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCC_AID_FPGA_BUILD </item>
//    <item> SFDITEM_FIELD__SCC_AID_MPS3_REV </item>
//    <item> SFDITEM_FIELD__SCC_AID_NUM_CFG_REG </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: SCC_ID  ---------------------------------
// SVD Line: 5779

unsigned int SCC_ID __AT (0x49300FFC);



// ----------------------------  Field Item: SCC_ID_IMPLEMENTER_ID  -------------------------------
// SVD Line: 5786

//  <item> SFDITEM_FIELD__SCC_ID_IMPLEMENTER_ID
//    <name> IMPLEMENTER_ID </name>
//    <r> 
//    <i> [Bits 31..24] RO (@ 0x49300FFC) Implementer ID: 0x41 = ARM </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_ID >> 24) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SCC_ID_APP_NOTE_VAR  --------------------------------
// SVD Line: 5791

//  <item> SFDITEM_FIELD__SCC_ID_APP_NOTE_VAR
//    <name> APP_NOTE_VAR </name>
//    <r> 
//    <i> [Bits 23..20] RO (@ 0x49300FFC) Application note IP variant number </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_ID >> 20) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCC_ID_IP_ARCH  -----------------------------------
// SVD Line: 5796

//  <item> SFDITEM_FIELD__SCC_ID_IP_ARCH
//    <name> IP_ARCH </name>
//    <r> 
//    <i> [Bits 19..16] RO (@ 0x49300FFC) IP Architecture: 0x4 = AHB </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_ID >> 16) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCC_ID_PRI_NUM  -----------------------------------
// SVD Line: 5801

//  <item> SFDITEM_FIELD__SCC_ID_PRI_NUM
//    <name> PRI_NUM </name>
//    <r> 
//    <i> [Bits 15..4] RO (@ 0x49300FFC) Primary Part Number: 521 = AN521 </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCC_ID >> 4) & 0xFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCC_ID_APP_REV  -----------------------------------
// SVD Line: 5806

//  <item> SFDITEM_FIELD__SCC_ID_APP_REV
//    <name> APP_REV </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x49300FFC) Application note IP revision number </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_ID >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: SCC_ID  -------------------------------------
// SVD Line: 5779

//  <rtree> SFDITEM_REG__SCC_ID
//    <name> ID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x49300FFC) ID </i>
//    <loc> ( (unsigned int)((SCC_ID >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCC_ID_IMPLEMENTER_ID </item>
//    <item> SFDITEM_FIELD__SCC_ID_APP_NOTE_VAR </item>
//    <item> SFDITEM_FIELD__SCC_ID_IP_ARCH </item>
//    <item> SFDITEM_FIELD__SCC_ID_PRI_NUM </item>
//    <item> SFDITEM_FIELD__SCC_ID_APP_REV </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SCC  --------------------------------------
// SVD Line: 5304

//  <view> SCC
//    <name> SCC </name>
//    <item> SFDITEM_REG__SCC_CFG_REG0 </item>
//    <item> SFDITEM_REG__SCC_CFG_REG1 </item>
//    <item> SFDITEM_REG__SCC_CFG_REG2 </item>
//    <item> SFDITEM_REG__SCC_CFG_REG3 </item>
//    <item> SFDITEM_REG__SCC_CFG_REG4 </item>
//    <item> SFDITEM_REG__SCC_CFG_REG5 </item>
//    <item> SFDITEM_REG__SCC_CFG_REG6 </item>
//    <item> SFDITEM_REG__SCC_CFG_REG7 </item>
//    <item> SFDITEM_REG__SCC_SYS_CFGDATA_RTN </item>
//    <item> SFDITEM_REG__SCC_SYS_CFGDATA_OUT </item>
//    <item> SFDITEM_REG__SCC_SYS_CFGCTRL </item>
//    <item> SFDITEM_REG__SCC_SYS_CFGSTAT </item>
//    <item> SFDITEM_REG__SCC_DLL </item>
//    <item> SFDITEM_REG__SCC_AID </item>
//    <item> SFDITEM_REG__SCC_ID </item>
//  </view>
//  


// -----------------------  Register Item Address: SCC_Secure_CFG_REG0  ---------------------------
// SVD Line: 5315

unsigned int SCC_Secure_CFG_REG0 __AT (0x59300000);



// --------------------------  Field Item: SCC_Secure_CFG_REG0_REMAP  -----------------------------
// SVD Line: 5322

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG0_REMAP
//    <name> REMAP </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59300000) 1 = REMAP Block RAM to ZBT </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG0 ) </loc>
//      <o.0..0> REMAP
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: SCC_Secure_CFG_REG0  ------------------------------
// SVD Line: 5315

//  <rtree> SFDITEM_REG__SCC_Secure_CFG_REG0
//    <name> CFG_REG0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59300000) CFG_REG0 </i>
//    <loc> ( (unsigned int)((SCC_Secure_CFG_REG0 >> 0) & 0xFFFFFFFF), ((SCC_Secure_CFG_REG0 = (SCC_Secure_CFG_REG0 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG0_REMAP </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SCC_Secure_CFG_REG1  ---------------------------
// SVD Line: 5329

unsigned int SCC_Secure_CFG_REG1 __AT (0x59300004);



// ------------------------  Field Item: SCC_Secure_CFG_REG1_MCC_LED7  ----------------------------
// SVD Line: 5336

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED7
//    <name> MCC_LED7 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x59300004) \nMCC LEDs: 0 = OFF 1 = ON\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG1 ) </loc>
//      <o.7..7> MCC_LED7
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ------------------------  Field Item: SCC_Secure_CFG_REG1_MCC_LED6  ----------------------------
// SVD Line: 5353

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED6
//    <name> MCC_LED6 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x59300004) \nMCC LEDs: 0 = OFF 1 = ON\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG1 ) </loc>
//      <o.6..6> MCC_LED6
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ------------------------  Field Item: SCC_Secure_CFG_REG1_MCC_LED5  ----------------------------
// SVD Line: 5370

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED5
//    <name> MCC_LED5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x59300004) \nMCC LEDs: 0 = OFF 1 = ON\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG1 ) </loc>
//      <o.5..5> MCC_LED5
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ------------------------  Field Item: SCC_Secure_CFG_REG1_MCC_LED4  ----------------------------
// SVD Line: 5387

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED4
//    <name> MCC_LED4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x59300004) \nMCC LEDs: 0 = OFF 1 = ON\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG1 ) </loc>
//      <o.4..4> MCC_LED4
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ------------------------  Field Item: SCC_Secure_CFG_REG1_MCC_LED3  ----------------------------
// SVD Line: 5404

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED3
//    <name> MCC_LED3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x59300004) \nMCC LEDs: 0 = OFF 1 = ON\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG1 ) </loc>
//      <o.3..3> MCC_LED3
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ------------------------  Field Item: SCC_Secure_CFG_REG1_MCC_LED2  ----------------------------
// SVD Line: 5421

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED2
//    <name> MCC_LED2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x59300004) \nMCC LEDs: 0 = OFF 1 = ON\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG1 ) </loc>
//      <o.2..2> MCC_LED2
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ------------------------  Field Item: SCC_Secure_CFG_REG1_MCC_LED1  ----------------------------
// SVD Line: 5438

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED1
//    <name> MCC_LED1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x59300004) \nMCC LEDs: 0 = OFF 1 = ON\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG1 ) </loc>
//      <o.1..1> MCC_LED1
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ------------------------  Field Item: SCC_Secure_CFG_REG1_MCC_LED0  ----------------------------
// SVD Line: 5455

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED0
//    <name> MCC_LED0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59300004) \nMCC LEDs: 0 = OFF 1 = ON\n0 : Off = LED is off\n1 : On = LED is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG1 ) </loc>
//      <o.0..0> MCC_LED0
//        <0=> 0: Off = LED is off
//        <1=> 1: On = LED is on
//    </combo>
//  </item>
//  


// ---------------------------  Register RTree: SCC_Secure_CFG_REG1  ------------------------------
// SVD Line: 5329

//  <rtree> SFDITEM_REG__SCC_Secure_CFG_REG1
//    <name> CFG_REG1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59300004) CFG_REG1 </i>
//    <loc> ( (unsigned int)((SCC_Secure_CFG_REG1 >> 0) & 0xFFFFFFFF), ((SCC_Secure_CFG_REG1 = (SCC_Secure_CFG_REG1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED7 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED6 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED5 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED4 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED3 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED2 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED1 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG1_MCC_LED0 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SCC_Secure_CFG_REG2  ---------------------------
// SVD Line: 5474

unsigned int SCC_Secure_CFG_REG2 __AT (0x59300008);



// ---------------------------  Register Item: SCC_Secure_CFG_REG2  -------------------------------
// SVD Line: 5474

//  <item> SFDITEM_REG__SCC_Secure_CFG_REG2
//    <name> CFG_REG2 </name>
//    <i> [Bits 31..0] RO (@ 0x59300008) CFG_REG2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SCC_Secure_CFG_REG2 >> 0) & 0xFFFFFFFF), ((SCC_Secure_CFG_REG2 = (SCC_Secure_CFG_REG2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SCC_Secure_CFG_REG3  ---------------------------
// SVD Line: 5481

unsigned int SCC_Secure_CFG_REG3 __AT (0x5930000C);



// -----------------------  Field Item: SCC_Secure_CFG_REG3_MCC_SWITCH7  --------------------------
// SVD Line: 5488

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH7
//    <name> MCC_SWITCH7 </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x5930000C) \nMCC SWITCHES: 0 = OFF 1 = ON\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG3 ) </loc>
//      <o.7..7> MCC_SWITCH7
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// -----------------------  Field Item: SCC_Secure_CFG_REG3_MCC_SWITCH6  --------------------------
// SVD Line: 5505

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH6
//    <name> MCC_SWITCH6 </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x5930000C) \nMCC SWITCHES: 0 = OFF 1 = ON\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG3 ) </loc>
//      <o.6..6> MCC_SWITCH6
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// -----------------------  Field Item: SCC_Secure_CFG_REG3_MCC_SWITCH5  --------------------------
// SVD Line: 5522

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH5
//    <name> MCC_SWITCH5 </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x5930000C) \nMCC SWITCHES: 0 = OFF 1 = ON\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG3 ) </loc>
//      <o.5..5> MCC_SWITCH5
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// -----------------------  Field Item: SCC_Secure_CFG_REG3_MCC_SWITCH4  --------------------------
// SVD Line: 5539

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH4
//    <name> MCC_SWITCH4 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x5930000C) \nMCC SWITCHES: 0 = OFF 1 = ON\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG3 ) </loc>
//      <o.4..4> MCC_SWITCH4
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// -----------------------  Field Item: SCC_Secure_CFG_REG3_MCC_SWITCH3  --------------------------
// SVD Line: 5556

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH3
//    <name> MCC_SWITCH3 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x5930000C) \nMCC SWITCHES: 0 = OFF 1 = ON\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG3 ) </loc>
//      <o.3..3> MCC_SWITCH3
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// -----------------------  Field Item: SCC_Secure_CFG_REG3_MCC_SWITCH2  --------------------------
// SVD Line: 5573

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH2
//    <name> MCC_SWITCH2 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x5930000C) \nMCC SWITCHES: 0 = OFF 1 = ON\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG3 ) </loc>
//      <o.2..2> MCC_SWITCH2
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// -----------------------  Field Item: SCC_Secure_CFG_REG3_MCC_SWITCH1  --------------------------
// SVD Line: 5590

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH1
//    <name> MCC_SWITCH1 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x5930000C) \nMCC SWITCHES: 0 = OFF 1 = ON\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG3 ) </loc>
//      <o.1..1> MCC_SWITCH1
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// -----------------------  Field Item: SCC_Secure_CFG_REG3_MCC_SWITCH0  --------------------------
// SVD Line: 5607

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH0
//    <name> MCC_SWITCH0 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5930000C) \nMCC SWITCHES: 0 = OFF 1 = ON\n0 : Off = Switch is off\n1 : On = Switch is on </i>
//    <combo> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG3 ) </loc>
//      <o.0..0> MCC_SWITCH0
//        <0=> 0: Off = Switch is off
//        <1=> 1: On = Switch is on
//    </combo>
//  </item>
//  


// ---------------------------  Register RTree: SCC_Secure_CFG_REG3  ------------------------------
// SVD Line: 5481

//  <rtree> SFDITEM_REG__SCC_Secure_CFG_REG3
//    <name> CFG_REG3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5930000C) CFG_REG3 </i>
//    <loc> ( (unsigned int)((SCC_Secure_CFG_REG3 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH7 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH6 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH5 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH4 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH3 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH2 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH1 </item>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG3_MCC_SWITCH0 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SCC_Secure_CFG_REG4  ---------------------------
// SVD Line: 5626

unsigned int SCC_Secure_CFG_REG4 __AT (0x59300010);



// -------------------------  Field Item: SCC_Secure_CFG_REG4_BRDREV  -----------------------------
// SVD Line: 5633

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG4_BRDREV
//    <name> BRDREV </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x59300010) Board Revision </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_Secure_CFG_REG4 >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: SCC_Secure_CFG_REG4  ------------------------------
// SVD Line: 5626

//  <rtree> SFDITEM_REG__SCC_Secure_CFG_REG4
//    <name> CFG_REG4 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x59300010) CFG_REG4 </i>
//    <loc> ( (unsigned int)((SCC_Secure_CFG_REG4 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG4_BRDREV </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SCC_Secure_CFG_REG5  ---------------------------
// SVD Line: 5640

unsigned int SCC_Secure_CFG_REG5 __AT (0x59300014);



// --------------------------  Field Item: SCC_Secure_CFG_REG5_DEBUG  -----------------------------
// SVD Line: 5647

//  <item> SFDITEM_FIELD__SCC_Secure_CFG_REG5_DEBUG
//    <name> DEBUG </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x59300014) Debug: 0 = Serial Wire Debug 1 = JTAG </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_Secure_CFG_REG5 ) </loc>
//      <o.5..5> DEBUG
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: SCC_Secure_CFG_REG5  ------------------------------
// SVD Line: 5640

//  <rtree> SFDITEM_REG__SCC_Secure_CFG_REG5
//    <name> CFG_REG5 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59300014) CFG_REG5 </i>
//    <loc> ( (unsigned int)((SCC_Secure_CFG_REG5 >> 0) & 0xFFFFFFFF), ((SCC_Secure_CFG_REG5 = (SCC_Secure_CFG_REG5 & ~(0x20UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x20) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_Secure_CFG_REG5_DEBUG </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SCC_Secure_CFG_REG6  ---------------------------
// SVD Line: 5654

unsigned int SCC_Secure_CFG_REG6 __AT (0x59300018);



// ---------------------------  Register Item: SCC_Secure_CFG_REG6  -------------------------------
// SVD Line: 5654

//  <item> SFDITEM_REG__SCC_Secure_CFG_REG6
//    <name> CFG_REG6 </name>
//    <i> [Bits 31..0] RO (@ 0x59300018) CFG_REG6 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SCC_Secure_CFG_REG6 >> 0) & 0xFFFFFFFF), ((SCC_Secure_CFG_REG6 = (SCC_Secure_CFG_REG6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SCC_Secure_CFG_REG7  ---------------------------
// SVD Line: 5661

unsigned int SCC_Secure_CFG_REG7 __AT (0x5930001C);



// ---------------------------  Register Item: SCC_Secure_CFG_REG7  -------------------------------
// SVD Line: 5661

//  <item> SFDITEM_REG__SCC_Secure_CFG_REG7
//    <name> CFG_REG7 </name>
//    <i> [Bits 31..0] RO (@ 0x5930001C) CFG_REG7 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SCC_Secure_CFG_REG7 >> 0) & 0xFFFFFFFF), ((SCC_Secure_CFG_REG7 = (SCC_Secure_CFG_REG7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: SCC_Secure_SYS_CFGDATA_RTN  -----------------------
// SVD Line: 5668

unsigned int SCC_Secure_SYS_CFGDATA_RTN __AT (0x593000A0);



// ------------------------  Register Item: SCC_Secure_SYS_CFGDATA_RTN  ---------------------------
// SVD Line: 5668

//  <item> SFDITEM_REG__SCC_Secure_SYS_CFGDATA_RTN
//    <name> SYS_CFGDATA_RTN </name>
//    <i> [Bits 31..0] RW (@ 0x593000A0) SYS_CFGDATA_RTN </i>
//    <edit> 
//      <loc> ( (unsigned int)((SCC_Secure_SYS_CFGDATA_RTN >> 0) & 0xFFFFFFFF), ((SCC_Secure_SYS_CFGDATA_RTN = (SCC_Secure_SYS_CFGDATA_RTN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Item Address: SCC_Secure_SYS_CFGDATA_OUT  -----------------------
// SVD Line: 5675

unsigned int SCC_Secure_SYS_CFGDATA_OUT __AT (0x593000A4);



// ------------------------  Register Item: SCC_Secure_SYS_CFGDATA_OUT  ---------------------------
// SVD Line: 5675

//  <item> SFDITEM_REG__SCC_Secure_SYS_CFGDATA_OUT
//    <name> SYS_CFGDATA_OUT </name>
//    <i> [Bits 31..0] RW (@ 0x593000A4) SYS_CFGDATA_OUT </i>
//    <edit> 
//      <loc> ( (unsigned int)((SCC_Secure_SYS_CFGDATA_OUT >> 0) & 0xFFFFFFFF), ((SCC_Secure_SYS_CFGDATA_OUT = (SCC_Secure_SYS_CFGDATA_OUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: SCC_Secure_SYS_CFGCTRL  -------------------------
// SVD Line: 5682

unsigned int SCC_Secure_SYS_CFGCTRL __AT (0x593000A8);



// ------------------------  Field Item: SCC_Secure_SYS_CFGCTRL_START  ----------------------------
// SVD Line: 5689

//  <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGCTRL_START
//    <name> START </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x593000A8) Start: generates interrupt on write to this bit </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_Secure_SYS_CFGCTRL ) </loc>
//      <o.31..31> START
//    </check>
//  </item>
//  


// ----------------------  Field Item: SCC_Secure_SYS_CFGCTRL_RW_ACCESS  --------------------------
// SVD Line: 5694

//  <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGCTRL_RW_ACCESS
//    <name> RW_ACCESS </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x593000A8) Read/Write Access </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_Secure_SYS_CFGCTRL ) </loc>
//      <o.30..30> RW_ACCESS
//    </check>
//  </item>
//  


// -----------------------  Field Item: SCC_Secure_SYS_CFGCTRL_RFUNCVAL  --------------------------
// SVD Line: 5699

//  <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGCTRL_RFUNCVAL
//    <name> RFUNCVAL </name>
//    <rw> 
//    <i> [Bits 25..20] RW (@ 0x593000A8) Function Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_Secure_SYS_CFGCTRL >> 20) & 0x3F), ((SCC_Secure_SYS_CFGCTRL = (SCC_Secure_SYS_CFGCTRL & ~(0x3FUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: SCC_Secure_SYS_CFGCTRL_DEVICE  ---------------------------
// SVD Line: 5704

//  <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGCTRL_DEVICE
//    <name> DEVICE </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x593000A8) Device (value of 0/1/2 for supported clocks </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCC_Secure_SYS_CFGCTRL >> 0) & 0xFFF), ((SCC_Secure_SYS_CFGCTRL = (SCC_Secure_SYS_CFGCTRL & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register RTree: SCC_Secure_SYS_CFGCTRL  -----------------------------
// SVD Line: 5682

//  <rtree> SFDITEM_REG__SCC_Secure_SYS_CFGCTRL
//    <name> SYS_CFGCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x593000A8) SYS_CFGCTRL </i>
//    <loc> ( (unsigned int)((SCC_Secure_SYS_CFGCTRL >> 0) & 0xFFFFFFFF), ((SCC_Secure_SYS_CFGCTRL = (SCC_Secure_SYS_CFGCTRL & ~(0xC3F00FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC3F00FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGCTRL_START </item>
//    <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGCTRL_RW_ACCESS </item>
//    <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGCTRL_RFUNCVAL </item>
//    <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGCTRL_DEVICE </item>
//  </rtree>
//  


// ----------------------  Register Item Address: SCC_Secure_SYS_CFGSTAT  -------------------------
// SVD Line: 5711

unsigned int SCC_Secure_SYS_CFGSTAT __AT (0x593000AC);



// ------------------------  Field Item: SCC_Secure_SYS_CFGSTAT_ERROR  ----------------------------
// SVD Line: 5718

//  <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGSTAT_ERROR
//    <name> ERROR </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x593000AC) Error Flag </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_Secure_SYS_CFGSTAT ) </loc>
//      <o.1..1> ERROR
//    </check>
//  </item>
//  


// -----------------------  Field Item: SCC_Secure_SYS_CFGSTAT_COMPLETE  --------------------------
// SVD Line: 5723

//  <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGSTAT_COMPLETE
//    <name> COMPLETE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x593000AC) Complete Flag </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_Secure_SYS_CFGSTAT ) </loc>
//      <o.0..0> COMPLETE
//    </check>
//  </item>
//  


// -------------------------  Register RTree: SCC_Secure_SYS_CFGSTAT  -----------------------------
// SVD Line: 5711

//  <rtree> SFDITEM_REG__SCC_Secure_SYS_CFGSTAT
//    <name> SYS_CFGSTAT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x593000AC) SYS_CFGSTAT </i>
//    <loc> ( (unsigned int)((SCC_Secure_SYS_CFGSTAT >> 0) & 0xFFFFFFFF), ((SCC_Secure_SYS_CFGSTAT = (SCC_Secure_SYS_CFGSTAT & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGSTAT_ERROR </item>
//    <item> SFDITEM_FIELD__SCC_Secure_SYS_CFGSTAT_COMPLETE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SCC_Secure_DLL  -----------------------------
// SVD Line: 5730

unsigned int SCC_Secure_DLL __AT (0x59300100);



// ------------------------  Field Item: SCC_Secure_DLL_LOCKED_MASKED  ----------------------------
// SVD Line: 5738

//  <item> SFDITEM_FIELD__SCC_Secure_DLL_LOCKED_MASKED
//    <name> LOCKED_MASKED </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x59300100) Error Flag </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_Secure_DLL >> 24) & 0xFF), ((SCC_Secure_DLL = (SCC_Secure_DLL & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: SCC_Secure_DLL_LOCK_UNLOCK  -----------------------------
// SVD Line: 5743

//  <item> SFDITEM_FIELD__SCC_Secure_DLL_LOCK_UNLOCK
//    <name> LOCK_UNLOCK </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x59300100) Complete Flag </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_Secure_DLL >> 16) & 0xFF), ((SCC_Secure_DLL = (SCC_Secure_DLL & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: SCC_Secure_DLL_LOCKED  -------------------------------
// SVD Line: 5748

//  <item> SFDITEM_FIELD__SCC_Secure_DLL_LOCKED
//    <name> LOCKED </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x59300100) Complete Flag </i>
//    <check> 
//      <loc> ( (unsigned int) SCC_Secure_DLL ) </loc>
//      <o.0..0> LOCKED
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SCC_Secure_DLL  ---------------------------------
// SVD Line: 5730

//  <rtree> SFDITEM_REG__SCC_Secure_DLL
//    <name> DLL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x59300100) DLL Lock Register </i>
//    <loc> ( (unsigned int)((SCC_Secure_DLL >> 0) & 0xFFFFFFFF), ((SCC_Secure_DLL = (SCC_Secure_DLL & ~(0xFFFF0001UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF0001) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCC_Secure_DLL_LOCKED_MASKED </item>
//    <item> SFDITEM_FIELD__SCC_Secure_DLL_LOCK_UNLOCK </item>
//    <item> SFDITEM_FIELD__SCC_Secure_DLL_LOCKED </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SCC_Secure_AID  -----------------------------
// SVD Line: 5755

unsigned int SCC_Secure_AID __AT (0x59300FF8);



// --------------------------  Field Item: SCC_Secure_AID_FPGA_BUILD  -----------------------------
// SVD Line: 5762

//  <item> SFDITEM_FIELD__SCC_Secure_AID_FPGA_BUILD
//    <name> FPGA_BUILD </name>
//    <r> 
//    <i> [Bits 31..24] RO (@ 0x59300FF8) FPGA Build Number </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_Secure_AID >> 24) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: SCC_Secure_AID_MPS3_REV  ------------------------------
// SVD Line: 5767

//  <item> SFDITEM_FIELD__SCC_Secure_AID_MPS3_REV
//    <name> MPS3_REV </name>
//    <r> 
//    <i> [Bits 23..20] RO (@ 0x59300FF8) V2M-MPS3 target Board Revision (A=0,B=1,C=2) </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_Secure_AID >> 20) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: SCC_Secure_AID_NUM_CFG_REG  -----------------------------
// SVD Line: 5772

//  <item> SFDITEM_FIELD__SCC_Secure_AID_NUM_CFG_REG
//    <name> NUM_CFG_REG </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x59300FF8) Number of SCC configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_Secure_AID >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SCC_Secure_AID  ---------------------------------
// SVD Line: 5755

//  <rtree> SFDITEM_REG__SCC_Secure_AID
//    <name> AID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x59300FF8) AID </i>
//    <loc> ( (unsigned int)((SCC_Secure_AID >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCC_Secure_AID_FPGA_BUILD </item>
//    <item> SFDITEM_FIELD__SCC_Secure_AID_MPS3_REV </item>
//    <item> SFDITEM_FIELD__SCC_Secure_AID_NUM_CFG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SCC_Secure_ID  ------------------------------
// SVD Line: 5779

unsigned int SCC_Secure_ID __AT (0x59300FFC);



// ------------------------  Field Item: SCC_Secure_ID_IMPLEMENTER_ID  ----------------------------
// SVD Line: 5786

//  <item> SFDITEM_FIELD__SCC_Secure_ID_IMPLEMENTER_ID
//    <name> IMPLEMENTER_ID </name>
//    <r> 
//    <i> [Bits 31..24] RO (@ 0x59300FFC) Implementer ID: 0x41 = ARM </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_Secure_ID >> 24) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: SCC_Secure_ID_APP_NOTE_VAR  -----------------------------
// SVD Line: 5791

//  <item> SFDITEM_FIELD__SCC_Secure_ID_APP_NOTE_VAR
//    <name> APP_NOTE_VAR </name>
//    <r> 
//    <i> [Bits 23..20] RO (@ 0x59300FFC) Application note IP variant number </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_Secure_ID >> 20) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: SCC_Secure_ID_IP_ARCH  -------------------------------
// SVD Line: 5796

//  <item> SFDITEM_FIELD__SCC_Secure_ID_IP_ARCH
//    <name> IP_ARCH </name>
//    <r> 
//    <i> [Bits 19..16] RO (@ 0x59300FFC) IP Architecture: 0x4 = AHB </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_Secure_ID >> 16) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: SCC_Secure_ID_PRI_NUM  -------------------------------
// SVD Line: 5801

//  <item> SFDITEM_FIELD__SCC_Secure_ID_PRI_NUM
//    <name> PRI_NUM </name>
//    <r> 
//    <i> [Bits 15..4] RO (@ 0x59300FFC) Primary Part Number: 521 = AN521 </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCC_Secure_ID >> 4) & 0xFFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: SCC_Secure_ID_APP_REV  -------------------------------
// SVD Line: 5806

//  <item> SFDITEM_FIELD__SCC_Secure_ID_APP_REV
//    <name> APP_REV </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x59300FFC) Application note IP revision number </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCC_Secure_ID >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: SCC_Secure_ID  ---------------------------------
// SVD Line: 5779

//  <rtree> SFDITEM_REG__SCC_Secure_ID
//    <name> ID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x59300FFC) ID </i>
//    <loc> ( (unsigned int)((SCC_Secure_ID >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCC_Secure_ID_IMPLEMENTER_ID </item>
//    <item> SFDITEM_FIELD__SCC_Secure_ID_APP_NOTE_VAR </item>
//    <item> SFDITEM_FIELD__SCC_Secure_ID_IP_ARCH </item>
//    <item> SFDITEM_FIELD__SCC_Secure_ID_PRI_NUM </item>
//    <item> SFDITEM_FIELD__SCC_Secure_ID_APP_REV </item>
//  </rtree>
//  


// -------------------------------  Peripheral View: SCC_Secure  ----------------------------------
// SVD Line: 5816

//  <view> SCC_Secure
//    <name> SCC_Secure </name>
//    <item> SFDITEM_REG__SCC_Secure_CFG_REG0 </item>
//    <item> SFDITEM_REG__SCC_Secure_CFG_REG1 </item>
//    <item> SFDITEM_REG__SCC_Secure_CFG_REG2 </item>
//    <item> SFDITEM_REG__SCC_Secure_CFG_REG3 </item>
//    <item> SFDITEM_REG__SCC_Secure_CFG_REG4 </item>
//    <item> SFDITEM_REG__SCC_Secure_CFG_REG5 </item>
//    <item> SFDITEM_REG__SCC_Secure_CFG_REG6 </item>
//    <item> SFDITEM_REG__SCC_Secure_CFG_REG7 </item>
//    <item> SFDITEM_REG__SCC_Secure_SYS_CFGDATA_RTN </item>
//    <item> SFDITEM_REG__SCC_Secure_SYS_CFGDATA_OUT </item>
//    <item> SFDITEM_REG__SCC_Secure_SYS_CFGCTRL </item>
//    <item> SFDITEM_REG__SCC_Secure_SYS_CFGSTAT </item>
//    <item> SFDITEM_REG__SCC_Secure_DLL </item>
//    <item> SFDITEM_REG__SCC_Secure_AID </item>
//    <item> SFDITEM_REG__SCC_Secure_ID </item>
//  </view>
//  


// -------------------------  Register Item Address: SACRB_SPCSECTRL  -----------------------------
// SVD Line: 5848

unsigned int SACRB_SPCSECTRL __AT (0x50080000);



// -----------------------------  Register Item: SACRB_SPCSECTRL  ---------------------------------
// SVD Line: 5848

//  <item> SFDITEM_REG__SACRB_SPCSECTRL
//    <name> SPCSECTRL </name>
//    <i> [Bits 31..0] RW (@ 0x50080000) Secure Privilege Controller Secure Configuration Control register </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_SPCSECTRL >> 0) & 0xFFFFFFFF), ((SACRB_SPCSECTRL = (SACRB_SPCSECTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: SACRB_BUSWAIT  ------------------------------
// SVD Line: 5856

unsigned int SACRB_BUSWAIT __AT (0x50080004);



// ------------------------------  Register Item: SACRB_BUSWAIT  ----------------------------------
// SVD Line: 5856

//  <item> SFDITEM_REG__SACRB_BUSWAIT
//    <name> BUSWAIT </name>
//    <i> [Bits 31..0] RW (@ 0x50080004) Bus Access wait control after reset </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_BUSWAIT >> 0) & 0xFFFFFFFF), ((SACRB_BUSWAIT = (SACRB_BUSWAIT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SACRB_SECRESPCFG  ----------------------------
// SVD Line: 5863

unsigned int SACRB_SECRESPCFG __AT (0x50080010);



// -----------------------------  Register Item: SACRB_SECRESPCFG  --------------------------------
// SVD Line: 5863

//  <item> SFDITEM_REG__SACRB_SECRESPCFG
//    <name> SECRESPCFG </name>
//    <i> [Bits 31..0] RW (@ 0x50080010) Security Violation Response Configuration register </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_SECRESPCFG >> 0) & 0xFFFFFFFF), ((SACRB_SECRESPCFG = (SACRB_SECRESPCFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: SACRB_NSCCFG  ------------------------------
// SVD Line: 5871

unsigned int SACRB_NSCCFG __AT (0x50080014);



// -------------------------------  Register Item: SACRB_NSCCFG  ----------------------------------
// SVD Line: 5871

//  <item> SFDITEM_REG__SACRB_NSCCFG
//    <name> NSCCFG </name>
//    <i> [Bits 31..0] RW (@ 0x50080014) Non Secure Callable Configuration for IDAU </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_NSCCFG >> 0) & 0xFFFFFFFF), ((SACRB_NSCCFG = (SACRB_NSCCFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: SACRB_SECMPCINTSTATUS  --------------------------
// SVD Line: 5879

unsigned int SACRB_SECMPCINTSTATUS __AT (0x5008001C);



// --------------------------  Register Item: SACRB_SECMPCINTSTATUS  ------------------------------
// SVD Line: 5879

//  <item> SFDITEM_REG__SACRB_SECMPCINTSTATUS
//    <name> SECMPCINTSTATUS </name>
//    <i> [Bits 31..0] RO (@ 0x5008001C) Secure MPC Interrupt Status </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_SECMPCINTSTATUS >> 0) & 0xFFFFFFFF), ((SACRB_SECMPCINTSTATUS = (SACRB_SECMPCINTSTATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SACRB_SECPPCINTSTAT  ---------------------------
// SVD Line: 5887

unsigned int SACRB_SECPPCINTSTAT __AT (0x50080020);



// ---------------------------  Register Item: SACRB_SECPPCINTSTAT  -------------------------------
// SVD Line: 5887

//  <item> SFDITEM_REG__SACRB_SECPPCINTSTAT
//    <name> SECPPCINTSTAT </name>
//    <i> [Bits 31..0] RO (@ 0x50080020) Secure PPC Interrupt Status </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_SECPPCINTSTAT >> 0) & 0xFFFFFFFF), ((SACRB_SECPPCINTSTAT = (SACRB_SECPPCINTSTAT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: SACRB_SECPPCINTCLR  ---------------------------
// SVD Line: 5895

unsigned int SACRB_SECPPCINTCLR __AT (0x50080024);



// ----------------------------  Register Item: SACRB_SECPPCINTCLR  -------------------------------
// SVD Line: 5895

//  <item> SFDITEM_REG__SACRB_SECPPCINTCLR
//    <name> SECPPCINTCLR </name>
//    <i> [Bits 31..0] WO (@ 0x50080024) Secure PPC Interrupt Clear </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_SECPPCINTCLR >> 0) & 0xFFFFFFFF), ((SACRB_SECPPCINTCLR = (SACRB_SECPPCINTCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: SACRB_SECPPCINTEN  ----------------------------
// SVD Line: 5903

unsigned int SACRB_SECPPCINTEN __AT (0x50080028);



// ----------------------------  Register Item: SACRB_SECPPCINTEN  --------------------------------
// SVD Line: 5903

//  <item> SFDITEM_REG__SACRB_SECPPCINTEN
//    <name> SECPPCINTEN </name>
//    <i> [Bits 31..0] RW (@ 0x50080028) Secure PPC Interrupt Enable </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_SECPPCINTEN >> 0) & 0xFFFFFFFF), ((SACRB_SECPPCINTEN = (SACRB_SECPPCINTEN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SACRB_SECMSCINTSTAT  ---------------------------
// SVD Line: 5911

unsigned int SACRB_SECMSCINTSTAT __AT (0x50080030);



// ---------------------------  Register Item: SACRB_SECMSCINTSTAT  -------------------------------
// SVD Line: 5911

//  <item> SFDITEM_REG__SACRB_SECMSCINTSTAT
//    <name> SECMSCINTSTAT </name>
//    <i> [Bits 31..0] RO (@ 0x50080030) Secure MSC Interrupt Status </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_SECMSCINTSTAT >> 0) & 0xFFFFFFFF), ((SACRB_SECMSCINTSTAT = (SACRB_SECMSCINTSTAT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: SACRB_SECMSCINTCLR  ---------------------------
// SVD Line: 5919

unsigned int SACRB_SECMSCINTCLR __AT (0x50080034);



// ----------------------------  Register Item: SACRB_SECMSCINTCLR  -------------------------------
// SVD Line: 5919

//  <item> SFDITEM_REG__SACRB_SECMSCINTCLR
//    <name> SECMSCINTCLR </name>
//    <i> [Bits 31..0] RW (@ 0x50080034) Secure MSC Interrupt Clear </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_SECMSCINTCLR >> 0) & 0xFFFFFFFF), ((SACRB_SECMSCINTCLR = (SACRB_SECMSCINTCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: SACRB_SECMSCINTEN  ----------------------------
// SVD Line: 5927

unsigned int SACRB_SECMSCINTEN __AT (0x50080038);



// ----------------------------  Register Item: SACRB_SECMSCINTEN  --------------------------------
// SVD Line: 5927

//  <item> SFDITEM_REG__SACRB_SECMSCINTEN
//    <name> SECMSCINTEN </name>
//    <i> [Bits 31..0] RW (@ 0x50080038) Secure MSC Interrupt Enable </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_SECMSCINTEN >> 0) & 0xFFFFFFFF), ((SACRB_SECMSCINTEN = (SACRB_SECMSCINTEN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SACRB_BRGINTSTAT  ----------------------------
// SVD Line: 5935

unsigned int SACRB_BRGINTSTAT __AT (0x50080040);



// -----------------------------  Register Item: SACRB_BRGINTSTAT  --------------------------------
// SVD Line: 5935

//  <item> SFDITEM_REG__SACRB_BRGINTSTAT
//    <name> BRGINTSTAT </name>
//    <i> [Bits 31..0] RO (@ 0x50080040) Bridge Buffer Error Interrupt Status </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_BRGINTSTAT >> 0) & 0xFFFFFFFF), ((SACRB_BRGINTSTAT = (SACRB_BRGINTSTAT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SACRB_BRGINTCLR  -----------------------------
// SVD Line: 5943

unsigned int SACRB_BRGINTCLR __AT (0x50080044);



// -----------------------------  Register Item: SACRB_BRGINTCLR  ---------------------------------
// SVD Line: 5943

//  <item> SFDITEM_REG__SACRB_BRGINTCLR
//    <name> BRGINTCLR </name>
//    <i> [Bits 31..0] WO (@ 0x50080044) Bridge Buffer Error Interrupt Clear </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_BRGINTCLR >> 0) & 0xFFFFFFFF), ((SACRB_BRGINTCLR = (SACRB_BRGINTCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: SACRB_BRGINTEN  -----------------------------
// SVD Line: 5951

unsigned int SACRB_BRGINTEN __AT (0x50080048);



// ------------------------------  Register Item: SACRB_BRGINTEN  ---------------------------------
// SVD Line: 5951

//  <item> SFDITEM_REG__SACRB_BRGINTEN
//    <name> BRGINTEN </name>
//    <i> [Bits 31..0] RW (@ 0x50080048) Bridge Buffer Error Interrupt Enable </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_BRGINTEN >> 0) & 0xFFFFFFFF), ((SACRB_BRGINTEN = (SACRB_BRGINTEN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SACRB_AHBNSPPC0  -----------------------------
// SVD Line: 5959

unsigned int SACRB_AHBNSPPC0 __AT (0x50080050);



// -----------------------------  Register Item: SACRB_AHBNSPPC0  ---------------------------------
// SVD Line: 5959

//  <item> SFDITEM_REG__SACRB_AHBNSPPC0
//    <name> AHBNSPPC0 </name>
//    <i> [Bits 31..0] RW (@ 0x50080050) Non-Secure Access AHB slave Peripheral Protection Control 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_AHBNSPPC0 >> 0) & 0xFFFFFFFF), ((SACRB_AHBNSPPC0 = (SACRB_AHBNSPPC0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: SACRB_AHBNSPPCEXP0  ---------------------------
// SVD Line: 5967

unsigned int SACRB_AHBNSPPCEXP0 __AT (0x50080060);



// ----------------------------  Register Item: SACRB_AHBNSPPCEXP0  -------------------------------
// SVD Line: 5967

//  <item> SFDITEM_REG__SACRB_AHBNSPPCEXP0
//    <name> AHBNSPPCEXP0 </name>
//    <i> [Bits 31..0] RW (@ 0x50080060) Expansion 0 Non_Secure Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_AHBNSPPCEXP0 >> 0) & 0xFFFFFFFF), ((SACRB_AHBNSPPCEXP0 = (SACRB_AHBNSPPCEXP0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: SACRB_AHBNSPPCEXP1  ---------------------------
// SVD Line: 5975

unsigned int SACRB_AHBNSPPCEXP1 __AT (0x50080064);



// ----------------------------  Register Item: SACRB_AHBNSPPCEXP1  -------------------------------
// SVD Line: 5975

//  <item> SFDITEM_REG__SACRB_AHBNSPPCEXP1
//    <name> AHBNSPPCEXP1 </name>
//    <i> [Bits 31..0] RW (@ 0x50080064) Expansion 1 Non_Secure Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_AHBNSPPCEXP1 >> 0) & 0xFFFFFFFF), ((SACRB_AHBNSPPCEXP1 = (SACRB_AHBNSPPCEXP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: SACRB_AHBNSPPCEXP2  ---------------------------
// SVD Line: 5983

unsigned int SACRB_AHBNSPPCEXP2 __AT (0x50080068);



// ----------------------------  Register Item: SACRB_AHBNSPPCEXP2  -------------------------------
// SVD Line: 5983

//  <item> SFDITEM_REG__SACRB_AHBNSPPCEXP2
//    <name> AHBNSPPCEXP2 </name>
//    <i> [Bits 31..0] RW (@ 0x50080068) Expansion 2 Non_Secure Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_AHBNSPPCEXP2 >> 0) & 0xFFFFFFFF), ((SACRB_AHBNSPPCEXP2 = (SACRB_AHBNSPPCEXP2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: SACRB_AHBNSPPCEXP3  ---------------------------
// SVD Line: 5991

unsigned int SACRB_AHBNSPPCEXP3 __AT (0x5008006C);



// ----------------------------  Register Item: SACRB_AHBNSPPCEXP3  -------------------------------
// SVD Line: 5991

//  <item> SFDITEM_REG__SACRB_AHBNSPPCEXP3
//    <name> AHBNSPPCEXP3 </name>
//    <i> [Bits 31..0] RW (@ 0x5008006C) Expansion 3 Non_Secure Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_AHBNSPPCEXP3 >> 0) & 0xFFFFFFFF), ((SACRB_AHBNSPPCEXP3 = (SACRB_AHBNSPPCEXP3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SACRB_APBNSPPC0  -----------------------------
// SVD Line: 5999

unsigned int SACRB_APBNSPPC0 __AT (0x50080070);



// -----------------------------  Register Item: SACRB_APBNSPPC0  ---------------------------------
// SVD Line: 5999

//  <item> SFDITEM_REG__SACRB_APBNSPPC0
//    <name> APBNSPPC0 </name>
//    <i> [Bits 31..0] RW (@ 0x50080070) Non-Secure Access APB slave Peripheral Protection Control 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_APBNSPPC0 >> 0) & 0xFFFFFFFF), ((SACRB_APBNSPPC0 = (SACRB_APBNSPPC0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SACRB_APBNSPPC1  -----------------------------
// SVD Line: 6007

unsigned int SACRB_APBNSPPC1 __AT (0x50080074);



// -----------------------------  Register Item: SACRB_APBNSPPC1  ---------------------------------
// SVD Line: 6007

//  <item> SFDITEM_REG__SACRB_APBNSPPC1
//    <name> APBNSPPC1 </name>
//    <i> [Bits 31..0] RW (@ 0x50080074) Non-Secure Access APB slave Peripheral Protection Control 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_APBNSPPC1 >> 0) & 0xFFFFFFFF), ((SACRB_APBNSPPC1 = (SACRB_APBNSPPC1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: SACRB_APBNSPPCEXP0  ---------------------------
// SVD Line: 6015

unsigned int SACRB_APBNSPPCEXP0 __AT (0x50080080);



// ----------------------------  Register Item: SACRB_APBNSPPCEXP0  -------------------------------
// SVD Line: 6015

//  <item> SFDITEM_REG__SACRB_APBNSPPCEXP0
//    <name> APBNSPPCEXP0 </name>
//    <i> [Bits 31..0] RW (@ 0x50080080) Expansion 0 Non_Secure Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_APBNSPPCEXP0 >> 0) & 0xFFFFFFFF), ((SACRB_APBNSPPCEXP0 = (SACRB_APBNSPPCEXP0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: SACRB_APBNSPPCEXP1  ---------------------------
// SVD Line: 6023

unsigned int SACRB_APBNSPPCEXP1 __AT (0x50080084);



// ----------------------------  Register Item: SACRB_APBNSPPCEXP1  -------------------------------
// SVD Line: 6023

//  <item> SFDITEM_REG__SACRB_APBNSPPCEXP1
//    <name> APBNSPPCEXP1 </name>
//    <i> [Bits 31..0] RW (@ 0x50080084) Expansion 1 Non_Secure Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_APBNSPPCEXP1 >> 0) & 0xFFFFFFFF), ((SACRB_APBNSPPCEXP1 = (SACRB_APBNSPPCEXP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: SACRB_APBNSPPCEXP2  ---------------------------
// SVD Line: 6031

unsigned int SACRB_APBNSPPCEXP2 __AT (0x50080088);



// ----------------------------  Register Item: SACRB_APBNSPPCEXP2  -------------------------------
// SVD Line: 6031

//  <item> SFDITEM_REG__SACRB_APBNSPPCEXP2
//    <name> APBNSPPCEXP2 </name>
//    <i> [Bits 31..0] RW (@ 0x50080088) Expansion 2 Non_Secure Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_APBNSPPCEXP2 >> 0) & 0xFFFFFFFF), ((SACRB_APBNSPPCEXP2 = (SACRB_APBNSPPCEXP2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: SACRB_APBNSPPCEXP3  ---------------------------
// SVD Line: 6039

unsigned int SACRB_APBNSPPCEXP3 __AT (0x5008008C);



// ----------------------------  Register Item: SACRB_APBNSPPCEXP3  -------------------------------
// SVD Line: 6039

//  <item> SFDITEM_REG__SACRB_APBNSPPCEXP3
//    <name> APBNSPPCEXP3 </name>
//    <i> [Bits 31..0] RW (@ 0x5008008C) Expansion 3 Non_Secure Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_APBNSPPCEXP3 >> 0) & 0xFFFFFFFF), ((SACRB_APBNSPPCEXP3 = (SACRB_APBNSPPCEXP3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SACRB_AHBSPPPC0  -----------------------------
// SVD Line: 6047

unsigned int SACRB_AHBSPPPC0 __AT (0x50080090);



// -----------------------------  Register Item: SACRB_AHBSPPPC0  ---------------------------------
// SVD Line: 6047

//  <item> SFDITEM_REG__SACRB_AHBSPPPC0
//    <name> AHBSPPPC0 </name>
//    <i> [Bits 31..0] RO (@ 0x50080090) Secure Unprivileged Access AHB slave Peripheral Protection Control 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_AHBSPPPC0 >> 0) & 0xFFFFFFFF), ((SACRB_AHBSPPPC0 = (SACRB_AHBSPPPC0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: SACRB_AHBSPPPCEXP0  ---------------------------
// SVD Line: 6055

unsigned int SACRB_AHBSPPPCEXP0 __AT (0x500800A0);



// ----------------------------  Register Item: SACRB_AHBSPPPCEXP0  -------------------------------
// SVD Line: 6055

//  <item> SFDITEM_REG__SACRB_AHBSPPPCEXP0
//    <name> AHBSPPPCEXP0 </name>
//    <i> [Bits 31..0] RW (@ 0x500800A0) Expansion 0 Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_AHBSPPPCEXP0 >> 0) & 0xFFFFFFFF), ((SACRB_AHBSPPPCEXP0 = (SACRB_AHBSPPPCEXP0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: SACRB_AHBSPPPCEXP1  ---------------------------
// SVD Line: 6063

unsigned int SACRB_AHBSPPPCEXP1 __AT (0x500800A4);



// ----------------------------  Register Item: SACRB_AHBSPPPCEXP1  -------------------------------
// SVD Line: 6063

//  <item> SFDITEM_REG__SACRB_AHBSPPPCEXP1
//    <name> AHBSPPPCEXP1 </name>
//    <i> [Bits 31..0] RW (@ 0x500800A4) Expansion 1 Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_AHBSPPPCEXP1 >> 0) & 0xFFFFFFFF), ((SACRB_AHBSPPPCEXP1 = (SACRB_AHBSPPPCEXP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: SACRB_AHBSPPPCEXP2  ---------------------------
// SVD Line: 6071

unsigned int SACRB_AHBSPPPCEXP2 __AT (0x500800A8);



// ----------------------------  Register Item: SACRB_AHBSPPPCEXP2  -------------------------------
// SVD Line: 6071

//  <item> SFDITEM_REG__SACRB_AHBSPPPCEXP2
//    <name> AHBSPPPCEXP2 </name>
//    <i> [Bits 31..0] RW (@ 0x500800A8) Expansion 2 Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_AHBSPPPCEXP2 >> 0) & 0xFFFFFFFF), ((SACRB_AHBSPPPCEXP2 = (SACRB_AHBSPPPCEXP2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: SACRB_AHBSPPPCEXP3  ---------------------------
// SVD Line: 6079

unsigned int SACRB_AHBSPPPCEXP3 __AT (0x500800AC);



// ----------------------------  Register Item: SACRB_AHBSPPPCEXP3  -------------------------------
// SVD Line: 6079

//  <item> SFDITEM_REG__SACRB_AHBSPPPCEXP3
//    <name> AHBSPPPCEXP3 </name>
//    <i> [Bits 31..0] RW (@ 0x500800AC) Expansion 3 Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_AHBSPPPCEXP3 >> 0) & 0xFFFFFFFF), ((SACRB_AHBSPPPCEXP3 = (SACRB_AHBSPPPCEXP3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SACRB_APBSPPPC0  -----------------------------
// SVD Line: 6087

unsigned int SACRB_APBSPPPC0 __AT (0x500800B0);



// -----------------------------  Register Item: SACRB_APBSPPPC0  ---------------------------------
// SVD Line: 6087

//  <item> SFDITEM_REG__SACRB_APBSPPPC0
//    <name> APBSPPPC0 </name>
//    <i> [Bits 31..0] RW (@ 0x500800B0) Secure Unprivileged Access APB slave Peripheral Protection Control 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_APBSPPPC0 >> 0) & 0xFFFFFFFF), ((SACRB_APBSPPPC0 = (SACRB_APBSPPPC0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: SACRB_APBSPPPC1  -----------------------------
// SVD Line: 6095

unsigned int SACRB_APBSPPPC1 __AT (0x500800B4);



// -----------------------------  Register Item: SACRB_APBSPPPC1  ---------------------------------
// SVD Line: 6095

//  <item> SFDITEM_REG__SACRB_APBSPPPC1
//    <name> APBSPPPC1 </name>
//    <i> [Bits 31..0] RW (@ 0x500800B4) Secure Unprivileged Access APB slave Peripheral Protection Control 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_APBSPPPC1 >> 0) & 0xFFFFFFFF), ((SACRB_APBSPPPC1 = (SACRB_APBSPPPC1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: SACRB_APBSPPPCEXP0  ---------------------------
// SVD Line: 6103

unsigned int SACRB_APBSPPPCEXP0 __AT (0x500800C0);



// ----------------------------  Register Item: SACRB_APBSPPPCEXP0  -------------------------------
// SVD Line: 6103

//  <item> SFDITEM_REG__SACRB_APBSPPPCEXP0
//    <name> APBSPPPCEXP0 </name>
//    <i> [Bits 31..0] RW (@ 0x500800C0) Expansion 0 Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_APBSPPPCEXP0 >> 0) & 0xFFFFFFFF), ((SACRB_APBSPPPCEXP0 = (SACRB_APBSPPPCEXP0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: SACRB_APBSPPPCEXP1  ---------------------------
// SVD Line: 6111

unsigned int SACRB_APBSPPPCEXP1 __AT (0x500800C4);



// ----------------------------  Register Item: SACRB_APBSPPPCEXP1  -------------------------------
// SVD Line: 6111

//  <item> SFDITEM_REG__SACRB_APBSPPPCEXP1
//    <name> APBSPPPCEXP1 </name>
//    <i> [Bits 31..0] RW (@ 0x500800C4) Expansion 1 Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_APBSPPPCEXP1 >> 0) & 0xFFFFFFFF), ((SACRB_APBSPPPCEXP1 = (SACRB_APBSPPPCEXP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: SACRB_APBSPPPCEXP2  ---------------------------
// SVD Line: 6119

unsigned int SACRB_APBSPPPCEXP2 __AT (0x500800C8);



// ----------------------------  Register Item: SACRB_APBSPPPCEXP2  -------------------------------
// SVD Line: 6119

//  <item> SFDITEM_REG__SACRB_APBSPPPCEXP2
//    <name> APBSPPPCEXP2 </name>
//    <i> [Bits 31..0] RW (@ 0x500800C8) Expansion 2 Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_APBSPPPCEXP2 >> 0) & 0xFFFFFFFF), ((SACRB_APBSPPPCEXP2 = (SACRB_APBSPPPCEXP2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: SACRB_APBSPPPCEXP3  ---------------------------
// SVD Line: 6127

unsigned int SACRB_APBSPPPCEXP3 __AT (0x500800CC);



// ----------------------------  Register Item: SACRB_APBSPPPCEXP3  -------------------------------
// SVD Line: 6127

//  <item> SFDITEM_REG__SACRB_APBSPPPCEXP3
//    <name> APBSPPPCEXP3 </name>
//    <i> [Bits 31..0] RW (@ 0x500800CC) Expansion 3 Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_APBSPPPCEXP3 >> 0) & 0xFFFFFFFF), ((SACRB_APBSPPPCEXP3 = (SACRB_APBSPPPCEXP3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: SACRB_NSMSCEXP  -----------------------------
// SVD Line: 6135

unsigned int SACRB_NSMSCEXP __AT (0x500800D0);



// ------------------------------  Register Item: SACRB_NSMSCEXP  ---------------------------------
// SVD Line: 6135

//  <item> SFDITEM_REG__SACRB_NSMSCEXP
//    <name> NSMSCEXP </name>
//    <i> [Bits 31..0] RO (@ 0x500800D0) Expansion MSC Non-Secure Configuration </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_NSMSCEXP >> 0) & 0xFFFFFFFF), ((SACRB_NSMSCEXP = (SACRB_NSMSCEXP & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SACRB_PID4  -------------------------------
// SVD Line: 6143

unsigned int SACRB_PID4 __AT (0x50080FD0);



// --------------------------------  Register Item: SACRB_PID4  -----------------------------------
// SVD Line: 6143

//  <item> SFDITEM_REG__SACRB_PID4
//    <name> PID4 </name>
//    <i> [Bits 31..0] RO (@ 0x50080FD0) Peripheral ID 4 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_PID4 >> 0) & 0xFFFFFFFF), ((SACRB_PID4 = (SACRB_PID4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SACRB_PID0  -------------------------------
// SVD Line: 6151

unsigned int SACRB_PID0 __AT (0x50080FE0);



// --------------------------------  Register Item: SACRB_PID0  -----------------------------------
// SVD Line: 6151

//  <item> SFDITEM_REG__SACRB_PID0
//    <name> PID0 </name>
//    <i> [Bits 31..0] RO (@ 0x50080FE0) Peripheral ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_PID0 >> 0) & 0xFFFFFFFF), ((SACRB_PID0 = (SACRB_PID0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SACRB_PID1  -------------------------------
// SVD Line: 6159

unsigned int SACRB_PID1 __AT (0x50080FE4);



// --------------------------------  Register Item: SACRB_PID1  -----------------------------------
// SVD Line: 6159

//  <item> SFDITEM_REG__SACRB_PID1
//    <name> PID1 </name>
//    <i> [Bits 31..0] RO (@ 0x50080FE4) Peripheral ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_PID1 >> 0) & 0xFFFFFFFF), ((SACRB_PID1 = (SACRB_PID1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SACRB_PID2  -------------------------------
// SVD Line: 6167

unsigned int SACRB_PID2 __AT (0x50080FE8);



// --------------------------------  Register Item: SACRB_PID2  -----------------------------------
// SVD Line: 6167

//  <item> SFDITEM_REG__SACRB_PID2
//    <name> PID2 </name>
//    <i> [Bits 31..0] RO (@ 0x50080FE8) Peripheral ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_PID2 >> 0) & 0xFFFFFFFF), ((SACRB_PID2 = (SACRB_PID2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SACRB_PID3  -------------------------------
// SVD Line: 6175

unsigned int SACRB_PID3 __AT (0x50080FEC);



// --------------------------------  Register Item: SACRB_PID3  -----------------------------------
// SVD Line: 6175

//  <item> SFDITEM_REG__SACRB_PID3
//    <name> PID3 </name>
//    <i> [Bits 31..0] RO (@ 0x50080FEC) Peripheral ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_PID3 >> 0) & 0xFFFFFFFF), ((SACRB_PID3 = (SACRB_PID3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: SACRB_CIDR0  -------------------------------
// SVD Line: 6183

unsigned int SACRB_CIDR0 __AT (0x50080FF0);



// -------------------------------  Register Item: SACRB_CIDR0  -----------------------------------
// SVD Line: 6183

//  <item> SFDITEM_REG__SACRB_CIDR0
//    <name> CIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x50080FF0) Component ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_CIDR0 >> 0) & 0xFFFFFFFF), ((SACRB_CIDR0 = (SACRB_CIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: SACRB_CIDR1  -------------------------------
// SVD Line: 6191

unsigned int SACRB_CIDR1 __AT (0x50080FF4);



// -------------------------------  Register Item: SACRB_CIDR1  -----------------------------------
// SVD Line: 6191

//  <item> SFDITEM_REG__SACRB_CIDR1
//    <name> CIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x50080FF4) Component ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_CIDR1 >> 0) & 0xFFFFFFFF), ((SACRB_CIDR1 = (SACRB_CIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: SACRB_CIDR2  -------------------------------
// SVD Line: 6199

unsigned int SACRB_CIDR2 __AT (0x50080FF8);



// -------------------------------  Register Item: SACRB_CIDR2  -----------------------------------
// SVD Line: 6199

//  <item> SFDITEM_REG__SACRB_CIDR2
//    <name> CIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x50080FF8) Component ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_CIDR2 >> 0) & 0xFFFFFFFF), ((SACRB_CIDR2 = (SACRB_CIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: SACRB_CIDR3  -------------------------------
// SVD Line: 6207

unsigned int SACRB_CIDR3 __AT (0x50080FFC);



// -------------------------------  Register Item: SACRB_CIDR3  -----------------------------------
// SVD Line: 6207

//  <item> SFDITEM_REG__SACRB_CIDR3
//    <name> CIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x50080FFC) Component ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SACRB_CIDR3 >> 0) & 0xFFFFFFFF), ((SACRB_CIDR3 = (SACRB_CIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: SACRB  -------------------------------------
// SVD Line: 5823

//  <view> SACRB
//    <name> SACRB </name>
//    <item> SFDITEM_REG__SACRB_SPCSECTRL </item>
//    <item> SFDITEM_REG__SACRB_BUSWAIT </item>
//    <item> SFDITEM_REG__SACRB_SECRESPCFG </item>
//    <item> SFDITEM_REG__SACRB_NSCCFG </item>
//    <item> SFDITEM_REG__SACRB_SECMPCINTSTATUS </item>
//    <item> SFDITEM_REG__SACRB_SECPPCINTSTAT </item>
//    <item> SFDITEM_REG__SACRB_SECPPCINTCLR </item>
//    <item> SFDITEM_REG__SACRB_SECPPCINTEN </item>
//    <item> SFDITEM_REG__SACRB_SECMSCINTSTAT </item>
//    <item> SFDITEM_REG__SACRB_SECMSCINTCLR </item>
//    <item> SFDITEM_REG__SACRB_SECMSCINTEN </item>
//    <item> SFDITEM_REG__SACRB_BRGINTSTAT </item>
//    <item> SFDITEM_REG__SACRB_BRGINTCLR </item>
//    <item> SFDITEM_REG__SACRB_BRGINTEN </item>
//    <item> SFDITEM_REG__SACRB_AHBNSPPC0 </item>
//    <item> SFDITEM_REG__SACRB_AHBNSPPCEXP0 </item>
//    <item> SFDITEM_REG__SACRB_AHBNSPPCEXP1 </item>
//    <item> SFDITEM_REG__SACRB_AHBNSPPCEXP2 </item>
//    <item> SFDITEM_REG__SACRB_AHBNSPPCEXP3 </item>
//    <item> SFDITEM_REG__SACRB_APBNSPPC0 </item>
//    <item> SFDITEM_REG__SACRB_APBNSPPC1 </item>
//    <item> SFDITEM_REG__SACRB_APBNSPPCEXP0 </item>
//    <item> SFDITEM_REG__SACRB_APBNSPPCEXP1 </item>
//    <item> SFDITEM_REG__SACRB_APBNSPPCEXP2 </item>
//    <item> SFDITEM_REG__SACRB_APBNSPPCEXP3 </item>
//    <item> SFDITEM_REG__SACRB_AHBSPPPC0 </item>
//    <item> SFDITEM_REG__SACRB_AHBSPPPCEXP0 </item>
//    <item> SFDITEM_REG__SACRB_AHBSPPPCEXP1 </item>
//    <item> SFDITEM_REG__SACRB_AHBSPPPCEXP2 </item>
//    <item> SFDITEM_REG__SACRB_AHBSPPPCEXP3 </item>
//    <item> SFDITEM_REG__SACRB_APBSPPPC0 </item>
//    <item> SFDITEM_REG__SACRB_APBSPPPC1 </item>
//    <item> SFDITEM_REG__SACRB_APBSPPPCEXP0 </item>
//    <item> SFDITEM_REG__SACRB_APBSPPPCEXP1 </item>
//    <item> SFDITEM_REG__SACRB_APBSPPPCEXP2 </item>
//    <item> SFDITEM_REG__SACRB_APBSPPPCEXP3 </item>
//    <item> SFDITEM_REG__SACRB_NSMSCEXP </item>
//    <item> SFDITEM_REG__SACRB_PID4 </item>
//    <item> SFDITEM_REG__SACRB_PID0 </item>
//    <item> SFDITEM_REG__SACRB_PID1 </item>
//    <item> SFDITEM_REG__SACRB_PID2 </item>
//    <item> SFDITEM_REG__SACRB_PID3 </item>
//    <item> SFDITEM_REG__SACRB_CIDR0 </item>
//    <item> SFDITEM_REG__SACRB_CIDR1 </item>
//    <item> SFDITEM_REG__SACRB_CIDR2 </item>
//    <item> SFDITEM_REG__SACRB_CIDR3 </item>
//  </view>
//  


// ------------------------  Register Item Address: NSACRB_AHBNSPPPC0  ----------------------------
// SVD Line: 6228

unsigned int NSACRB_AHBNSPPPC0 __AT (0x40080090);



// ----------------------------  Register Item: NSACRB_AHBNSPPPC0  --------------------------------
// SVD Line: 6228

//  <item> SFDITEM_REG__NSACRB_AHBNSPPPC0
//    <name> AHBNSPPPC0 </name>
//    <i> [Bits 31..0] RW (@ 0x40080090) Non-Secure Unprivileged Access AHB slave Peripheral Protection Control #0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSACRB_AHBNSPPPC0 >> 0) & 0xFFFFFFFF), ((NSACRB_AHBNSPPPC0 = (NSACRB_AHBNSPPPC0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: NSACRB_AHBNSPPPCEXP0  --------------------------
// SVD Line: 6236

unsigned int NSACRB_AHBNSPPPCEXP0 __AT (0x400800A0);



// ---------------------------  Register Item: NSACRB_AHBNSPPPCEXP0  ------------------------------
// SVD Line: 6236

//  <item> SFDITEM_REG__NSACRB_AHBNSPPPCEXP0
//    <name> AHBNSPPPCEXP0 </name>
//    <i> [Bits 31..0] RW (@ 0x400800A0) Expansion 0 Non_Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSACRB_AHBNSPPPCEXP0 >> 0) & 0xFFFFFFFF), ((NSACRB_AHBNSPPPCEXP0 = (NSACRB_AHBNSPPPCEXP0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: NSACRB_AHBNSPPPCEXP1  --------------------------
// SVD Line: 6244

unsigned int NSACRB_AHBNSPPPCEXP1 __AT (0x400800A4);



// ---------------------------  Register Item: NSACRB_AHBNSPPPCEXP1  ------------------------------
// SVD Line: 6244

//  <item> SFDITEM_REG__NSACRB_AHBNSPPPCEXP1
//    <name> AHBNSPPPCEXP1 </name>
//    <i> [Bits 31..0] RW (@ 0x400800A4) Expansion 1 Non_Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSACRB_AHBNSPPPCEXP1 >> 0) & 0xFFFFFFFF), ((NSACRB_AHBNSPPPCEXP1 = (NSACRB_AHBNSPPPCEXP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: NSACRB_AHBNSPPPCEXP2  --------------------------
// SVD Line: 6252

unsigned int NSACRB_AHBNSPPPCEXP2 __AT (0x400800A8);



// ---------------------------  Register Item: NSACRB_AHBNSPPPCEXP2  ------------------------------
// SVD Line: 6252

//  <item> SFDITEM_REG__NSACRB_AHBNSPPPCEXP2
//    <name> AHBNSPPPCEXP2 </name>
//    <i> [Bits 31..0] RW (@ 0x400800A8) Expansion 2 Non_Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSACRB_AHBNSPPPCEXP2 >> 0) & 0xFFFFFFFF), ((NSACRB_AHBNSPPPCEXP2 = (NSACRB_AHBNSPPPCEXP2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: NSACRB_AHBNSPPPCEXP3  --------------------------
// SVD Line: 6260

unsigned int NSACRB_AHBNSPPPCEXP3 __AT (0x400800AC);



// ---------------------------  Register Item: NSACRB_AHBNSPPPCEXP3  ------------------------------
// SVD Line: 6260

//  <item> SFDITEM_REG__NSACRB_AHBNSPPPCEXP3
//    <name> AHBNSPPPCEXP3 </name>
//    <i> [Bits 31..0] RW (@ 0x400800AC) Expansion 3 Non_Secure Unprivileged Access AHB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSACRB_AHBNSPPPCEXP3 >> 0) & 0xFFFFFFFF), ((NSACRB_AHBNSPPPCEXP3 = (NSACRB_AHBNSPPPCEXP3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: NSACRB_APBNSPPPC0  ----------------------------
// SVD Line: 6268

unsigned int NSACRB_APBNSPPPC0 __AT (0x400800B0);



// ----------------------------  Register Item: NSACRB_APBNSPPPC0  --------------------------------
// SVD Line: 6268

//  <item> SFDITEM_REG__NSACRB_APBNSPPPC0
//    <name> APBNSPPPC0 </name>
//    <i> [Bits 31..0] RW (@ 0x400800B0) Non-Secure Unprivileged Access APB slave Peripheral Protection Control 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSACRB_APBNSPPPC0 >> 0) & 0xFFFFFFFF), ((NSACRB_APBNSPPPC0 = (NSACRB_APBNSPPPC0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: NSACRB_APBNSPPPC1  ----------------------------
// SVD Line: 6276

unsigned int NSACRB_APBNSPPPC1 __AT (0x400800B4);



// ----------------------------  Register Item: NSACRB_APBNSPPPC1  --------------------------------
// SVD Line: 6276

//  <item> SFDITEM_REG__NSACRB_APBNSPPPC1
//    <name> APBNSPPPC1 </name>
//    <i> [Bits 31..0] RW (@ 0x400800B4) Non-Secure Unprivileged Access APB slave Peripheral Protection Control 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSACRB_APBNSPPPC1 >> 0) & 0xFFFFFFFF), ((NSACRB_APBNSPPPC1 = (NSACRB_APBNSPPPC1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: NSACRB_APBNSPPPCEXP0  --------------------------
// SVD Line: 6284

unsigned int NSACRB_APBNSPPPCEXP0 __AT (0x400800C0);



// ---------------------------  Register Item: NSACRB_APBNSPPPCEXP0  ------------------------------
// SVD Line: 6284

//  <item> SFDITEM_REG__NSACRB_APBNSPPPCEXP0
//    <name> APBNSPPPCEXP0 </name>
//    <i> [Bits 31..0] RW (@ 0x400800C0) Expansion 0 Non_Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSACRB_APBNSPPPCEXP0 >> 0) & 0xFFFFFFFF), ((NSACRB_APBNSPPPCEXP0 = (NSACRB_APBNSPPPCEXP0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: NSACRB_APBNSPPPCEXP1  --------------------------
// SVD Line: 6292

unsigned int NSACRB_APBNSPPPCEXP1 __AT (0x400800C4);



// ---------------------------  Register Item: NSACRB_APBNSPPPCEXP1  ------------------------------
// SVD Line: 6292

//  <item> SFDITEM_REG__NSACRB_APBNSPPPCEXP1
//    <name> APBNSPPPCEXP1 </name>
//    <i> [Bits 31..0] RW (@ 0x400800C4) Expansion 1 Non_Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSACRB_APBNSPPPCEXP1 >> 0) & 0xFFFFFFFF), ((NSACRB_APBNSPPPCEXP1 = (NSACRB_APBNSPPPCEXP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: NSACRB_APBNSPPPCEXP2  --------------------------
// SVD Line: 6300

unsigned int NSACRB_APBNSPPPCEXP2 __AT (0x400800C8);



// ---------------------------  Register Item: NSACRB_APBNSPPPCEXP2  ------------------------------
// SVD Line: 6300

//  <item> SFDITEM_REG__NSACRB_APBNSPPPCEXP2
//    <name> APBNSPPPCEXP2 </name>
//    <i> [Bits 31..0] RW (@ 0x400800C8) Expansion 2 Non_Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSACRB_APBNSPPPCEXP2 >> 0) & 0xFFFFFFFF), ((NSACRB_APBNSPPPCEXP2 = (NSACRB_APBNSPPPCEXP2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: NSACRB_APBNSPPPCEXP3  --------------------------
// SVD Line: 6308

unsigned int NSACRB_APBNSPPPCEXP3 __AT (0x400800CC);



// ---------------------------  Register Item: NSACRB_APBNSPPPCEXP3  ------------------------------
// SVD Line: 6308

//  <item> SFDITEM_REG__NSACRB_APBNSPPPCEXP3
//    <name> APBNSPPPCEXP3 </name>
//    <i> [Bits 31..0] RW (@ 0x400800CC) Expansion 3 Non_Secure Unprivileged Access APB slave Peripheral Protection Control </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSACRB_APBNSPPPCEXP3 >> 0) & 0xFFFFFFFF), ((NSACRB_APBNSPPPCEXP3 = (NSACRB_APBNSPPPCEXP3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: NSACRB_PIDR4  ------------------------------
// SVD Line: 6316

unsigned int NSACRB_PIDR4 __AT (0x40080FD0);



// -------------------------------  Register Item: NSACRB_PIDR4  ----------------------------------
// SVD Line: 6316

//  <item> SFDITEM_REG__NSACRB_PIDR4
//    <name> PIDR4 </name>
//    <i> [Bits 31..0] RO (@ 0x40080FD0) Peripheral ID 4 </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSACRB_PIDR4 >> 0) & 0xFFFFFFFF), ((NSACRB_PIDR4 = (NSACRB_PIDR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: NSACRB_PIDR0  ------------------------------
// SVD Line: 6324

unsigned int NSACRB_PIDR0 __AT (0x40080FE0);



// -------------------------------  Register Item: NSACRB_PIDR0  ----------------------------------
// SVD Line: 6324

//  <item> SFDITEM_REG__NSACRB_PIDR0
//    <name> PIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x40080FE0) Peripheral ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSACRB_PIDR0 >> 0) & 0xFFFFFFFF), ((NSACRB_PIDR0 = (NSACRB_PIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: NSACRB_PIDR1  ------------------------------
// SVD Line: 6332

unsigned int NSACRB_PIDR1 __AT (0x40080FE4);



// -------------------------------  Register Item: NSACRB_PIDR1  ----------------------------------
// SVD Line: 6332

//  <item> SFDITEM_REG__NSACRB_PIDR1
//    <name> PIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x40080FE4) Peripheral ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSACRB_PIDR1 >> 0) & 0xFFFFFFFF), ((NSACRB_PIDR1 = (NSACRB_PIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: NSACRB_PIDR2  ------------------------------
// SVD Line: 6340

unsigned int NSACRB_PIDR2 __AT (0x40080FE8);



// -------------------------------  Register Item: NSACRB_PIDR2  ----------------------------------
// SVD Line: 6340

//  <item> SFDITEM_REG__NSACRB_PIDR2
//    <name> PIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x40080FE8) Peripheral ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSACRB_PIDR2 >> 0) & 0xFFFFFFFF), ((NSACRB_PIDR2 = (NSACRB_PIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: NSACRB_PIDR3  ------------------------------
// SVD Line: 6348

unsigned int NSACRB_PIDR3 __AT (0x40080FEC);



// -------------------------------  Register Item: NSACRB_PIDR3  ----------------------------------
// SVD Line: 6348

//  <item> SFDITEM_REG__NSACRB_PIDR3
//    <name> PIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x40080FEC) Peripheral ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSACRB_PIDR3 >> 0) & 0xFFFFFFFF), ((NSACRB_PIDR3 = (NSACRB_PIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: NSACRB_CIDR0  ------------------------------
// SVD Line: 6356

unsigned int NSACRB_CIDR0 __AT (0x40080FF0);



// -------------------------------  Register Item: NSACRB_CIDR0  ----------------------------------
// SVD Line: 6356

//  <item> SFDITEM_REG__NSACRB_CIDR0
//    <name> CIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x40080FF0) Component ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSACRB_CIDR0 >> 0) & 0xFFFFFFFF), ((NSACRB_CIDR0 = (NSACRB_CIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: NSACRB_CIDR1  ------------------------------
// SVD Line: 6364

unsigned int NSACRB_CIDR1 __AT (0x40080FF4);



// -------------------------------  Register Item: NSACRB_CIDR1  ----------------------------------
// SVD Line: 6364

//  <item> SFDITEM_REG__NSACRB_CIDR1
//    <name> CIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x40080FF4) Component ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSACRB_CIDR1 >> 0) & 0xFFFFFFFF), ((NSACRB_CIDR1 = (NSACRB_CIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: NSACRB_CIDR2  ------------------------------
// SVD Line: 6372

unsigned int NSACRB_CIDR2 __AT (0x40080FF8);



// -------------------------------  Register Item: NSACRB_CIDR2  ----------------------------------
// SVD Line: 6372

//  <item> SFDITEM_REG__NSACRB_CIDR2
//    <name> CIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x40080FF8) Component ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSACRB_CIDR2 >> 0) & 0xFFFFFFFF), ((NSACRB_CIDR2 = (NSACRB_CIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: NSACRB_CIDR3  ------------------------------
// SVD Line: 6380

unsigned int NSACRB_CIDR3 __AT (0x40080FFC);



// -------------------------------  Register Item: NSACRB_CIDR3  ----------------------------------
// SVD Line: 6380

//  <item> SFDITEM_REG__NSACRB_CIDR3
//    <name> CIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x40080FFC) Component ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((NSACRB_CIDR3 >> 0) & 0xFFFFFFFF), ((NSACRB_CIDR3 = (NSACRB_CIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Peripheral View: NSACRB  ------------------------------------
// SVD Line: 6218

//  <view> NSACRB
//    <name> NSACRB </name>
//    <item> SFDITEM_REG__NSACRB_AHBNSPPPC0 </item>
//    <item> SFDITEM_REG__NSACRB_AHBNSPPPCEXP0 </item>
//    <item> SFDITEM_REG__NSACRB_AHBNSPPPCEXP1 </item>
//    <item> SFDITEM_REG__NSACRB_AHBNSPPPCEXP2 </item>
//    <item> SFDITEM_REG__NSACRB_AHBNSPPPCEXP3 </item>
//    <item> SFDITEM_REG__NSACRB_APBNSPPPC0 </item>
//    <item> SFDITEM_REG__NSACRB_APBNSPPPC1 </item>
//    <item> SFDITEM_REG__NSACRB_APBNSPPPCEXP0 </item>
//    <item> SFDITEM_REG__NSACRB_APBNSPPPCEXP1 </item>
//    <item> SFDITEM_REG__NSACRB_APBNSPPPCEXP2 </item>
//    <item> SFDITEM_REG__NSACRB_APBNSPPPCEXP3 </item>
//    <item> SFDITEM_REG__NSACRB_PIDR4 </item>
//    <item> SFDITEM_REG__NSACRB_PIDR0 </item>
//    <item> SFDITEM_REG__NSACRB_PIDR1 </item>
//    <item> SFDITEM_REG__NSACRB_PIDR2 </item>
//    <item> SFDITEM_REG__NSACRB_PIDR3 </item>
//    <item> SFDITEM_REG__NSACRB_CIDR0 </item>
//    <item> SFDITEM_REG__NSACRB_CIDR1 </item>
//    <item> SFDITEM_REG__NSACRB_CIDR2 </item>
//    <item> SFDITEM_REG__NSACRB_CIDR3 </item>
//  </view>
//  


// --------------------------  Register Item Address: ISRAM0MPC_CTRL  -----------------------------
// SVD Line: 6407

unsigned int ISRAM0MPC_CTRL __AT (0x50083000);



// -------------------------  Field Item: ISRAM0MPC_CTRL_CFG_SEC_RESP  ----------------------------
// SVD Line: 6415

//  <item> SFDITEM_FIELD__ISRAM0MPC_CTRL_CFG_SEC_RESP
//    <name> CFG_SEC_RESP </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x50083000) \nSecurity error response configuration\n0 : RAZ_WI = Read-As-Zero - Writes ignored\n1 : BUSERROR = Bus Error </i>
//    <combo> 
//      <loc> ( (unsigned int) ISRAM0MPC_CTRL ) </loc>
//      <o.4..4> CFG_SEC_RESP
//        <0=> 0: RAZ_WI = Read-As-Zero - Writes ignored
//        <1=> 1: BUSERROR = Bus Error
//    </combo>
//  </item>
//  


// ----------------------  Field Item: ISRAM0MPC_CTRL_DATA_IF_GATING_REQ  -------------------------
// SVD Line: 6433

//  <item> SFDITEM_FIELD__ISRAM0MPC_CTRL_DATA_IF_GATING_REQ
//    <name> DATA_IF_GATING_REQ </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50083000) Data interface gating request </i>
//    <check> 
//      <loc> ( (unsigned int) ISRAM0MPC_CTRL ) </loc>
//      <o.6..6> DATA_IF_GATING_REQ
//    </check>
//  </item>
//  


// ----------------------  Field Item: ISRAM0MPC_CTRL_DATA_IF_GATING_ACK  -------------------------
// SVD Line: 6439

//  <item> SFDITEM_FIELD__ISRAM0MPC_CTRL_DATA_IF_GATING_ACK
//    <name> DATA_IF_GATING_ACK </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x50083000) Data interface gating acknowledge (RO) </i>
//    <check> 
//      <loc> ( (unsigned int) ISRAM0MPC_CTRL ) </loc>
//      <o.7..7> DATA_IF_GATING_ACK
//    </check>
//  </item>
//  


// ------------------------  Field Item: ISRAM0MPC_CTRL_AUTO_INCREMENT  ---------------------------
// SVD Line: 6446

//  <item> SFDITEM_FIELD__ISRAM0MPC_CTRL_AUTO_INCREMENT
//    <name> AUTO_INCREMENT </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x50083000) Auto-increment </i>
//    <check> 
//      <loc> ( (unsigned int) ISRAM0MPC_CTRL ) </loc>
//      <o.8..8> AUTO_INCREMENT
//    </check>
//  </item>
//  


// -------------------------  Field Item: ISRAM0MPC_CTRL_SEC_LOCKDOWN  ----------------------------
// SVD Line: 6452

//  <item> SFDITEM_FIELD__ISRAM0MPC_CTRL_SEC_LOCKDOWN
//    <name> SEC_LOCKDOWN </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x50083000) Security lockdown </i>
//    <check> 
//      <loc> ( (unsigned int) ISRAM0MPC_CTRL ) </loc>
//      <o.31..31> SEC_LOCKDOWN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: ISRAM0MPC_CTRL  ---------------------------------
// SVD Line: 6407

//  <rtree> SFDITEM_REG__ISRAM0MPC_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50083000) MPC Control register </i>
//    <loc> ( (unsigned int)((ISRAM0MPC_CTRL >> 0) & 0xFFFFFFFF), ((ISRAM0MPC_CTRL = (ISRAM0MPC_CTRL & ~(0x80000150UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x80000150) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ISRAM0MPC_CTRL_CFG_SEC_RESP </item>
//    <item> SFDITEM_FIELD__ISRAM0MPC_CTRL_DATA_IF_GATING_REQ </item>
//    <item> SFDITEM_FIELD__ISRAM0MPC_CTRL_DATA_IF_GATING_ACK </item>
//    <item> SFDITEM_FIELD__ISRAM0MPC_CTRL_AUTO_INCREMENT </item>
//    <item> SFDITEM_FIELD__ISRAM0MPC_CTRL_SEC_LOCKDOWN </item>
//  </rtree>
//  


// ------------------------  Register Item Address: ISRAM0MPC_BLK_MAX  ----------------------------
// SVD Line: 6460

unsigned int ISRAM0MPC_BLK_MAX __AT (0x50083010);



// -------------------------  Field Item: ISRAM0MPC_BLK_MAX_BLK_SIZE  -----------------------------
// SVD Line: 6467

//  <item> SFDITEM_FIELD__ISRAM0MPC_BLK_MAX_BLK_SIZE
//    <name> BLK_SIZE </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x50083010) Block size </i>
//    <edit> 
//      <loc> ( (unsigned char)((ISRAM0MPC_BLK_MAX >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: ISRAM0MPC_BLK_MAX_IN_PROGRESS  ---------------------------
// SVD Line: 6473

//  <item> SFDITEM_FIELD__ISRAM0MPC_BLK_MAX_IN_PROGRESS
//    <name> IN_PROGRESS </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0x50083010) Initialization in progress </i>
//    <check> 
//      <loc> ( (unsigned int) ISRAM0MPC_BLK_MAX ) </loc>
//      <o.31..31> IN_PROGRESS
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: ISRAM0MPC_BLK_MAX  -------------------------------
// SVD Line: 6460

//  <rtree> SFDITEM_REG__ISRAM0MPC_BLK_MAX
//    <name> BLK_MAX </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50083010) Maximum value of block based index register </i>
//    <loc> ( (unsigned int)((ISRAM0MPC_BLK_MAX >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ISRAM0MPC_BLK_MAX_BLK_SIZE </item>
//    <item> SFDITEM_FIELD__ISRAM0MPC_BLK_MAX_IN_PROGRESS </item>
//  </rtree>
//  


// ------------------------  Register Item Address: ISRAM0MPC_BLK_CFG  ----------------------------
// SVD Line: 6481

unsigned int ISRAM0MPC_BLK_CFG __AT (0x50083014);



// ----------------------------  Register Item: ISRAM0MPC_BLK_CFG  --------------------------------
// SVD Line: 6481

//  <item> SFDITEM_REG__ISRAM0MPC_BLK_CFG
//    <name> BLK_CFG </name>
//    <i> [Bits 31..0] RO (@ 0x50083014) Block Configuration </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM0MPC_BLK_CFG >> 0) & 0xFFFFFFFF), ((ISRAM0MPC_BLK_CFG = (ISRAM0MPC_BLK_CFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: ISRAM0MPC_BLK_IDX  ----------------------------
// SVD Line: 6488

unsigned int ISRAM0MPC_BLK_IDX __AT (0x50083018);



// ----------------------------  Register Item: ISRAM0MPC_BLK_IDX  --------------------------------
// SVD Line: 6488

//  <item> SFDITEM_REG__ISRAM0MPC_BLK_IDX
//    <name> BLK_IDX </name>
//    <i> [Bits 31..0] RW (@ 0x50083018) Index value for accessing block based look up table </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM0MPC_BLK_IDX >> 0) & 0xFFFFFFFF), ((ISRAM0MPC_BLK_IDX = (ISRAM0MPC_BLK_IDX & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: ISRAM0MPC_BLK_LUT  ----------------------------
// SVD Line: 6496

unsigned int ISRAM0MPC_BLK_LUT __AT (0x5008301C);



// ----------------------------  Register Item: ISRAM0MPC_BLK_LUT  --------------------------------
// SVD Line: 6496

//  <item> SFDITEM_REG__ISRAM0MPC_BLK_LUT
//    <name> BLK_LUT </name>
//    <i> [Bits 31..0] RW (@ 0x5008301C) Block based gating Look Up Table </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM0MPC_BLK_LUT >> 0) & 0xFFFFFFFF), ((ISRAM0MPC_BLK_LUT = (ISRAM0MPC_BLK_LUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: ISRAM0MPC_INT_STAT  ---------------------------
// SVD Line: 6503

unsigned int ISRAM0MPC_INT_STAT __AT (0x50083020);



// -------------------------  Field Item: ISRAM0MPC_INT_STAT_mpc_irq  -----------------------------
// SVD Line: 6511

//  <item> SFDITEM_FIELD__ISRAM0MPC_INT_STAT_mpc_irq
//    <name> mpc_irq </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x50083020) mpc_irq triggered </i>
//    <check> 
//      <loc> ( (unsigned int) ISRAM0MPC_INT_STAT ) </loc>
//      <o.0..0> mpc_irq
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: ISRAM0MPC_INT_STAT  -------------------------------
// SVD Line: 6503

//  <rtree> SFDITEM_REG__ISRAM0MPC_INT_STAT
//    <name> INT_STAT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50083020) Interrupt state </i>
//    <loc> ( (unsigned int)((ISRAM0MPC_INT_STAT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ISRAM0MPC_INT_STAT_mpc_irq </item>
//  </rtree>
//  


// -----------------------  Register Item Address: ISRAM0MPC_INT_CLEAR  ---------------------------
// SVD Line: 6519

unsigned int ISRAM0MPC_INT_CLEAR __AT (0x50083024);



// -------------------------  Field Item: ISRAM0MPC_INT_CLEAR_mpc_irq  ----------------------------
// SVD Line: 6527

//  <item> SFDITEM_FIELD__ISRAM0MPC_INT_CLEAR_mpc_irq
//    <name> mpc_irq </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x50083024) mpc_irq clear (cleared automatically) </i>
//    <check> 
//      <loc> ( (unsigned int) ISRAM0MPC_INT_CLEAR ) </loc>
//      <o.0..0> mpc_irq
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: ISRAM0MPC_INT_CLEAR  ------------------------------
// SVD Line: 6519

//  <rtree> SFDITEM_REG__ISRAM0MPC_INT_CLEAR
//    <name> INT_CLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x50083024) Interrupt clear </i>
//    <loc> ( (unsigned int)((ISRAM0MPC_INT_CLEAR >> 0) & 0xFFFFFFFF), ((ISRAM0MPC_INT_CLEAR = (ISRAM0MPC_INT_CLEAR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ISRAM0MPC_INT_CLEAR_mpc_irq </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ISRAM0MPC_INT_EN  ----------------------------
// SVD Line: 6535

unsigned int ISRAM0MPC_INT_EN __AT (0x50083028);



// --------------------------  Field Item: ISRAM0MPC_INT_EN_mpc_irq  ------------------------------
// SVD Line: 6543

//  <item> SFDITEM_FIELD__ISRAM0MPC_INT_EN_mpc_irq
//    <name> mpc_irq </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50083028) mpc_irq enable. Bits are valid when mpc_irq triggered is set </i>
//    <check> 
//      <loc> ( (unsigned int) ISRAM0MPC_INT_EN ) </loc>
//      <o.0..0> mpc_irq
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: ISRAM0MPC_INT_EN  --------------------------------
// SVD Line: 6535

//  <rtree> SFDITEM_REG__ISRAM0MPC_INT_EN
//    <name> INT_EN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50083028) Interrupt enable </i>
//    <loc> ( (unsigned int)((ISRAM0MPC_INT_EN >> 0) & 0xFFFFFFFF), ((ISRAM0MPC_INT_EN = (ISRAM0MPC_INT_EN & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ISRAM0MPC_INT_EN_mpc_irq </item>
//  </rtree>
//  


// -----------------------  Register Item Address: ISRAM0MPC_INT_INFO1  ---------------------------
// SVD Line: 6551

unsigned int ISRAM0MPC_INT_INFO1 __AT (0x5008302C);



// ---------------------------  Register Item: ISRAM0MPC_INT_INFO1  -------------------------------
// SVD Line: 6551

//  <item> SFDITEM_REG__ISRAM0MPC_INT_INFO1
//    <name> INT_INFO1 </name>
//    <i> [Bits 31..0] RO (@ 0x5008302C) Interrupt information 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM0MPC_INT_INFO1 >> 0) & 0xFFFFFFFF), ((ISRAM0MPC_INT_INFO1 = (ISRAM0MPC_INT_INFO1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: ISRAM0MPC_INT_INFO2  ---------------------------
// SVD Line: 6559

unsigned int ISRAM0MPC_INT_INFO2 __AT (0x50083030);



// -------------------------  Field Item: ISRAM0MPC_INT_INFO2_hmaster  ----------------------------
// SVD Line: 6566

//  <item> SFDITEM_FIELD__ISRAM0MPC_INT_INFO2_hmaster
//    <name> hmaster </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x50083030) hmaster </i>
//    <edit> 
//      <loc> ( (unsigned short)((ISRAM0MPC_INT_INFO2 >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: ISRAM0MPC_INT_INFO2_hnonsec  ----------------------------
// SVD Line: 6572

//  <item> SFDITEM_FIELD__ISRAM0MPC_INT_INFO2_hnonsec
//    <name> hnonsec </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x50083030) hnonsec </i>
//    <check> 
//      <loc> ( (unsigned int) ISRAM0MPC_INT_INFO2 ) </loc>
//      <o.16..16> hnonsec
//    </check>
//  </item>
//  


// -------------------------  Field Item: ISRAM0MPC_INT_INFO2_cfg_ns  -----------------------------
// SVD Line: 6578

//  <item> SFDITEM_FIELD__ISRAM0MPC_INT_INFO2_cfg_ns
//    <name> cfg_ns </name>
//    <r> 
//    <i> [Bit 17] RO (@ 0x50083030) cfg_ns </i>
//    <check> 
//      <loc> ( (unsigned int) ISRAM0MPC_INT_INFO2 ) </loc>
//      <o.17..17> cfg_ns
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: ISRAM0MPC_INT_INFO2  ------------------------------
// SVD Line: 6559

//  <rtree> SFDITEM_REG__ISRAM0MPC_INT_INFO2
//    <name> INT_INFO2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50083030) Interrupt information 2 </i>
//    <loc> ( (unsigned int)((ISRAM0MPC_INT_INFO2 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ISRAM0MPC_INT_INFO2_hmaster </item>
//    <item> SFDITEM_FIELD__ISRAM0MPC_INT_INFO2_hnonsec </item>
//    <item> SFDITEM_FIELD__ISRAM0MPC_INT_INFO2_cfg_ns </item>
//  </rtree>
//  


// ------------------------  Register Item Address: ISRAM0MPC_INT_SET  ----------------------------
// SVD Line: 6586

unsigned int ISRAM0MPC_INT_SET __AT (0x50083034);



// --------------------------  Field Item: ISRAM0MPC_INT_SET_mpc_irq  -----------------------------
// SVD Line: 6594

//  <item> SFDITEM_FIELD__ISRAM0MPC_INT_SET_mpc_irq
//    <name> mpc_irq </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x50083034) mpc_irq set. Debug purpose only </i>
//    <check> 
//      <loc> ( (unsigned int) ISRAM0MPC_INT_SET ) </loc>
//      <o.0..0> mpc_irq
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: ISRAM0MPC_INT_SET  -------------------------------
// SVD Line: 6586

//  <rtree> SFDITEM_REG__ISRAM0MPC_INT_SET
//    <name> INT_SET </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x50083034) Interrupt set. Debug purpose only </i>
//    <loc> ( (unsigned int)((ISRAM0MPC_INT_SET >> 0) & 0xFFFFFFFF), ((ISRAM0MPC_INT_SET = (ISRAM0MPC_INT_SET & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ISRAM0MPC_INT_SET_mpc_irq </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ISRAM0MPC_PIDR4  -----------------------------
// SVD Line: 6602

unsigned int ISRAM0MPC_PIDR4 __AT (0x50083FD0);



// ------------------------  Field Item: ISRAM0MPC_PIDR4_jep106_c_code  ---------------------------
// SVD Line: 6610

//  <item> SFDITEM_FIELD__ISRAM0MPC_PIDR4_jep106_c_code
//    <name> jep106_c_code </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x50083FD0) jep106_c_code </i>
//    <edit> 
//      <loc> ( (unsigned char)((ISRAM0MPC_PIDR4 >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: ISRAM0MPC_PIDR4_block_count  ----------------------------
// SVD Line: 6616

//  <item> SFDITEM_FIELD__ISRAM0MPC_PIDR4_block_count
//    <name> block_count </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x50083FD0) block count </i>
//    <edit> 
//      <loc> ( (unsigned char)((ISRAM0MPC_PIDR4 >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: ISRAM0MPC_PIDR4  --------------------------------
// SVD Line: 6602

//  <rtree> SFDITEM_REG__ISRAM0MPC_PIDR4
//    <name> PIDR4 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50083FD0) Peripheral ID 4 </i>
//    <loc> ( (unsigned int)((ISRAM0MPC_PIDR4 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ISRAM0MPC_PIDR4_jep106_c_code </item>
//    <item> SFDITEM_FIELD__ISRAM0MPC_PIDR4_block_count </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ISRAM0MPC_PIDR5  -----------------------------
// SVD Line: 6624

unsigned int ISRAM0MPC_PIDR5 __AT (0x50083FD4);



// -------------------------  Field Item: ISRAM0MPC_PIDR5_part_number  ----------------------------
// SVD Line: 6632

//  <item> SFDITEM_FIELD__ISRAM0MPC_PIDR5_part_number
//    <name> part_number </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x50083FD4) Part number </i>
//    <edit> 
//      <loc> ( (unsigned char)((ISRAM0MPC_PIDR5 >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: ISRAM0MPC_PIDR5_jep106_id_3_0  ---------------------------
// SVD Line: 6638

//  <item> SFDITEM_FIELD__ISRAM0MPC_PIDR5_jep106_id_3_0
//    <name> jep106_id_3_0 </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x50083FD4) jep106_id_3_0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ISRAM0MPC_PIDR5 >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: ISRAM0MPC_PIDR5  --------------------------------
// SVD Line: 6624

//  <rtree> SFDITEM_REG__ISRAM0MPC_PIDR5
//    <name> PIDR5 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50083FD4) Peripheral ID 5 </i>
//    <loc> ( (unsigned int)((ISRAM0MPC_PIDR5 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ISRAM0MPC_PIDR5_part_number </item>
//    <item> SFDITEM_FIELD__ISRAM0MPC_PIDR5_jep106_id_3_0 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ISRAM0MPC_PIDR6  -----------------------------
// SVD Line: 6646

unsigned int ISRAM0MPC_PIDR6 __AT (0x50083FD8);



// -----------------------------  Register Item: ISRAM0MPC_PIDR6  ---------------------------------
// SVD Line: 6646

//  <item> SFDITEM_REG__ISRAM0MPC_PIDR6
//    <name> PIDR6 </name>
//    <i> [Bits 31..0] RO (@ 0x50083FD8) Peripheral ID 6 </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM0MPC_PIDR6 >> 0) & 0xFFFFFFFF), ((ISRAM0MPC_PIDR6 = (ISRAM0MPC_PIDR6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: ISRAM0MPC_PIDR7  -----------------------------
// SVD Line: 6654

unsigned int ISRAM0MPC_PIDR7 __AT (0x50083FDC);



// -----------------------------  Register Item: ISRAM0MPC_PIDR7  ---------------------------------
// SVD Line: 6654

//  <item> SFDITEM_REG__ISRAM0MPC_PIDR7
//    <name> PIDR7 </name>
//    <i> [Bits 31..0] RO (@ 0x50083FDC) Peripheral ID 7 </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM0MPC_PIDR7 >> 0) & 0xFFFFFFFF), ((ISRAM0MPC_PIDR7 = (ISRAM0MPC_PIDR7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: ISRAM0MPC_PIDR0  -----------------------------
// SVD Line: 6662

unsigned int ISRAM0MPC_PIDR0 __AT (0x50083FE0);



// -----------------------------  Register Item: ISRAM0MPC_PIDR0  ---------------------------------
// SVD Line: 6662

//  <item> SFDITEM_REG__ISRAM0MPC_PIDR0
//    <name> PIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x50083FE0) Peripheral ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM0MPC_PIDR0 >> 0) & 0xFFFFFFFF), ((ISRAM0MPC_PIDR0 = (ISRAM0MPC_PIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: ISRAM0MPC_PIDR1  -----------------------------
// SVD Line: 6670

unsigned int ISRAM0MPC_PIDR1 __AT (0x50083FE4);



// -----------------------------  Register Item: ISRAM0MPC_PIDR1  ---------------------------------
// SVD Line: 6670

//  <item> SFDITEM_REG__ISRAM0MPC_PIDR1
//    <name> PIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x50083FE4) Peripheral ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM0MPC_PIDR1 >> 0) & 0xFFFFFFFF), ((ISRAM0MPC_PIDR1 = (ISRAM0MPC_PIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: ISRAM0MPC_PIDR2  -----------------------------
// SVD Line: 6678

unsigned int ISRAM0MPC_PIDR2 __AT (0x50083FE8);



// -------------------------  Field Item: ISRAM0MPC_PIDR2_part_number  ----------------------------
// SVD Line: 6686

//  <item> SFDITEM_FIELD__ISRAM0MPC_PIDR2_part_number
//    <name> part_number </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x50083FE8) Part number </i>
//    <edit> 
//      <loc> ( (unsigned char)((ISRAM0MPC_PIDR2 >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: ISRAM0MPC_PIDR2_jep106_id_3_0  ---------------------------
// SVD Line: 6692

//  <item> SFDITEM_FIELD__ISRAM0MPC_PIDR2_jep106_id_3_0
//    <name> jep106_id_3_0 </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x50083FE8) jep106_id_3_0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ISRAM0MPC_PIDR2 >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: ISRAM0MPC_PIDR2  --------------------------------
// SVD Line: 6678

//  <rtree> SFDITEM_REG__ISRAM0MPC_PIDR2
//    <name> PIDR2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50083FE8) Peripheral ID 2 </i>
//    <loc> ( (unsigned int)((ISRAM0MPC_PIDR2 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ISRAM0MPC_PIDR2_part_number </item>
//    <item> SFDITEM_FIELD__ISRAM0MPC_PIDR2_jep106_id_3_0 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ISRAM0MPC_PIDR3  -----------------------------
// SVD Line: 6700

unsigned int ISRAM0MPC_PIDR3 __AT (0x50083FEC);



// ---------------------  Field Item: ISRAM0MPC_PIDR3_customer_mod_number  ------------------------
// SVD Line: 6708

//  <item> SFDITEM_FIELD__ISRAM0MPC_PIDR3_customer_mod_number
//    <name> customer_mod_number </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x50083FEC) Customer modification number </i>
//    <edit> 
//      <loc> ( (unsigned char)((ISRAM0MPC_PIDR3 >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: ISRAM0MPC_PIDR3_evo_rev  ------------------------------
// SVD Line: 6714

//  <item> SFDITEM_FIELD__ISRAM0MPC_PIDR3_evo_rev
//    <name> evo_rev </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x50083FEC) ECO revision number </i>
//    <edit> 
//      <loc> ( (unsigned char)((ISRAM0MPC_PIDR3 >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: ISRAM0MPC_PIDR3  --------------------------------
// SVD Line: 6700

//  <rtree> SFDITEM_REG__ISRAM0MPC_PIDR3
//    <name> PIDR3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50083FEC) Peripheral ID 3 </i>
//    <loc> ( (unsigned int)((ISRAM0MPC_PIDR3 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ISRAM0MPC_PIDR3_customer_mod_number </item>
//    <item> SFDITEM_FIELD__ISRAM0MPC_PIDR3_evo_rev </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ISRAM0MPC_CIDR0  -----------------------------
// SVD Line: 6722

unsigned int ISRAM0MPC_CIDR0 __AT (0x50083FF0);



// -----------------------------  Register Item: ISRAM0MPC_CIDR0  ---------------------------------
// SVD Line: 6722

//  <item> SFDITEM_REG__ISRAM0MPC_CIDR0
//    <name> CIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x50083FF0) Component ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM0MPC_CIDR0 >> 0) & 0xFFFFFFFF), ((ISRAM0MPC_CIDR0 = (ISRAM0MPC_CIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: ISRAM0MPC_CIDR1  -----------------------------
// SVD Line: 6730

unsigned int ISRAM0MPC_CIDR1 __AT (0x50083FF4);



// -----------------------------  Register Item: ISRAM0MPC_CIDR1  ---------------------------------
// SVD Line: 6730

//  <item> SFDITEM_REG__ISRAM0MPC_CIDR1
//    <name> CIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x50083FF4) Component ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM0MPC_CIDR1 >> 0) & 0xFFFFFFFF), ((ISRAM0MPC_CIDR1 = (ISRAM0MPC_CIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: ISRAM0MPC_CIDR2  -----------------------------
// SVD Line: 6738

unsigned int ISRAM0MPC_CIDR2 __AT (0x50083FF8);



// -----------------------------  Register Item: ISRAM0MPC_CIDR2  ---------------------------------
// SVD Line: 6738

//  <item> SFDITEM_REG__ISRAM0MPC_CIDR2
//    <name> CIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x50083FF8) Component ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM0MPC_CIDR2 >> 0) & 0xFFFFFFFF), ((ISRAM0MPC_CIDR2 = (ISRAM0MPC_CIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: ISRAM0MPC_CIDR3  -----------------------------
// SVD Line: 6746

unsigned int ISRAM0MPC_CIDR3 __AT (0x50083FFC);



// -----------------------------  Register Item: ISRAM0MPC_CIDR3  ---------------------------------
// SVD Line: 6746

//  <item> SFDITEM_REG__ISRAM0MPC_CIDR3
//    <name> CIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x50083FFC) Component ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM0MPC_CIDR3 >> 0) & 0xFFFFFFFF), ((ISRAM0MPC_CIDR3 = (ISRAM0MPC_CIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: ISRAM0MPC  -----------------------------------
// SVD Line: 6391

//  <view> ISRAM0MPC
//    <name> ISRAM0MPC </name>
//    <item> SFDITEM_REG__ISRAM0MPC_CTRL </item>
//    <item> SFDITEM_REG__ISRAM0MPC_BLK_MAX </item>
//    <item> SFDITEM_REG__ISRAM0MPC_BLK_CFG </item>
//    <item> SFDITEM_REG__ISRAM0MPC_BLK_IDX </item>
//    <item> SFDITEM_REG__ISRAM0MPC_BLK_LUT </item>
//    <item> SFDITEM_REG__ISRAM0MPC_INT_STAT </item>
//    <item> SFDITEM_REG__ISRAM0MPC_INT_CLEAR </item>
//    <item> SFDITEM_REG__ISRAM0MPC_INT_EN </item>
//    <item> SFDITEM_REG__ISRAM0MPC_INT_INFO1 </item>
//    <item> SFDITEM_REG__ISRAM0MPC_INT_INFO2 </item>
//    <item> SFDITEM_REG__ISRAM0MPC_INT_SET </item>
//    <item> SFDITEM_REG__ISRAM0MPC_PIDR4 </item>
//    <item> SFDITEM_REG__ISRAM0MPC_PIDR5 </item>
//    <item> SFDITEM_REG__ISRAM0MPC_PIDR6 </item>
//    <item> SFDITEM_REG__ISRAM0MPC_PIDR7 </item>
//    <item> SFDITEM_REG__ISRAM0MPC_PIDR0 </item>
//    <item> SFDITEM_REG__ISRAM0MPC_PIDR1 </item>
//    <item> SFDITEM_REG__ISRAM0MPC_PIDR2 </item>
//    <item> SFDITEM_REG__ISRAM0MPC_PIDR3 </item>
//    <item> SFDITEM_REG__ISRAM0MPC_CIDR0 </item>
//    <item> SFDITEM_REG__ISRAM0MPC_CIDR1 </item>
//    <item> SFDITEM_REG__ISRAM0MPC_CIDR2 </item>
//    <item> SFDITEM_REG__ISRAM0MPC_CIDR3 </item>
//  </view>
//  


// --------------------------  Register Item Address: ISRAM1MPC_CTRL  -----------------------------
// SVD Line: 6407

unsigned int ISRAM1MPC_CTRL __AT (0x50084000);



// -------------------------  Field Item: ISRAM1MPC_CTRL_CFG_SEC_RESP  ----------------------------
// SVD Line: 6415

//  <item> SFDITEM_FIELD__ISRAM1MPC_CTRL_CFG_SEC_RESP
//    <name> CFG_SEC_RESP </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x50084000) \nSecurity error response configuration\n0 : RAZ_WI = Read-As-Zero - Writes ignored\n1 : BUSERROR = Bus Error </i>
//    <combo> 
//      <loc> ( (unsigned int) ISRAM1MPC_CTRL ) </loc>
//      <o.4..4> CFG_SEC_RESP
//        <0=> 0: RAZ_WI = Read-As-Zero - Writes ignored
//        <1=> 1: BUSERROR = Bus Error
//    </combo>
//  </item>
//  


// ----------------------  Field Item: ISRAM1MPC_CTRL_DATA_IF_GATING_REQ  -------------------------
// SVD Line: 6433

//  <item> SFDITEM_FIELD__ISRAM1MPC_CTRL_DATA_IF_GATING_REQ
//    <name> DATA_IF_GATING_REQ </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x50084000) Data interface gating request </i>
//    <check> 
//      <loc> ( (unsigned int) ISRAM1MPC_CTRL ) </loc>
//      <o.6..6> DATA_IF_GATING_REQ
//    </check>
//  </item>
//  


// ----------------------  Field Item: ISRAM1MPC_CTRL_DATA_IF_GATING_ACK  -------------------------
// SVD Line: 6439

//  <item> SFDITEM_FIELD__ISRAM1MPC_CTRL_DATA_IF_GATING_ACK
//    <name> DATA_IF_GATING_ACK </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x50084000) Data interface gating acknowledge (RO) </i>
//    <check> 
//      <loc> ( (unsigned int) ISRAM1MPC_CTRL ) </loc>
//      <o.7..7> DATA_IF_GATING_ACK
//    </check>
//  </item>
//  


// ------------------------  Field Item: ISRAM1MPC_CTRL_AUTO_INCREMENT  ---------------------------
// SVD Line: 6446

//  <item> SFDITEM_FIELD__ISRAM1MPC_CTRL_AUTO_INCREMENT
//    <name> AUTO_INCREMENT </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x50084000) Auto-increment </i>
//    <check> 
//      <loc> ( (unsigned int) ISRAM1MPC_CTRL ) </loc>
//      <o.8..8> AUTO_INCREMENT
//    </check>
//  </item>
//  


// -------------------------  Field Item: ISRAM1MPC_CTRL_SEC_LOCKDOWN  ----------------------------
// SVD Line: 6452

//  <item> SFDITEM_FIELD__ISRAM1MPC_CTRL_SEC_LOCKDOWN
//    <name> SEC_LOCKDOWN </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x50084000) Security lockdown </i>
//    <check> 
//      <loc> ( (unsigned int) ISRAM1MPC_CTRL ) </loc>
//      <o.31..31> SEC_LOCKDOWN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: ISRAM1MPC_CTRL  ---------------------------------
// SVD Line: 6407

//  <rtree> SFDITEM_REG__ISRAM1MPC_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50084000) MPC Control register </i>
//    <loc> ( (unsigned int)((ISRAM1MPC_CTRL >> 0) & 0xFFFFFFFF), ((ISRAM1MPC_CTRL = (ISRAM1MPC_CTRL & ~(0x80000150UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x80000150) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ISRAM1MPC_CTRL_CFG_SEC_RESP </item>
//    <item> SFDITEM_FIELD__ISRAM1MPC_CTRL_DATA_IF_GATING_REQ </item>
//    <item> SFDITEM_FIELD__ISRAM1MPC_CTRL_DATA_IF_GATING_ACK </item>
//    <item> SFDITEM_FIELD__ISRAM1MPC_CTRL_AUTO_INCREMENT </item>
//    <item> SFDITEM_FIELD__ISRAM1MPC_CTRL_SEC_LOCKDOWN </item>
//  </rtree>
//  


// ------------------------  Register Item Address: ISRAM1MPC_BLK_MAX  ----------------------------
// SVD Line: 6460

unsigned int ISRAM1MPC_BLK_MAX __AT (0x50084010);



// -------------------------  Field Item: ISRAM1MPC_BLK_MAX_BLK_SIZE  -----------------------------
// SVD Line: 6467

//  <item> SFDITEM_FIELD__ISRAM1MPC_BLK_MAX_BLK_SIZE
//    <name> BLK_SIZE </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x50084010) Block size </i>
//    <edit> 
//      <loc> ( (unsigned char)((ISRAM1MPC_BLK_MAX >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: ISRAM1MPC_BLK_MAX_IN_PROGRESS  ---------------------------
// SVD Line: 6473

//  <item> SFDITEM_FIELD__ISRAM1MPC_BLK_MAX_IN_PROGRESS
//    <name> IN_PROGRESS </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0x50084010) Initialization in progress </i>
//    <check> 
//      <loc> ( (unsigned int) ISRAM1MPC_BLK_MAX ) </loc>
//      <o.31..31> IN_PROGRESS
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: ISRAM1MPC_BLK_MAX  -------------------------------
// SVD Line: 6460

//  <rtree> SFDITEM_REG__ISRAM1MPC_BLK_MAX
//    <name> BLK_MAX </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50084010) Maximum value of block based index register </i>
//    <loc> ( (unsigned int)((ISRAM1MPC_BLK_MAX >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ISRAM1MPC_BLK_MAX_BLK_SIZE </item>
//    <item> SFDITEM_FIELD__ISRAM1MPC_BLK_MAX_IN_PROGRESS </item>
//  </rtree>
//  


// ------------------------  Register Item Address: ISRAM1MPC_BLK_CFG  ----------------------------
// SVD Line: 6481

unsigned int ISRAM1MPC_BLK_CFG __AT (0x50084014);



// ----------------------------  Register Item: ISRAM1MPC_BLK_CFG  --------------------------------
// SVD Line: 6481

//  <item> SFDITEM_REG__ISRAM1MPC_BLK_CFG
//    <name> BLK_CFG </name>
//    <i> [Bits 31..0] RO (@ 0x50084014) Block Configuration </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM1MPC_BLK_CFG >> 0) & 0xFFFFFFFF), ((ISRAM1MPC_BLK_CFG = (ISRAM1MPC_BLK_CFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: ISRAM1MPC_BLK_IDX  ----------------------------
// SVD Line: 6488

unsigned int ISRAM1MPC_BLK_IDX __AT (0x50084018);



// ----------------------------  Register Item: ISRAM1MPC_BLK_IDX  --------------------------------
// SVD Line: 6488

//  <item> SFDITEM_REG__ISRAM1MPC_BLK_IDX
//    <name> BLK_IDX </name>
//    <i> [Bits 31..0] RW (@ 0x50084018) Index value for accessing block based look up table </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM1MPC_BLK_IDX >> 0) & 0xFFFFFFFF), ((ISRAM1MPC_BLK_IDX = (ISRAM1MPC_BLK_IDX & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: ISRAM1MPC_BLK_LUT  ----------------------------
// SVD Line: 6496

unsigned int ISRAM1MPC_BLK_LUT __AT (0x5008401C);



// ----------------------------  Register Item: ISRAM1MPC_BLK_LUT  --------------------------------
// SVD Line: 6496

//  <item> SFDITEM_REG__ISRAM1MPC_BLK_LUT
//    <name> BLK_LUT </name>
//    <i> [Bits 31..0] RW (@ 0x5008401C) Block based gating Look Up Table </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM1MPC_BLK_LUT >> 0) & 0xFFFFFFFF), ((ISRAM1MPC_BLK_LUT = (ISRAM1MPC_BLK_LUT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: ISRAM1MPC_INT_STAT  ---------------------------
// SVD Line: 6503

unsigned int ISRAM1MPC_INT_STAT __AT (0x50084020);



// -------------------------  Field Item: ISRAM1MPC_INT_STAT_mpc_irq  -----------------------------
// SVD Line: 6511

//  <item> SFDITEM_FIELD__ISRAM1MPC_INT_STAT_mpc_irq
//    <name> mpc_irq </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x50084020) mpc_irq triggered </i>
//    <check> 
//      <loc> ( (unsigned int) ISRAM1MPC_INT_STAT ) </loc>
//      <o.0..0> mpc_irq
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: ISRAM1MPC_INT_STAT  -------------------------------
// SVD Line: 6503

//  <rtree> SFDITEM_REG__ISRAM1MPC_INT_STAT
//    <name> INT_STAT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50084020) Interrupt state </i>
//    <loc> ( (unsigned int)((ISRAM1MPC_INT_STAT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ISRAM1MPC_INT_STAT_mpc_irq </item>
//  </rtree>
//  


// -----------------------  Register Item Address: ISRAM1MPC_INT_CLEAR  ---------------------------
// SVD Line: 6519

unsigned int ISRAM1MPC_INT_CLEAR __AT (0x50084024);



// -------------------------  Field Item: ISRAM1MPC_INT_CLEAR_mpc_irq  ----------------------------
// SVD Line: 6527

//  <item> SFDITEM_FIELD__ISRAM1MPC_INT_CLEAR_mpc_irq
//    <name> mpc_irq </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x50084024) mpc_irq clear (cleared automatically) </i>
//    <check> 
//      <loc> ( (unsigned int) ISRAM1MPC_INT_CLEAR ) </loc>
//      <o.0..0> mpc_irq
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: ISRAM1MPC_INT_CLEAR  ------------------------------
// SVD Line: 6519

//  <rtree> SFDITEM_REG__ISRAM1MPC_INT_CLEAR
//    <name> INT_CLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x50084024) Interrupt clear </i>
//    <loc> ( (unsigned int)((ISRAM1MPC_INT_CLEAR >> 0) & 0xFFFFFFFF), ((ISRAM1MPC_INT_CLEAR = (ISRAM1MPC_INT_CLEAR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ISRAM1MPC_INT_CLEAR_mpc_irq </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ISRAM1MPC_INT_EN  ----------------------------
// SVD Line: 6535

unsigned int ISRAM1MPC_INT_EN __AT (0x50084028);



// --------------------------  Field Item: ISRAM1MPC_INT_EN_mpc_irq  ------------------------------
// SVD Line: 6543

//  <item> SFDITEM_FIELD__ISRAM1MPC_INT_EN_mpc_irq
//    <name> mpc_irq </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x50084028) mpc_irq enable. Bits are valid when mpc_irq triggered is set </i>
//    <check> 
//      <loc> ( (unsigned int) ISRAM1MPC_INT_EN ) </loc>
//      <o.0..0> mpc_irq
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: ISRAM1MPC_INT_EN  --------------------------------
// SVD Line: 6535

//  <rtree> SFDITEM_REG__ISRAM1MPC_INT_EN
//    <name> INT_EN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x50084028) Interrupt enable </i>
//    <loc> ( (unsigned int)((ISRAM1MPC_INT_EN >> 0) & 0xFFFFFFFF), ((ISRAM1MPC_INT_EN = (ISRAM1MPC_INT_EN & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ISRAM1MPC_INT_EN_mpc_irq </item>
//  </rtree>
//  


// -----------------------  Register Item Address: ISRAM1MPC_INT_INFO1  ---------------------------
// SVD Line: 6551

unsigned int ISRAM1MPC_INT_INFO1 __AT (0x5008402C);



// ---------------------------  Register Item: ISRAM1MPC_INT_INFO1  -------------------------------
// SVD Line: 6551

//  <item> SFDITEM_REG__ISRAM1MPC_INT_INFO1
//    <name> INT_INFO1 </name>
//    <i> [Bits 31..0] RO (@ 0x5008402C) Interrupt information 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM1MPC_INT_INFO1 >> 0) & 0xFFFFFFFF), ((ISRAM1MPC_INT_INFO1 = (ISRAM1MPC_INT_INFO1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: ISRAM1MPC_INT_INFO2  ---------------------------
// SVD Line: 6559

unsigned int ISRAM1MPC_INT_INFO2 __AT (0x50084030);



// -------------------------  Field Item: ISRAM1MPC_INT_INFO2_hmaster  ----------------------------
// SVD Line: 6566

//  <item> SFDITEM_FIELD__ISRAM1MPC_INT_INFO2_hmaster
//    <name> hmaster </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x50084030) hmaster </i>
//    <edit> 
//      <loc> ( (unsigned short)((ISRAM1MPC_INT_INFO2 >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: ISRAM1MPC_INT_INFO2_hnonsec  ----------------------------
// SVD Line: 6572

//  <item> SFDITEM_FIELD__ISRAM1MPC_INT_INFO2_hnonsec
//    <name> hnonsec </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x50084030) hnonsec </i>
//    <check> 
//      <loc> ( (unsigned int) ISRAM1MPC_INT_INFO2 ) </loc>
//      <o.16..16> hnonsec
//    </check>
//  </item>
//  


// -------------------------  Field Item: ISRAM1MPC_INT_INFO2_cfg_ns  -----------------------------
// SVD Line: 6578

//  <item> SFDITEM_FIELD__ISRAM1MPC_INT_INFO2_cfg_ns
//    <name> cfg_ns </name>
//    <r> 
//    <i> [Bit 17] RO (@ 0x50084030) cfg_ns </i>
//    <check> 
//      <loc> ( (unsigned int) ISRAM1MPC_INT_INFO2 ) </loc>
//      <o.17..17> cfg_ns
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: ISRAM1MPC_INT_INFO2  ------------------------------
// SVD Line: 6559

//  <rtree> SFDITEM_REG__ISRAM1MPC_INT_INFO2
//    <name> INT_INFO2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50084030) Interrupt information 2 </i>
//    <loc> ( (unsigned int)((ISRAM1MPC_INT_INFO2 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ISRAM1MPC_INT_INFO2_hmaster </item>
//    <item> SFDITEM_FIELD__ISRAM1MPC_INT_INFO2_hnonsec </item>
//    <item> SFDITEM_FIELD__ISRAM1MPC_INT_INFO2_cfg_ns </item>
//  </rtree>
//  


// ------------------------  Register Item Address: ISRAM1MPC_INT_SET  ----------------------------
// SVD Line: 6586

unsigned int ISRAM1MPC_INT_SET __AT (0x50084034);



// --------------------------  Field Item: ISRAM1MPC_INT_SET_mpc_irq  -----------------------------
// SVD Line: 6594

//  <item> SFDITEM_FIELD__ISRAM1MPC_INT_SET_mpc_irq
//    <name> mpc_irq </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x50084034) mpc_irq set. Debug purpose only </i>
//    <check> 
//      <loc> ( (unsigned int) ISRAM1MPC_INT_SET ) </loc>
//      <o.0..0> mpc_irq
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: ISRAM1MPC_INT_SET  -------------------------------
// SVD Line: 6586

//  <rtree> SFDITEM_REG__ISRAM1MPC_INT_SET
//    <name> INT_SET </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x50084034) Interrupt set. Debug purpose only </i>
//    <loc> ( (unsigned int)((ISRAM1MPC_INT_SET >> 0) & 0xFFFFFFFF), ((ISRAM1MPC_INT_SET = (ISRAM1MPC_INT_SET & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ISRAM1MPC_INT_SET_mpc_irq </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ISRAM1MPC_PIDR4  -----------------------------
// SVD Line: 6602

unsigned int ISRAM1MPC_PIDR4 __AT (0x50084FD0);



// ------------------------  Field Item: ISRAM1MPC_PIDR4_jep106_c_code  ---------------------------
// SVD Line: 6610

//  <item> SFDITEM_FIELD__ISRAM1MPC_PIDR4_jep106_c_code
//    <name> jep106_c_code </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x50084FD0) jep106_c_code </i>
//    <edit> 
//      <loc> ( (unsigned char)((ISRAM1MPC_PIDR4 >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: ISRAM1MPC_PIDR4_block_count  ----------------------------
// SVD Line: 6616

//  <item> SFDITEM_FIELD__ISRAM1MPC_PIDR4_block_count
//    <name> block_count </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x50084FD0) block count </i>
//    <edit> 
//      <loc> ( (unsigned char)((ISRAM1MPC_PIDR4 >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: ISRAM1MPC_PIDR4  --------------------------------
// SVD Line: 6602

//  <rtree> SFDITEM_REG__ISRAM1MPC_PIDR4
//    <name> PIDR4 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50084FD0) Peripheral ID 4 </i>
//    <loc> ( (unsigned int)((ISRAM1MPC_PIDR4 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ISRAM1MPC_PIDR4_jep106_c_code </item>
//    <item> SFDITEM_FIELD__ISRAM1MPC_PIDR4_block_count </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ISRAM1MPC_PIDR5  -----------------------------
// SVD Line: 6624

unsigned int ISRAM1MPC_PIDR5 __AT (0x50084FD4);



// -------------------------  Field Item: ISRAM1MPC_PIDR5_part_number  ----------------------------
// SVD Line: 6632

//  <item> SFDITEM_FIELD__ISRAM1MPC_PIDR5_part_number
//    <name> part_number </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x50084FD4) Part number </i>
//    <edit> 
//      <loc> ( (unsigned char)((ISRAM1MPC_PIDR5 >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: ISRAM1MPC_PIDR5_jep106_id_3_0  ---------------------------
// SVD Line: 6638

//  <item> SFDITEM_FIELD__ISRAM1MPC_PIDR5_jep106_id_3_0
//    <name> jep106_id_3_0 </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x50084FD4) jep106_id_3_0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ISRAM1MPC_PIDR5 >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: ISRAM1MPC_PIDR5  --------------------------------
// SVD Line: 6624

//  <rtree> SFDITEM_REG__ISRAM1MPC_PIDR5
//    <name> PIDR5 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50084FD4) Peripheral ID 5 </i>
//    <loc> ( (unsigned int)((ISRAM1MPC_PIDR5 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ISRAM1MPC_PIDR5_part_number </item>
//    <item> SFDITEM_FIELD__ISRAM1MPC_PIDR5_jep106_id_3_0 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ISRAM1MPC_PIDR6  -----------------------------
// SVD Line: 6646

unsigned int ISRAM1MPC_PIDR6 __AT (0x50084FD8);



// -----------------------------  Register Item: ISRAM1MPC_PIDR6  ---------------------------------
// SVD Line: 6646

//  <item> SFDITEM_REG__ISRAM1MPC_PIDR6
//    <name> PIDR6 </name>
//    <i> [Bits 31..0] RO (@ 0x50084FD8) Peripheral ID 6 </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM1MPC_PIDR6 >> 0) & 0xFFFFFFFF), ((ISRAM1MPC_PIDR6 = (ISRAM1MPC_PIDR6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: ISRAM1MPC_PIDR7  -----------------------------
// SVD Line: 6654

unsigned int ISRAM1MPC_PIDR7 __AT (0x50084FDC);



// -----------------------------  Register Item: ISRAM1MPC_PIDR7  ---------------------------------
// SVD Line: 6654

//  <item> SFDITEM_REG__ISRAM1MPC_PIDR7
//    <name> PIDR7 </name>
//    <i> [Bits 31..0] RO (@ 0x50084FDC) Peripheral ID 7 </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM1MPC_PIDR7 >> 0) & 0xFFFFFFFF), ((ISRAM1MPC_PIDR7 = (ISRAM1MPC_PIDR7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: ISRAM1MPC_PIDR0  -----------------------------
// SVD Line: 6662

unsigned int ISRAM1MPC_PIDR0 __AT (0x50084FE0);



// -----------------------------  Register Item: ISRAM1MPC_PIDR0  ---------------------------------
// SVD Line: 6662

//  <item> SFDITEM_REG__ISRAM1MPC_PIDR0
//    <name> PIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x50084FE0) Peripheral ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM1MPC_PIDR0 >> 0) & 0xFFFFFFFF), ((ISRAM1MPC_PIDR0 = (ISRAM1MPC_PIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: ISRAM1MPC_PIDR1  -----------------------------
// SVD Line: 6670

unsigned int ISRAM1MPC_PIDR1 __AT (0x50084FE4);



// -----------------------------  Register Item: ISRAM1MPC_PIDR1  ---------------------------------
// SVD Line: 6670

//  <item> SFDITEM_REG__ISRAM1MPC_PIDR1
//    <name> PIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x50084FE4) Peripheral ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM1MPC_PIDR1 >> 0) & 0xFFFFFFFF), ((ISRAM1MPC_PIDR1 = (ISRAM1MPC_PIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: ISRAM1MPC_PIDR2  -----------------------------
// SVD Line: 6678

unsigned int ISRAM1MPC_PIDR2 __AT (0x50084FE8);



// -------------------------  Field Item: ISRAM1MPC_PIDR2_part_number  ----------------------------
// SVD Line: 6686

//  <item> SFDITEM_FIELD__ISRAM1MPC_PIDR2_part_number
//    <name> part_number </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x50084FE8) Part number </i>
//    <edit> 
//      <loc> ( (unsigned char)((ISRAM1MPC_PIDR2 >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: ISRAM1MPC_PIDR2_jep106_id_3_0  ---------------------------
// SVD Line: 6692

//  <item> SFDITEM_FIELD__ISRAM1MPC_PIDR2_jep106_id_3_0
//    <name> jep106_id_3_0 </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x50084FE8) jep106_id_3_0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ISRAM1MPC_PIDR2 >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: ISRAM1MPC_PIDR2  --------------------------------
// SVD Line: 6678

//  <rtree> SFDITEM_REG__ISRAM1MPC_PIDR2
//    <name> PIDR2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50084FE8) Peripheral ID 2 </i>
//    <loc> ( (unsigned int)((ISRAM1MPC_PIDR2 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ISRAM1MPC_PIDR2_part_number </item>
//    <item> SFDITEM_FIELD__ISRAM1MPC_PIDR2_jep106_id_3_0 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ISRAM1MPC_PIDR3  -----------------------------
// SVD Line: 6700

unsigned int ISRAM1MPC_PIDR3 __AT (0x50084FEC);



// ---------------------  Field Item: ISRAM1MPC_PIDR3_customer_mod_number  ------------------------
// SVD Line: 6708

//  <item> SFDITEM_FIELD__ISRAM1MPC_PIDR3_customer_mod_number
//    <name> customer_mod_number </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x50084FEC) Customer modification number </i>
//    <edit> 
//      <loc> ( (unsigned char)((ISRAM1MPC_PIDR3 >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: ISRAM1MPC_PIDR3_evo_rev  ------------------------------
// SVD Line: 6714

//  <item> SFDITEM_FIELD__ISRAM1MPC_PIDR3_evo_rev
//    <name> evo_rev </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x50084FEC) ECO revision number </i>
//    <edit> 
//      <loc> ( (unsigned char)((ISRAM1MPC_PIDR3 >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: ISRAM1MPC_PIDR3  --------------------------------
// SVD Line: 6700

//  <rtree> SFDITEM_REG__ISRAM1MPC_PIDR3
//    <name> PIDR3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x50084FEC) Peripheral ID 3 </i>
//    <loc> ( (unsigned int)((ISRAM1MPC_PIDR3 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ISRAM1MPC_PIDR3_customer_mod_number </item>
//    <item> SFDITEM_FIELD__ISRAM1MPC_PIDR3_evo_rev </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ISRAM1MPC_CIDR0  -----------------------------
// SVD Line: 6722

unsigned int ISRAM1MPC_CIDR0 __AT (0x50084FF0);



// -----------------------------  Register Item: ISRAM1MPC_CIDR0  ---------------------------------
// SVD Line: 6722

//  <item> SFDITEM_REG__ISRAM1MPC_CIDR0
//    <name> CIDR0 </name>
//    <i> [Bits 31..0] RO (@ 0x50084FF0) Component ID 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM1MPC_CIDR0 >> 0) & 0xFFFFFFFF), ((ISRAM1MPC_CIDR0 = (ISRAM1MPC_CIDR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: ISRAM1MPC_CIDR1  -----------------------------
// SVD Line: 6730

unsigned int ISRAM1MPC_CIDR1 __AT (0x50084FF4);



// -----------------------------  Register Item: ISRAM1MPC_CIDR1  ---------------------------------
// SVD Line: 6730

//  <item> SFDITEM_REG__ISRAM1MPC_CIDR1
//    <name> CIDR1 </name>
//    <i> [Bits 31..0] RO (@ 0x50084FF4) Component ID 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM1MPC_CIDR1 >> 0) & 0xFFFFFFFF), ((ISRAM1MPC_CIDR1 = (ISRAM1MPC_CIDR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: ISRAM1MPC_CIDR2  -----------------------------
// SVD Line: 6738

unsigned int ISRAM1MPC_CIDR2 __AT (0x50084FF8);



// -----------------------------  Register Item: ISRAM1MPC_CIDR2  ---------------------------------
// SVD Line: 6738

//  <item> SFDITEM_REG__ISRAM1MPC_CIDR2
//    <name> CIDR2 </name>
//    <i> [Bits 31..0] RO (@ 0x50084FF8) Component ID 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM1MPC_CIDR2 >> 0) & 0xFFFFFFFF), ((ISRAM1MPC_CIDR2 = (ISRAM1MPC_CIDR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: ISRAM1MPC_CIDR3  -----------------------------
// SVD Line: 6746

unsigned int ISRAM1MPC_CIDR3 __AT (0x50084FFC);



// -----------------------------  Register Item: ISRAM1MPC_CIDR3  ---------------------------------
// SVD Line: 6746

//  <item> SFDITEM_REG__ISRAM1MPC_CIDR3
//    <name> CIDR3 </name>
//    <i> [Bits 31..0] RO (@ 0x50084FFC) Component ID 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((ISRAM1MPC_CIDR3 >> 0) & 0xFFFFFFFF), ((ISRAM1MPC_CIDR3 = (ISRAM1MPC_CIDR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Peripheral View: ISRAM1MPC  -----------------------------------
// SVD Line: 6757

//  <view> ISRAM1MPC
//    <name> ISRAM1MPC </name>
//    <item> SFDITEM_REG__ISRAM1MPC_CTRL </item>
//    <item> SFDITEM_REG__ISRAM1MPC_BLK_MAX </item>
//    <item> SFDITEM_REG__ISRAM1MPC_BLK_CFG </item>
//    <item> SFDITEM_REG__ISRAM1MPC_BLK_IDX </item>
//    <item> SFDITEM_REG__ISRAM1MPC_BLK_LUT </item>
//    <item> SFDITEM_REG__ISRAM1MPC_INT_STAT </item>
//    <item> SFDITEM_REG__ISRAM1MPC_INT_CLEAR </item>
//    <item> SFDITEM_REG__ISRAM1MPC_INT_EN </item>
//    <item> SFDITEM_REG__ISRAM1MPC_INT_INFO1 </item>
//    <item> SFDITEM_REG__ISRAM1MPC_INT_INFO2 </item>
//    <item> SFDITEM_REG__ISRAM1MPC_INT_SET </item>
//    <item> SFDITEM_REG__ISRAM1MPC_PIDR4 </item>
//    <item> SFDITEM_REG__ISRAM1MPC_PIDR5 </item>
//    <item> SFDITEM_REG__ISRAM1MPC_PIDR6 </item>
//    <item> SFDITEM_REG__ISRAM1MPC_PIDR7 </item>
//    <item> SFDITEM_REG__ISRAM1MPC_PIDR0 </item>
//    <item> SFDITEM_REG__ISRAM1MPC_PIDR1 </item>
//    <item> SFDITEM_REG__ISRAM1MPC_PIDR2 </item>
//    <item> SFDITEM_REG__ISRAM1MPC_PIDR3 </item>
//    <item> SFDITEM_REG__ISRAM1MPC_CIDR0 </item>
//    <item> SFDITEM_REG__ISRAM1MPC_CIDR1 </item>
//    <item> SFDITEM_REG__ISRAM1MPC_CIDR2 </item>
//    <item> SFDITEM_REG__ISRAM1MPC_CIDR3 </item>
//  </view>
//  


// -------------------------  Register Item Address: AudioI2S_CONTROL  ----------------------------
// SVD Line: 6789

unsigned int AudioI2S_CONTROL __AT (0x49301000);



// --------------------------  Field Item: AudioI2S_CONTROL_TxEnable  -----------------------------
// SVD Line: 6796

//  <item> SFDITEM_FIELD__AudioI2S_CONTROL_TxEnable
//    <name> TxEnable </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49301000) Enable Transfer Buffer </i>
//    <check> 
//      <loc> ( (unsigned int) AudioI2S_CONTROL ) </loc>
//      <o.0..0> TxEnable
//    </check>
//  </item>
//  


// ------------------------  Field Item: AudioI2S_CONTROL_TxIRQEnable  ----------------------------
// SVD Line: 6802

//  <item> SFDITEM_FIELD__AudioI2S_CONTROL_TxIRQEnable
//    <name> TxIRQEnable </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49301000) Enable Interrupt on Transmit Buffer </i>
//    <check> 
//      <loc> ( (unsigned int) AudioI2S_CONTROL ) </loc>
//      <o.1..1> TxIRQEnable
//    </check>
//  </item>
//  


// --------------------------  Field Item: AudioI2S_CONTROL_RxEnable  -----------------------------
// SVD Line: 6808

//  <item> SFDITEM_FIELD__AudioI2S_CONTROL_RxEnable
//    <name> RxEnable </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49301000) Enable Receive Buffer </i>
//    <check> 
//      <loc> ( (unsigned int) AudioI2S_CONTROL ) </loc>
//      <o.2..2> RxEnable
//    </check>
//  </item>
//  


// ------------------------  Field Item: AudioI2S_CONTROL_RxIRQEnable  ----------------------------
// SVD Line: 6814

//  <item> SFDITEM_FIELD__AudioI2S_CONTROL_RxIRQEnable
//    <name> RxIRQEnable </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49301000) Enable Interrupt on Receive Buffer </i>
//    <check> 
//      <loc> ( (unsigned int) AudioI2S_CONTROL ) </loc>
//      <o.3..3> RxIRQEnable
//    </check>
//  </item>
//  


// -----------------------  Field Item: AudioI2S_CONTROL_TxBufIRQLevel  ---------------------------
// SVD Line: 6820

//  <item> SFDITEM_FIELD__AudioI2S_CONTROL_TxBufIRQLevel
//    <name> TxBufIRQLevel </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x49301000) Transmit Buffer IRQ Water level </i>
//    <edit> 
//      <loc> ( (unsigned char)((AudioI2S_CONTROL >> 8) & 0x7), ((AudioI2S_CONTROL = (AudioI2S_CONTROL & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AudioI2S_CONTROL_RxBufIRQLevel  ---------------------------
// SVD Line: 6826

//  <item> SFDITEM_FIELD__AudioI2S_CONTROL_RxBufIRQLevel
//    <name> RxBufIRQLevel </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x49301000) Receive Buffer IRQ Water level </i>
//    <edit> 
//      <loc> ( (unsigned char)((AudioI2S_CONTROL >> 12) & 0x7), ((AudioI2S_CONTROL = (AudioI2S_CONTROL & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: AudioI2S_CONTROL_FIFOReset  -----------------------------
// SVD Line: 6832

//  <item> SFDITEM_FIELD__AudioI2S_CONTROL_FIFOReset
//    <name> FIFOReset </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x49301000) FIFO reset </i>
//    <check> 
//      <loc> ( (unsigned int) AudioI2S_CONTROL ) </loc>
//      <o.16..16> FIFOReset
//    </check>
//  </item>
//  


// -------------------------  Field Item: AudioI2S_CONTROL_CodecReset  ----------------------------
// SVD Line: 6838

//  <item> SFDITEM_FIELD__AudioI2S_CONTROL_CodecReset
//    <name> CodecReset </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x49301000) Audio codec reset control </i>
//    <check> 
//      <loc> ( (unsigned int) AudioI2S_CONTROL ) </loc>
//      <o.17..17> CodecReset
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: AudioI2S_CONTROL  --------------------------------
// SVD Line: 6789

//  <rtree> SFDITEM_REG__AudioI2S_CONTROL
//    <name> CONTROL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49301000) Control register </i>
//    <loc> ( (unsigned int)((AudioI2S_CONTROL >> 0) & 0xFFFFFFFF), ((AudioI2S_CONTROL = (AudioI2S_CONTROL & ~(0x3770FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3770F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AudioI2S_CONTROL_TxEnable </item>
//    <item> SFDITEM_FIELD__AudioI2S_CONTROL_TxIRQEnable </item>
//    <item> SFDITEM_FIELD__AudioI2S_CONTROL_RxEnable </item>
//    <item> SFDITEM_FIELD__AudioI2S_CONTROL_RxIRQEnable </item>
//    <item> SFDITEM_FIELD__AudioI2S_CONTROL_TxBufIRQLevel </item>
//    <item> SFDITEM_FIELD__AudioI2S_CONTROL_RxBufIRQLevel </item>
//    <item> SFDITEM_FIELD__AudioI2S_CONTROL_FIFOReset </item>
//    <item> SFDITEM_FIELD__AudioI2S_CONTROL_CodecReset </item>
//  </rtree>
//  


// -------------------------  Register Item Address: AudioI2S_STATUS  -----------------------------
// SVD Line: 6846

unsigned int AudioI2S_STATUS __AT (0x49301004);



// -------------------------  Field Item: AudioI2S_STATUS_TxBuffAlert  ----------------------------
// SVD Line: 6853

//  <item> SFDITEM_FIELD__AudioI2S_STATUS_TxBuffAlert
//    <name> TxBuffAlert </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x49301004) Transmit Buffer Alert (Depends on Water level) </i>
//    <check> 
//      <loc> ( (unsigned int) AudioI2S_STATUS ) </loc>
//      <o.0..0> TxBuffAlert
//    </check>
//  </item>
//  


// -------------------------  Field Item: AudioI2S_STATUS_RxBuffAlert  ----------------------------
// SVD Line: 6859

//  <item> SFDITEM_FIELD__AudioI2S_STATUS_RxBuffAlert
//    <name> RxBuffAlert </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x49301004) Receive Buffer Alert (Depends on Water level) </i>
//    <check> 
//      <loc> ( (unsigned int) AudioI2S_STATUS ) </loc>
//      <o.1..1> RxBuffAlert
//    </check>
//  </item>
//  


// -------------------------  Field Item: AudioI2S_STATUS_TxBuffEmpty  ----------------------------
// SVD Line: 6865

//  <item> SFDITEM_FIELD__AudioI2S_STATUS_TxBuffEmpty
//    <name> TxBuffEmpty </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x49301004) Transmit Buffer Empty </i>
//    <check> 
//      <loc> ( (unsigned int) AudioI2S_STATUS ) </loc>
//      <o.2..2> TxBuffEmpty
//    </check>
//  </item>
//  


// -------------------------  Field Item: AudioI2S_STATUS_TxBuffFull  -----------------------------
// SVD Line: 6871

//  <item> SFDITEM_FIELD__AudioI2S_STATUS_TxBuffFull
//    <name> TxBuffFull </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x49301004) Transmit Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) AudioI2S_STATUS ) </loc>
//      <o.3..3> TxBuffFull
//    </check>
//  </item>
//  


// -------------------------  Field Item: AudioI2S_STATUS_RxBuffEmpty  ----------------------------
// SVD Line: 6877

//  <item> SFDITEM_FIELD__AudioI2S_STATUS_RxBuffEmpty
//    <name> RxBuffEmpty </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x49301004) Receive Buffer Empty </i>
//    <check> 
//      <loc> ( (unsigned int) AudioI2S_STATUS ) </loc>
//      <o.4..4> RxBuffEmpty
//    </check>
//  </item>
//  


// -------------------------  Field Item: AudioI2S_STATUS_RxBuffFull  -----------------------------
// SVD Line: 6883

//  <item> SFDITEM_FIELD__AudioI2S_STATUS_RxBuffFull
//    <name> RxBuffFull </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x49301004) Receive Buffer Full </i>
//    <check> 
//      <loc> ( (unsigned int) AudioI2S_STATUS ) </loc>
//      <o.5..5> RxBuffFull
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: AudioI2S_STATUS  --------------------------------
// SVD Line: 6846

//  <rtree> SFDITEM_REG__AudioI2S_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x49301004) Status register </i>
//    <loc> ( (unsigned int)((AudioI2S_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__AudioI2S_STATUS_TxBuffAlert </item>
//    <item> SFDITEM_FIELD__AudioI2S_STATUS_RxBuffAlert </item>
//    <item> SFDITEM_FIELD__AudioI2S_STATUS_TxBuffEmpty </item>
//    <item> SFDITEM_FIELD__AudioI2S_STATUS_TxBuffFull </item>
//    <item> SFDITEM_FIELD__AudioI2S_STATUS_RxBuffEmpty </item>
//    <item> SFDITEM_FIELD__AudioI2S_STATUS_RxBuffFull </item>
//  </rtree>
//  


// --------------------------  Register Item Address: AudioI2S_ERROR  -----------------------------
// SVD Line: 6891

unsigned int AudioI2S_ERROR __AT (0x49301008);



// --------------------------  Field Item: AudioI2S_ERROR_TxOverrun  ------------------------------
// SVD Line: 6898

//  <item> SFDITEM_FIELD__AudioI2S_ERROR_TxOverrun
//    <name> TxOverrun </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49301008) Transmit buffer ovverrun or underrun. Set this bit to clear. </i>
//    <check> 
//      <loc> ( (unsigned int) AudioI2S_ERROR ) </loc>
//      <o.0..0> TxOverrun
//    </check>
//  </item>
//  


// --------------------------  Field Item: AudioI2S_ERROR_RxOverrun  ------------------------------
// SVD Line: 6904

//  <item> SFDITEM_FIELD__AudioI2S_ERROR_RxOverrun
//    <name> RxOverrun </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49301008) Receive buffer ovverrun. Set this bit to clear. </i>
//    <check> 
//      <loc> ( (unsigned int) AudioI2S_ERROR ) </loc>
//      <o.1..1> RxOverrun
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: AudioI2S_ERROR  ---------------------------------
// SVD Line: 6891

//  <rtree> SFDITEM_REG__AudioI2S_ERROR
//    <name> ERROR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49301008) Error status register </i>
//    <loc> ( (unsigned int)((AudioI2S_ERROR >> 0) & 0xFFFFFFFF), ((AudioI2S_ERROR = (AudioI2S_ERROR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AudioI2S_ERROR_TxOverrun </item>
//    <item> SFDITEM_FIELD__AudioI2S_ERROR_RxOverrun </item>
//  </rtree>
//  


// -------------------------  Register Item Address: AudioI2S_DIVIDE  -----------------------------
// SVD Line: 6912

unsigned int AudioI2S_DIVIDE __AT (0x4930100C);



// ----------------------------  Field Item: AudioI2S_DIVIDE_LRDIV  -------------------------------
// SVD Line: 6919

//  <item> SFDITEM_FIELD__AudioI2S_DIVIDE_LRDIV
//    <name> LRDIV </name>
//    <rw> 
//    <i> [Bits 9..0] RW (@ 0x4930100C) Left/Right. The default value is 0x80 </i>
//    <edit> 
//      <loc> ( (unsigned short)((AudioI2S_DIVIDE >> 0) & 0x3FF), ((AudioI2S_DIVIDE = (AudioI2S_DIVIDE & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: AudioI2S_DIVIDE  --------------------------------
// SVD Line: 6912

//  <rtree> SFDITEM_REG__AudioI2S_DIVIDE
//    <name> DIVIDE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4930100C) Clock Divide Ratio register </i>
//    <loc> ( (unsigned int)((AudioI2S_DIVIDE >> 0) & 0xFFFFFFFF), ((AudioI2S_DIVIDE = (AudioI2S_DIVIDE & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AudioI2S_DIVIDE_LRDIV </item>
//  </rtree>
//  


// --------------------------  Register Item Address: AudioI2S_TXBUF  -----------------------------
// SVD Line: 6927

unsigned int AudioI2S_TXBUF __AT (0x49301010);



// -------------------------  Field Item: AudioI2S_TXBUF_RightChannel  ----------------------------
// SVD Line: 6934

//  <item> SFDITEM_FIELD__AudioI2S_TXBUF_RightChannel
//    <name> RightChannel </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x49301010) Right channel value </i>
//    <edit> 
//      <loc> ( (unsigned short)((AudioI2S_TXBUF >> 0) & 0x0), ((AudioI2S_TXBUF = (AudioI2S_TXBUF & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: AudioI2S_TXBUF_LeftChannel  -----------------------------
// SVD Line: 6940

//  <item> SFDITEM_FIELD__AudioI2S_TXBUF_LeftChannel
//    <name> LeftChannel </name>
//    <w> 
//    <i> [Bits 31..16] WO (@ 0x49301010) Left channel value </i>
//    <edit> 
//      <loc> ( (unsigned short)((AudioI2S_TXBUF >> 16) & 0x0), ((AudioI2S_TXBUF = (AudioI2S_TXBUF & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: AudioI2S_TXBUF  ---------------------------------
// SVD Line: 6927

//  <rtree> SFDITEM_REG__AudioI2S_TXBUF
//    <name> TXBUF </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x49301010) Transmit Buffer FIFO Data register </i>
//    <loc> ( (unsigned int)((AudioI2S_TXBUF >> 0) & 0xFFFFFFFF), ((AudioI2S_TXBUF = (AudioI2S_TXBUF & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AudioI2S_TXBUF_RightChannel </item>
//    <item> SFDITEM_FIELD__AudioI2S_TXBUF_LeftChannel </item>
//  </rtree>
//  


// --------------------------  Register Item Address: AudioI2S_RXBUF  -----------------------------
// SVD Line: 6948

unsigned int AudioI2S_RXBUF __AT (0x49301014);



// -------------------------  Field Item: AudioI2S_RXBUF_RightChannel  ----------------------------
// SVD Line: 6955

//  <item> SFDITEM_FIELD__AudioI2S_RXBUF_RightChannel
//    <name> RightChannel </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x49301014) Right channel value </i>
//    <edit> 
//      <loc> ( (unsigned short)((AudioI2S_RXBUF >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: AudioI2S_RXBUF_LeftChannel  -----------------------------
// SVD Line: 6961

//  <item> SFDITEM_FIELD__AudioI2S_RXBUF_LeftChannel
//    <name> LeftChannel </name>
//    <r> 
//    <i> [Bits 31..16] RO (@ 0x49301014) Left channel value </i>
//    <edit> 
//      <loc> ( (unsigned short)((AudioI2S_RXBUF >> 16) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: AudioI2S_RXBUF  ---------------------------------
// SVD Line: 6948

//  <rtree> SFDITEM_REG__AudioI2S_RXBUF
//    <name> RXBUF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x49301014) Receive Buffer FIFO Data register </i>
//    <loc> ( (unsigned int)((AudioI2S_RXBUF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__AudioI2S_RXBUF_RightChannel </item>
//    <item> SFDITEM_FIELD__AudioI2S_RXBUF_LeftChannel </item>
//  </rtree>
//  


// --------------------------  Register Item Address: AudioI2S_ITCR  ------------------------------
// SVD Line: 6969

unsigned int AudioI2S_ITCR __AT (0x49301300);



// -----------------------------  Field Item: AudioI2S_ITCR_ITCR  ---------------------------------
// SVD Line: 6976

//  <item> SFDITEM_FIELD__AudioI2S_ITCR_ITCR
//    <name> ITCR </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49301300) Integration test control bit </i>
//    <check> 
//      <loc> ( (unsigned int) AudioI2S_ITCR ) </loc>
//      <o.0..0> ITCR
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: AudioI2S_ITCR  ---------------------------------
// SVD Line: 6969

//  <rtree> SFDITEM_REG__AudioI2S_ITCR
//    <name> ITCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49301300) Integration Test Control register </i>
//    <loc> ( (unsigned int)((AudioI2S_ITCR >> 0) & 0xFFFFFFFF), ((AudioI2S_ITCR = (AudioI2S_ITCR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AudioI2S_ITCR_ITCR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: AudioI2S_ITIP1  -----------------------------
// SVD Line: 6984

unsigned int AudioI2S_ITIP1 __AT (0x49301304);



// -----------------------------  Field Item: AudioI2S_ITIP1_SDIN  --------------------------------
// SVD Line: 6991

//  <item> SFDITEM_FIELD__AudioI2S_ITIP1_SDIN
//    <name> SDIN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49301304) SDIN pin value </i>
//    <check> 
//      <loc> ( (unsigned int) AudioI2S_ITIP1 ) </loc>
//      <o.0..0> SDIN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: AudioI2S_ITIP1  ---------------------------------
// SVD Line: 6984

//  <rtree> SFDITEM_REG__AudioI2S_ITIP1
//    <name> ITIP1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49301304) Integration Test Input register 1 </i>
//    <loc> ( (unsigned int)((AudioI2S_ITIP1 >> 0) & 0xFFFFFFFF), ((AudioI2S_ITIP1 = (AudioI2S_ITIP1 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AudioI2S_ITIP1_SDIN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: AudioI2S_ITOP1  -----------------------------
// SVD Line: 6999

unsigned int AudioI2S_ITOP1 __AT (0x49301308);



// ----------------------------  Field Item: AudioI2S_ITOP1_SDOUT  --------------------------------
// SVD Line: 7006

//  <item> SFDITEM_FIELD__AudioI2S_ITOP1_SDOUT
//    <name> SDOUT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x49301308) SDOUT signal value </i>
//    <check> 
//      <loc> ( (unsigned int) AudioI2S_ITOP1 ) </loc>
//      <o.0..0> SDOUT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: AudioI2S_ITOP1_SCLK  --------------------------------
// SVD Line: 7012

//  <item> SFDITEM_FIELD__AudioI2S_ITOP1_SCLK
//    <name> SCLK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x49301308) SLCK signal value </i>
//    <check> 
//      <loc> ( (unsigned int) AudioI2S_ITOP1 ) </loc>
//      <o.1..1> SCLK
//    </check>
//  </item>
//  


// -----------------------------  Field Item: AudioI2S_ITOP1_LRCK  --------------------------------
// SVD Line: 7018

//  <item> SFDITEM_FIELD__AudioI2S_ITOP1_LRCK
//    <name> LRCK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x49301308) LRCK signal value </i>
//    <check> 
//      <loc> ( (unsigned int) AudioI2S_ITOP1 ) </loc>
//      <o.2..2> LRCK
//    </check>
//  </item>
//  


// ----------------------------  Field Item: AudioI2S_ITOP1_IRQOUT  -------------------------------
// SVD Line: 7024

//  <item> SFDITEM_FIELD__AudioI2S_ITOP1_IRQOUT
//    <name> IRQOUT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x49301308) IRQOUT signal value </i>
//    <check> 
//      <loc> ( (unsigned int) AudioI2S_ITOP1 ) </loc>
//      <o.3..3> IRQOUT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: AudioI2S_ITOP1  ---------------------------------
// SVD Line: 6999

//  <rtree> SFDITEM_REG__AudioI2S_ITOP1
//    <name> ITOP1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x49301308) Integration Test Output register 1 </i>
//    <loc> ( (unsigned int)((AudioI2S_ITOP1 >> 0) & 0xFFFFFFFF), ((AudioI2S_ITOP1 = (AudioI2S_ITOP1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AudioI2S_ITOP1_SDOUT </item>
//    <item> SFDITEM_FIELD__AudioI2S_ITOP1_SCLK </item>
//    <item> SFDITEM_FIELD__AudioI2S_ITOP1_LRCK </item>
//    <item> SFDITEM_FIELD__AudioI2S_ITOP1_IRQOUT </item>
//  </rtree>
//  


// --------------------------------  Peripheral View: AudioI2S  -----------------------------------
// SVD Line: 6776

//  <view> AudioI2S
//    <name> AudioI2S </name>
//    <item> SFDITEM_REG__AudioI2S_CONTROL </item>
//    <item> SFDITEM_REG__AudioI2S_STATUS </item>
//    <item> SFDITEM_REG__AudioI2S_ERROR </item>
//    <item> SFDITEM_REG__AudioI2S_DIVIDE </item>
//    <item> SFDITEM_REG__AudioI2S_TXBUF </item>
//    <item> SFDITEM_REG__AudioI2S_RXBUF </item>
//    <item> SFDITEM_REG__AudioI2S_ITCR </item>
//    <item> SFDITEM_REG__AudioI2S_ITIP1 </item>
//    <item> SFDITEM_REG__AudioI2S_ITOP1 </item>
//  </view>
//  


// ------------------------  Register Item Address: ColorLCD_CHAR_COM  ----------------------------
// SVD Line: 7045

unsigned int ColorLCD_CHAR_COM __AT (0x4930A000);



// ----------------------------  Register Item: ColorLCD_CHAR_COM  --------------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__ColorLCD_CHAR_COM
//    <name> CHAR_COM </name>
//    <i> [Bits 31..0] RW (@ 0x4930A000) Command register </i>
//    <edit> 
//      <loc> ( (unsigned int)((ColorLCD_CHAR_COM >> 0) & 0xFFFFFFFF), ((ColorLCD_CHAR_COM = (ColorLCD_CHAR_COM & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Register Item Address: ColorLCD_CHAR_DAT  ----------------------------
// SVD Line: 7052

unsigned int ColorLCD_CHAR_DAT __AT (0x4930A004);



// ----------------------------  Register Item: ColorLCD_CHAR_DAT  --------------------------------
// SVD Line: 7052

//  <item> SFDITEM_REG__ColorLCD_CHAR_DAT
//    <name> CHAR_DAT </name>
//    <i> [Bits 31..0] RW (@ 0x4930A004) Data register </i>
//    <edit> 
//      <loc> ( (unsigned int)((ColorLCD_CHAR_DAT >> 0) & 0xFFFFFFFF), ((ColorLCD_CHAR_DAT = (ColorLCD_CHAR_DAT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: ColorLCD_CHAR_RD  ----------------------------
// SVD Line: 7059

unsigned int ColorLCD_CHAR_RD __AT (0x4930A008);



// ------------------------  Field Item: ColorLCD_CHAR_RD_CapturedData  ---------------------------
// SVD Line: 7066

//  <item> SFDITEM_FIELD__ColorLCD_CHAR_RD_CapturedData
//    <name> CapturedData </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x4930A008) Captured data from an earlier read command.  These bits contain the data from the last  request read. Valid only when CHAR_RAW[0] is set. </i>
//    <edit> 
//      <loc> ( (unsigned char)((ColorLCD_CHAR_RD >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: ColorLCD_CHAR_RD  --------------------------------
// SVD Line: 7059

//  <rtree> SFDITEM_REG__ColorLCD_CHAR_RD
//    <name> CHAR_RD </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4930A008) Read Data register </i>
//    <loc> ( (unsigned int)((ColorLCD_CHAR_RD >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ColorLCD_CHAR_RD_CapturedData </item>
//  </rtree>
//  


// ------------------------  Register Item Address: ColorLCD_CHAR_RAW  ----------------------------
// SVD Line: 7078

unsigned int ColorLCD_CHAR_RAW __AT (0x4930A00C);



// ----------------------  Field Item: ColorLCD_CHAR_RAW_AccessCmpltStat  -------------------------
// SVD Line: 7085

//  <item> SFDITEM_FIELD__ColorLCD_CHAR_RAW_AccessCmpltStat
//    <name> AccessCmpltStat </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4930A00C) Access complete status.  1 indicates Access Complete and data in  CHAR_RD is valid. Write 0 to clear access  complete flag. </i>
//    <check> 
//      <loc> ( (unsigned int) ColorLCD_CHAR_RAW ) </loc>
//      <o.0..0> AccessCmpltStat
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: ColorLCD_CHAR_RAW  -------------------------------
// SVD Line: 7078

//  <rtree> SFDITEM_REG__ColorLCD_CHAR_RAW
//    <name> CHAR_RAW </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4930A00C) Access Complete Status register </i>
//    <loc> ( (unsigned int)((ColorLCD_CHAR_RAW >> 0) & 0xFFFFFFFF), ((ColorLCD_CHAR_RAW = (ColorLCD_CHAR_RAW & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ColorLCD_CHAR_RAW_AccessCmpltStat </item>
//  </rtree>
//  


// ------------------------  Register Item Address: ColorLCD_CHAR_MASK  ---------------------------
// SVD Line: 7098

unsigned int ColorLCD_CHAR_MASK __AT (0x4930A010);



// --------------------  Field Item: ColorLCD_CHAR_MASK_WriteInterruptMask  -----------------------
// SVD Line: 7105

//  <item> SFDITEM_FIELD__ColorLCD_CHAR_MASK_WriteInterruptMask
//    <name> WriteInterruptMask </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4930A010) Write 0 to enable Access Complete to generate an interrupt. </i>
//    <check> 
//      <loc> ( (unsigned int) ColorLCD_CHAR_MASK ) </loc>
//      <o.0..0> WriteInterruptMask
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: ColorLCD_CHAR_MASK  -------------------------------
// SVD Line: 7098

//  <rtree> SFDITEM_REG__ColorLCD_CHAR_MASK
//    <name> CHAR_MASK </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4930A010) Interrupt Mask register </i>
//    <loc> ( (unsigned int)((ColorLCD_CHAR_MASK >> 0) & 0xFFFFFFFF), ((ColorLCD_CHAR_MASK = (ColorLCD_CHAR_MASK & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ColorLCD_CHAR_MASK_WriteInterruptMask </item>
//  </rtree>
//  


// ------------------------  Register Item Address: ColorLCD_CHAR_STAT  ---------------------------
// SVD Line: 7115

unsigned int ColorLCD_CHAR_STAT __AT (0x4930A014);



// ---------------------  Field Item: ColorLCD_CHAR_STAT_AccesCmpltAndIrq  ------------------------
// SVD Line: 7122

//  <item> SFDITEM_FIELD__ColorLCD_CHAR_STAT_AccesCmpltAndIrq
//    <name> AccesCmpltAndIrq </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4930A014) The state of Access Complete ANDed with the CHAR_MASK. </i>
//    <check> 
//      <loc> ( (unsigned int) ColorLCD_CHAR_STAT ) </loc>
//      <o.0..0> AccesCmpltAndIrq
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: ColorLCD_CHAR_STAT  -------------------------------
// SVD Line: 7115

//  <rtree> SFDITEM_REG__ColorLCD_CHAR_STAT
//    <name> CHAR_STAT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4930A014) Status register </i>
//    <loc> ( (unsigned int)((ColorLCD_CHAR_STAT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ColorLCD_CHAR_STAT_AccesCmpltAndIrq </item>
//  </rtree>
//  


// ------------------------  Register Item Address: ColorLCD_CHAR_MISC  ---------------------------
// SVD Line: 7132

unsigned int ColorLCD_CHAR_MISC __AT (0x4930A04C);



// -------------------------  Field Item: ColorLCD_CHAR_MISC_CLCD_CS  -----------------------------
// SVD Line: 7139

//  <item> SFDITEM_FIELD__ColorLCD_CHAR_MISC_CLCD_CS
//    <name> CLCD_CS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4930A04C) CLCD_CS </i>
//    <check> 
//      <loc> ( (unsigned int) ColorLCD_CHAR_MISC ) </loc>
//      <o.0..0> CLCD_CS
//    </check>
//  </item>
//  


// -------------------------  Field Item: ColorLCD_CHAR_MISC_CLCD_WR  -----------------------------
// SVD Line: 7144

//  <item> SFDITEM_FIELD__ColorLCD_CHAR_MISC_CLCD_WR
//    <name> CLCD_WR </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4930A04C) CLCD_WR </i>
//    <check> 
//      <loc> ( (unsigned int) ColorLCD_CHAR_MISC ) </loc>
//      <o.1..1> CLCD_WR
//    </check>
//  </item>
//  


// ------------------------  Field Item: ColorLCD_CHAR_MISC_CLCD_RESET  ---------------------------
// SVD Line: 7149

//  <item> SFDITEM_FIELD__ColorLCD_CHAR_MISC_CLCD_RESET
//    <name> CLCD_RESET </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4930A04C) CLCD_RESET </i>
//    <check> 
//      <loc> ( (unsigned int) ColorLCD_CHAR_MISC ) </loc>
//      <o.3..3> CLCD_RESET
//    </check>
//  </item>
//  


// -------------------------  Field Item: ColorLCD_CHAR_MISC_CLCD_RS  -----------------------------
// SVD Line: 7154

//  <item> SFDITEM_FIELD__ColorLCD_CHAR_MISC_CLCD_RS
//    <name> CLCD_RS </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4930A04C) CLCD_RS </i>
//    <check> 
//      <loc> ( (unsigned int) ColorLCD_CHAR_MISC ) </loc>
//      <o.4..4> CLCD_RS
//    </check>
//  </item>
//  


// -------------------------  Field Item: ColorLCD_CHAR_MISC_CLCD_RD  -----------------------------
// SVD Line: 7159

//  <item> SFDITEM_FIELD__ColorLCD_CHAR_MISC_CLCD_RD
//    <name> CLCD_RD </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4930A04C) CLCD_RD </i>
//    <check> 
//      <loc> ( (unsigned int) ColorLCD_CHAR_MISC ) </loc>
//      <o.5..5> CLCD_RD
//    </check>
//  </item>
//  


// -------------------------  Field Item: ColorLCD_CHAR_MISC_CLCD_BL  -----------------------------
// SVD Line: 7164

//  <item> SFDITEM_FIELD__ColorLCD_CHAR_MISC_CLCD_BL
//    <name> CLCD_BL </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4930A04C) CLCD_BL </i>
//    <check> 
//      <loc> ( (unsigned int) ColorLCD_CHAR_MISC ) </loc>
//      <o.6..6> CLCD_BL
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: ColorLCD_CHAR_MISC  -------------------------------
// SVD Line: 7132

//  <rtree> SFDITEM_REG__ColorLCD_CHAR_MISC
//    <name> CHAR_MISC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4930A04C) Miscellaneous Control register </i>
//    <loc> ( (unsigned int)((ColorLCD_CHAR_MISC >> 0) & 0xFFFFFFFF), ((ColorLCD_CHAR_MISC = (ColorLCD_CHAR_MISC & ~(0x7BUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7B) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ColorLCD_CHAR_MISC_CLCD_CS </item>
//    <item> SFDITEM_FIELD__ColorLCD_CHAR_MISC_CLCD_WR </item>
//    <item> SFDITEM_FIELD__ColorLCD_CHAR_MISC_CLCD_RESET </item>
//    <item> SFDITEM_FIELD__ColorLCD_CHAR_MISC_CLCD_RS </item>
//    <item> SFDITEM_FIELD__ColorLCD_CHAR_MISC_CLCD_RD </item>
//    <item> SFDITEM_FIELD__ColorLCD_CHAR_MISC_CLCD_BL </item>
//  </rtree>
//  


// --------------------------------  Peripheral View: ColorLCD  -----------------------------------
// SVD Line: 7035

//  <view> ColorLCD
//    <name> ColorLCD </name>
//    <item> SFDITEM_REG__ColorLCD_CHAR_COM </item>
//    <item> SFDITEM_REG__ColorLCD_CHAR_DAT </item>
//    <item> SFDITEM_REG__ColorLCD_CHAR_RD </item>
//    <item> SFDITEM_REG__ColorLCD_CHAR_RAW </item>
//    <item> SFDITEM_REG__ColorLCD_CHAR_MASK </item>
//    <item> SFDITEM_REG__ColorLCD_CHAR_STAT </item>
//    <item> SFDITEM_REG__ColorLCD_CHAR_MISC </item>
//  </view>
//  


// ---------------------  Register Item Address: ColorLCD_Secure_CHAR_COM  ------------------------
// SVD Line: 7045

unsigned int ColorLCD_Secure_CHAR_COM __AT (0x5930A000);



// -------------------------  Register Item: ColorLCD_Secure_CHAR_COM  ----------------------------
// SVD Line: 7045

//  <item> SFDITEM_REG__ColorLCD_Secure_CHAR_COM
//    <name> CHAR_COM </name>
//    <i> [Bits 31..0] RW (@ 0x5930A000) Command register </i>
//    <edit> 
//      <loc> ( (unsigned int)((ColorLCD_Secure_CHAR_COM >> 0) & 0xFFFFFFFF), ((ColorLCD_Secure_CHAR_COM = (ColorLCD_Secure_CHAR_COM & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: ColorLCD_Secure_CHAR_DAT  ------------------------
// SVD Line: 7052

unsigned int ColorLCD_Secure_CHAR_DAT __AT (0x5930A004);



// -------------------------  Register Item: ColorLCD_Secure_CHAR_DAT  ----------------------------
// SVD Line: 7052

//  <item> SFDITEM_REG__ColorLCD_Secure_CHAR_DAT
//    <name> CHAR_DAT </name>
//    <i> [Bits 31..0] RW (@ 0x5930A004) Data register </i>
//    <edit> 
//      <loc> ( (unsigned int)((ColorLCD_Secure_CHAR_DAT >> 0) & 0xFFFFFFFF), ((ColorLCD_Secure_CHAR_DAT = (ColorLCD_Secure_CHAR_DAT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Register Item Address: ColorLCD_Secure_CHAR_RD  -------------------------
// SVD Line: 7059

unsigned int ColorLCD_Secure_CHAR_RD __AT (0x5930A008);



// --------------------  Field Item: ColorLCD_Secure_CHAR_RD_CapturedData  ------------------------
// SVD Line: 7066

//  <item> SFDITEM_FIELD__ColorLCD_Secure_CHAR_RD_CapturedData
//    <name> CapturedData </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x5930A008) Captured data from an earlier read command.  These bits contain the data from the last  request read. Valid only when CHAR_RAW[0] is set. </i>
//    <edit> 
//      <loc> ( (unsigned char)((ColorLCD_Secure_CHAR_RD >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register RTree: ColorLCD_Secure_CHAR_RD  ----------------------------
// SVD Line: 7059

//  <rtree> SFDITEM_REG__ColorLCD_Secure_CHAR_RD
//    <name> CHAR_RD </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5930A008) Read Data register </i>
//    <loc> ( (unsigned int)((ColorLCD_Secure_CHAR_RD >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ColorLCD_Secure_CHAR_RD_CapturedData </item>
//  </rtree>
//  


// ---------------------  Register Item Address: ColorLCD_Secure_CHAR_RAW  ------------------------
// SVD Line: 7078

unsigned int ColorLCD_Secure_CHAR_RAW __AT (0x5930A00C);



// ------------------  Field Item: ColorLCD_Secure_CHAR_RAW_AccessCmpltStat  ----------------------
// SVD Line: 7085

//  <item> SFDITEM_FIELD__ColorLCD_Secure_CHAR_RAW_AccessCmpltStat
//    <name> AccessCmpltStat </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5930A00C) Access complete status.  1 indicates Access Complete and data in  CHAR_RD is valid. Write 0 to clear access  complete flag. </i>
//    <check> 
//      <loc> ( (unsigned int) ColorLCD_Secure_CHAR_RAW ) </loc>
//      <o.0..0> AccessCmpltStat
//    </check>
//  </item>
//  


// ------------------------  Register RTree: ColorLCD_Secure_CHAR_RAW  ----------------------------
// SVD Line: 7078

//  <rtree> SFDITEM_REG__ColorLCD_Secure_CHAR_RAW
//    <name> CHAR_RAW </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5930A00C) Access Complete Status register </i>
//    <loc> ( (unsigned int)((ColorLCD_Secure_CHAR_RAW >> 0) & 0xFFFFFFFF), ((ColorLCD_Secure_CHAR_RAW = (ColorLCD_Secure_CHAR_RAW & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ColorLCD_Secure_CHAR_RAW_AccessCmpltStat </item>
//  </rtree>
//  


// --------------------  Register Item Address: ColorLCD_Secure_CHAR_MASK  ------------------------
// SVD Line: 7098

unsigned int ColorLCD_Secure_CHAR_MASK __AT (0x5930A010);



// ----------------  Field Item: ColorLCD_Secure_CHAR_MASK_WriteInterruptMask  --------------------
// SVD Line: 7105

//  <item> SFDITEM_FIELD__ColorLCD_Secure_CHAR_MASK_WriteInterruptMask
//    <name> WriteInterruptMask </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x5930A010) Write 0 to enable Access Complete to generate an interrupt. </i>
//    <check> 
//      <loc> ( (unsigned int) ColorLCD_Secure_CHAR_MASK ) </loc>
//      <o.0..0> WriteInterruptMask
//    </check>
//  </item>
//  


// ------------------------  Register RTree: ColorLCD_Secure_CHAR_MASK  ---------------------------
// SVD Line: 7098

//  <rtree> SFDITEM_REG__ColorLCD_Secure_CHAR_MASK
//    <name> CHAR_MASK </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x5930A010) Interrupt Mask register </i>
//    <loc> ( (unsigned int)((ColorLCD_Secure_CHAR_MASK >> 0) & 0xFFFFFFFF), ((ColorLCD_Secure_CHAR_MASK = (ColorLCD_Secure_CHAR_MASK & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ColorLCD_Secure_CHAR_MASK_WriteInterruptMask </item>
//  </rtree>
//  


// --------------------  Register Item Address: ColorLCD_Secure_CHAR_STAT  ------------------------
// SVD Line: 7115

unsigned int ColorLCD_Secure_CHAR_STAT __AT (0x5930A014);



// -----------------  Field Item: ColorLCD_Secure_CHAR_STAT_AccesCmpltAndIrq  ---------------------
// SVD Line: 7122

//  <item> SFDITEM_FIELD__ColorLCD_Secure_CHAR_STAT_AccesCmpltAndIrq
//    <name> AccesCmpltAndIrq </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x5930A014) The state of Access Complete ANDed with the CHAR_MASK. </i>
//    <check> 
//      <loc> ( (unsigned int) ColorLCD_Secure_CHAR_STAT ) </loc>
//      <o.0..0> AccesCmpltAndIrq
//    </check>
//  </item>
//  


// ------------------------  Register RTree: ColorLCD_Secure_CHAR_STAT  ---------------------------
// SVD Line: 7115

//  <rtree> SFDITEM_REG__ColorLCD_Secure_CHAR_STAT
//    <name> CHAR_STAT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x5930A014) Status register </i>
//    <loc> ( (unsigned int)((ColorLCD_Secure_CHAR_STAT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ColorLCD_Secure_CHAR_STAT_AccesCmpltAndIrq </item>
//  </rtree>
//  


// --------------------  Register Item Address: ColorLCD_Secure_CHAR_MISC  ------------------------
// SVD Line: 7132

unsigned int ColorLCD_Secure_CHAR_MISC __AT (0x5930A04C);



// ----------------------  Field Item: ColorLCD_Secure_CHAR_MISC_CLCD_CS  -------------------------
// SVD Line: 7139

//  <item> SFDITEM_FIELD__ColorLCD_Secure_CHAR_MISC_CLCD_CS
//    <name> CLCD_CS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x5930A04C) CLCD_CS </i>
//    <check> 
//      <loc> ( (unsigned int) ColorLCD_Secure_CHAR_MISC ) </loc>
//      <o.0..0> CLCD_CS
//    </check>
//  </item>
//  


// ----------------------  Field Item: ColorLCD_Secure_CHAR_MISC_CLCD_WR  -------------------------
// SVD Line: 7144

//  <item> SFDITEM_FIELD__ColorLCD_Secure_CHAR_MISC_CLCD_WR
//    <name> CLCD_WR </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x5930A04C) CLCD_WR </i>
//    <check> 
//      <loc> ( (unsigned int) ColorLCD_Secure_CHAR_MISC ) </loc>
//      <o.1..1> CLCD_WR
//    </check>
//  </item>
//  


// --------------------  Field Item: ColorLCD_Secure_CHAR_MISC_CLCD_RESET  ------------------------
// SVD Line: 7149

//  <item> SFDITEM_FIELD__ColorLCD_Secure_CHAR_MISC_CLCD_RESET
//    <name> CLCD_RESET </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x5930A04C) CLCD_RESET </i>
//    <check> 
//      <loc> ( (unsigned int) ColorLCD_Secure_CHAR_MISC ) </loc>
//      <o.3..3> CLCD_RESET
//    </check>
//  </item>
//  


// ----------------------  Field Item: ColorLCD_Secure_CHAR_MISC_CLCD_RS  -------------------------
// SVD Line: 7154

//  <item> SFDITEM_FIELD__ColorLCD_Secure_CHAR_MISC_CLCD_RS
//    <name> CLCD_RS </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x5930A04C) CLCD_RS </i>
//    <check> 
//      <loc> ( (unsigned int) ColorLCD_Secure_CHAR_MISC ) </loc>
//      <o.4..4> CLCD_RS
//    </check>
//  </item>
//  


// ----------------------  Field Item: ColorLCD_Secure_CHAR_MISC_CLCD_RD  -------------------------
// SVD Line: 7159

//  <item> SFDITEM_FIELD__ColorLCD_Secure_CHAR_MISC_CLCD_RD
//    <name> CLCD_RD </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x5930A04C) CLCD_RD </i>
//    <check> 
//      <loc> ( (unsigned int) ColorLCD_Secure_CHAR_MISC ) </loc>
//      <o.5..5> CLCD_RD
//    </check>
//  </item>
//  


// ----------------------  Field Item: ColorLCD_Secure_CHAR_MISC_CLCD_BL  -------------------------
// SVD Line: 7164

//  <item> SFDITEM_FIELD__ColorLCD_Secure_CHAR_MISC_CLCD_BL
//    <name> CLCD_BL </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x5930A04C) CLCD_BL </i>
//    <check> 
//      <loc> ( (unsigned int) ColorLCD_Secure_CHAR_MISC ) </loc>
//      <o.6..6> CLCD_BL
//    </check>
//  </item>
//  


// ------------------------  Register RTree: ColorLCD_Secure_CHAR_MISC  ---------------------------
// SVD Line: 7132

//  <rtree> SFDITEM_REG__ColorLCD_Secure_CHAR_MISC
//    <name> CHAR_MISC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x5930A04C) Miscellaneous Control register </i>
//    <loc> ( (unsigned int)((ColorLCD_Secure_CHAR_MISC >> 0) & 0xFFFFFFFF), ((ColorLCD_Secure_CHAR_MISC = (ColorLCD_Secure_CHAR_MISC & ~(0x7BUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7B) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ColorLCD_Secure_CHAR_MISC_CLCD_CS </item>
//    <item> SFDITEM_FIELD__ColorLCD_Secure_CHAR_MISC_CLCD_WR </item>
//    <item> SFDITEM_FIELD__ColorLCD_Secure_CHAR_MISC_CLCD_RESET </item>
//    <item> SFDITEM_FIELD__ColorLCD_Secure_CHAR_MISC_CLCD_RS </item>
//    <item> SFDITEM_FIELD__ColorLCD_Secure_CHAR_MISC_CLCD_RD </item>
//    <item> SFDITEM_FIELD__ColorLCD_Secure_CHAR_MISC_CLCD_BL </item>
//  </rtree>
//  


// ----------------------------  Peripheral View: ColorLCD_Secure  --------------------------------
// SVD Line: 7174

//  <view> ColorLCD_Secure
//    <name> ColorLCD_Secure </name>
//    <item> SFDITEM_REG__ColorLCD_Secure_CHAR_COM </item>
//    <item> SFDITEM_REG__ColorLCD_Secure_CHAR_DAT </item>
//    <item> SFDITEM_REG__ColorLCD_Secure_CHAR_RD </item>
//    <item> SFDITEM_REG__ColorLCD_Secure_CHAR_RAW </item>
//    <item> SFDITEM_REG__ColorLCD_Secure_CHAR_MASK </item>
//    <item> SFDITEM_REG__ColorLCD_Secure_CHAR_STAT </item>
//    <item> SFDITEM_REG__ColorLCD_Secure_CHAR_MISC </item>
//  </view>
//  


// -------------------------------   IRQ Num definition: SSE310  ----------------------------------
// SVD Line: 33



// ------------------------------------------------------------------------------------------------
// -----                              Interrupt Number Definition                             -----
// ------------------------------------------------------------------------------------------------



// ------------------------  ARM Cortex-M85 Specific Interrupt Numbers  ---------------------------

//  <qitem> Reset_IRQ
//    <name> Reset </name>
//    <i> Reset Vector, invoked on Power up and warm reset </i>
//    <loc> 1 </loc>
//  </qitem>
//  
//  <qitem> NonMaskableInt_IRQ
//    <name> NonMaskableInt </name>
//    <i> Non maskable Interrupt, cannot be stopped or preempted </i>
//    <loc> 2 </loc>
//  </qitem>
//  
//  <qitem> HardFault_IRQ
//    <name> HardFault </name>
//    <i> Hard Fault, all classes of Fault </i>
//    <loc> 3 </loc>
//  </qitem>
//  
//  <qitem> MemoryManagement_IRQ
//    <name> MemoryManagement </name>
//    <i> Memory Management, MPU mismatch, including Access Violation and No Match </i>
//    <loc> 4 </loc>
//  </qitem>
//  
//  <qitem> BusFault_IRQ
//    <name> BusFault </name>
//    <i> Bus Fault, Pre-Fetch-, Memory Access Fault, other address/memory related Fault </i>
//    <loc> 5 </loc>
//  </qitem>
//  
//  <qitem> UsageFault_IRQ
//    <name> UsageFault </name>
//    <i> Usage Fault, i.e. Undef Instruction, Illegal State Transition </i>
//    <loc> 6 </loc>
//  </qitem>
//  
//  <qitem> SecureFault_IRQ
//    <name> SecureFault </name>
//    <i> Secure Fault Handler </i>
//    <loc> 7 </loc>
//  </qitem>
//  
//  <qitem> SVCall_IRQ
//    <name> SVCall </name>
//    <i> System Service Call via SVC instruction </i>
//    <loc> 11 </loc>
//  </qitem>
//  
//  <qitem> DebugMonitor_IRQ
//    <name> DebugMonitor </name>
//    <i> Debug Monitor </i>
//    <loc> 12 </loc>
//  </qitem>
//  
//  <qitem> PendSV_IRQ
//    <name> PendSV </name>
//    <i> Pendable request for system service </i>
//    <loc> 14 </loc>
//  </qitem>
//  
//  <qitem> SysTick_IRQ
//    <name> SysTick </name>
//    <i> System Tick Timer </i>
//    <loc> 15 </loc>
//  </qitem>
//  


// ----------------------------  SSE310 Specific Interrupt Numbers  -------------------------------

//  <qitem> NONSEC_WATCHDOG_RST_REQ_IRQ
//    <name> NONSEC_WATCHDOG_RST_REQ </name>
//    <i> Non-Secure Watchdog reset Request </i>
//    <loc> 16 </loc>
//  </qitem>
//  
//  <qitem> NONSEC_WATCHDOG_IRQ_IRQ
//    <name> NONSEC_WATCHDOG_IRQ </name>
//    <i> Non-Secure Watchdog Interrupt </i>
//    <loc> 17 </loc>
//  </qitem>
//  
//  <qitem> S32K_TIMER_IRQ
//    <name> S32K_TIMER </name>
//    <i> S32K Timer </i>
//    <loc> 18 </loc>
//  </qitem>
//  
//  <qitem> TIMER0_IRQ
//    <name> TIMER0 </name>
//    <i> Timer 0 </i>
//    <loc> 19 </loc>
//  </qitem>
//  
//  <qitem> TIMER1_IRQ
//    <name> TIMER1 </name>
//    <i> Timer 1 </i>
//    <loc> 20 </loc>
//  </qitem>
//  
//  <qitem> DUALTIMER_IRQ
//    <name> DUALTIMER </name>
//    <i> Timer 2 </i>
//    <loc> 21 </loc>
//  </qitem>
//  
//  <qitem> MPC_IRQ
//    <name> MPC </name>
//    <i> MPC Combined </i>
//    <loc> 25 </loc>
//  </qitem>
//  
//  <qitem> PPC_IRQ
//    <name> PPC </name>
//    <i> PPC Combined </i>
//    <loc> 26 </loc>
//  </qitem>
//  
//  <qitem> MSC_IRQ
//    <name> MSC </name>
//    <i> MSC Combined </i>
//    <loc> 27 </loc>
//  </qitem>
//  
//  <qitem> BRG_IRQ
//    <name> BRG </name>
//    <i> Bridge Buffer Error </i>
//    <loc> 28 </loc>
//  </qitem>
//  
//  <qitem> MGMT_PPU_IRQ
//    <name> MGMT_PPU </name>
//    <i> MGMT_PPU </i>
//    <loc> 30 </loc>
//  </qitem>
//  
//  <qitem> SYS_PPU_IRQ
//    <name> SYS_PPU </name>
//    <i> SYS_PPU </i>
//    <loc> 31 </loc>
//  </qitem>
//  
//  <qitem> CPU0_PPU_IRQ
//    <name> CPU0_PPU </name>
//    <i> CPU0_PPU </i>
//    <loc> 32 </loc>
//  </qitem>
//  
//  <qitem> PPU_DEBUG_IRQ
//    <name> PPU_DEBUG </name>
//    <i> PPU_DEBUG </i>
//    <loc> 42 </loc>
//  </qitem>
//  
//  <qitem> TIMER3_IRQ
//    <name> TIMER3 </name>
//    <i> Timer 3 </i>
//    <loc> 43 </loc>
//  </qitem>
//  
//  <qitem> System_Timestamp_Counter_IRQ
//    <name> System_Timestamp_Counter </name>
//    <i> System_Timestamp_Counter </i>
//    <loc> 48 </loc>
//  </qitem>
//  
//  <qitem> UART0_RX_IRQ
//    <name> UART0_RX </name>
//    <i> UART 0 RX </i>
//    <loc> 49 </loc>
//  </qitem>
//  
//  <qitem> UART0_TX_IRQ
//    <name> UART0_TX </name>
//    <i> UART 0 TX </i>
//    <loc> 50 </loc>
//  </qitem>
//  
//  <qitem> UART1_RX_IRQ
//    <name> UART1_RX </name>
//    <i> UART 1 RX </i>
//    <loc> 51 </loc>
//  </qitem>
//  
//  <qitem> UART1_TX_IRQ
//    <name> UART1_TX </name>
//    <i> UART 1 TX </i>
//    <loc> 52 </loc>
//  </qitem>
//  
//  <qitem> UART2_RX_IRQ
//    <name> UART2_RX </name>
//    <i> UART 2 RX </i>
//    <loc> 53 </loc>
//  </qitem>
//  
//  <qitem> UART2_TX_IRQ
//    <name> UART2_TX </name>
//    <i> UART 2 TX </i>
//    <loc> 54 </loc>
//  </qitem>
//  
//  <qitem> UART3_RX_IRQ
//    <name> UART3_RX </name>
//    <i> UART 3 RX </i>
//    <loc> 55 </loc>
//  </qitem>
//  
//  <qitem> UART3_TX_IRQ
//    <name> UART3_TX </name>
//    <i> UART 3 TX </i>
//    <loc> 56 </loc>
//  </qitem>
//  
//  <qitem> UART4_RX_IRQ
//    <name> UART4_RX </name>
//    <i> UART 4 RX </i>
//    <loc> 57 </loc>
//  </qitem>
//  
//  <qitem> UART4_TX_IRQ
//    <name> UART4_TX </name>
//    <i> UART 4 TX </i>
//    <loc> 58 </loc>
//  </qitem>
//  
//  <qitem> UART0_COMBINED_IRQ
//    <name> UART0_COMBINED </name>
//    <i> UART 0 Combined interrupt </i>
//    <loc> 59 </loc>
//  </qitem>
//  
//  <qitem> UART1_COMBINED_IRQ
//    <name> UART1_COMBINED </name>
//    <i> UART 1 Combined interrupt </i>
//    <loc> 60 </loc>
//  </qitem>
//  
//  <qitem> UART2_COMBINED_IRQ
//    <name> UART2_COMBINED </name>
//    <i> UART 2 Combined interrupt </i>
//    <loc> 61 </loc>
//  </qitem>
//  
//  <qitem> UART3_COMBINED_IRQ
//    <name> UART3_COMBINED </name>
//    <i> UART 3 Combined interrupt </i>
//    <loc> 62 </loc>
//  </qitem>
//  
//  <qitem> UART4_COMBINED_IRQ
//    <name> UART4_COMBINED </name>
//    <i> UART 4 Combined interrupt </i>
//    <loc> 63 </loc>
//  </qitem>
//  
//  <qitem> UART_OVERFLOW_IRQ
//    <name> UART_OVERFLOW </name>
//    <i> UART 0 to 5 combined overflow/overrun </i>
//    <loc> 64 </loc>
//  </qitem>
//  
//  <qitem> AudioI2S_IRQ
//    <name> AudioI2S </name>
//    <i> AudioI2S </i>
//    <loc> 66 </loc>
//  </qitem>
//  
//  <qitem> TouchScreen_IRQ
//    <name> TouchScreen </name>
//    <i> TouchScreen </i>
//    <loc> 67 </loc>
//  </qitem>
//  
//  <qitem> SPI2_IRQ
//    <name> SPI2 </name>
//    <i> SPI 2 </i>
//    <loc> 69 </loc>
//  </qitem>
//  
//  <qitem> SPI0_IRQ
//    <name> SPI0 </name>
//    <i> SPI 0 </i>
//    <loc> 70 </loc>
//  </qitem>
//  
//  <qitem> SPI1_IRQ
//    <name> SPI1 </name>
//    <i> SPI 1 </i>
//    <loc> 71 </loc>
//  </qitem>
//  
//  <qitem> GPIO0_COMBINED_IRQ
//    <name> GPIO0_COMBINED </name>
//    <i> GPIO 0 combined </i>
//    <loc> 85 </loc>
//  </qitem>
//  
//  <qitem> GPIO1_COMBINED_IRQ
//    <name> GPIO1_COMBINED </name>
//    <i> GPIO 1 combined </i>
//    <loc> 86 </loc>
//  </qitem>
//  
//  <qitem> GPIO2_COMBINED_IRQ
//    <name> GPIO2_COMBINED </name>
//    <i> GPIO 2 combined </i>
//    <loc> 87 </loc>
//  </qitem>
//  
//  <qitem> GPIO3_COMBINED_IRQ
//    <name> GPIO3_COMBINED </name>
//    <i> GPIO 3 combined </i>
//    <loc> 88 </loc>
//  </qitem>
//  
//  <qitem> UART5_RX_IRQ
//    <name> UART5_RX </name>
//    <i> UART 5 RX </i>
//    <loc> 141 </loc>
//  </qitem>
//  
//  <qitem> UART5_TX_IRQ
//    <name> UART5_TX </name>
//    <i> UART 5 TX </i>
//    <loc> 142 </loc>
//  </qitem>
//  
//  <qitem> UART5_COMBINED_IRQ
//    <name> UART5_COMBINED </name>
//    <i> UART 5 Combined interrupt </i>
//    <loc> 143 </loc>
//  </qitem>
//  
//  <irqtable> SSE310_IRQTable
//    <name> SSE310 Interrupt Table </name>
//    <nvicPrioBits> 3 </nvicPrioBits>
//    <qitem> Reset_IRQ </qitem>
//    <qitem> NonMaskableInt_IRQ </qitem>
//    <qitem> HardFault_IRQ </qitem>
//    <qitem> MemoryManagement_IRQ </qitem>
//    <qitem> BusFault_IRQ </qitem>
//    <qitem> UsageFault_IRQ </qitem>
//    <qitem> SecureFault_IRQ </qitem>
//    <qitem> SVCall_IRQ </qitem>
//    <qitem> DebugMonitor_IRQ </qitem>
//    <qitem> PendSV_IRQ </qitem>
//    <qitem> SysTick_IRQ </qitem>
//    <qitem> NONSEC_WATCHDOG_RST_REQ_IRQ </qitem>
//    <qitem> NONSEC_WATCHDOG_IRQ_IRQ </qitem>
//    <qitem> S32K_TIMER_IRQ </qitem>
//    <qitem> TIMER0_IRQ </qitem>
//    <qitem> TIMER1_IRQ </qitem>
//    <qitem> DUALTIMER_IRQ </qitem>
//    <qitem> MPC_IRQ </qitem>
//    <qitem> PPC_IRQ </qitem>
//    <qitem> MSC_IRQ </qitem>
//    <qitem> BRG_IRQ </qitem>
//    <qitem> MGMT_PPU_IRQ </qitem>
//    <qitem> SYS_PPU_IRQ </qitem>
//    <qitem> CPU0_PPU_IRQ </qitem>
//    <qitem> PPU_DEBUG_IRQ </qitem>
//    <qitem> TIMER3_IRQ </qitem>
//    <qitem> System_Timestamp_Counter_IRQ </qitem>
//    <qitem> UART0_RX_IRQ </qitem>
//    <qitem> UART0_TX_IRQ </qitem>
//    <qitem> UART1_RX_IRQ </qitem>
//    <qitem> UART1_TX_IRQ </qitem>
//    <qitem> UART2_RX_IRQ </qitem>
//    <qitem> UART2_TX_IRQ </qitem>
//    <qitem> UART3_RX_IRQ </qitem>
//    <qitem> UART3_TX_IRQ </qitem>
//    <qitem> UART4_RX_IRQ </qitem>
//    <qitem> UART4_TX_IRQ </qitem>
//    <qitem> UART0_COMBINED_IRQ </qitem>
//    <qitem> UART1_COMBINED_IRQ </qitem>
//    <qitem> UART2_COMBINED_IRQ </qitem>
//    <qitem> UART3_COMBINED_IRQ </qitem>
//    <qitem> UART4_COMBINED_IRQ </qitem>
//    <qitem> UART_OVERFLOW_IRQ </qitem>
//    <qitem> AudioI2S_IRQ </qitem>
//    <qitem> TouchScreen_IRQ </qitem>
//    <qitem> SPI2_IRQ </qitem>
//    <qitem> SPI0_IRQ </qitem>
//    <qitem> SPI1_IRQ </qitem>
//    <qitem> GPIO0_COMBINED_IRQ </qitem>
//    <qitem> GPIO1_COMBINED_IRQ </qitem>
//    <qitem> GPIO2_COMBINED_IRQ </qitem>
//    <qitem> GPIO3_COMBINED_IRQ </qitem>
//    <qitem> UART5_RX_IRQ </qitem>
//    <qitem> UART5_TX_IRQ </qitem>
//    <qitem> UART5_COMBINED_IRQ </qitem>
//  </irqtable>


// --------------------------------------   Menu: SSE310  -----------------------------------------
// SVD Line: 33



// --------------------------------  Peripheral Menu: 'SSE310'  -----------------------------------



// ------------------------------------------------------------------------------------------------
// -----                                       Main Menu                                      -----
// ------------------------------------------------------------------------------------------------

//  <b> AudioI
//    <m> AudioI2S </m>
//  </b>
//  
//  <b> ColorLCD
//    <m> ColorLCD </m>
//    <m> ColorLCD_Secure </m>
//  </b>
//  
//  <b> FPGAIO
//    <m> FPGAIO </m>
//  </b>
//  
//  <b> FPGAIO_Secure
//    <m> FPGAIO_Secure </m>
//  </b>
//  
//  <b> GPIO
//    <m> GPIO0 </m>
//    <m> GPIO1 </m>
//    <m> GPIO2 </m>
//    <m> GPIO3 </m>
//  </b>
//  
//  <b> GPIO_Secure
//    <m> GPIO0_Secure </m>
//    <m> GPIO1_Secure </m>
//    <m> GPIO2_Secure </m>
//    <m> GPIO3_Secure </m>
//  </b>
//  
//  <b> I2C
//    <m> I2C0 </m>
//    <m> I2C1 </m>
//  </b>
//  
//  <b> I2C_Secure
//    <m> I2C0_Secure </m>
//    <m> I2C1_Secure </m>
//  </b>
//  
//  <b> ISRAM_MPC
//    <m> ISRAM0MPC </m>
//    <m> ISRAM1MPC </m>
//  </b>
//  
//  <b> NSACRB
//    <m> NSACRB </m>
//  </b>
//  
//  <b> SACRB
//    <m> SACRB </m>
//  </b>
//  
//  <b> SAU
//    <m> SAU </m>
//  </b>
//  
//  <b> SCC
//    <m> SCC </m>
//  </b>
//  
//  <b> SCC_Secure
//    <m> SCC_Secure </m>
//  </b>
//  
//  <b> SPI
//    <m> SSP0 </m>
//    <m> SSP1 </m>
//    <m> SSP2 </m>
//  </b>
//  
//  <b> SPI_Secure
//    <m> SSP0_Secure </m>
//    <m> SSP1_Secure </m>
//    <m> SSP2_Secure </m>
//  </b>
//  
//  <b> SYSCOUNTER
//    <m> SYSCOUNTER_CNTRL </m>
//    <m> SYSCOUNTER_READ </m>
//    <m> SYSCOUNTER_READ_Secure </m>
//  </b>
//  
//  <b> SYSCTRL
//    <m> SYSCONTROL </m>
//  </b>
//  
//  <b> SYSINFO
//    <m> SYSINFO </m>
//  </b>
//  
//  <b> SYSINFO_Secure
//    <m> SYSINFO_Secure </m>
//  </b>
//  
//  <b> Timer
//    <m> SLOWCLK </m>
//    <m> TIMER0 </m>
//    <m> TIMER1 </m>
//    <m> TIMER2 </m>
//    <m> TIMER3 </m>
//  </b>
//  
//  <b> Timer_Secure
//    <m> SLOWCLK_Secure </m>
//    <m> TIMER0_Secure </m>
//    <m> TIMER1_Secure </m>
//    <m> TIMER2_Secure </m>
//    <m> TIMER3_Secure </m>
//  </b>
//  
//  <b> UART
//    <m> UART0 </m>
//    <m> UART1 </m>
//    <m> UART2 </m>
//    <m> UART3 </m>
//    <m> UART4 </m>
//    <m> UART5 </m>
//  </b>
//  
//  <b> UART_Secure
//    <m> UART0_Secure </m>
//    <m> UART1_Secure </m>
//    <m> UART2_Secure </m>
//    <m> UART3_Secure </m>
//    <m> UART4_Secure </m>
//    <m> UART5_Secure </m>
//  </b>
//  
//  <b> WATCHDOG
//    <m> WATCHDOG </m>
//  </b>
//  
//  <b> WATCHDOG_Secure
//    <m> SLOWCLKWATCHDOG </m>
//    <m> WATCHDOG_Secure </m>
//  </b>
//  
